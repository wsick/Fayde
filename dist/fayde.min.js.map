{"version":3,"sources":["_version.ts","polyfill/Array_isArray.ts","polyfill/Function_bind.ts","polyfill/perfex.ts","fayde.js","_Types.ts","Collections/CollectionChangedEventArgs.ts","Collections/INotifyCollectionChanged.ts","Core/INotifyPropertyChanged.ts","Collections/ObservableCollection.ts","Collections/DeepObservableCollection.ts","Collections/FilteredCollection.ts","Collections/ItemPropertyChangedEventArgs.ts","Collections/ReadOnlyObservableCollection.ts","Core/XamlNode.ts","Core/XamlObject.ts","Core/DependencyProperty.ts","Core/Providers/PropertyStore.ts","Core/Providers/DataContextStore.ts","Core/DPReaction.ts","Runtime/React.ts","Core/DependencyObject.ts","Core/UIReaction.ts","Core/UIReactionAttached.ts","Core/Providers/InheritedStore.ts","Core/Enums.ts","Primitives/Font.ts","Core/InheritableOwner.ts","Core/UIElement.ts","Core/Providers/ResourcesStore.ts","Core/Providers/ActualSizeStore.ts","Core/FrameworkElement.ts","Markup/ContentAnnotation.ts","Controls/Border.ts","Core/Providers/IsEnabledStore.ts","Input/Keyboard.ts","Controls/Control.ts","Controls/ContentControl.ts","Controls/Enums.ts","Controls/Primitives/ButtonBase.ts","Controls/Button.ts","Core/XamlObjectCollection.ts","Core/Providers/ImmutableStore.ts","Controls/Panel.ts","Controls/Canvas.ts","Controls/Primitives/ToggleButton.ts","Controls/CheckBox.ts","Controls/ColumnDefinition.ts","Controls/ItemsControl.ts","Controls/Primitives/Selector.ts","Markup/Creator.ts","Controls/ContentPresenter.ts","Controls/Primitives/Popup.ts","Controls/Primitives/IScrollInfo.ts","Controls/ScrollContentPresenter.ts","Controls/Primitives/RangeBase.ts","Controls/Primitives/RepeatButton.ts","Controls/Primitives/Thumb.ts","Controls/Primitives/ScrollBar.ts","Controls/ScrollViewer.ts","Controls/ComboBox.ts","Controls/ListBoxItem.ts","Controls/ComboBoxItem.ts","Markup/Loader.ts","Controls/ControlTemplate.ts","Controls/Dialog.ts","Controls/UserControl.ts","Controls/Page.ts","Navigation/INavigate.ts","Controls/Frame.ts","Controls/Grid.ts","Controls/GridLength.ts","Controls/HeaderedContentControl.ts","Controls/HyperlinkButton.ts","Media/Enums.ts","Controls/Image.ts","Controls/ItemCollection.ts","Controls/ItemsPanelTemplate.ts","Controls/ItemsPresenter.ts","Controls/ListBox.ts","Controls/MediaElement.ts","Core/RoutedEventArgs.ts","Input/KeyEventArgs.ts","Controls/TextBoxBase.ts","Controls/PasswordBox.ts","Controls/ProgressBar.ts","Controls/RadioButton.ts","Controls/RichTextBox.ts","Controls/RowDefinition.ts","Controls/Slider.ts","Controls/StackPanel.ts","Controls/TextBlock.ts","Controls/TextBox.ts","Controls/ToolTip.ts","Primitives/Point.ts","Controls/ToolTipService.ts","Controls/VirtualizingPanel.ts","Controls/VirtualizingStackPanel.ts","Core/Clone.ts","Core/DataTemplate.ts","Core/DependencyPropertyChangedEventArgs.ts","Core/HierarchicalDataTemplate.ts","Core/LayoutInformation.ts","Core/NameScope.ts","Core/ResourceDictionary.ts","Core/RoutedEvent.ts","Core/RoutedPropertyChangedEvent.ts","Core/RoutedPropertyChangingEvent.ts","Core/Setter.ts","Core/SizeChangedEventArgs.ts","Core/Style.ts","Core/TemplateBinding.ts","Core/Triggers.ts","Core/VisualTreeEnum.ts","Core/VisualTreeHelper.ts","Core/Walkers.ts","Data/Binding.ts","Data/CollectionViewSource.ts","Data/DataErrorsChangedEventArgs.ts","Data/Enums.ts","Data/ICollectionView.ts","Data/IDataErrorInfo.ts","Data/INotifyDataErrorInfo.ts","Data/IValueConverter.ts","Data/RelativeSource.ts","Documents/TextReaction.ts","Documents/TextElement.ts","Documents/Block.ts","Documents/BlockCollection.ts","Documents/Inline.ts","Documents/InlineCollection.ts","Documents/LineBreak.ts","Documents/Paragraph.ts","Documents/Run.ts","Documents/Section.ts","Documents/Span.ts","Documents/Underline.ts","Engine/Application.ts","Engine/ClockTimer.ts","Engine/Exceptions.ts","Engine/FocusManager.ts","Engine/InputManager.ts","Engine/Inspection.ts","Engine/Surface.ts","Engine/Theme.ts","Engine/ThemeConfig.ts","Engine/ThemeManager.ts","Expressions/Expression.ts","Expressions/BindingExpressionBase.ts","Expressions/BindingExpression.ts","Expressions/DeferredValueExpression.ts","Expressions/EventBindingExpression.ts","Expressions/TemplateBindingExpression.ts","Input/ICommand.ts","Input/InteractionHelper.ts","Input/KeyInterop.ts","Input/KeyboardNavigation.ts","Input/MouseEventArgs.ts","Input/MouseInterop.ts","Input/TouchEventArgs.ts","Input/TouchInterop.ts","Input/TouchPoint.ts","Input/VirtualKeyboard.ts","Primitives/TimeSpan.ts","Primitives/DateTime.ts","Localization/Calendar.ts","Localization/DateTimeFormatInfo.ts","Localization/Format.ts","Localization/DateTimeFormatter.ts","Localization/NumberFormatInfo.ts","Localization/NumberFormatter.ts","Localization/TimeSpanFormatter.ts","MVVM/AutoModel.ts","MVVM/ObservableObject.ts","MVVM/ViewModelBase.ts","MVVM/DialogViewModel.ts","MVVM/Entity.ts","Navigation/Route.ts","MVVM/IViewModelProvider.ts","MVVM/RelayCommand.ts","Markup/EventBinding.ts","Markup/Resolver.ts","Markup/StaticResource.ts","Media/Brush.ts","Media/Geometry.ts","Media/EllipseGeometry.ts","Media/GeneralTransform.ts","Shapes/Enums.ts","Media/GeometryGroup.ts","Media/GradientBrush.ts","Media/GradientStop.ts","Media/LineGeometry.ts","Media/LinearGradientBrush.ts","Media/Matrix.ts","Media/Matrix3D.ts","Media/Projection.ts","Media/Matrix3DProjection.ts","Media/MediaParser.ts","Media/PathFigure.ts","Media/PathGeometry.ts","Media/PathSegment.ts","Media/PathSegments.ts","Media/PlaneProjection.ts","Media/RadialGradientBrush.ts","Media/RectangleGeometry.ts","Media/SolidColorBrush.ts","Media/TextOptions.ts","Media/TileBrush.ts","Media/Transform.ts","Media/Transforms.ts","Navigation/NavigationHelper.ts","Navigation/NavigationService.ts","Navigation/RouteMapper.ts","Navigation/RouteMapping.ts","Navigation/UriMapper.ts","Navigation/UriMapping.ts","Primitives/Color.ts","Primitives/CornerRadius.ts","Primitives/Duration.ts","Primitives/FontFamily.ts","Primitives/KeyTime.ts","Primitives/Length.ts","Primitives/Rect.ts","Primitives/Size.ts","Primitives/Thickness.ts","Primitives/TypeConversion.ts","Runtime/BError.ts","Runtime/Bootstrap.ts","Runtime/Configure.ts","Runtime/Debug.ts","Runtime/NumberEx.ts","Runtime/StringEx.ts","Runtime/TimelineProfile.ts","Shapes/DoubleCollection.ts","Shapes/Shape.ts","Shapes/Ellipse.ts","Shapes/Line.ts","Shapes/Path.ts","Shapes/PointCollection.ts","Shapes/Polygon.ts","Shapes/Polyline.ts","Shapes/Rectangle.ts","Text/Buffer.ts","Text/Proxy.ts","Validation/Emit.ts","Validation/Validation.ts","Validation/ValidationError.ts","Validation/ValidationErrorEventAction.ts","Validation/ValidationErrorEventArgs.ts","Controls/Internal/CursorAdvancer.ts","Controls/Internal/ItemContainersManager.ts","Controls/Internal/RangeCoercer.ts","Controls/Internal/TextBoxContentProxy.ts","Controls/Internal/TextBoxView.ts","Controls/Internal/VirtualizingPanelContainerOwner.ts","Controls/Primitives/DragEventArgs.ts","Controls/Primitives/Overlay.ts","Controls/Primitives/OverlayClosedEventArgs.ts","Controls/Primitives/ScrollData.ts","Controls/Primitives/ScrollEventArgs.ts","Controls/Primitives/SelectionChangedEventArgs.ts","Controls/Primitives/SelectorSelection.ts","Core/Providers/ImplicitStyleBroker.ts","Core/Providers/LocalStyleBroker.ts","Core/Providers/StyleSwapper.ts","Data/Property/PropertyPath.ts","Data/Property/PropertyPathParser.ts","Data/Property/PropertyPathWalker.ts","Input/TouchInternal/ActiveTouchBase.ts","Input/TouchInternal/TouchInteropBase.ts","Input/TouchInternal/NonPointerTouchInterop.ts","Input/TouchInternal/PointerTouchInterop.ts","Markup/Internal/ActiveObject.ts","Markup/Internal/ObjectActor.ts","Markup/Internal/PropertyActor.ts","Markup/Internal/ResourcesActor.ts","Media/Animation/Enums.ts","Media/Animation/RepeatBehavior.ts","Media/Animation/Timeline.ts","Media/Animation/AnimationBase.ts","Media/Animation/AnimationStore.ts","Media/Animation/AnimationUsingKeyFrames.ts","Media/Animation/BeginStoryboard.ts","Media/Animation/ColorAnimation.ts","Media/Animation/ColorAnimationUsingKeyFrames.ts","Media/Animation/KeyFrame.ts","Media/Animation/ColorKeyFrame.ts","Media/Animation/Curves.ts","Media/Animation/DoubleAnimation.ts","Media/Animation/DoubleAnimationUsingKeyFrames.ts","Media/Animation/DoubleKeyFrame.ts","Media/Animation/EasingFunctionBase.ts","Media/Animation/EasingFunctions.ts","Media/Animation/KeySpline.ts","Media/Animation/ObjectAnimationUsingKeyFrames.ts","Media/Animation/ObjectKeyFrame.ts","Media/Animation/PointAnimation.ts","Media/Animation/PointAnimationUsingKeyFrames.ts","Media/Animation/PointKeyFrame.ts","Media/Animation/Storyboard.ts","Media/Effects/Effect.ts","Media/Effects/BlurEffect.ts","Media/Effects/DropShadowEffect.ts","Media/Imaging/ImageSource.ts","Media/Imaging/BitmapSource.ts","Media/Imaging/BitmapImage.ts","Media/Imaging/ImageBrush.ts","Media/Imaging/ImageDecoder.ts","Media/LinearGradient/Interpolator.ts","Media/LinearGradient/Metrics.ts","Media/RadialGradient/Extender.ts","Media/VSM/VisualState.ts","Media/VSM/VisualStateGroup.ts","Media/VSM/VisualStateManager.ts","Media/VSM/VisualTransition.ts","Text/History/DeleteAction.ts","Text/History/InsertAction.ts","Text/History/ReplaceAction.ts","Text/History/Tracker.ts","_Debug.ts"],"names":["Fayde","Array","isArray","arg","Object","prototype","toString","call","Function","bind","oThis","this","TypeError","aArgs","slice","arguments","fToBind","fNOP","fBound","apply","concat","context","perfex","timer","all","reset","start","tag","stop","phases","current","window","__extends","d","b","__","constructor","p","hasOwnProperty","Fayde.joinPaths","Fayde.RegisterType","Fayde.RegisterEnum","Fayde.ResourceTypeManager","Fayde.ResourceTypeManager.constructor","Fayde.ResourceTypeManager.resolveResource","o","Fayde.Collections","Fayde.Collections.CollectionChangedAction","Fayde.Collections.CollectionChangedEventArgs","Fayde.Collections.CollectionChangedEventArgs.Reset","Fayde.Collections.CollectionChangedEventArgs.Replace","Fayde.Collections.CollectionChangedEventArgs.Add","Fayde.Collections.CollectionChangedEventArgs.AddRange","Fayde.Collections.CollectionChangedEventArgs.Remove","Fayde.PropertyChangedEventArgs","Fayde.PropertyChangedEventArgs.constructor","Fayde.Collections.ObservableCollection","Fayde.Collections.ObservableCollection.constructor","Fayde.Collections.ObservableCollection.getEnumerator","get","Fayde.Collections.ObservableCollection.Count","enumerable","configurable","Fayde.Collections.ObservableCollection.ToArray","Fayde.Collections.ObservableCollection.GetValueAt","Fayde.Collections.ObservableCollection.SetValueAt","Fayde.Collections.ObservableCollection.Add","Fayde.Collections.ObservableCollection.AddRange","Fayde.Collections.ObservableCollection.Insert","Fayde.Collections.ObservableCollection.IndexOf","Fayde.Collections.ObservableCollection.Contains","Fayde.Collections.ObservableCollection.Remove","Fayde.Collections.ObservableCollection.RemoveAt","Fayde.Collections.ObservableCollection.Clear","Fayde.Collections.ObservableCollection._RaisePropertyChanged","Fayde.Collections.DeepObservableCollection","Fayde.Collections.DeepObservableCollection.constructor","Fayde.Collections.DeepObservableCollection._OnCollectionChanged","Fayde.Collections.DeepObservableCollection._OnItemPropertyChanged","Fayde.Collections.FilteredCollection","Fayde.Collections.FilteredCollection.constructor","Fayde.Collections.FilteredCollection.Source","set","Fayde.Collections.FilteredCollection.Filter","Fayde.Collections.FilteredCollection._SetSource","Fayde.Collections.FilteredCollection._OnSourceCollectionChanged","Fayde.Collections.FilteredCollection._OnSourceItemPropertyChanged","Fayde.Collections.FilteredCollection.Update","Fayde.Collections.ItemPropertyChangedEventArgs","Fayde.Collections.ItemPropertyChangedEventArgs.constructor","Fayde.Collections.ReadOnlyObservableCollection","Fayde.Collections.ReadOnlyObservableCollection.constructor","Fayde.Collections.ReadOnlyObservableCollection.Count","Fayde.Collections.ReadOnlyObservableCollection.GetValueAt","Fayde.Collections.ReadOnlyObservableCollection.getEnumerator","Fayde.Collections.ReadOnlyObservableCollection.ToArray","Fayde.Collections.ReadOnlyObservableCollection.IndexOf","Fayde.Collections.ReadOnlyObservableCollection.Contains","Fayde.Collections.ReadOnlyObservableCollection._OnCollectionChanged","Fayde.Collections.ReadOnlyObservableCollection._OnPropertyChanged","Fayde.Collections.ReadOnlyObservableCollection.SetValueAt","Fayde.Collections.ReadOnlyObservableCollection.Insert","Fayde.Collections.ReadOnlyObservableCollection.Add","Fayde.Collections.ReadOnlyObservableCollection.Remove","Fayde.Collections.ReadOnlyObservableCollection.RemoveAt","Fayde.Collections.ReadOnlyObservableCollection.Clear","Fayde.XamlNode","Fayde.XamlNode.constructor","Fayde.XamlNode.DataContext","Fayde.XamlNode.OnDataContextChanged","Fayde.XamlNode.IsEnabled","Fayde.XamlNode.OnIsEnabledChanged","Fayde.XamlNode.FindName","Fayde.XamlNode.SetName","Fayde.XamlNode.FindNameScope","Fayde.XamlNode.SetIsAttached","Fayde.XamlNode.OnIsAttachedChanged","Fayde.XamlNode.MonitorIsAttached","index","monitors","indexOf","monitor","splice","Fayde.XamlNode.AttachTo","Fayde.XamlNode.Detach","Fayde.XamlNode.GetInheritedEnumerator","Fayde.XamlNode.SetShareable","Fayde.XamlObject","Fayde.XamlObject.constructor","Fayde.XamlObject.CreateNode","Fayde.XamlObject.Name","Fayde.XamlObject.Parent","Fayde.XamlObject.FindName","Fayde.XamlObject.Clone","Fayde.XamlObject.IsInheritable","DependencyProperty","DependencyProperty.constructor","DependencyProperty.Register","DependencyProperty.RegisterReadOnly","DependencyProperty.RegisterAttached","DependencyProperty.RegisterCore","DependencyProperty.RegisterReadOnlyCore","DependencyProperty.RegisterAttachedCore","DependencyProperty.RegisterImmutable","DependencyProperty.RegisterInheritable","DependencyProperty.RegisterFull","DependencyProperty.FinishRegister","GetValue","propd","SetValue","value","Exception","Name","DependencyProperty.ExtendTo","DependencyProperty.ValidateSetValue","DependencyProperty.GetDependencyProperty","CoreLibrary","add","ImmutableDependencyProperty","_super","ImmutableDependencyProperty.constructor","ImmutableDependencyProperty.Initialize","Fayde.Providers","Fayde.Providers.GetStorage","Fayde.Providers.PropertyPrecedence","Fayde.Providers.PropertyStore","Fayde.Providers.PropertyStore.GetValue","Fayde.Providers.PropertyStore.GetValuePrecedence","Fayde.Providers.PropertyStore.SetLocalValue","Fayde.Providers.PropertyStore.SetLocalStyleValue","Fayde.Providers.PropertyStore.SetImplicitStyle","Fayde.Providers.PropertyStore.ClearValue","Fayde.Providers.PropertyStore.OnPropertyChanged","Fayde.Providers.PropertyStore.ListenToChanged","listeners","listener","func","closure","sender","args","Fayde.Providers.PropertyStore.CreateStorage","Fayde.Providers.PropertyStore.Clone","Fayde.Providers.DataContextStore","Fayde.Providers.DataContextStore.constructor","Fayde.Providers.DataContextStore.GetValue","Fayde.Providers.DataContextStore.GetValuePrecedence","Fayde.Providers.DataContextStore.OnInheritedChanged","Fayde.Providers.DataContextStore.CreateStorage","Fayde.Providers.DataContextStore.OnPropertyChanged","Fayde.Providers.DataContextStore.TryUpdateDataContextExpression","Fayde.DPReaction","Fayde.reaction","Fayde.lReaction","Fayde.Incite","Fayde.ReactTo","Fayde.UnreactTo","Fayde.DONode","Fayde.DONode.constructor","Fayde.DONode.OnParentChanged","Fayde.DONode.DataContext","Fayde.DONode.OnDataContextChanged","Fayde.DependencyObject","Fayde.DependencyObject.constructor","Fayde.DependencyObject.CreateNode","Fayde.DependencyObject.GetValue","Fayde.DependencyObject.SetValue","Fayde.DependencyObject.SetValueInternal","Fayde.DependencyObject.SetCurrentValue","Fayde.DependencyObject.ClearValue","Fayde.DependencyObject.ReadLocalValue","Fayde.DependencyObject.ReadLocalValueInternal","Fayde.DependencyObject._AddExpression","Fayde.DependencyObject._RemoveExpression","Fayde.DependencyObject._HasDeferredValueExpression","Fayde.DependencyObject.GetBindingExpression","Fayde.DependencyObject.HasValueOrExpression","Fayde.DependencyObject.SetBinding","Fayde.DependencyObject.CloneCore","Fayde.DependencyObject.ListenToChanged","Fayde.UIReaction","Fayde.sReaction","Fayde.slReaction","Fayde.UIReactionAttached","Fayde.Providers.InheritedStore","Fayde.Providers.InheritedStore.constructor","Fayde.Providers.InheritedStore.GetValue","Fayde.Providers.InheritedStore.GetValuePrecedence","Fayde.Providers.InheritedStore.OnPropertyChanged","Fayde.Providers.InheritedStore.CreateStorage","Fayde.Providers.InheritedStore.PropagateInheritedOnAdd","Fayde.Providers.InheritedStore.ClearInheritedOnRemove","Fayde.Providers.InheritedStore.Propagate","Fayde.Providers.InheritedStore.SetInheritedValue","Fayde.Orientation","Fayde.Visibility","val","Visibility","Visible","Collapsed","Fayde.CursorType","Fayde.HorizontalAlignment","Fayde.VerticalAlignment","Fayde.FlowDirection","Fayde.FontWeight","Fayde.TextAlignment","Fayde.TextDecorations","Fayde.LineStackingStrategy","Fayde.InheritableOwner","Fayde.reactions","Fayde.UINode","Fayde.UINode.constructor","Fayde.UINode.GetVisualRoot","Fayde.UINode.OnVisualChildAttached","Fayde.UINode.OnVisualChildDetached","Fayde.UINode.SetVisualParentNode","Fayde.UINode.Focus","Fayde.UINode._EmitFocusChange","Fayde.UINode._EmitLostFocus","Fayde.UINode._EmitGotFocus","Fayde.UINode._EmitKeyDown","Fayde.UINode._EmitKeyUp","Fayde.UINode._EmitLostMouseCapture","Fayde.UINode._EmitMouseEvent","Fayde.UINode._EmitTouchEvent","Fayde.UINode._EmitGotTouchCapture","Fayde.UINode._EmitLostTouchCapture","Fayde.UINode.CanCaptureMouse","Fayde.UINode.CaptureMouse","Fayde.UINode.ReleaseMouseCapture","Fayde.UINode.IsAncestorOf","Fayde.UINode.TransformToVisual","Fayde.UIElement","Fayde.UIElement.constructor","Fayde.UIElement.CreateNode","Fayde.UIElement.CreateLayoutUpdater","Fayde.UIElement.IsItemsControl","Fayde.UIElement.VisualParent","Fayde.UIElement.IsInheritable","Fayde.UIElement.IsMouseOver","Fayde.UIElement.DesiredSize","Fayde.UIElement.RenderSize","Fayde.UIElement.Focus","Fayde.UIElement.CaptureMouse","Fayde.UIElement.ReleaseMouseCapture","Fayde.UIElement.IsAncestorOf","Fayde.UIElement.TransformToVisual","Fayde.UIElement.InvalidateMeasure","Fayde.UIElement.Measure","Fayde.UIElement.InvalidateArrange","Fayde.UIElement.Arrange","Fayde.UIElement._TriggersChanged","Fayde.Providers.ResourcesStore","Fayde.Providers.ResourcesStore.constructor","Fayde.Providers.ResourcesStore.GetValue","Fayde.Providers.ResourcesStore.GetValuePrecedence","Fayde.Providers.ResourcesStore.SetLocalValue","Fayde.Providers.ActualSizeStore","Fayde.Providers.ActualSizeStore.constructor","Fayde.Providers.ActualSizeStore.GetValue","Fayde.Providers.ActualSizeStore.GetValuePrecedence","Fayde.Providers.ActualSizeStore.SetLocalValue","Fayde.FENode","Fayde.FENode.constructor","Fayde.FENode.constructor.setActualWidth","Fayde.FENode.constructor.setActualHeight","Fayde.FENode.constructor.onSizeChanged","Fayde.FENode.SetSubtreeNode","Fayde.FENode.GetInheritedEnumerator","Fayde.FENode.GetVisualTreeEnumerator","walker","step","getAttachedValue","Fayde.FENode.SetIsLoaded","Fayde.FENode.OnIsLoadedChanged","Fayde.FENode.AttachVisualChild","Fayde.FENode.DetachVisualChild","Fayde.FENode.ApplyTemplateWithError","Fayde.FENode.DoApplyTemplateWithError","Fayde.FENode.FinishApplyTemplateWithError","Fayde.FENode.UpdateLayout","Fayde.FENode.DetachFromVisualParent","Fayde.FrameworkElement","Fayde.FrameworkElement.constructor","Fayde.FrameworkElement.CreateNode","Fayde.FrameworkElement.IsInheritable","Fayde.FrameworkElement.OnBindingValidationError","Fayde.FrameworkElement.UpdateLayout","Fayde.Markup","ca","type","prop","Get","cur","anns","nullstone","GetAnnotations","cp","getTypeParent","undefined","tca","Fayde.Controls","Fayde.Controls.Border","Fayde.Controls.Border.constructor","Fayde.Controls.Border.CreateLayoutUpdater","Fayde.Providers.IsEnabledStore","Fayde.Providers.IsEnabledStore.constructor","Fayde.Providers.IsEnabledStore.GetValue","Fayde.Providers.IsEnabledStore.GetValuePrecedence","Fayde.Providers.IsEnabledStore.SetLocalValue","Fayde.Providers.IsEnabledStore.OnPropertyChanged","Fayde.Providers.IsEnabledStore.CreateStorage","Fayde.Providers.IsEnabledStore.EmitInheritedChanged","Fayde.Input","Fayde.Input.KeyboardNavigationMode","Fayde.Input.ModifierKeys","Fayde.Input.Keyboard","Fayde.Input.Keyboard.RefreshModifiers","Fayde.Input.Keyboard.HasControl","Fayde.Input.Keyboard.HasAlt","Fayde.Input.Keyboard.HasShift","Fayde.Controls.ControlNode","Fayde.Controls.ControlNode.constructor","Fayde.Controls.ControlNode.TabTo","Fayde.Controls.ControlNode.ApplyTemplateWithError","Fayde.Controls.ControlNode.DoApplyTemplateWithError","Fayde.Controls.ControlNode.GetDefaultVisualTree","Fayde.Controls.ControlNode.OnIsAttachedChanged","Fayde.Controls.ControlNode.OnParentChanged","Fayde.Controls.ControlNode.OnTemplateChanged","Fayde.Controls.ControlNode.IsEnabled","Fayde.Controls.ControlNode.OnIsEnabledChanged","Fayde.Controls.ControlNode.Focus","Fayde.Controls.ControlNode.CanCaptureMouse","Fayde.Controls.Control","Fayde.Controls.Control.constructor","Fayde.Controls.Control.CreateNode","Fayde.Controls.Control.CreateLayoutUpdater","Fayde.Controls.Control.IsInheritable","Fayde.Controls.Control.IsFocused","Fayde.Controls.Control.GetTemplateChild","Fayde.Controls.Control.ApplyTemplate","Fayde.Controls.Control.GetDefaultStyle","Fayde.Controls.Control.OnGotFocus","Fayde.Controls.Control.OnLostFocus","Fayde.Controls.Control.UpdateVisualState","Fayde.Controls.Control.GoToStates","Fayde.Controls.Control.GoToStateCommon","Fayde.Controls.Control.GoToStateFocus","Fayde.Controls.Control.GoToStateSelection","Fayde.Controls.Control.UpdateValidationState","Fayde.Controls.Control.GoToStateValidation","Fayde.Controls.ContentControlNode","Fayde.Controls.ContentControlNode.constructor","Fayde.Controls.ContentControlNode.GetDefaultVisualTree","Fayde.Controls.ContentControlNode.OnContentChanged","Fayde.Controls.ContentControlNode.OnTemplateChanged","Fayde.Controls.ContentControlNode.CleanOldContent","Fayde.Controls.ContentControl","Fayde.Controls.ContentControl.constructor","Fayde.Controls.ContentControl.CreateNode","Fayde.Controls.ContentControl.OnContentPropertyChanged","Fayde.Controls.ContentControl.OnContentUriPropertyChanged","Fayde.Controls.ContentControl._OnLoadedUri","Fayde.Controls.ContentControl._OnErroredUri","Fayde.Controls.TextWrapping","Fayde.Controls.ScrollBarVisibility","Fayde.Controls.TextTrimming","Fayde.Controls.ClickMode","Fayde.Controls.PlacementMode","Fayde.Controls.SelectionMode","Fayde.Controls.MediaElementState","Fayde.Controls.Primitives","Fayde.Controls.Primitives.ButtonBase","Fayde.Controls.Primitives.ButtonBase.constructor","Fayde.Controls.Primitives.ButtonBase.OnIsPressedChanged","Fayde.Controls.Primitives.ButtonBase.OnIsEnabledChanged","Fayde.Controls.Primitives.ButtonBase.OnMouseEnter","Fayde.Controls.Primitives.ButtonBase.OnMouseLeave","Fayde.Controls.Primitives.ButtonBase.OnMouseMove","Fayde.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown","Fayde.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp","Fayde.Controls.Primitives.ButtonBase.OnGotFocus","Fayde.Controls.Primitives.ButtonBase.OnLostFocus","Fayde.Controls.Primitives.ButtonBase.OnTouchMove","Fayde.Controls.Primitives.ButtonBase.OnTouchDown","Fayde.Controls.Primitives.ButtonBase.OnTouchUp","Fayde.Controls.Primitives.ButtonBase.OnClick","Fayde.Controls.Primitives.ButtonBase._DoWithSuspend","Fayde.Controls.Primitives.ButtonBase.UpdateVisualState","Fayde.Controls.Primitives.ButtonBase.GoToStateCommon","Fayde.Controls.Primitives.ButtonBase._CaptureMouseInternal","Fayde.Controls.Primitives.ButtonBase._ReleaseMouseCaptureInternal","Fayde.Controls.Primitives.ButtonBase._IsValidPosition","Fayde.Controls.Primitives.ButtonBase.OnCommandChanged","Fayde.Controls.Primitives.ButtonBase.OnCommandCanExecuteChanged","Fayde.Controls.Primitives.ButtonBase.OnCommandParameterChanged","Fayde.Controls.Button","Fayde.Controls.Button.constructor","Fayde.Controls.Button.OnApplyTemplate","Fayde.Controls.Button.OnIsEnabledChanged","Fayde.XamlObjectCollection","Fayde.XamlObjectCollection.constructor","Fayde.XamlObjectCollection.AttachTo","Fayde.XamlObjectCollection.Count","Fayde.XamlObjectCollection.GetRange","Fayde.XamlObjectCollection.GetValueAt","Fayde.XamlObjectCollection.SetValueAt","Fayde.XamlObjectCollection.Add","Fayde.XamlObjectCollection.Insert","Fayde.XamlObjectCollection.Remove","Fayde.XamlObjectCollection.RemoveAt","Fayde.XamlObjectCollection.Clear","Fayde.XamlObjectCollection.IndexOf","Fayde.XamlObjectCollection.Contains","Fayde.XamlObjectCollection.CanAdd","Fayde.XamlObjectCollection.AddingToCollection","Fayde.XamlObjectCollection.RemovedFromCollection","Fayde.XamlObjectCollection.getEnumerator","Fayde.XamlObjectCollection.GetNodeEnumerator","prev","moveNext","xobj","XamlNode","Fayde.XamlObjectCollection.CloneCore","Fayde.XamlObjectCollection.ToArray","Fayde.Providers.ImmutableStore","Fayde.Providers.ImmutableStore.constructor","Fayde.Providers.ImmutableStore.GetValue","Fayde.Providers.ImmutableStore.GetValuePrecedence","Fayde.Providers.ImmutableStore.SetLocalValue","Fayde.Providers.ImmutableStore.ClearValue","Fayde.Providers.ImmutableStore.ListenToChanged","Fayde.Providers.ImmutableStore.Clone","Fayde.Controls.PanelChildrenCollection","Fayde.Controls.PanelChildrenCollection.constructor","Fayde.Controls.PanelChildrenCollection.AddingToCollection","Fayde.Controls.PanelChildrenCollection.RemovedFromCollection","Fayde.Controls.PanelChildrenCollection._RaiseCleared","Fayde.Controls.PanelChildrenCollection._RaiseItemAdded","Fayde.Controls.PanelChildrenCollection._RaiseItemRemoved","Fayde.Controls.PanelChildrenCollection._RaiseItemReplaced","Fayde.Controls.PanelNode","Fayde.Controls.PanelNode.constructor","Fayde.Controls.PanelNode.AttachVisualChild","Fayde.Controls.PanelNode.DetachVisualChild","Fayde.Controls.Panel","Fayde.Controls.Panel.constructor","Fayde.Controls.Panel.CreateNode","Fayde.Controls.Panel.CreateLayoutUpdater","Fayde.Controls.Panel.GetZIndex","Fayde.Controls.Panel.SetZIndex","Fayde.Controls.reactions","Fayde.Controls.Canvas","Fayde.Controls.Canvas.constructor","Fayde.Controls.Canvas.CreateLayoutUpdater","Fayde.Controls.Canvas.GetTop","Fayde.Controls.Canvas.SetTop","Fayde.Controls.Canvas.GetLeft","Fayde.Controls.Canvas.SetLeft","Fayde.Controls.Primitives.ToggleButton","Fayde.Controls.Primitives.ToggleButton.constructor","Fayde.Controls.Primitives.ToggleButton.OnApplyTemplate","Fayde.Controls.Primitives.ToggleButton.OnContentChanged","Fayde.Controls.Primitives.ToggleButton.OnClick","Fayde.Controls.Primitives.ToggleButton.UpdateVisualState","Fayde.Controls.Primitives.ToggleButton.OnIsCheckedChanged","Fayde.Controls.Primitives.ToggleButton.OnToggle","Fayde.Controls.CheckBox","Fayde.Controls.CheckBox.constructor","Fayde.Controls.ConvertColumnDefinition","Fayde.Controls.ConvertColumnDefinitionCollection","Fayde.Controls.ColumnDefinition","Fayde.Controls.ColumnDefinition.constructor","Fayde.Controls.ColumnDefinition.setActualWidth","Fayde.Controls.ColumnDefinitionCollection","Fayde.Controls.ColumnDefinitionCollection.constructor","Fayde.Controls.ColumnDefinitionCollection._RaiseItemAdded","Fayde.Controls.ColumnDefinitionCollection._RaiseItemRemoved","Fayde.Controls.toArray","Fayde.Controls.ItemsControlNode","Fayde.Controls.ItemsControlNode.constructor","Fayde.Controls.ItemsControlNode.GetDefaultVisualTree","Fayde.Controls.ItemsControl","Fayde.Controls.ItemsControl.constructor","Fayde.Controls.ItemsControl.CreateNode","Fayde.Controls.ItemsControl.IsItemsControl","Fayde.Controls.ItemsControl.GetIsItemsHost","Fayde.Controls.ItemsControl.SetIsItemsHost","Fayde.Controls.ItemsControl.OnDisplayMemberPathChanged","Fayde.Controls.ItemsControl.OnItemsSourceChanged","Fayde.Controls.ItemsControl.OnItemTemplateChanged","Fayde.Controls.ItemsControl.ItemContainersManager","Fayde.Controls.ItemsControl.PrepareContainerForItem","Fayde.Controls.ItemsControl.ClearContainerForItem","Fayde.Controls.ItemsControl.GetContainerForItem","Fayde.Controls.ItemsControl.IsItemItsOwnContainer","Fayde.Controls.ItemsControl._OnItemsUpdated","Fayde.Controls.ItemsControl._OnItemsSourceUpdated","Fayde.Controls.ItemsControl.OnItemsChanged","Fayde.Controls.ItemsControl.OnItemsAdded","Fayde.Controls.ItemsControl.OnItemsRemoved","Fayde.Controls.ItemsControl.UpdateContainerTemplate","Fayde.Controls.ItemsControl._GetDisplayMemberTemplate","Fayde.Controls.DisplayTemplate","Fayde.Controls.DisplayTemplate.create","Fayde.Controls.Primitives.Selector","Fayde.Controls.Primitives.Selector.constructor","Fayde.Controls.Primitives.Selector.SynchronizeWithCurrentItem","Fayde.Controls.Primitives.Selector.SelectedItems","Fayde.Controls.Primitives.Selector._OnIsSynchronizedWithCurrentItemChanged","Fayde.Controls.Primitives.Selector._OnSelectedIndexChanged","Fayde.Controls.Primitives.Selector._OnSelectedItemChanged","Fayde.Controls.Primitives.Selector._OnSelectedValueChanged","Fayde.Controls.Primitives.Selector._OnSelectedValuePathChanged","Fayde.Controls.Primitives.Selector._OnSelectionModeChanged","Fayde.Controls.Primitives.Selector.OnApplyTemplate","Fayde.Controls.Primitives.Selector.OnItemsChanged","Fayde.Controls.Primitives.Selector.OnItemsSourceChanged","Fayde.Controls.Primitives.Selector.ClearContainerForItem","Fayde.Controls.Primitives.Selector.PrepareContainerForItem","Fayde.Controls.Primitives.Selector._GetValueFromItem","Fayde.Controls.Primitives.Selector._SelectItemFromValue","Fayde.Controls.Primitives.Selector.SelectAll","Fayde.Controls.Primitives.Selector._OnCurrentItemChanged","Fayde.Controls.Primitives.Selector._RaiseSelectionChanged","Fayde.Controls.Primitives.Selector.NotifyListItemClicked","Fayde.Controls.Primitives.Selector.NotifyListItemLoaded","Fayde.Markup.CreateXaml","Fayde.Controls.getFallbackTemplate","Fayde.Controls.ContentPresenterNode","Fayde.Controls.ContentPresenterNode.constructor","Fayde.Controls.ContentPresenterNode.ContentRoot","Fayde.Controls.ContentPresenterNode.DoApplyTemplateWithError","Fayde.Controls.ContentPresenterNode.ClearRoot","Fayde.Controls.ContentPresenterNode._ContentChanged","Fayde.Controls.ContentPresenterNode._ContentTemplateChanged","Fayde.Controls.ContentPresenterNode._ShouldInvalidateImplicitTemplate","Fayde.Controls.ContentPresenterNode._GetContentTemplate","Fayde.Controls.ContentPresenter","Fayde.Controls.ContentPresenter.constructor","Fayde.Controls.ContentPresenter.CreateNode","Fayde.Controls.Primitives.PopupNode","Fayde.Controls.Primitives.PopupNode.constructor","Fayde.Controls.Primitives.PopupNode.OnIsAttachedChanged","Fayde.Controls.Primitives.PopupNode.EnsureOverlay","Fayde.Controls.Primitives.PopupNode.EnsureCatcher","Fayde.Controls.Primitives.PopupNode.UpdateCatcher","Fayde.Controls.Primitives.PopupNode._RaiseClickedOutside","Fayde.Controls.Primitives.PopupNode.RegisterInitiator","Fayde.Controls.Primitives.Popup","Fayde.Controls.Primitives.Popup.constructor","Fayde.Controls.Primitives.Popup.CreateNode","Fayde.Controls.Primitives.Popup.CreateLayoutUpdater","Fayde.Controls.Primitives.Popup.WatchOutsideClick","Fayde.Controls.Primitives.reactions","Fayde.Controls.ScrollContentPresenter","Fayde.Controls.ScrollContentPresenter.constructor","Fayde.Controls.ScrollContentPresenter.CreateLayoutUpdater","Fayde.Controls.ScrollContentPresenter.ScrollOwner","Fayde.Controls.ScrollContentPresenter.CanHorizontallyScroll","Fayde.Controls.ScrollContentPresenter.CanVerticallyScroll","Fayde.Controls.ScrollContentPresenter.ExtentWidth","Fayde.Controls.ScrollContentPresenter.ExtentHeight","Fayde.Controls.ScrollContentPresenter.ViewportWidth","Fayde.Controls.ScrollContentPresenter.ViewportHeight","Fayde.Controls.ScrollContentPresenter.HorizontalOffset","Fayde.Controls.ScrollContentPresenter.VerticalOffset","Fayde.Controls.ScrollContentPresenter.LineUp","Fayde.Controls.ScrollContentPresenter.LineDown","Fayde.Controls.ScrollContentPresenter.LineLeft","Fayde.Controls.ScrollContentPresenter.LineRight","Fayde.Controls.ScrollContentPresenter.MouseWheelUp","Fayde.Controls.ScrollContentPresenter.MouseWheelDown","Fayde.Controls.ScrollContentPresenter.MouseWheelLeft","Fayde.Controls.ScrollContentPresenter.MouseWheelRight","Fayde.Controls.ScrollContentPresenter.PageUp","Fayde.Controls.ScrollContentPresenter.PageDown","Fayde.Controls.ScrollContentPresenter.PageLeft","Fayde.Controls.ScrollContentPresenter.PageRight","Fayde.Controls.ScrollContentPresenter.MakeVisible","Fayde.Controls.ScrollContentPresenter.SetHorizontalOffset","Fayde.Controls.ScrollContentPresenter.SetVerticalOffset","Fayde.Controls.ScrollContentPresenter.OnApplyTemplate","Fayde.Controls.Primitives.numberValidator","Fayde.Controls.Primitives.changeValidator","Fayde.Controls.Primitives.RangeBase","Fayde.Controls.Primitives.RangeBase.constructor","Fayde.Controls.Primitives.RangeBase.OnValueChanged","Fayde.Controls.Primitives.RepeatButton","Fayde.Controls.Primitives.RepeatButton.constructor","Fayde.Controls.Primitives.RepeatButton.OnApplyTemplate","Fayde.Controls.Primitives.RepeatButton.OnDelayChanged","Fayde.Controls.Primitives.RepeatButton.OnIntervalChanged","Fayde.Controls.Primitives.RepeatButton.OnIsEnabledChanged","Fayde.Controls.Primitives.RepeatButton.OnKeyDown","Fayde.Controls.Primitives.RepeatButton.OnKeyUp","Fayde.Controls.Primitives.RepeatButton.OnLostFocus","Fayde.Controls.Primitives.RepeatButton.OnMouseEnter","Fayde.Controls.Primitives.RepeatButton.OnMouseLeave","Fayde.Controls.Primitives.RepeatButton.OnMouseLeftButtonDown","Fayde.Controls.Primitives.RepeatButton.OnMouseLeftButtonUp","Fayde.Controls.Primitives.RepeatButton.OnMouseMove","Fayde.Controls.Primitives.RepeatButton._UpdateMousePosition","Fayde.Controls.Primitives.RepeatButton._UpdateRepeatState","Fayde.Controls.Primitives.RepeatButton._StartRepeatingAfterDelay","Fayde.Controls.Primitives.RepeatButton._OnTimeout","Fayde.Controls.Primitives.Thumb","Fayde.Controls.Primitives.Thumb.constructor","Fayde.Controls.Primitives.Thumb.OnApplyTemplate","Fayde.Controls.Primitives.Thumb.OnDraggingChanged","Fayde.Controls.Primitives.Thumb.OnGotFocus","Fayde.Controls.Primitives.Thumb.OnLostFocus","Fayde.Controls.Primitives.Thumb._FocusChanged","Fayde.Controls.Primitives.Thumb.OnLostMouseCapture","Fayde.Controls.Primitives.Thumb.OnMouseEnter","Fayde.Controls.Primitives.Thumb.OnMouseLeave","Fayde.Controls.Primitives.Thumb.OnMouseLeftButtonDown","Fayde.Controls.Primitives.Thumb.OnMouseMove","Fayde.Controls.Primitives.Thumb.OnLostTouchCapture","Fayde.Controls.Primitives.Thumb.OnTouchEnter","Fayde.Controls.Primitives.Thumb.OnTouchLeave","Fayde.Controls.Primitives.Thumb.OnTouchDown","Fayde.Controls.Primitives.Thumb.OnTouchUp","Fayde.Controls.Primitives.Thumb.OnTouchMove","Fayde.Controls.Primitives.Thumb.CancelDrag","Fayde.Controls.Primitives.Thumb._RaiseDragStarted","Fayde.Controls.Primitives.Thumb._RaiseDragDelta","Fayde.Controls.Primitives.Thumb._RaiseDragCompleted","Fayde.Controls.Primitives.Thumb.GoToStateCommon","Fayde.Controls.Primitives.ScrollBar","Fayde.Controls.Primitives.ScrollBar.constructor","Fayde.Controls.Primitives.ScrollBar.IsDragging","Fayde.Controls.Primitives.ScrollBar.OnApplyTemplate","Fayde.Controls.Primitives.ScrollBar.OnMaximumChanged","Fayde.Controls.Primitives.ScrollBar.OnMinimumChanged","Fayde.Controls.Primitives.ScrollBar.OnValueChanged","Fayde.Controls.Primitives.ScrollBar._OnThumbDragStarted","Fayde.Controls.Primitives.ScrollBar._OnThumbDragDelta","Fayde.Controls.Primitives.ScrollBar._OnThumbDragCompleted","Fayde.Controls.Primitives.ScrollBar._SmallDecrement","Fayde.Controls.Primitives.ScrollBar._SmallIncrement","Fayde.Controls.Primitives.ScrollBar._LargeDecrement","Fayde.Controls.Primitives.ScrollBar._LargeIncrement","Fayde.Controls.Primitives.ScrollBar._HandleSizeChanged","Fayde.Controls.Primitives.ScrollBar._OnOrientationChanged","Fayde.Controls.Primitives.ScrollBar._UpdateTrackLayout","Fayde.Controls.Primitives.ScrollBar._UpdateThumbSize","Fayde.Controls.Primitives.ScrollBar._GetTrackLength","Fayde.Controls.Primitives.ScrollBar._ConvertViewportSizeToDisplayUnits","Fayde.Controls.Primitives.ScrollBar._RaiseScroll","Fayde.Controls.ScrollViewer","Fayde.Controls.ScrollViewer.constructor","Fayde.Controls.ScrollViewer._ScrollBarVisibilityChanged","Fayde.Controls.ScrollViewer.GetHorizontalScrollBarVisibility","Fayde.Controls.ScrollViewer.SetHorizontalScrollBarVisibility","Fayde.Controls.ScrollViewer.HorizontalScrollBarVisibility","Fayde.Controls.ScrollViewer.GetVerticalScrollBarVisibility","Fayde.Controls.ScrollViewer.SetVerticalScrollBarVisibility","Fayde.Controls.ScrollViewer.VerticalScrollBarVisibility","Fayde.Controls.ScrollViewer.ScrollInfo","Fayde.Controls.ScrollViewer.InvalidateScrollInfo","Fayde.Controls.ScrollViewer._UpdateScrollBarVisibility","Fayde.Controls.ScrollViewer._UpdateScrollBar","Fayde.Controls.ScrollViewer.OnApplyTemplate","Fayde.Controls.ScrollViewer.OnMouseLeftButtonDown","Fayde.Controls.ScrollViewer.OnMouseWheel","Fayde.Controls.ScrollViewer.OnTouchDown","Fayde.Controls.ScrollViewer.OnTouchUp","Fayde.Controls.ScrollViewer.OnTouchMove","Fayde.Controls.ScrollViewer.OnKeyDown","Fayde.Controls.ScrollViewer.ScrollInDirection","Fayde.Controls.ScrollViewer.ScrollToHorizontalOffset","Fayde.Controls.ScrollViewer.ScrollToVerticalOffset","Fayde.Controls.ScrollViewer.LineUp","Fayde.Controls.ScrollViewer.LineDown","Fayde.Controls.ScrollViewer.LineLeft","Fayde.Controls.ScrollViewer.LineRight","Fayde.Controls.ScrollViewer.PageHome","Fayde.Controls.ScrollViewer.PageEnd","Fayde.Controls.ScrollViewer.PageUp","Fayde.Controls.ScrollViewer.PageDown","Fayde.Controls.ScrollViewer.PageLeft","Fayde.Controls.ScrollViewer.PageRight","Fayde.Controls.ScrollViewer._HandleScroll","Fayde.Controls.ScrollViewer._HandleHorizontalScroll","Fayde.Controls.ScrollViewer._HandleVerticalScroll","Fayde.Controls.ComboBox","Fayde.Controls.ComboBox.constructor","Fayde.Controls.ComboBox._IsDropDownOpenChanged","Fayde.Controls.ComboBox._MaxDropDownHeightChanged","Fayde.Controls.ComboBox._GetChildOfType","Fayde.Controls.ComboBox.OnApplyTemplate","Fayde.Controls.ComboBox.OnItemContainerStyleChanged","Fayde.Controls.ComboBox.IsItemItsOwnContainer","Fayde.Controls.ComboBox.GetContainerForItem","Fayde.Controls.ComboBox.PrepareContainerForItem","Fayde.Controls.ComboBox.GoToStateFocus","Fayde.Controls.ComboBox.OnIsEnabledChanged","Fayde.Controls.ComboBox.OnMouseLeftButtonDown","Fayde.Controls.ComboBox.OnMouseEnter","Fayde.Controls.ComboBox.OnMouseLeave","Fayde.Controls.ComboBox.OnKeyDown","Fayde.Controls.ComboBox.OnGotFocus","Fayde.Controls.ComboBox.OnLostFocus","Fayde.Controls.ComboBox._OnChildKeyDown","Fayde.Controls.ComboBox.OnSelectionChanged","Fayde.Controls.ComboBox._OnToggleChecked","Fayde.Controls.ComboBox._OnToggleUnchecked","Fayde.Controls.ComboBox._PopupClickedOutside","Fayde.Controls.ComboBox._UpdateDisplayedItem","Fayde.Controls.ComboBox._UpdatePopupSizeAndPosition","Fayde.Controls.ComboBox._UpdatePopupMaxHeight","Fayde.Controls.ListBoxItem","Fayde.Controls.ListBoxItem.constructor","Fayde.Controls.ListBoxItem.ParentSelector","Fayde.Controls.ListBoxItem.OnApplyTemplate","Fayde.Controls.ListBoxItem.OnMouseLeftButtonDown","Fayde.Controls.ListBoxItem.OnMouseEnter","Fayde.Controls.ListBoxItem.OnMouseLeave","Fayde.Controls.ListBoxItem.OnGotFocus","Fayde.Controls.ListBoxItem.OnLostFocus","Fayde.Controls.ListBoxItem.GoToStateSelection","Fayde.Controls.ListBoxItem.OnIsSelectedChanged","Fayde.Controls.ComboBoxItem","Fayde.Controls.ComboBoxItem.constructor","Fayde.Controls.ComboBoxItem.OnMouseLeftButtonUp","Fayde.Markup.setTemplateRoot","Fayde.Markup.setResources","Fayde.Markup.LoadXaml","Fayde.Markup.Load","Fayde.Markup.LoadImpl","Fayde.Markup.LoadImpl.extractType","Fayde.Markup.LoadImpl.extractDP","Fayde.Markup.FrameworkTemplate","Fayde.Markup.FrameworkTemplate.constructor","Fayde.Markup.FrameworkTemplate.Validate","Fayde.Markup.FrameworkTemplate.GetVisualTree","Fayde.Controls.ControlTemplate","Fayde.Controls.ControlTemplate.constructor","Fayde.Controls.ControlTemplate.Validate","Fayde.Controls.clickResultPropertyChanged","Fayde.Controls.buttonClicked","Fayde.Controls.Dialog","Fayde.Controls.Dialog.constructor","Fayde.Controls.Dialog.OnDialogResultChanged","Fayde.Controls.Dialog.GetClickResult","Fayde.Controls.Dialog.SetClickResult","Fayde.Controls.UserControl","Fayde.Controls.UserControl.constructor","Fayde.Controls.UserControl.CreateLayoutUpdater","Fayde.Controls.UserControl.InitializeComponent","Fayde.Controls.Page","Fayde.Controls.Page.constructor","Fayde.Controls.Page.GetAsync","Fayde.Navigation","Fayde.Controls.createErrorDoc","Fayde.Controls.getErrorPage","Fayde.Controls.Frame","Fayde.Controls.Frame.constructor","Fayde.Controls.Frame.OnIsLoadingChanged","Fayde.Controls.Frame.GoToStates","Fayde.Controls.Frame.GoToStateLoading","Fayde.Controls.Frame.Navigate","Fayde.Controls.Frame._FrameLoaded","Fayde.Controls.Frame._HandleDeepLink","Fayde.Controls.Frame._LoadContent","Fayde.Controls.Frame._HandleSuccess","Fayde.Controls.Frame._HandleError","Fayde.Controls.Frame._SetPage","Fayde.Controls.Frame.SourcePropertyChanged","Fayde.Controls.GridNode","Fayde.Controls.GridNode.constructor","Fayde.Controls.GridNode.ColumnDefinitionsChanged","Fayde.Controls.GridNode.RowDefinitionsChanged","Fayde.Controls.Grid","Fayde.Controls.Grid.constructor","Fayde.Controls.Grid.CreateNode","Fayde.Controls.Grid.CreateLayoutUpdater","Fayde.Controls.Grid.GetColumn","Fayde.Controls.Grid.SetColumn","Fayde.Controls.Grid.GetColumnSpan","Fayde.Controls.Grid.SetColumnSpan","Fayde.Controls.Grid.GetRow","Fayde.Controls.Grid.SetRow","Fayde.Controls.Grid.GetRowSpan","Fayde.Controls.Grid.SetRowSpan","Fayde.Controls.GridLength","Fayde.Controls.GridLength.constructor","Fayde.Controls.GridLength.Equals","Fayde.Controls.GridLength.Clone","Fayde.Controls.HeaderedContentControl","Fayde.Controls.HeaderedContentControl.constructor","Fayde.Controls.HyperlinkButton","Fayde.Controls.HyperlinkButton.constructor","Fayde.Controls.HyperlinkButton.OnApplyTemplate","Fayde.Controls.HyperlinkButton.OnClick","Fayde.Media","Fayde.Media.BrushMappingMode","Fayde.Media.GradientSpreadMethod","Fayde.Media.Stretch","Fayde.Media.AlignmentX","Fayde.Media.AlignmentY","Fayde.Media.TextHintingMode","Fayde.Controls.Image","Fayde.Controls.Image.constructor","Fayde.Controls.Image.CreateLayoutUpdater","Fayde.Controls.Image._SourceCoercer","Fayde.Controls.Image.OnImageErrored","Fayde.Controls.Image.OnImageLoaded","Fayde.Controls.Image.ImageChanged","Fayde.Controls.ItemCollection","Fayde.Controls.ItemCollection.constructor","Fayde.Controls.ItemCollection.ToArray","Fayde.Controls.ItemCollection.Count","Fayde.Controls.ItemCollection.GetValueAt","Fayde.Controls.ItemCollection.GetRange","Fayde.Controls.ItemCollection.SetValueAt","Fayde.Controls.ItemCollection.SetValueAtImpl","Fayde.Controls.ItemCollection.Add","Fayde.Controls.ItemCollection.AddImpl","Fayde.Controls.ItemCollection.AddRange","Fayde.Controls.ItemCollection.AddRangeImpl","Fayde.Controls.ItemCollection.Insert","Fayde.Controls.ItemCollection.InsertImpl","Fayde.Controls.ItemCollection.IndexOf","Fayde.Controls.ItemCollection.Contains","Fayde.Controls.ItemCollection.Remove","Fayde.Controls.ItemCollection.RemoveImpl","Fayde.Controls.ItemCollection.RemoveAt","Fayde.Controls.ItemCollection.RemoveAtImpl","Fayde.Controls.ItemCollection.Clear","Fayde.Controls.ItemCollection.ClearImpl","Fayde.Controls.ItemCollection._ValidateReadOnly","Fayde.Controls.ItemsPanelTemplate","Fayde.Controls.ItemsPanelTemplate.constructor","Fayde.Controls.ItemsPanelTemplate.GetVisualTree","Fayde.Controls.ItemsPresenterNode","Fayde.Controls.ItemsPresenterNode.constructor","Fayde.Controls.ItemsPresenterNode.ElementRoot","Fayde.Controls.ItemsPresenterNode.DoApplyTemplateWithError","Fayde.Controls.ItemsPresenter","Fayde.Controls.ItemsPresenter.constructor","Fayde.Controls.ItemsPresenter.CreateNode","Fayde.Controls.ItemsPresenter.ItemsControl","Fayde.Controls.ItemsPresenter.Panel","Fayde.Controls.ItemsPresenter.Get","Fayde.Controls.ItemsPresenter.OnItemsAdded","Fayde.Controls.ItemsPresenter.OnItemsRemoved","Fayde.Controls.ListBox","Fayde.Controls.ListBox.constructor","Fayde.Controls.ListBox.ScrollIntoView","Fayde.Controls.ListBox._NavigateByPage","Fayde.Controls.ListBox._ScrollInDirection","Fayde.Controls.ListBox._IsOnCurrentPage","Fayde.Controls.ListBox._GetFirstItemOnCurrentPage","Fayde.Controls.ListBox.OnItemContainerStyleChanged","Fayde.Controls.ListBox.OnKeyDown","Fayde.Controls.ListBox._GetIsVerticalOrientation","Fayde.Controls.ListBox.IsItemItsOwnContainer","Fayde.Controls.ListBox.GetContainerForItem","Fayde.Controls.ListBox.PrepareContainerForItem","Fayde.Controls.ListBox.OnGotFocus","Fayde.Controls.ListBox.OnLostFocus","Fayde.Controls.ListBox.NotifyListItemGotFocus","Fayde.Controls.ListBox.NotifyListItemLostFocus","Fayde.Controls.MediaElement","Fayde.Controls.MediaElement.constructor","Fayde.RoutedEventArgs","Fayde.RoutedEventArgs.constructor","Fayde.Input.Key","Fayde.Input.KeyboardEventArgs","Fayde.Input.KeyboardEventArgs.constructor","Fayde.Input.KeyEventArgs","Fayde.Input.KeyEventArgs.constructor","Fayde.Controls.positiveIntValidator","Fayde.Controls.TextBoxBase","Fayde.Controls.TextBoxBase.constructor","Fayde.Controls.TextBoxBase._SyncFont","Fayde.Controls.TextBoxBase.CreateView","Fayde.Controls.TextBoxBase.Cursor","Fayde.Controls.TextBoxBase.OnApplyTemplate","Fayde.Controls.TextBoxBase.OnLostFocus","Fayde.Controls.TextBoxBase.OnGotFocus","Fayde.Controls.TextBoxBase.OnMouseLeftButtonDown","Fayde.Controls.TextBoxBase.OnMouseLeftButtonUp","Fayde.Controls.TextBoxBase.OnMouseMove","Fayde.Controls.TextBoxBase.OnTouchDown","Fayde.Controls.TextBoxBase.OnTouchUp","Fayde.Controls.TextBoxBase.OnTouchMove","Fayde.Controls.TextBoxBase.OnKeyDown","Fayde.Controls.TextBoxBase.PostOnKeyDown","Fayde.Controls.TextBoxBase._KeyDownBackSpace","Fayde.Controls.TextBoxBase._KeyDownDelete","Fayde.Controls.TextBoxBase._KeyDownPageDown","Fayde.Controls.TextBoxBase._KeyDownPageUp","Fayde.Controls.TextBoxBase._KeyDownHome","Fayde.Controls.TextBoxBase._KeyDownEnd","Fayde.Controls.TextBoxBase._KeyDownLeft","Fayde.Controls.TextBoxBase._KeyDownRight","Fayde.Controls.TextBoxBase._KeyDownDown","Fayde.Controls.TextBoxBase._KeyDownUp","Fayde.Controls.PasswordBox","Fayde.Controls.PasswordBox.constructor","Fayde.Controls.PasswordBox.DisplayText","Fayde.Controls.ProgressBar","Fayde.Controls.ProgressBar.constructor","Fayde.Controls.ProgressBar.OnIsIndeterminateChanged","Fayde.Controls.ProgressBar.OnMinimumChanged","Fayde.Controls.ProgressBar.OnMaximumChanged","Fayde.Controls.ProgressBar.OnValueChanged","Fayde.Controls.ProgressBar.OnApplyTemplate","Fayde.Controls.ProgressBar.GoToStates","Fayde.Controls.ProgressBar._OnTrackSizeChanged","Fayde.Controls.ProgressBar._UpdateIndicator","Fayde.Controls.register","Fayde.Controls.unregister","Fayde.Controls.RadioButton","Fayde.Controls.RadioButton.constructor","Fayde.Controls.RadioButton.OnGroupNameChanged","Fayde.Controls.RadioButton.OnIsCheckedChanged","Fayde.Controls.RadioButton.OnToggle","Fayde.Controls.RadioButton.UpdateRadioButtonGroup","Fayde.Controls._RichTextBoxView","Fayde.Controls.RichTextBox","Fayde.Controls.RichTextBox.constructor","Fayde.Controls.ConvertRowDefinition","Fayde.Controls.ConvertRowDefinitionCollection","Fayde.Controls.RowDefinition","Fayde.Controls.RowDefinition.constructor","Fayde.Controls.RowDefinition.setActualHeight","Fayde.Controls.RowDefinitionCollection","Fayde.Controls.RowDefinitionCollection.constructor","Fayde.Controls.RowDefinitionCollection._RaiseItemAdded","Fayde.Controls.RowDefinitionCollection._RaiseItemRemoved","Fayde.Controls.Slider","Fayde.Controls.Slider.constructor","Fayde.Controls.Slider.OnApplyTemplate","Focus","Value","LargeChange","Fayde.Controls.Slider.OnIsEnabledChanged","Fayde.Controls.Slider.OnMinimumChanged","Fayde.Controls.Slider.OnMaximumChanged","Fayde.Controls.Slider.OnValueChanged","Fayde.Controls.Slider._HandleSizeChanged","Fayde.Controls.Slider._OnOrientationChanged","Fayde.Controls.Slider._UpdateTrackLayout","Fayde.Controls.Slider._OnThumbDragStarted","Fayde.Controls.Slider._OnThumbDragDelta","Fayde.Controls.Slider.OnMouseEnter","Fayde.Controls.Slider.OnMouseLeave","Fayde.Controls.Slider.OnMouseLeftButtonDown","Fayde.Controls.Slider.OnLostMouseCapture","Fayde.Controls.Slider.OnKeyDown","Fayde.Controls.Slider.OnGotFocus","Fayde.Controls.Slider.OnLostFocus","Fayde.Controls.StackPanel","Fayde.Controls.StackPanel.constructor","Fayde.Controls.StackPanel.CreateLayoutUpdater","Fayde.Controls.TextBlockNode","Fayde.Controls.TextBlockNode.constructor","Fayde.Controls.TextBlockNode.GetInheritedEnumerator","Fayde.Controls.TextBlockNode.TextChanged","Fayde.Controls.TextBlockNode.InlinesChanged","Fayde.Controls.TextBlockNode.InlineChanged","Fayde.Controls.TextBlock","Fayde.Controls.TextBlock.constructor","Fayde.Controls.TextBlock.CreateNode","Fayde.Controls.TextBlock.CreateLayoutUpdater","Fayde.Controls.TextBlock.IsInheritable","Fayde.Controls.TextBox","Fayde.Controls.TextBox.constructor","Fayde.Controls.TextBox.OnApplyTemplate","Fayde.Controls.TextBox.DisplayText","Fayde.Controls.TextBox.OnMouseEnter","Fayde.Controls.TextBox.OnMouseLeave","Fayde.Controls.TextBox.OnGotFocus","Fayde.Controls.TextBox.OnLostFocus","Fayde.Controls.TextBox.GoToStateCommon","Fayde.Controls.TextBox.SelectAll","Fayde.Controls.TextBox.Select","Fayde.Controls.ToolTip","Fayde.Controls.ToolTip.constructor","Fayde.Controls.ToolTip.TooltipParent","Fayde.Controls.ToolTip.OnApplyTemplate","Fayde.Controls.ToolTip.OnHorizontalOffsetChanged","Fayde.Controls.ToolTip.OnVerticalOffsetChanged","Fayde.Controls.ToolTip.OnIsOpenChanged","Fayde.Controls.ToolTip.OnOffsetChanged","Fayde.Controls.ToolTip.OnLayoutUpdated","Fayde.Controls.ToolTip.OnTooltipParentDataContextChanged","Fayde.Controls.ToolTip.HookupParentPopup","Fayde.Controls.ToolTip.OnPopupOpened","Fayde.Controls.ToolTip.OnPopupClosed","Fayde.Controls.ToolTip.PerformPlacement","Fayde.Controls.ToolTip.GoToStates","Point","Point.constructor","Point.Clone","Point.LERP","minerva","addPrimitive","registerTypeConverter","x","y","tokens","splitCommaList","length","parseFloat","Fayde.Controls.toolTipChanged","Fayde.Controls.isSpecialKey","Fayde.Controls.ToolTipService","Fayde.Controls.ToolTipService.GetToolTip","Fayde.Controls.ToolTipService.SetToolTip","Fayde.Controls.ToolTipService.GetPlacement","Fayde.Controls.ToolTipService.SetPlacement","Fayde.Controls.ToolTipService.GetPlacementTarget","Fayde.Controls.ToolTipService.SetPlacementTarget","Fayde.Controls.ToolTipService.MousePosition","Fayde.Controls.ToolTipServiceSlave","Fayde.Controls.ToolTipServiceSlave.constructor","Fayde.Controls.ToolTipServiceSlave.SetRootVisual","Fayde.Controls.ToolTipServiceSlave.OnRootMouseMove","Fayde.Controls.ToolTipServiceSlave.RegisterTooltip","Fayde.Controls.ToolTipServiceSlave.UnregisterTooltip","Fayde.Controls.ToolTipServiceSlave.OnOwnerMouseEnter","Fayde.Controls.ToolTipServiceSlave.OnOwnerMouseLeave","Fayde.Controls.ToolTipServiceSlave.OnOwnerMouseLeftButtonDown","Fayde.Controls.ToolTipServiceSlave.OnOwnerKeyDown","Fayde.Controls.ToolTipServiceSlave.OnOwnerMouseEnterInternal","Fayde.Controls.ToolTipServiceSlave.ConvertToToolTip","Fayde.Controls.ToolTipServiceSlave.OpenAutomaticToolTip","Fayde.Controls.ToolTipServiceSlave.CloseAutomaticToolTip","Fayde.Controls.VirtualizationMode","Fayde.Controls.VirtualizingPanel","Fayde.Controls.VirtualizingPanel.constructor","Fayde.Controls.VirtualizingPanel.GetVirtualizationMode","Fayde.Controls.VirtualizingPanel.SetVirtualizationMode","Fayde.Controls.VirtualizingPanel.GetIsVirtualizing","Fayde.Controls.VirtualizingPanel.SetIsVirtualizing","Fayde.Controls.VirtualizingPanel.ItemsControl","Fayde.Controls.VirtualizingPanel.OnItemsAdded","Fayde.Controls.VirtualizingPanel.OnItemsRemoved","Fayde.Controls.VirtualizingStackPanel","Fayde.Controls.VirtualizingStackPanel.constructor","Fayde.Controls.VirtualizingStackPanel.CreateLayoutUpdater","Fayde.Controls.VirtualizingStackPanel.ScrollOwner","Fayde.Controls.VirtualizingStackPanel.CanHorizontallyScroll","Fayde.Controls.VirtualizingStackPanel.CanVerticallyScroll","Fayde.Controls.VirtualizingStackPanel.ExtentWidth","Fayde.Controls.VirtualizingStackPanel.ExtentHeight","Fayde.Controls.VirtualizingStackPanel.ViewportWidth","Fayde.Controls.VirtualizingStackPanel.ViewportHeight","Fayde.Controls.VirtualizingStackPanel.HorizontalOffset","Fayde.Controls.VirtualizingStackPanel.VerticalOffset","Fayde.Controls.VirtualizingStackPanel.LineUp","Fayde.Controls.VirtualizingStackPanel.LineDown","Fayde.Controls.VirtualizingStackPanel.LineLeft","Fayde.Controls.VirtualizingStackPanel.LineRight","Fayde.Controls.VirtualizingStackPanel.MouseWheelUp","Fayde.Controls.VirtualizingStackPanel.MouseWheelDown","Fayde.Controls.VirtualizingStackPanel.MouseWheelLeft","Fayde.Controls.VirtualizingStackPanel.MouseWheelRight","Fayde.Controls.VirtualizingStackPanel.PageUp","Fayde.Controls.VirtualizingStackPanel.PageDown","Fayde.Controls.VirtualizingStackPanel.PageLeft","Fayde.Controls.VirtualizingStackPanel.PageRight","Fayde.Controls.VirtualizingStackPanel.MakeVisible","Fayde.Controls.VirtualizingStackPanel.SetHorizontalOffset","Fayde.Controls.VirtualizingStackPanel.SetVerticalOffset","Fayde.Controls.VirtualizingStackPanel.OnItemsAdded","Fayde.Controls.VirtualizingStackPanel.OnItemsRemoved","Fayde.Clone","Fayde.extend","Fayde.DataTemplate","Fayde.DataTemplate.constructor","DependencyPropertyChangedEventArgs","Fayde.HierarchicalDataTemplate","Fayde.HierarchicalDataTemplate.constructor","Fayde.LayoutInformation","Fayde.LayoutInformation.GetLayoutClip","Fayde.LayoutInformation.GetLayoutSlot","Fayde.NameScope","Fayde.NameScope.constructor","Fayde.NameScope.FindName","Fayde.NameScope.RegisterName","Fayde.NameScope.UnregisterName","Fayde.NameScope.Absorb","Fayde.ResourceDictionaryCollection","Fayde.ResourceDictionaryCollection.constructor","Fayde.ResourceDictionaryCollection.Get","Fayde.ResourceDictionaryCollection.AddingToCollection","Fayde.ResourceDictionaryCollection._AssertNoCycles","Fayde.ResourceDictionary","Fayde.ResourceDictionary.constructor","Fayde.ResourceDictionary.MergedDictionaries","Fayde.ResourceDictionary.Count","Fayde.ResourceDictionary.AttachTo","Fayde.ResourceDictionary.Contains","Fayde.ResourceDictionary.Get","Fayde.ResourceDictionary.Set","Fayde.ResourceDictionary.Remove","Fayde.ResourceDictionary.getEnumerator","Fayde.ResourceDictionary.GetNodeEnumerator","Fayde.ResourceDictionary._GetFromSource","Fayde.RoutedEvent","Fayde.RoutedEvent.constructor","Fayde.RoutedPropertyChangedEvent","Fayde.RoutedPropertyChangedEvent.constructor","Fayde.RoutedPropertyChangedEventArgs","Fayde.RoutedPropertyChangedEventArgs.constructor","Fayde.RoutedPropertyChangingEvent","Fayde.RoutedPropertyChangingEvent.constructor","Fayde.RoutedPropertyChangingEventArgs","Fayde.RoutedPropertyChangingEventArgs.constructor","Fayde.RoutedPropertyChangingEventArgs.IsCancellable","Fayde.RoutedPropertyChangingEventArgs.Cancel","Fayde.SetterCollection","Fayde.SetterCollection.constructor","Fayde.SetterCollection.Seal","Fayde.SetterCollection.AddingToCollection","Fayde.SetterCollection._ValidateSetter","Fayde.Setter","Fayde.Setter.constructor","Fayde.Setter.Seal","Fayde.Setter.Compare","Fayde.SizeChangedEventArgs","Fayde.SizeChangedEventArgs.constructor","Fayde.Style","Fayde.Style.constructor","Fayde.Style.Seal","Fayde.Style.Validate","Fayde.TemplateBinding","Fayde.TemplateBinding.init","Fayde.TemplateBinding.transmute","Fayde.TriggerAction","Fayde.TriggerAction.constructor","Fayde.TriggerActionCollection","Fayde.TriggerActionCollection.constructor","Fayde.TriggerActionCollection.Fire","Fayde.TriggerBase","Fayde.TriggerBase.constructor","Fayde.EventTrigger","Fayde.EventTrigger.constructor","Fayde.EventTrigger.Attach","Fayde.EventTrigger.Detach","Fayde.EventTrigger._FireActions","Fayde.EventTrigger._ParseEventName","Fayde.TriggerCollection","Fayde.TriggerCollection.constructor","Fayde.TriggerCollection.ParentXamlObject","Fayde.TriggerCollection.AddingToCollection","Fayde.TriggerCollection.RemovedFromCollection","Fayde.TriggerCollection.AttachTarget","Fayde.TriggerCollection.DetachTarget","Fayde.VisualTreeEnum","Fayde.VisualTreeEnum.GetAncestors","Fayde.AncestorsEnumerable","Fayde.AncestorsEnumerable.constructor","Fayde.AncestorsEnumerable.getEnumerator","Fayde.AncestorsEnumerable.getEnumerator.moveNext","Fayde.VisualTreeHelper","Fayde.VisualTreeHelper.GetParent","Fayde.VisualTreeHelper.GetParentOfType","Fayde.VisualTreeHelper.GetRoot","Fayde.VisualTreeHelper.GetChild","Fayde.VisualTreeHelper.GetChildrenCount","Fayde.VisualTreeHelper.FindElementsInHostCoordinates","Fayde.VisualTreeHelper.___Debug","Fayde.VisualTreeHelper.___DebugTree","Fayde.VisualTreeHelper.___DebugUIElement","Fayde.VisualTreeHelper.___DebugGrid","Fayde.VisualTreeHelper.___DebugUIElementLayout","Fayde.VisualTreeHelper.___DebugLayout","Fayde.VisualTreeHelper.___GetById","Fayde.mergeSetters","Fayde.SingleStyleWalker","flattenedSetters","shift","Fayde.MultipleStylesWalker","Fayde.DeepTreeWalker","last","enumerator","GetVisualTreeEnumerator","insertIndex","walkList","next","Fayde.compare","Fayde.getParentNavigationMode","Fayde.getActiveNavigationMode","Fayde.walkChildren","Fayde.VisualTreeDirection","Fayde.TabNavigationWalker","Fayde.TabNavigationWalker.constructor","Fayde.TabNavigationWalker.FocusChild","Fayde.TabNavigationWalker.Focus","Fayde.Data","Fayde.Data.Binding","Fayde.Data.Binding.constructor","Fayde.Data.Binding.init","Fayde.Data.Binding.transmute","Fayde.Data.Binding.$$coerce","Fayde.Data.Binding.Clone","Fayde.Data.Binding.fromData","Fayde.Data.CollectionViewSource","Fayde.Data.CollectionViewSource.constructor","Fayde.Data.DataErrorsChangedEventArgs","Fayde.Data.DataErrorsChangedEventArgs.constructor","Fayde.Data.RelativeSourceMode","Fayde.Data.BindingMode","Fayde.Data.UpdateSourceTrigger","Fayde.Data.findAncestor","Fayde.Data.findItemsControlAncestor","Fayde.Data.RelativeSource","Fayde.Data.RelativeSource.constructor","Fayde.Data.RelativeSource.init","Fayde.Data.RelativeSource.resolveTypeFields","Fayde.Data.RelativeSource.transmute","Fayde.Data.RelativeSource.Clone","Fayde.Data.RelativeSource.Find","Fayde.Documents","Fayde.Documents.TextReaction","Fayde.Documents.reaction","Fayde.Documents.sReaction","Fayde.Documents.lReaction","Fayde.Documents.slReaction","Fayde.Documents.invalidateFont","Fayde.Documents.TextElementNode","Fayde.Documents.TextElementNode.constructor","Fayde.Documents.TextElementNode.GetInheritedEnumerator","Fayde.Documents.TextElement","Fayde.Documents.TextElement.constructor","Fayde.Documents.TextElement.CreateNode","Fayde.Documents.TextElement.IsInheritable","Fayde.Documents.TextElement._SerializeText","Fayde.Documents.TextElement.Equals","Fayde.Documents.Block","Fayde.Documents.Block.constructor","Fayde.Documents.BlockCollection","Fayde.Documents.BlockCollection.constructor","Fayde.Documents.BlockCollection._RaiseItemAdded","Fayde.Documents.BlockCollection._RaiseItemRemoved","Fayde.Documents.Inline","Fayde.Documents.Inline.constructor","Fayde.Documents.Inline.Equals","Fayde.Documents.Inline.IsInheritable","Fayde.Documents.InlineCollection","Fayde.Documents.InlineCollection.constructor","Fayde.Documents.InlineCollection._RaiseItemAdded","Fayde.Documents.InlineCollection._RaiseItemRemoved","Fayde.Documents.LineBreak","Fayde.Documents.LineBreak.constructor","Fayde.Documents.Paragraph","Fayde.Documents.Paragraph.constructor","Fayde.Documents.Paragraph.CreateNode","Fayde.Documents.Paragraph.InlinesChanged","Fayde.Documents.Run","Fayde.Documents.Run.constructor","Fayde.Documents.Run._SerializeText","Fayde.Documents.Run.IsInheritable","Fayde.Documents.reactions","Fayde.Documents.Section","Fayde.Documents.Section.constructor","Fayde.Documents.Section.CreateNode","Fayde.Documents.Section.BlocksChanged","Fayde.Documents.Span","Fayde.Documents.Span.constructor","Fayde.Documents.Span.CreateNode","Fayde.Documents.Span._SerializeText","Fayde.Documents.Span.InlinesChanged","Fayde.Documents.Underline","Fayde.Documents.Underline.constructor","Fayde.Application","Fayde.Application.constructor","Fayde.Application.OnThemeNameChanged","Fayde.Application._ApplyTheme","Fayde.Application.OnResized","Fayde.Application.RootVisual","Fayde.Application.$$SetRootVisual","Fayde.Application.Attach","Fayde.Application.Start","Fayde.Application.OnTicked","Fayde.Application.StopEngine","Fayde.Application.ProcessStoryboards","Fayde.Application.Update","Fayde.Application.Render","Fayde.Application.RegisterStoryboard","Fayde.Application.UnregisterStoryboard","Fayde.Application.GetAsync","Fayde.Application.Resolve","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","Fayde.ClockTimer","Fayde.ClockTimer.constructor","Fayde.ClockTimer.RegisterTimer","Fayde.ClockTimer.UnregisterTimer","Fayde.ClockTimer._DoTick","Fayde.ClockTimer._RequestAnimationTick","Exception.constructor","Exception.toString","ArgumentException","ArgumentException.constructor","ArgumentNullException","ArgumentNullException.constructor","InvalidOperationException","InvalidOperationException.constructor","XamlParseException","XamlParseException.constructor","XamlMarkupParseException","XamlMarkupParseException.constructor","NotSupportedException","NotSupportedException.constructor","IndexOutOfRangeException","IndexOutOfRangeException.constructor","ArgumentOutOfRangeException","ArgumentOutOfRangeException.constructor","AttachException","AttachException.constructor","InvalidJsonException","InvalidJsonException.constructor","TargetInvocationException","TargetInvocationException.constructor","UnknownTypeException","UnknownTypeException.constructor","FormatException","FormatException.constructor","Fayde.Engine","Fayde.Engine.elementPathToRoot","Fayde.Engine.FocusManager","Fayde.Engine.FocusManager.constructor","Fayde.Engine.FocusManager.GetFocusToRoot","Fayde.Engine.FocusManager.OnNodeDetached","Fayde.Engine.FocusManager.TabFocus","Fayde.Engine.FocusManager.Focus","Fayde.Engine.FocusManager._FocusNode","Fayde.Engine.FocusManager.EmitChanges","Fayde.Engine.FocusManager.EmitChangesAsync","Fayde.Engine.FocusManager._EmitFocusList","Fayde.Engine.FocusManager.FocusAnyLayer","Fayde.Engine.findFirstCommonElement","Fayde.Engine.InputManager","Fayde.Engine.InputManager.constructor","Fayde.Engine.InputManager.FocusedNode","Fayde.Engine.InputManager.Focus","Fayde.Engine.InputManager.Register","Fayde.Engine.InputManager.OnNodeDetached","Fayde.Engine.InputManager.SetIsUserInitiatedEvent","Fayde.Engine.InputManager.HandleKeyDown","Fayde.Engine.InputManager._EmitKeyDown","Fayde.Engine.InputManager.HandleMousePress","Fayde.Engine.InputManager.HandleMouseRelease","Fayde.Engine.InputManager.HandleMouseEvent","Fayde.Engine.InputManager._EmitMouseList","Fayde.Engine.InputManager.HitTestPoint","Fayde.Engine.InputManager.UpdateCursorFromInputList","Fayde.Engine.InputManager.SetMouseCapture","Fayde.Engine.InputManager.ReleaseMouseCapture","Fayde.Engine.InputManager._PerformCapture","Fayde.Engine.InputManager._PerformReleaseCapture","Fayde.Engine.showMenu","Fayde.Engine.createMenu","Fayde.Engine.fillMenu","Fayde.Engine.createMenuItem","Fayde.Engine.serializeUINode","Fayde.Engine.handleMenuItemClick","Fayde.Engine.handleMenuItemEnter","Fayde.Engine.handleMenuItemLeave","Fayde.Engine.Inspection","Fayde.Engine.Inspection.TryHandle","Fayde.Engine.Inspection.Kill","resizeTimeout","Fayde.Surface","Fayde.Surface.constructor","Fayde.Surface.init","Fayde.Surface.Attach","Fayde.Surface.attachLayer","Fayde.Surface.Detach","Fayde.Surface.detachLayer","Fayde.Surface.updateLayout","Fayde.Surface.$$onLayoutUpdated","Fayde.Surface.Focus","Fayde.Surface.HasFocus","Fayde.Surface.GetFocusedElement","Fayde.Surface.RemoveFocusFrom","Fayde.Surface.SetMouseCapture","Fayde.Surface.ReleaseMouseCapture","Fayde.Surface.$$handleResize","Fayde.Surface.$$stretchCanvas","Fayde.Theme","Fayde.Theme.constructor","Fayde.Theme.LoadAsync","Fayde.Theme.GetImplicitStyle","Fayde.ThemeConfig","Fayde.ThemeConfig.GetRequestUri","Fayde.ThemeConfig.OverrideRequestUri","Fayde.ThemeConfig.Set","Fayde.ThemeConfig.processTemplate","Fayde.ThemeManagerImpl","Fayde.ThemeManagerImpl.constructor","Fayde.ThemeManagerImpl.$$onLibraryCreated","Fayde.ThemeManagerImpl.LoadAsync","Fayde.ThemeManagerImpl.FindStyle","Fayde.ThemeManagerImpl.$$findRepo","Fayde.LibraryThemeRepo","Fayde.LibraryThemeRepo.constructor","Fayde.LibraryThemeRepo.Active","Fayde.LibraryThemeRepo.Get","Fayde.LibraryThemeRepo.ChangeActive","Fayde.Expression","Fayde.Expression.constructor","Fayde.Expression.OnAttached","Fayde.Expression.OnDetached","Fayde.Data.getMentor","Fayde.Data.getDataError","Fayde.Data.BindingExpressionBase","Fayde.Data.BindingExpressionBase.constructor","Fayde.Data.BindingExpressionBase.DataItem","Fayde.Data.BindingExpressionBase.Seal","Fayde.Data.BindingExpressionBase.OnAttached","Fayde.Data.BindingExpressionBase.GetValue","Fayde.Data.BindingExpressionBase._OnSourceAvailable","Fayde.Data.BindingExpressionBase._FindSource","Fayde.Data.BindingExpressionBase._FindSourceByElementName","Fayde.Data.BindingExpressionBase.OnDetached","Fayde.Data.BindingExpressionBase.IsBrokenChanged","Fayde.Data.BindingExpressionBase.ValueChanged","Fayde.Data.BindingExpressionBase.UpdateSource","Fayde.Data.BindingExpressionBase._TryUpdateSourceObject","Fayde.Data.BindingExpressionBase._UpdateSourceCallback","Fayde.Data.BindingExpressionBase._TargetLostFocus","Fayde.Data.BindingExpressionBase._ShouldUpdateSource","Fayde.Data.BindingExpressionBase._UpdateSourceObject","Fayde.Data.BindingExpressionBase.OnDataContextChanged","Fayde.Data.BindingExpressionBase._Invalidate","Fayde.Data.BindingExpressionBase.Refresh","Fayde.Data.BindingExpressionBase._ConvertFromTargetToSource","Fayde.Data.BindingExpressionBase._ConvertToType","Fayde.Data.BindingExpressionBase._MaybeEmitError","Fayde.Data.BindingExpressionBase._AttachToNotifyError","Fayde.Data.BindingExpressionBase._NotifyErrorsChanged","Fayde.Data.BindingExpression","Fayde.Data.BindingExpression.constructor","Fayde.DeferredValueExpression","Fayde.DeferredValueExpression.constructor","Fayde.DeferredValueExpression.GetValue","Fayde.DeferredValueExpression.toString","Fayde.findSource","Fayde.findSourceByElementName","Fayde.EventBindingExpression","Fayde.EventBindingExpression.constructor","Fayde.EventBindingExpression.Init","Fayde.EventBindingExpression.OnAttached","Fayde.EventBindingExpression.OnDetached","Fayde.EventBindingExpression._Callback","Fayde.TemplateBindingExpression","Fayde.TemplateBindingExpression.constructor","Fayde.TemplateBindingExpression.Seal","Fayde.TemplateBindingExpression.GetValue","Fayde.TemplateBindingExpression.OnAttached","Fayde.TemplateBindingExpression.OnDetached","Fayde.TemplateBindingExpression.OnSourcePropertyChanged","Fayde.TemplateBindingExpression._AttachListener","Fayde.TemplateBindingExpression._DetachListener","Fayde.Input.InteractionHelper","Fayde.Input.InteractionHelper.GetLogicalKey","Fayde.Input.CreateKeyInterop","Fayde.Input.KeyInterop","Fayde.Input.KeyInterop.RegisterEvents","Fayde.Input.KeyInterop.CreateArgsPress","Fayde.Input.KeyInterop.CreateArgsDown","Fayde.Input.IEKeyInterop","Fayde.Input.IEKeyInterop.constructor","Fayde.Input.IEKeyInterop.CreateArgsPress","Fayde.Input.IEKeyInterop.CreateArgsDown","Fayde.Input.NetscapeKeyInterop","Fayde.Input.NetscapeKeyInterop.constructor","Fayde.Input.NetscapeKeyInterop.CreateArgsPress","Fayde.Input.NetscapeKeyInterop.CreateArgsDown","Fayde.Input.KeyboardNavigation","Fayde.Input.KeyboardNavigation.GetAcceptsReturn","Fayde.Input.KeyboardNavigation.SetAcceptsReturn","Fayde.Input.KeyboardNavigation.GetControlTabNavigation","Fayde.Input.KeyboardNavigation.SetControlTabNavigation","Fayde.Input.KeyboardNavigation.GetDirectionalNavigation","Fayde.Input.KeyboardNavigation.SetDirectionalNavigation","Fayde.Input.KeyboardNavigation.GetIsTabStop","Fayde.Input.KeyboardNavigation.SetIsTabStop","Fayde.Input.KeyboardNavigation.GetTabIndex","Fayde.Input.KeyboardNavigation.SetTabIndex","Fayde.Input.KeyboardNavigation.GetTabNavigation","Fayde.Input.KeyboardNavigation.SetTabNavigation","Fayde.Input.MouseEventArgs","Fayde.Input.MouseEventArgs.constructor","Fayde.Input.MouseEventArgs.GetPosition","Fayde.Input.MouseButtonEventArgs","Fayde.Input.MouseButtonEventArgs.constructor","Fayde.Input.MouseWheelEventArgs","Fayde.Input.MouseWheelEventArgs.constructor","Fayde.Input.CreateMouseInterop","Fayde.Input.createModifiers","Fayde.Input.MouseInputType","Fayde.Input.MouseInterop","Fayde.Input.MouseInterop.constructor","Fayde.Input.MouseInterop.RegisterEvents","Fayde.Input.MouseInterop._CalcOffset","Fayde.Input.MouseInterop._GetMousePosition","Fayde.Input.MouseInterop.IsLeftButton","Fayde.Input.MouseInterop.IsRightButton","Fayde.Input.MouseInterop._HandleContextMenu","Fayde.Input.MouseInterop._HandleButtonPress","Fayde.Input.MouseInterop._HandleButtonRelease","Fayde.Input.MouseInterop._HandleOut","Fayde.Input.MouseInterop._HandleMove","Fayde.Input.MouseInterop._HandleWheel","Fayde.Input.MouseInterop.CreateEventArgs","Fayde.Input.MouseInterop.DisableNextContextMenu","Fayde.Input.IEMouseInterop","Fayde.Input.IEMouseInterop.constructor","Fayde.Input.IEMouseInterop.DisableNextContextMenu","Fayde.Input.IEMouseInterop.RegisterEvents","Fayde.Input.IEMouseInterop._HandleIEContextMenu","Fayde.Input.NetscapeMouseInterop","Fayde.Input.NetscapeMouseInterop.constructor","Fayde.Input.NetscapeMouseInterop.IsRightButton","Fayde.Input.TouchEventArgs","Fayde.Input.TouchEventArgs.constructor","Fayde.Input.TouchEventArgs.GetTouchPoint","Fayde.Input.CreateTouchInterop","Fayde.Input.TouchInputType","Fayde.Input.DummyTouchInterop","Fayde.Input.TouchPoint","Fayde.Input.TouchPoint.constructor","Fayde.Input.VirtualKeyboard","Fayde.Input.VirtualKeyboard.Init","Fayde.Input.VirtualKeyboard.Launch","TimeSpan","TimeSpan.constructor","TimeSpan.Zero","TimeSpan.MinValue","TimeSpan.MaxValue","TimeSpan.FromDays","TimeSpan.FromHours","TimeSpan.FromMinutes","TimeSpan.FromSeconds","TimeSpan.FromMilliseconds","TimeSpan.Days","TimeSpan.Hours","TimeSpan.Minutes","TimeSpan.Seconds","TimeSpan.Milliseconds","TimeSpan.Ticks","TimeSpan.TotalDays","TimeSpan.TotalHours","TimeSpan.TotalMinutes","TimeSpan.TotalSeconds","TimeSpan.TotalMilliseconds","TimeSpan.AddTicks","TimeSpan.AddMilliseconds","TimeSpan.Add","TimeSpan.Subtract","TimeSpan.Multiply","TimeSpan.Divide","TimeSpan.CompareTo","TimeSpan.IsZero","TimeSpan.GetJsDelay","TimeSpan.toString","TimeSpan.valueOf","Duration","duration","HasTimeSpan","Ticks","split","ticks","isNaN","hours","minutes","seconds","days","milliseconds","daysplit","parseInt","DayOfWeek","addEnum","DateTimeKind","DateTime","DateTime.constructor","DateTime.MinValue","DateTime.MaxValue","DateTime.Now","DateTime.Today","DateTime.Compare","DateTime.DaysInMonth","DateTime.Ticks","DateTime.Kind","DateTime.Date","DateTime.Day","DateTime.DayOfWeek","DateTime.DayOfYear","DateTime.Hour","DateTime.Millisecond","DateTime.Minute","DateTime.Month","DateTime.Second","DateTime.TimeOfDay","DateTime.Year","DateTime.AddYears","DateTime.AddMonths","DateTime.AddDays","DateTime.AddHours","DateTime.AddMinutes","DateTime.AddSeconds","DateTime.AddMilliseconds","DateTime.Add","DateTime.AddTicks","DateTime.Subtract","DateTime.ToUniversalTime","DateTime.toString","DateTime.valueOf","Date","parse","Fayde.Localization","Fayde.Localization.Calendar","Fayde.Localization.Calendar.constructor","Fayde.Localization.CalendarWeekRule","Fayde.Localization.DateTimeFormatInfo","Fayde.Localization.DateTimeFormatInfo.constructor","Fayde.Localization.DateTimeFormatInfo.GetEraName","Fayde.Localization.DateTimeFormatInfo.ParseRepeatPattern","Fayde.Localization.DateTimeFormatInfo.ParseNextChar","Fayde.Localization.DateTimeFormatInfo.ParseQuoteString","Fayde.Localization.DateTimeFormatInfo.FormatDigits","Fayde.Localization.DateTimeFormatInfo.FormatMonth","Fayde.Localization.DateTimeFormatInfo.FormatDayOfWeek","Fayde.Localization.DateTimeFormatInfo.HebrewFormatDigits","Fayde.Localization.DateTimeFormatInfo.FormatHebrewMonthName","Fayde.Localization.Format","Fayde.Localization.FormatSingle","Fayde.Localization.appendFormat","Fayde.Localization.formatItem","Fayde.Localization.pushMany","Fayde.Localization.formatError","Fayde.Localization.stringBuilderToString","Fayde.Localization.RegisterFormattable","Fayde.Localization.doFormattable","Fayde.Localization.tryStandardFormat","Fayde.Localization.padded","Fayde.Localization.tryCustomFormat","Fayde.Localization.msf","Fayde.Localization.msF","obj","Month","Day","Year","join","info","Localization","DateTimeFormatInfo","Instance","DayNames","MonthNames","standardFormatters","utc","ToUniversalTime","AbbreviatedDayNames","AbbreviatedMonthNames","Hour","Minute","Second","padded","hour","desig","AMDesignator","PMDesignator","Fayde.Localization.grouped","Fayde.Localization.round","Fayde.Localization.sigDigits","Fayde.Localization.NumberFormatInfo","Fayde.Localization.NumberFormatInfo.constructor","Fayde.Localization.NumberFormatInfo.FormatCurrency","Fayde.Localization.NumberFormatInfo.FormatNumber","Fayde.Localization.NumberFormatInfo.FormatPercent","Fayde.Localization.NumberFormatInfo.FormatGeneral","Fayde.Localization.NumberFormatInfo.FormatDecimal","Fayde.Localization.NumberFormatInfo.FormatExponential","Fayde.Localization.NumberFormatInfo.FormatHexadecimal","Fayde.Localization.NumberFormatInfo.FormatRawNumber","NumberFormatInfo","FormatCurrency","precision","FormatDecimal","FormatExponential","toUpperCase","FormatNumber","FormatGeneral","FormatPercent","FormatHexadecimal","s","Hours","Minutes","Seconds","TimeSeparator","Days","Math","abs","ms","Milliseconds","msf","msF","Fayde.MVVM","Fayde.MVVM.AutoModel","Fayde.MVVM.AutoModel.Notify","Fayde.MVVM.AutoModel.Validate","Fayde.MVVM.AutoModel.Finish","Fayde.MVVM.getApplier","Fayde.MVVM.unique","Fayde.MVVM.applyProperty","backingName","doValidate","propertyName","validations","OnPropertyChanged","Fayde.MVVM.doValidate","Fayde.MVVM.validate","Fayde.MVVM.NotifyProperties","propName","propNames","i","defineProperty","Fayde.MVVM.ObservableObject","Fayde.MVVM.ObservableObject.constructor","Fayde.MVVM.ObservableObject.OnPropertyChanged","Fayde.MVVM.ViewModelBase","Fayde.MVVM.ViewModelBase.constructor","Fayde.MVVM.DialogViewModel","Fayde.MVVM.DialogViewModel.constructor","Fayde.MVVM.DialogViewModel.Closed_Execute","Fayde.MVVM.DialogViewModel.RequestOpen_Execute","Fayde.MVVM.DialogViewModel.RequestOpen_CanExecute","Fayde.MVVM.Entity","Fayde.MVVM.Entity.constructor","Fayde.MVVM.Entity.OnPropertyChanged","Fayde.MVVM.Entity.HasErrors","Fayde.MVVM.Entity.AddError","Fayde.MVVM.Entity.RemoveError","Fayde.MVVM.Entity.ClearErrors","Fayde.MVVM.Entity.GetErrors","Fayde.MVVM.Entity.ApplyTo","keys","_Errors","Fayde.Navigation.Route","Fayde.Navigation.Route.constructor","ResolveViewModel","Fayde.MVVM.RelayCommand","Fayde.MVVM.RelayCommand.constructor","Fayde.MVVM.RelayCommand.CanExecute","Fayde.MVVM.RelayCommand.ForceCanExecuteChanged","Fayde.Markup.EventBinding","Fayde.Markup.EventBinding.constructor","Fayde.Markup.EventBinding.init","Fayde.Markup.EventBinding.transmute","Fayde.Markup.EventBinding.$$coerce","Fayde.Markup.Resolve","Fayde.Markup.collector","Fayde.Markup.collector.create","Fayde.Markup.collector.create.collect","Fayde.Markup.collector.create.resolve","Fayde.Markup.StaticResource","Fayde.Markup.StaticResource.init","Fayde.Markup.StaticResource.transmute","Fayde.Markup.StaticResource.setContext","Fayde.Media.Brush","Fayde.Media.Brush.constructor","Fayde.Media.Brush.isTransparent","Fayde.Media.Brush.setupBrush","Fayde.Media.Brush.toHtml5Object","Fayde.Media.Brush.CreateBrush","Fayde.Media.Brush.InvalidateBrush","Fayde.Media.reactions","Fayde.Media.Geometry","Fayde.Media.Geometry.constructor","Fayde.Media.Geometry.GetBounds","Fayde.Media.Geometry.Draw","Fayde.Media.Geometry.ComputePathBounds","Fayde.Media.Geometry.InvalidateGeometry","Fayde.Media.Geometry._Build","Fayde.Media.Geometry.Serialize","Fayde.Media.GeometryCollection","Fayde.Media.GeometryCollection.constructor","Fayde.Media.GeometryCollection.AddingToCollection","Fayde.Media.GeometryCollection.RemovedFromCollection","Fayde.Media.EllipseGeometry","Fayde.Media.EllipseGeometry.constructor","Fayde.Media.EllipseGeometry._Build","Fayde.Media.GeneralTransform","Fayde.Media.GeneralTransform.constructor","Fayde.Media.GeneralTransform.Transform","Fayde.Media.GeneralTransform.TransformBounds","Fayde.Media.GeneralTransform.TryTransform","Fayde.Media.InternalTransform","Fayde.Media.InternalTransform.constructor","Fayde.Media.InternalTransform.Inverse","Fayde.Media.InternalTransform.Value","Fayde.Media.InternalTransform.getRaw","Fayde.Media.InternalTransform.Transform","Fayde.Media.InternalTransform.TransformBounds","Fayde.Media.InternalTransform.CreateMatrix3DProjection","Fayde.Shapes","Fayde.Shapes.ShapeFlags","Fayde.Shapes.PenLineCap","Fayde.Shapes.PenLineJoin","Fayde.Shapes.FillRule","Fayde.Shapes.SweepDirection","Fayde.Media.GeometryGroup","Fayde.Media.GeometryGroup.constructor","Fayde.Media.GeometryGroup.ComputePathBounds","Fayde.Media.GeometryGroup.Draw","Fayde.Media.GradientBrush","Fayde.Media.GradientBrush.constructor","Fayde.Media.GradientBrush.CreateBrush","Fayde.Media.GradientStop","Fayde.Media.GradientStop.constructor","Fayde.Media.GradientStop.toString","Fayde.Media.GradientStopCollection","Fayde.Media.GradientStopCollection.constructor","Fayde.Media.GradientStopCollection.AddingToCollection","Fayde.Media.GradientStopCollection.RemovedFromCollection","Fayde.Media.GradientStopCollection.getPaddedEnumerable","Fayde.Media.LineGeometry","Fayde.Media.LineGeometry.constructor","Fayde.Media.LineGeometry._Build","Fayde.Media.LinearGradientBrush","Fayde.Media.LinearGradientBrush.constructor","Fayde.Media.LinearGradientBrush.CreatePad","Fayde.Media.LinearGradientBrush.CreateRepeat","Fayde.Media.LinearGradientBrush.CreateReflect","Fayde.Media.LinearGradientBrush.CreateInterpolated","Fayde.Media.LinearGradientBrush._GetPointData","Fayde.Media.LinearGradientBrush.toString","Fayde.Media.Matrix","Fayde.Media.Matrix.constructor","Fayde.Media.Matrix.Identity","Fayde.Media.Matrix.M11","Fayde.Media.Matrix.M12","Fayde.Media.Matrix.M21","Fayde.Media.Matrix.M22","Fayde.Media.Matrix.OffsetX","Fayde.Media.Matrix.OffsetY","Fayde.Media.Matrix.Inverse","Fayde.Media.Matrix._OnChanged","Fayde.Media.Matrix.Clone","Fayde.Media.Matrix3D","Fayde.Media.Matrix3D.constructor","Fayde.Media.Matrix3D.FromRaw","Fayde.Media.Matrix3D.M11","Fayde.Media.Matrix3D.M12","Fayde.Media.Matrix3D.M13","Fayde.Media.Matrix3D.M14","Fayde.Media.Matrix3D.M21","Fayde.Media.Matrix3D.M22","Fayde.Media.Matrix3D.M23","Fayde.Media.Matrix3D.M24","Fayde.Media.Matrix3D.M31","Fayde.Media.Matrix3D.M32","Fayde.Media.Matrix3D.M33","Fayde.Media.Matrix3D.M34","Fayde.Media.Matrix3D.OffsetX","Fayde.Media.Matrix3D.OffsetY","Fayde.Media.Matrix3D.OffsetZ","Fayde.Media.Matrix3D.M44","Fayde.Media.Matrix3D.Inverse","Fayde.Media.Matrix3D.Listen","Fayde.Media.Matrix3D._OnChanged","Fayde.Media.Projection","Fayde.Media.Projection.constructor","Fayde.Media.Projection.ObjectWidth","Fayde.Media.Projection.ObjectHeight","Fayde.Media.Projection.setObjectSize","Fayde.Media.Projection.getDistanceFromXYPlane","Fayde.Media.Projection.getTransform","Fayde.Media.Projection.CreateProjectionMatrix","Fayde.Media.Projection.InvalidateProjection","Fayde.Media.Matrix3DProjection","Fayde.Media.Matrix3DProjection.constructor","Fayde.Media.Matrix3DProjection.CreateProjectionMatrix","Fayde.Media.ParseGeometry","Fayde.Media.ParseShapePoints","Fayde.Media.MediaParser","Fayde.Media.MediaParser.constructor","Fayde.Media.MediaParser.ParseGeometryImpl","Fayde.Media.MediaParser.ParseShapePoints","Fayde.Media.MediaParser.ParsePoint","Fayde.Media.MediaParser.ParseDouble","Fayde.Media.MediaParser.Match","Fayde.Media.MediaParser.Advance","Fayde.Media.MediaParser.MorePointsAvailable","Fayde.Media.PathFigure","Fayde.Media.PathFigure.constructor","Fayde.Media.PathFigure._OnSegmentsSourceChanged","Fayde.Media.PathFigure._Build","Fayde.Media.PathFigure.InvalidatePathFigure","Fayde.Media.PathFigure.MergeInto","Fayde.Media.PathFigureCollection","Fayde.Media.PathFigureCollection.constructor","Fayde.Media.PathFigureCollection.AddingToCollection","Fayde.Media.PathFigureCollection.RemovedFromCollection","Fayde.Media.PathGeometry","Fayde.Media.PathGeometry.constructor","Fayde.Media.PathGeometry.fillRule","Fayde.Media.PathGeometry.OverridePath","Fayde.Media.PathGeometry._Build","Fayde.Media.PathGeometry.InvalidateFigures","Fayde.Media.PathSegment","Fayde.Media.PathSegment.constructor","Fayde.Media.PathSegmentCollection","Fayde.Media.PathSegmentCollection.constructor","Fayde.Media.PathSegmentCollection.AddingToCollection","Fayde.Media.PathSegmentCollection.RemovedFromCollection","Fayde.Media.PathSegmentCollection.SetSource","Fayde.Media.PathSegmentCollection._OnSegmentsCollectionChanged","Fayde.Media.ArcSegment","Fayde.Media.ArcSegment.constructor","Fayde.Media.ArcSegment._Append","Fayde.Media.BezierSegment","Fayde.Media.BezierSegment.constructor","Fayde.Media.BezierSegment._Append","Fayde.Media.LineSegment","Fayde.Media.LineSegment.constructor","Fayde.Media.LineSegment._Append","Fayde.Media.PolyBezierSegment","Fayde.Media.PolyBezierSegment.constructor","Fayde.Media.PolyBezierSegment._Append","Fayde.Media.PolyLineSegment","Fayde.Media.PolyLineSegment.constructor","Fayde.Media.PolyLineSegment._Append","Fayde.Media.PolyQuadraticBezierSegment","Fayde.Media.PolyQuadraticBezierSegment.constructor","Fayde.Media.PolyQuadraticBezierSegment._Append","Fayde.Media.QuadraticBezierSegment","Fayde.Media.QuadraticBezierSegment.constructor","Fayde.Media.QuadraticBezierSegment._Append","Fayde.Media.PlaneProjection","Fayde.Media.PlaneProjection.constructor","Fayde.Media.PlaneProjection.getDistanceFromXYPlane","Fayde.Media.PlaneProjection.CreateProjectionMatrix3D","Fayde.Media.RadialGradientBrush","Fayde.Media.RadialGradientBrush.constructor","Fayde.Media.RadialGradientBrush.CreatePad","Fayde.Media.RadialGradientBrush.CreateRepeat","Fayde.Media.RadialGradientBrush.CreateReflect","Fayde.Media.RadialGradientBrush.CreateInterpolated","Fayde.Media.RadialGradientBrush.FitPattern","Fayde.Media.RadialGradientBrush._GetPointData","Fayde.Media.RectangleGeometry","Fayde.Media.RectangleGeometry.constructor","Fayde.Media.RectangleGeometry._Build","Fayde.Media.brushConverter","Fayde.Media.SolidColorBrush","Fayde.Media.SolidColorBrush.constructor","Fayde.Media.SolidColorBrush.isTransparent","Fayde.Media.SolidColorBrush.FromColor","Fayde.Media.SolidColorBrush.setupBrush","Fayde.Media.SolidColorBrush.CreateBrush","Fayde.Media.TextOptions","Fayde.Media.TextOptions.GetTextHintingMode","Fayde.Media.TextOptions.SetTextHintingMode","Fayde.Media.computeImageMatrix","Fayde.Media.TileBrush","Fayde.Media.TileBrush.constructor","Fayde.Media.TileBrush.CreateBrush","Fayde.Media.TileBrush.GetTileExtents","Fayde.Media.Transform","Fayde.Media.Transform.constructor","Fayde.Media.Transform.Value","Fayde.Media.Transform.getRaw","Fayde.Media.Transform.Inverse","Fayde.Media.Transform.Transform","Fayde.Media.Transform.TransformBounds","Fayde.Media.Transform.TryTransform","Fayde.Media.Transform.InvalidateValue","Fayde.Media.Transform._BuildValue","Fayde.Media.Transform.copyMatTo","Fayde.Media.MatrixTransform","Fayde.Media.MatrixTransform.constructor","Fayde.Media.MatrixTransform._BuildValue","Fayde.Media.MatrixTransform.Clone","Fayde.Media.RotateTransform","Fayde.Media.RotateTransform.constructor","Fayde.Media.RotateTransform._BuildValue","Fayde.Media.ScaleTransform","Fayde.Media.ScaleTransform.constructor","Fayde.Media.ScaleTransform._BuildValue","Fayde.Media.SkewTransform","Fayde.Media.SkewTransform.constructor","Fayde.Media.SkewTransform._BuildValue","Fayde.Media.TranslateTransform","Fayde.Media.TranslateTransform.constructor","Fayde.Media.TranslateTransform._BuildValue","Fayde.Media.TransformCollection","Fayde.Media.TransformCollection.constructor","Fayde.Media.TransformCollection.AddingToCollection","Fayde.Media.TransformCollection.RemovedFromCollection","Fayde.Media.TransformGroup","Fayde.Media.TransformGroup.constructor","Fayde.Media.TransformGroup._BuildValue","Fayde.Navigation.Navigate","Fayde.Navigation.isExternalTarget","Fayde.Navigation.tryInternalNavigate","Fayde.Navigation.findNavigator","Fayde.Navigation.walkUp","Fayde.Navigation.walkUp.moveNext","Fayde.Navigation.isUriValidForExternalNav","Fayde.Navigation.getAbsoluteUri","Fayde.Navigation.launchDummyLink","Fayde.Navigation.NavigationService","Fayde.Navigation.NavigationService.constructor","Fayde.Navigation.NavigationService.CurrentUri","Fayde.Navigation.NavigationService.Navigate","Fayde.Navigation.NavigationService._HandleFragmentChange","Fayde.Navigation.RouteMapper","Fayde.Navigation.RouteMapper.constructor","Fayde.Navigation.RouteMapper.MapUri","Fayde.Navigation.createUriMatcher","Fayde.Navigation.createUriMatcher.collectTokenInfo","Fayde.Navigation.createUriMatcher.findTokenValue","matchTemplate","actual","j","push","findTokenValue","collectTokenInfo","Fayde.Navigation.RouteMapping","Fayde.Navigation.RouteMapping.constructor","Fayde.Navigation.RouteMapping.MapUri","Fayde.Navigation.UriMapper","Fayde.Navigation.UriMapper.constructor","Fayde.Navigation.UriMapper.MapUri","Fayde.Navigation.createUriMatcher.buildMappedUri","buildMappedUri","Fayde.Navigation.UriMapping","Fayde.Navigation.UriMapping.constructor","Fayde.Navigation.UriMapping.MapUri","Color","Color.constructor","Color.Add","Color.Subtract","Color.Multiply","Color.Equals","Color.toString","Color.ToHexStringNoAlpha","Color.Clone","Color.LERP","Color.FromRgba","Color.FromHex","color","KnownColors","FromHex","CornerRadius","CornerRadius.constructor","CornerRadius.Clone","topLeft","topRight","bottomRight","bottomLeft","DurationType","Duration.constructor","Duration.Clone","Duration.Type","Duration.TimeSpan","Duration.HasTimeSpan","Duration.IsForever","Duration.IsAutomatic","Duration.IsZero","_Type","Automatic","Forever","toLowerCase","ts","convertAnyToType","FontFamily","FontFamily.constructor","FontFamily.toString","FontFamily.Clone","Font","DEFAULT_FAMILY","KeyTime","KeyTime.constructor","KeyTime.CreateUniform","KeyTime.CreateTimeSpan","KeyTime.Clone","KeyTime.IsPaced","KeyTime.IsUniform","KeyTime.HasTimeSpan","KeyTime.TimeSpan","KeyTime.HasPercent","KeyTime.Percent","CreateUniform","CreateTimeSpan","Length","Number","NaN","Rect","Rect.constructor","Rect.Clone","Error","Size","Size.constructor","Size.Clone","width","height","w","h","Thickness","Thickness.constructor","Thickness.Clone","Thickness.toString","t","left","top","right","bottom","Fayde.splitCommaList","BError","BError.ThrowException","Fayde.Bootstrap","Fayde.bootstrap","Fayde.bootstrap.run","Fayde.bootstrap.resolveApp","Fayde.bootstrap.resolveTheme","Fayde.bootstrap.finishError","Fayde.bootstrap.startApp","Fayde.bootstrap.loaded","Fayde.LoadConfigJson","Fayde.configure","Fayde.libs","Fayde.libs.configure","Fayde.libs.getLibConfig","Fayde.libs.setupLibraryConfig","Fayde.themes","Fayde.themes.configure","Fayde.debug","Fayde.debug.configure","Fayde.debug.toBoolean","Fayde.Render","Fayde.Layout","Fayde.Media.Animation","Fayde.Media.VSM","NumberEx","NumberEx.AreClose","NumberEx.IsLessThanClose","NumberEx.IsGreaterThanClose","StringEx","StringEx.Format","matches","_i","items","match","TimelineProfile","TimelineProfile.Parse","TimelineProfile.Navigate","TimelineProfile.LayoutPass","TimelineProfile._FinishEvent","TimelineStart","valueOf","Fayde.Shapes.DoubleCollection","Fayde.Shapes.DoubleCollection.constructor","Fayde.Shapes.onSizeChanged","Fayde.Shapes.strokeThicknessCoercer","Fayde.Shapes.Shape","Fayde.Shapes.Shape.constructor","Fayde.Shapes.Shape.CreateLayoutUpdater","Fayde.Shapes.reactions","Fayde.Shapes.Ellipse","Fayde.Shapes.Ellipse.constructor","Fayde.Shapes.Ellipse.CreateLayoutUpdater","Fayde.Shapes.Line","Fayde.Shapes.Line.constructor","Fayde.Shapes.Line.CreateLayoutUpdater","Fayde.Shapes.Path","Fayde.Shapes.Path.constructor","Fayde.Shapes.Path.CreateLayoutUpdater","Fayde.Shapes.Path._DataCoercer","Fayde.Shapes.PointCollection","Fayde.Shapes.PointCollection.constructor","Fayde.Shapes.PointCollection.Count","Fayde.Shapes.PointCollection.FromData","Fayde.Shapes.PointCollection.FromArray","Fayde.Shapes.PointCollection.GetValueAt","Fayde.Shapes.PointCollection.SetValueAt","Fayde.Shapes.PointCollection.Add","Fayde.Shapes.PointCollection.AddRange","Fayde.Shapes.PointCollection.Insert","Fayde.Shapes.PointCollection.Remove","Fayde.Shapes.PointCollection.RemoveAt","Fayde.Shapes.PointCollection.Clear","Fayde.Shapes.PointCollection.IndexOf","Fayde.Shapes.PointCollection.Contains","Fayde.Shapes.PointCollection.getEnumerator","Fayde.Shapes.Polygon","Fayde.Shapes.Polygon.constructor","Fayde.Shapes.Polygon.CreateLayoutUpdater","Fayde.Shapes.Polygon._PointsCoercer","Fayde.Shapes.Polyline","Fayde.Shapes.Polyline.constructor","Fayde.Shapes.Polyline.CreateLayoutUpdater","Fayde.Shapes.Polyline._PointsCoercer","Fayde.Shapes.Rectangle","Fayde.Shapes.Rectangle.constructor","Fayde.Shapes.Rectangle.CreateLayoutUpdater","Fayde.Text","Fayde.Text.Buffer","Fayde.Text.Buffer.cut","Fayde.Text.Buffer.insert","Fayde.Text.Buffer.replace","Fayde.Text.EmitChangedType","Fayde.Text.Proxy","Fayde.Text.Proxy.constructor","Fayde.Text.Proxy.setAnchorCursor","Fayde.Text.Proxy.enterText","Fayde.Text.Proxy.removeText","Fayde.Text.Proxy.undo","Fayde.Text.Proxy.redo","Fayde.Text.Proxy.begin","Fayde.Text.Proxy.end","Fayde.Text.Proxy.beginSelect","Fayde.Text.Proxy.adjustSelection","Fayde.Text.Proxy.selectAll","Fayde.Text.Proxy.clearSelection","Fayde.Text.Proxy.select","Fayde.Text.Proxy.setSelectionStart","Fayde.Text.Proxy.setSelectionLength","Fayde.Text.Proxy.setText","Fayde.Text.Proxy.$syncEmit","Fayde.Text.Proxy.$syncText","Fayde.Validation","Fayde.Validation.Emit","Fayde.Validation.raiseBindingValidationError","Fayde.Validation.GetErrorsCore","Fayde.Validation.GetErrors","Fayde.Validation.GetHasError","Fayde.Validation.SetHasError","Fayde.Validation.AddError","Fayde.Validation.RemoveError","Fayde.Validation.Validation","Fayde.Validation.Validation.constructor","Fayde.Validation.ValidationError","Fayde.Validation.ValidationError.constructor","Fayde.Validation.ValidationErrorEventAction","Fayde.Validation.ValidationErrorEventArgs","Fayde.Validation.ValidationErrorEventArgs.constructor","Fayde.Controls.Internal","Fayde.Controls.Internal.TextBoxCursorAdvancer","Fayde.Controls.Internal.TextBoxCursorAdvancer.constructor","Fayde.Controls.Internal.TextBoxCursorAdvancer.CursorDown","Fayde.Controls.Internal.TextBoxCursorAdvancer.CursorUp","Fayde.Controls.Internal.TextBoxCursorAdvancer.CursorNextWord","Fayde.Controls.Internal.TextBoxCursorAdvancer.CursorPrevWord","Fayde.Controls.Internal.TextBoxCursorAdvancer.CursorNextChar","Fayde.Controls.Internal.TextBoxCursorAdvancer.CursorPrevChar","Fayde.Controls.Internal.TextBoxCursorAdvancer.CursorLineBegin","Fayde.Controls.Internal.TextBoxCursorAdvancer.CursorLineEnd","Fayde.Controls.Internal.TextBoxCursorAdvancer.CursorBegin","Fayde.Controls.Internal.TextBoxCursorAdvancer.CursorEnd","Fayde.Controls.Internal.PasswordBoxCursorAdvancer","Fayde.Controls.Internal.PasswordBoxCursorAdvancer.constructor","Fayde.Controls.Internal.PasswordBoxCursorAdvancer.CursorDown","Fayde.Controls.Internal.PasswordBoxCursorAdvancer.CursorUp","Fayde.Controls.Internal.PasswordBoxCursorAdvancer.CursorNextWord","Fayde.Controls.Internal.PasswordBoxCursorAdvancer.CursorPrevWord","Fayde.Controls.Internal.PasswordBoxCursorAdvancer.CursorNextChar","Fayde.Controls.Internal.PasswordBoxCursorAdvancer.CursorPrevChar","Fayde.Controls.Internal.PasswordBoxCursorAdvancer.CursorLineBegin","Fayde.Controls.Internal.PasswordBoxCursorAdvancer.CursorLineEnd","Fayde.Controls.Internal.PasswordBoxCursorAdvancer.CursorBegin","Fayde.Controls.Internal.PasswordBoxCursorAdvancer.CursorEnd","Fayde.Controls.Internal.ItemContainersManager","Fayde.Controls.Internal.ItemContainersManager.constructor","Fayde.Controls.Internal.ItemContainersManager.IsRecycling","Fayde.Controls.Internal.ItemContainersManager.IndexFromContainer","Fayde.Controls.Internal.ItemContainersManager.ContainerFromIndex","Fayde.Controls.Internal.ItemContainersManager.ItemFromContainer","Fayde.Controls.Internal.ItemContainersManager.ContainerFromItem","Fayde.Controls.Internal.ItemContainersManager.OnItemsAdded","Fayde.Controls.Internal.ItemContainersManager.OnItemsRemoved","Fayde.Controls.Internal.ItemContainersManager.DisposeContainers","Fayde.Controls.Internal.ItemContainersManager.CreateGenerator","generator","GenerateIndex","CurrentIndex","IsCurrentNew","count","containers","Current","CurrentItem","ic","IsItemItsOwnContainer","UIElement","cache","pop","GetContainerForItem","Fayde.Controls.Internal.ItemContainersManager.GetEnumerator","e","len","carr","iarr","Fayde.Controls.Internal.RangeCoercer","Fayde.Controls.Internal.RangeCoercer.constructor","Fayde.Controls.Internal.RangeCoercer.Minimum","Fayde.Controls.Internal.RangeCoercer.Maximum","Fayde.Controls.Internal.RangeCoercer.Value","Fayde.Controls.Internal.RangeCoercer.OnMinimumChanged","Fayde.Controls.Internal.RangeCoercer.OnMaximumChanged","Fayde.Controls.Internal.RangeCoercer.OnValueChanged","Fayde.Controls.Internal.RangeCoercer.CoerceMaximum","Fayde.Controls.Internal.RangeCoercer.CoerceValue","Fayde.Controls.Internal.TextBoxContentProxy","Fayde.Controls.Internal.TextBoxContentProxy.constructor","Fayde.Controls.Internal.TextBoxContentProxy.setElement","Fayde.Controls.Internal.TextBoxContentProxy.setHorizontalScrollBar","Fayde.Controls.Internal.TextBoxContentProxy.setVerticalScrollBar","Fayde.Controls.Internal.TextBoxViewNode","Fayde.Controls.Internal.TextBoxViewNode.constructor","Fayde.Controls.Internal.TextBoxView","Fayde.Controls.Internal.TextBoxView.constructor","Fayde.Controls.Internal.TextBoxView.CreateLayoutUpdater","Fayde.Controls.Internal.TextBoxView._InlineChanged","Fayde.Controls.Internal.TextBoxView.setFontProperty","Fayde.Controls.Internal.TextBoxView.setFontAttr","Fayde.Controls.Internal.TextBoxView.setCaretBrush","Fayde.Controls.Internal.TextBoxView.setIsFocused","Fayde.Controls.Internal.TextBoxView.setIsReadOnly","Fayde.Controls.Internal.TextBoxView.setTextAlignment","Fayde.Controls.Internal.TextBoxView.setTextWrapping","Fayde.Controls.Internal.TextBoxView.setSelectionStart","Fayde.Controls.Internal.TextBoxView.setSelectionLength","Fayde.Controls.Internal.TextBoxView.setText","Fayde.Controls.Internal.TextBoxView.GetCursorFromPoint","Fayde.Controls.Internal.VirtualizingPanelContainerOwner","Fayde.Controls.Internal.VirtualizingPanelContainerOwner.constructor","Fayde.Controls.Internal.VirtualizingPanelContainerOwner.itemCount","Fayde.Controls.Internal.VirtualizingPanelContainerOwner.createGenerator","icgen","Generate","child","children","Insert","PrepareContainerForItem","LayoutUpdater","Fayde.Controls.Internal.VirtualizingPanelContainerOwner.remove","Fayde.Controls.Primitives.DragCompletedEventArgs","Fayde.Controls.Primitives.DragCompletedEventArgs.constructor","Fayde.Controls.Primitives.DragDeltaEventArgs","Fayde.Controls.Primitives.DragDeltaEventArgs.constructor","Fayde.Controls.Primitives.DragStartedEventArgs","Fayde.Controls.Primitives.DragStartedEventArgs.constructor","Fayde.Controls.Primitives.OverlayNode","Fayde.Controls.Primitives.OverlayNode.constructor","Fayde.Controls.Primitives.OverlayNode.EnsureLayer","Fayde.Controls.Primitives.OverlayNode.EnsureMask","Fayde.Controls.Primitives.OverlayNode._OnMaskMouseDown","Fayde.Controls.Primitives.OverlayNode.UpdateMask","Fayde.Controls.Primitives.OverlayNode.OnIsAttachedChanged","Fayde.Controls.Primitives.OverlayNode.RegisterInitiator","Fayde.Controls.Primitives.Overlay","Fayde.Controls.Primitives.Overlay.constructor","Fayde.Controls.Primitives.Overlay.CreateNode","Fayde.Controls.Primitives.Overlay.CreateLayoutUpdater","Fayde.Controls.Primitives.Overlay.InitBindings","Fayde.Controls.Primitives.Overlay._OnVisualChanged","Fayde.Controls.Primitives.Overlay._OnVisualUriChanged","Fayde.Controls.Primitives.Overlay._OnVisualViewModelChanged","Fayde.Controls.Primitives.Overlay._SetVisualUri","Fayde.Controls.Primitives.Overlay._ClearVisualUri","Fayde.Controls.Primitives.Overlay._OnIsOpenChanged","Fayde.Controls.Primitives.Overlay._DoOpen","Fayde.Controls.Primitives.Overlay._DoClose","Fayde.Controls.Primitives.Overlay.Open","Fayde.Controls.Primitives.Overlay.Close","Fayde.Controls.Primitives.Overlay._GetDialogResult","Fayde.Controls.Primitives.Overlay.FindOverlay","Fayde.Controls.Primitives.OverlayClosedEventArgs","Fayde.Controls.Primitives.OverlayClosedEventArgs.constructor","Fayde.Controls.Primitives.ScrollData","Fayde.Controls.Primitives.ScrollData.constructor","Fayde.Controls.Primitives.ScrollData.invalidate","Fayde.Controls.Primitives.ScrollEventType","Fayde.Controls.Primitives.ScrollEventArgs","Fayde.Controls.Primitives.ScrollEventArgs.constructor","Fayde.Controls.Primitives.SelectionChangedEventArgs","Fayde.Controls.Primitives.SelectionChangedEventArgs.constructor","Fayde.Controls.Primitives.except","Fayde.Controls.Primitives.SelectorSelection","Fayde.Controls.Primitives.SelectorSelection.constructor","Fayde.Controls.Primitives.SelectorSelection.IsUpdating","Fayde.Controls.Primitives.SelectorSelection._HandleOwnerSelectionChanged","Fayde.Controls.Primitives.SelectorSelection.RepopulateSelectedItems","Fayde.Controls.Primitives.SelectorSelection.ClearSelection","Fayde.Controls.Primitives.SelectorSelection.Select","Fayde.Controls.Primitives.SelectorSelection._SelectSingle","Fayde.Controls.Primitives.SelectorSelection._SelectExtended","Fayde.Controls.Primitives.SelectorSelection._SelectMultiple","Fayde.Controls.Primitives.SelectorSelection.SelectRange","Fayde.Controls.Primitives.SelectorSelection.SelectAll","Fayde.Controls.Primitives.SelectorSelection.SelectOnly","Fayde.Controls.Primitives.SelectorSelection.Unselect","Fayde.Controls.Primitives.SelectorSelection.AddToSelected","Fayde.Controls.Primitives.SelectorSelection.RemoveFromSelected","Fayde.Controls.Primitives.SelectorSelection.ReplaceSelection","Fayde.Controls.Primitives.SelectorSelection.UpdateSelectorProperties","Fayde.Controls.Primitives.SelectorSelection.UpdateCollectionView","Fayde.Providers.getImplicitStyles","Fayde.Providers.getThemeStyle","Fayde.Providers.getAppResourcesStyle","Fayde.Providers.getVisualTreeStyle","Fayde.Providers.StyleIndex","Fayde.Providers.StyleMask","Fayde.Providers.ImplicitStyleBroker","Fayde.Providers.ImplicitStyleBroker.Set","Fayde.Providers.ImplicitStyleBroker.SetImpl","Fayde.Providers.ImplicitStyleBroker.Clear","Fayde.Providers.ImplicitStyleBroker.ApplyStyles","Fayde.Providers.LocalStyleBroker","Fayde.Providers.LocalStyleBroker.Set","Fayde.Providers.SwapStyles","Fayde.Data.lookupType","Fayde.Data.handlePeriod","Fayde.Data.handleLeftBracket","Fayde.Data.handleDefault","Fayde.Data.PropertyPath","Fayde.Data.PropertyPath.constructor","Fayde.Data.PropertyPath.CreateFromParameter","Fayde.Data.PropertyPath.TryResolveDependencyProperty","Fayde.Data.PropertyPath.Path","Fayde.Data.PropertyPath.ExpandedPath","Fayde.Data.PropertyPath.ParsePath","Fayde.Data.PropertyPath.HasDependencyProperty","Fayde.Data.PropertyPath.DependencyProperty","Fayde.Data.PropertyPath.ResolvePropertyPath","Fayde.Data.PropertyPath.Clone","Fayde.Data.indexOfAny","Fayde.Data.PropertyNodeType","Fayde.Data.PropertyPathParser","Fayde.Data.PropertyPathParser.constructor","Fayde.Data.PropertyPathParser.Step","Fayde.Data.PropertyPathWalker","Fayde.Data.PropertyPathWalker.constructor","Fayde.Data.PropertyPathWalker.IsPathBroken","Fayde.Data.PropertyPathWalker.FinalPropertyName","Fayde.Data.PropertyPathWalker.GetValue","Fayde.Data.PropertyPathWalker.Update","Fayde.Data.PropertyPathWalker.Listen","Fayde.Data.PropertyPathWalker.Unlisten","Fayde.Data.PropertyPathWalker.IsBrokenChanged","Fayde.Data.PropertyPathWalker.ValueChanged","Fayde.Data.PropertyPathWalker.GetContext","Fayde.Data.PropertyPathNode","Fayde.Data.PropertyPathNode.IsBroken","Fayde.Data.PropertyPathNode.Source","Fayde.Data.PropertyPathNode.Value","Fayde.Data.PropertyPathNode.Listen","Fayde.Data.PropertyPathNode.Unlisten","Fayde.Data.PropertyPathNode.UpdateValue","Fayde.Data.PropertyPathNode.SetValue","Fayde.Data.PropertyPathNode.GetSource","Fayde.Data.PropertyPathNode.SetSource","Fayde.Data.PropertyPathNode.UpdateValueAndIsBroken","Fayde.Data.PropertyPathNode._CheckIsBroken","Fayde.Data.StandardPropertyPathNode","Fayde.Data.StandardPropertyPathNode.constructor","Fayde.Data.StandardPropertyPathNode.SetValue","Fayde.Data.StandardPropertyPathNode.UpdateValue","Fayde.Data.StandardPropertyPathNode.OnSourceChanged","Fayde.Data.StandardPropertyPathNode.OnPropertyChanged","Fayde.Data.StandardPropertyPathNode.OnSourcePropertyChanged","Fayde.Data.CollectionViewNode","Fayde.Data.CollectionViewNode.constructor","Fayde.Data.CollectionViewNode.OnSourceChanged","Fayde.Data.CollectionViewNode.ViewChanged","Fayde.Data.CollectionViewNode.ViewCurrentChanged","Fayde.Data.CollectionViewNode.SetValue","Fayde.Data.CollectionViewNode.UpdateValue","Fayde.Data.CollectionViewNode._CheckIsBroken","Fayde.Data.CollectionViewNode.ConnectViewHandlers","Fayde.Data.CollectionViewNode.DisconnectViewHandlers","Fayde.Data.IndexedPropertyPathNode","Fayde.Data.IndexedPropertyPathNode.constructor","Fayde.Data.IndexedPropertyPathNode.UpdateValue","Fayde.Data.IndexedPropertyPathNode.SetValue","Fayde.Data.IndexedPropertyPathNode._CheckIsBroken","Fayde.Data.IndexedPropertyPathNode.OnSourcePropertyChanged","Fayde.Data.IndexedPropertyPathNode.OnSourceChanged","Fayde.Data.IndexedPropertyPathNode._GetIndexer","Fayde.Data.IndexedPropertyPathNode.CollectionChanged","Fayde.Input.TouchInternal","Fayde.Input.TouchInternal.findFirstCommonElement","Fayde.Input.TouchInternal.ActiveTouchBase","Fayde.Input.TouchInternal.ActiveTouchBase.constructor","Fayde.Input.TouchInternal.ActiveTouchBase.Capture","Fayde.Input.TouchInternal.ActiveTouchBase.ReleaseCapture","Fayde.Input.TouchInternal.ActiveTouchBase._PerformCapture","Fayde.Input.TouchInternal.ActiveTouchBase._PerformReleaseCapture","Fayde.Input.TouchInternal.ActiveTouchBase.Emit","Fayde.Input.TouchInternal.ActiveTouchBase._EmitList","Fayde.Input.TouchInternal.ActiveTouchBase.GetTouchPoint","Fayde.Input.TouchInternal.ActiveTouchBase.CreateTouchPoint","Fayde.Input.TouchInternal.ActiveTouchBase.CreateTouchDevice","Fayde.Input.TouchInternal.TouchInteropBase","Fayde.Input.TouchInternal.TouchInteropBase.constructor","Fayde.Input.TouchInternal.TouchInteropBase.CoordinateOffset","Fayde.Input.TouchInternal.TouchInteropBase.Register","Fayde.Input.TouchInternal.TouchInteropBase._CalcOffset","Fayde.Input.TouchInternal.TouchInteropBase.HandleTouches","Fayde.Input.TouchInternal.removeFromArray","Fayde.Input.TouchInternal.NonPointerActiveTouch","Fayde.Input.TouchInternal.NonPointerActiveTouch.constructor","Fayde.Input.TouchInternal.NonPointerActiveTouch.Init","Fayde.Input.TouchInternal.NonPointerActiveTouch.CreateTouchPoint","Fayde.Input.TouchInternal.NonPointerTouchInterop","Fayde.Input.TouchInternal.NonPointerTouchInterop.constructor","Fayde.Input.TouchInternal.NonPointerTouchInterop.Register","Fayde.Input.TouchInternal.NonPointerTouchInterop._HandleTouchStart","Fayde.Input.TouchInternal.NonPointerTouchInterop._HandleTouchEnd","Fayde.Input.TouchInternal.NonPointerTouchInterop._HandleTouchMove","Fayde.Input.TouchInternal.NonPointerTouchInterop._HandleTouchEnter","Fayde.Input.TouchInternal.NonPointerTouchInterop._HandleTouchLeave","Fayde.Input.TouchInternal.NonPointerTouchInterop.TouchArrayFromList","Fayde.Input.TouchInternal.NonPointerTouchInterop.FindTouchInList","Fayde.Input.TouchInternal.PointerActiveTouch","Fayde.Input.TouchInternal.PointerActiveTouch.constructor","Fayde.Input.TouchInternal.PointerActiveTouch.Init","Fayde.Input.TouchInternal.PointerActiveTouch.CreateTouchPoint","Fayde.Input.TouchInternal.PointerTouchInterop","Fayde.Input.TouchInternal.PointerTouchInterop.constructor","Fayde.Input.TouchInternal.PointerTouchInterop.Register","Fayde.Input.TouchInternal.PointerTouchInterop._HandlePointerDown","Fayde.Input.TouchInternal.PointerTouchInterop._HandlePointerUp","Fayde.Input.TouchInternal.PointerTouchInterop._HandlePointerMove","Fayde.Input.TouchInternal.PointerTouchInterop._HandlePointerEnter","Fayde.Input.TouchInternal.PointerTouchInterop._HandlePointerLeave","Fayde.Input.TouchInternal.PointerTouchInterop.GetActiveTouch","Fayde.Input.TouchInternal.PointerTouchInterop.FindTouchInList","Fayde.Markup.Internal","Fayde.Markup.Internal.createActiveObject","Fayde.Markup.Internal.createActiveObject.set","Fayde.Markup.Internal.createActiveObject.setName","Fayde.Markup.Internal.createActiveObject.getApp","Fayde.Markup.Internal.createObjectActor","Fayde.Markup.Internal.createObjectActor.start","Fayde.Markup.Internal.createObjectActor.end","Fayde.Markup.Internal.createPropertyActor","Fayde.Markup.Internal.createPropertyActor.verify","Fayde.Markup.Internal.createPropertyActor.verifyContent","Fayde.Markup.Internal.createPropertyActor.prepare","Fayde.Markup.Internal.createPropertyActor.prepareContent","Fayde.Markup.Internal.createPropertyActor.addContentObject","Fayde.Markup.Internal.createPropertyActor.addObject","Fayde.Markup.Internal.createPropertyActor.setAttrObject","Fayde.Markup.Internal.createPropertyActor.merge","Fayde.Markup.Internal.createPropertyActor.getFallbackKey","Fayde.Markup.Internal.createPropertyActor.getImplicitKey","Fayde.Markup.Internal.createPropertyActor.convert","Fayde.Markup.Internal.createPropertyActor.subscribeEvent","Fayde.Markup.Internal.createPropertyActor.init","Fayde.Markup.Internal.createPropertyActor.start","Fayde.Markup.Internal.createPropertyActor.startContent","Fayde.Markup.Internal.createPropertyActor.end","Fayde.Markup.Internal.createPropertyActor.setContentText","Fayde.Markup.Internal.createPropertyActor.setObject","Fayde.Markup.Internal.createPropertyActor.isNewResources","Fayde.Markup.Internal.createResourcesActor","Fayde.Markup.Internal.createResourcesActor.start","Fayde.Markup.Internal.createResourcesActor.end","Fayde.Markup.Internal.createResourcesActor.get","Fayde.Media.Animation.EasingMode","Fayde.Media.Animation.FillBehavior","Fayde.Media.Animation.RepeatBehavior","Fayde.Media.Animation.RepeatBehavior.constructor","Fayde.Media.Animation.RepeatBehavior.FromRepeatDuration","Fayde.Media.Animation.RepeatBehavior.FromIterationCount","Fayde.Media.Animation.RepeatBehavior.HasCount","Fayde.Media.Animation.RepeatBehavior.Count","Fayde.Media.Animation.RepeatBehavior.HasDuration","Fayde.Media.Animation.RepeatBehavior.Duration","Fayde.Media.Animation.RepeatBehavior.Clone","rb","RepeatBehavior","IsForever","Fayde.Media.Animation.Timeline","Fayde.Media.Animation.Timeline.constructor","Fayde.Media.Animation.Timeline.HasManualTarget","Fayde.Media.Animation.Timeline.Reset","Fayde.Media.Animation.Timeline.Pause","Fayde.Media.Animation.Timeline.Resume","Fayde.Media.Animation.Timeline.Stop","Fayde.Media.Animation.Timeline.OnCompleted","Fayde.Media.Animation.Timeline.Update","Fayde.Media.Animation.Timeline.CreateClockData","Fayde.Media.Animation.Timeline.IsAfterBeginTime","Fayde.Media.Animation.Timeline.GetNaturalDuration","Fayde.Media.Animation.Timeline.GetNaturalDurationCore","Fayde.Media.Animation.Timeline.GenerateFrom","Fayde.Media.Animation.Timeline.GenerateTo","Fayde.Media.Animation.TimelineCollection","Fayde.Media.Animation.TimelineCollection.constructor","Fayde.Media.Animation.getLogMessage","Fayde.Media.Animation.AnimationBase","Fayde.Media.Animation.AnimationBase.constructor","Fayde.Media.Animation.AnimationBase.Resolve","Fayde.Media.Animation.AnimationBase.HoldEnd","Fayde.Media.Animation.AnimationBase.Stop","Fayde.Media.Animation.AnimationBase.UpdateInternal","Fayde.Media.Animation.AnimationBase.GetNaturalDurationCore","Fayde.Media.Animation.AnimationBase.GetCurrentValue","Fayde.Media.Animation.AnimationBase._Hookup","Fayde.Media.Animation.createId","Fayde.Media.Animation.AnimationStore","Fayde.Media.Animation.AnimationStore.Create","Fayde.Media.Animation.AnimationStore.Attach","Fayde.Media.Animation.AnimationStore.Detach","Fayde.Media.Animation.AnimationStore.ApplyCurrent","Fayde.Media.Animation.AnimationStore.ApplyStop","Fayde.Media.Animation.AnimationUsingKeyFrames","Fayde.Media.Animation.AnimationUsingKeyFrames.constructor","Fayde.Media.Animation.AnimationUsingKeyFrames.Resolve","Fayde.Media.Animation.AnimationUsingKeyFrames.GetCurrentValue","Fayde.Media.Animation.AnimationUsingKeyFrames.GetNaturalDurationCore","Fayde.Media.Animation.AnimationUsingKeyFrames.AddKeyFrame","Fayde.Media.Animation.AnimationUsingKeyFrames.RemoveKeyFrame","Fayde.Media.Animation.BeginStoryboard","Fayde.Media.Animation.BeginStoryboard.constructor","Fayde.Media.Animation.BeginStoryboard.Fire","Fayde.Media.Animation.ColorAnimation","Fayde.Media.Animation.ColorAnimation.constructor","Fayde.Media.Animation.ColorAnimation.GetCurrentValue","Fayde.Media.Animation.ColorAnimation._FromChanged","Fayde.Media.Animation.ColorAnimation._ToChanged","Fayde.Media.Animation.ColorAnimation._ByChanged","Fayde.Media.Animation.ColorAnimation._EasingChanged","Fayde.Media.Animation.ColorAnimation.GenerateFrom","Fayde.Media.Animation.ColorAnimation.GenerateTo","Fayde.Media.Animation.ColorAnimationUsingKeyFrames","Fayde.Media.Animation.ColorAnimationUsingKeyFrames.constructor","Fayde.Media.Animation.ColorAnimationUsingKeyFrames.GenerateFrom","Fayde.Media.Animation.ColorAnimationUsingKeyFrames.GenerateTo","Fayde.Media.Animation.KeyFrame","Fayde.Media.Animation.KeyFrame.constructor","Fayde.Media.Animation.KeyFrame.CoerceKeyTime","Fayde.Media.Animation.KeyFrame.InterpolateValue","Fayde.Media.Animation.KeyFrame.CompareToTimeSpan","Fayde.Media.Animation.KeyFrame.Listen","Fayde.Media.Animation.KeyFrame.Unlisten","Fayde.Media.Animation.KeyFrame.InvalidateKeyFrame","Fayde.Media.Animation.KeyFrame.Comparer","Fayde.Media.Animation.KeyFrame.ResolveKeyFrames","Fayde.Media.Animation.KeyFrameCollection","Fayde.Media.Animation.KeyFrameCollection.constructor","Fayde.Media.Animation.KeyFrameCollection.GetKeyFrameForTime","Fayde.Media.Animation.KeyFrameCollection.Clear","Fayde.Media.Animation.KeyFrameCollection.AddingToCollection","Fayde.Media.Animation.KeyFrameCollection.RemovedFromCollection","Fayde.Media.Animation.KeyFrameCollection.KeyFrameChanged","Fayde.Media.Animation.KeyFrameCollection.ResolveKeyFrames","Fayde.Media.Animation.ColorKeyFrame","Fayde.Media.Animation.ColorKeyFrame.constructor","Fayde.Media.Animation.DiscreteColorKeyFrame","Fayde.Media.Animation.DiscreteColorKeyFrame.constructor","Fayde.Media.Animation.DiscreteColorKeyFrame.InterpolateValue","Fayde.Media.Animation.EasingColorKeyFrame","Fayde.Media.Animation.EasingColorKeyFrame.constructor","Fayde.Media.Animation.EasingColorKeyFrame.InterpolateValue","Fayde.Media.Animation.LinearColorKeyFrame","Fayde.Media.Animation.LinearColorKeyFrame.constructor","Fayde.Media.Animation.LinearColorKeyFrame.InterpolateValue","Fayde.Media.Animation.SplineColorKeyFrame","Fayde.Media.Animation.SplineColorKeyFrame.constructor","Fayde.Media.Animation.SplineColorKeyFrame.InterpolateValue","Fayde.Media.Animation.Curves","Fayde.Media.Animation.Curves.QuadraticArrayYForX","Fayde.Media.Animation.Curves.QuadraticYForX","Fayde.Media.Animation.Curves.SubdivideCubicAtLevel","Fayde.Media.Animation.Curves.RecursiveSubdivide","Fayde.Media.Animation.Curves.SubdivideCubic","Fayde.Media.Animation.Curves.HalfLerpPoint","Fayde.Media.Animation.Curves.ConvertCubicsToQuadratics","Fayde.Media.Animation.Curves.QuadraticFromCubic","Fayde.Media.Animation.DoubleAnimation","Fayde.Media.Animation.DoubleAnimation.constructor","Fayde.Media.Animation.DoubleAnimation.GetCurrentValue","Fayde.Media.Animation.DoubleAnimation._FromChanged","Fayde.Media.Animation.DoubleAnimation._ToChanged","Fayde.Media.Animation.DoubleAnimation._ByChanged","Fayde.Media.Animation.DoubleAnimation._EasingChanged","Fayde.Media.Animation.DoubleAnimation.GenerateFrom","Fayde.Media.Animation.DoubleAnimation.GenerateTo","Fayde.Media.Animation.DoubleAnimationUsingKeyFrames","Fayde.Media.Animation.DoubleAnimationUsingKeyFrames.constructor","Fayde.Media.Animation.DoubleAnimationUsingKeyFrames.GenerateFrom","Fayde.Media.Animation.DoubleAnimationUsingKeyFrames.GenerateTo","Fayde.Media.Animation.DoubleKeyFrame","Fayde.Media.Animation.DoubleKeyFrame.constructor","Fayde.Media.Animation.DiscreteDoubleKeyFrame","Fayde.Media.Animation.DiscreteDoubleKeyFrame.constructor","Fayde.Media.Animation.DiscreteDoubleKeyFrame.InterpolateValue","Fayde.Media.Animation.EasingDoubleKeyFrame","Fayde.Media.Animation.EasingDoubleKeyFrame.constructor","Fayde.Media.Animation.EasingDoubleKeyFrame.InterpolateValue","Fayde.Media.Animation.LinearDoubleKeyFrame","Fayde.Media.Animation.LinearDoubleKeyFrame.constructor","Fayde.Media.Animation.LinearDoubleKeyFrame.InterpolateValue","Fayde.Media.Animation.SplineDoubleKeyFrame","Fayde.Media.Animation.SplineDoubleKeyFrame.constructor","Fayde.Media.Animation.SplineDoubleKeyFrame.InterpolateValue","Fayde.Media.Animation.EasingFunctionBase","Fayde.Media.Animation.EasingFunctionBase.constructor","Fayde.Media.Animation.EasingFunctionBase.Ease","Fayde.Media.Animation.EasingFunctionBase.EaseInCore","Fayde.Media.Animation.BackEase","Fayde.Media.Animation.BackEase.constructor","Fayde.Media.Animation.BackEase.EaseInCore","Fayde.Media.Animation.BounceEase","Fayde.Media.Animation.BounceEase.constructor","Fayde.Media.Animation.BounceEase.EaseInCore","Fayde.Media.Animation.CircleEase","Fayde.Media.Animation.CircleEase.constructor","Fayde.Media.Animation.CircleEase.EaseInCore","Fayde.Media.Animation.CubicEase","Fayde.Media.Animation.CubicEase.constructor","Fayde.Media.Animation.CubicEase.EaseInCore","Fayde.Media.Animation.ElasticEase","Fayde.Media.Animation.ElasticEase.constructor","Fayde.Media.Animation.ElasticEase.EaseInCore","Fayde.Media.Animation.ExponentialEase","Fayde.Media.Animation.ExponentialEase.constructor","Fayde.Media.Animation.ExponentialEase.EaseInCore","Fayde.Media.Animation.PowerEase","Fayde.Media.Animation.PowerEase.constructor","Fayde.Media.Animation.PowerEase.EaseInCore","Fayde.Media.Animation.QuadraticEase","Fayde.Media.Animation.QuadraticEase.constructor","Fayde.Media.Animation.QuadraticEase.EaseInCore","Fayde.Media.Animation.QuarticEase","Fayde.Media.Animation.QuarticEase.constructor","Fayde.Media.Animation.QuarticEase.EaseInCore","Fayde.Media.Animation.QuinticEase","Fayde.Media.Animation.QuinticEase.constructor","Fayde.Media.Animation.QuinticEase.EaseInCore","Fayde.Media.Animation.SineEase","Fayde.Media.Animation.SineEase.constructor","Fayde.Media.Animation.SineEase.EaseInCore","Fayde.Media.Animation.KeySpline","Fayde.Media.Animation.KeySpline.constructor","Fayde.Media.Animation.KeySpline.GetSplineProgress","Fayde.Media.Animation.KeySpline.InvalidateControlPoints","Fayde.Media.Animation.KeySpline._RegenerateQuadratics","Fayde.Media.Animation.convertKeyFrame","Fayde.Media.Animation.ObjectAnimationUsingKeyFrames","Fayde.Media.Animation.ObjectAnimationUsingKeyFrames.constructor","Fayde.Media.Animation.ObjectAnimationUsingKeyFrames.Resolve","Fayde.Media.Animation.ObjectKeyFrame","Fayde.Media.Animation.ObjectKeyFrame.constructor","Fayde.Media.Animation.DiscreteObjectKeyFrame","Fayde.Media.Animation.DiscreteObjectKeyFrame.constructor","Fayde.Media.Animation.DiscreteObjectKeyFrame.InterpolateValue","Fayde.Media.Animation.PointAnimation","Fayde.Media.Animation.PointAnimation.constructor","Fayde.Media.Animation.PointAnimation.GetCurrentValue","Fayde.Media.Animation.PointAnimation._FromChanged","Fayde.Media.Animation.PointAnimation._ToChanged","Fayde.Media.Animation.PointAnimation._ByChanged","Fayde.Media.Animation.PointAnimation._EasingChanged","Fayde.Media.Animation.PointAnimation.GenerateFrom","Fayde.Media.Animation.PointAnimation.GenerateTo","Fayde.Media.Animation.PointAnimationUsingKeyFrames","Fayde.Media.Animation.PointAnimationUsingKeyFrames.constructor","Fayde.Media.Animation.PointAnimationUsingKeyFrames.GenerateFrom","Fayde.Media.Animation.PointAnimationUsingKeyFrames.GenerateTo","Fayde.Media.Animation.PointKeyFrame","Fayde.Media.Animation.PointKeyFrame.constructor","Fayde.Media.Animation.DiscretePointKeyFrame","Fayde.Media.Animation.DiscretePointKeyFrame.constructor","Fayde.Media.Animation.DiscretePointKeyFrame.InterpolateValue","Fayde.Media.Animation.EasingPointKeyFrame","Fayde.Media.Animation.EasingPointKeyFrame.constructor","Fayde.Media.Animation.EasingPointKeyFrame.InterpolateValue","Fayde.Media.Animation.LinearPointKeyFrame","Fayde.Media.Animation.LinearPointKeyFrame.constructor","Fayde.Media.Animation.LinearPointKeyFrame.InterpolateValue","Fayde.Media.Animation.SplinePointKeyFrame","Fayde.Media.Animation.SplinePointKeyFrame.constructor","Fayde.Media.Animation.SplinePointKeyFrame.InterpolateValue","Fayde.Media.Animation.Storyboard","Fayde.Media.Animation.Storyboard.constructor","Fayde.Media.Animation.Storyboard.GetTargetName","Fayde.Media.Animation.Storyboard.SetTargetName","Fayde.Media.Animation.Storyboard.GetTargetProperty","Fayde.Media.Animation.Storyboard.SetTargetProperty","Fayde.Media.Animation.Storyboard.ResolveTarget","Fayde.Media.Animation.Storyboard.SetTarget","Fayde.Media.Animation.Storyboard.Begin","Fayde.Media.Animation.Storyboard.Pause","Fayde.Media.Animation.Storyboard.Resume","Fayde.Media.Animation.Storyboard.Stop","Fayde.Media.Animation.Storyboard.UpdateInternal","Fayde.Media.Animation.Storyboard.GetNaturalDurationCore","Fayde.Media.Effects","Fayde.Media.Effects.Effect","Fayde.Media.Effects.Effect.constructor","Fayde.Media.Effects.Effect.GetPadding","Fayde.Media.Effects.reactions","Fayde.Media.Effects.BlurEffect","Fayde.Media.Effects.BlurEffect.constructor","Fayde.Media.Effects.DropShadowEffect","Fayde.Media.Effects.DropShadowEffect.constructor","Fayde.Media.Effects.DropShadowEffect.GetPadding","Fayde.Media.Effects.DropShadowEffect.PreRender","Fayde.Media.Imaging","Fayde.Media.Imaging.ImageSource","Fayde.Media.Imaging.ImageSource.constructor","Fayde.Media.Imaging.ImageSource.pixelWidth","Fayde.Media.Imaging.ImageSource.pixelHeight","Fayde.Media.Imaging.ImageSource.image","Fayde.Media.Imaging.intGreaterThanZeroValidator","Fayde.Media.Imaging.BitmapSource","Fayde.Media.Imaging.BitmapSource.constructor","Fayde.Media.Imaging.BitmapSource.pixelWidth","Fayde.Media.Imaging.BitmapSource.pixelHeight","Fayde.Media.Imaging.BitmapSource.image","Fayde.Media.Imaging.BitmapSource.ResetImage","Fayde.Media.Imaging.BitmapSource.UriSourceChanged","Fayde.Media.Imaging.BitmapSource.Listen","Fayde.Media.Imaging.BitmapSource.Unlisten","Fayde.Media.Imaging.BitmapSource._OnErrored","Fayde.Media.Imaging.BitmapSource._OnLoad","Fayde.Media.Imaging.BitmapImage","Fayde.Media.Imaging.BitmapImage.constructor","Fayde.Media.Imaging.BitmapImage._UriSourceChanged","Fayde.Media.Imaging.BitmapImage._OnErrored","Fayde.Media.Imaging.BitmapImage._OnLoad","Fayde.Media.Imaging.BitmapImage.SetSource","Fayde.Media.Imaging.ImageBrush","Fayde.Media.Imaging.ImageBrush.constructor","Fayde.Media.Imaging.ImageBrush._SourceCoercer","Fayde.Media.Imaging.ImageBrush.setupBrush","Fayde.Media.Imaging.ImageBrush.GetTileExtents","Fayde.Media.Imaging.ImageBrush.DrawTile","Fayde.Media.Imaging.ImageBrush._ImageSourceChanged","Fayde.Media.Imaging.ImageBrush.OnImageErrored","Fayde.Media.Imaging.ImageBrush.OnImageLoaded","Fayde.Media.Imaging.ImageBrush.ImageChanged","Fayde.Media.Imaging.encodeImage","Fayde.Media.Imaging.getImageType","Fayde.Media.Imaging.convertToBase64","Fayde.Media.Imaging.isJpg","Fayde.Media.Imaging.isPng","Fayde.Media.LinearGradient","Fayde.Media.LinearGradient.createRepeatInterpolator","Fayde.Media.LinearGradient.createRepeatInterpolator.step","Fayde.Media.LinearGradient.createRepeatInterpolator.interpolate","Fayde.Media.LinearGradient.createReflectInterpolator","Fayde.Media.LinearGradient.createReflectInterpolator.step","Fayde.Media.LinearGradient.createReflectInterpolator.interpolate","Fayde.Media.LinearGradient.calcMetrics","Fayde.Media.LinearGradient.E","Fayde.Media.LinearGradient.W","Fayde.Media.LinearGradient.S","Fayde.Media.LinearGradient.N","Fayde.Media.LinearGradient.NW","Fayde.Media.LinearGradient.SW","Fayde.Media.LinearGradient.NE","Fayde.Media.LinearGradient.SE","Fayde.Media.RadialGradient","Fayde.Media.RadialGradient.createExtender","Fayde.Media.RadialGradient.createExtender.step","Fayde.Media.RadialGradient.createExtender.createGradient","Fayde.Media.RadialGradient.exceedBounds","Fayde.Media.RadialGradient.len","Fayde.Media.VSM.VisualState","Fayde.Media.VSM.VisualState.constructor","Fayde.Media.VSM.VisualStateCollection","Fayde.Media.VSM.VisualStateCollection.constructor","Fayde.Media.VSM.VisualStateChangedEventArgs","Fayde.Media.VSM.VisualStateChangedEventArgs.constructor","Fayde.Media.VSM.VisualStateGroup","Fayde.Media.VSM.VisualStateGroup.constructor","Fayde.Media.VSM.VisualStateGroup.CurrentStoryboards","Fayde.Media.VSM.VisualStateGroup.GetState","Fayde.Media.VSM.VisualStateGroup.StartNewThenStopOld","Fayde.Media.VSM.VisualStateGroup.StopCurrentStoryboards","Fayde.Media.VSM.VisualStateGroup.Deactivate","Fayde.Media.VSM.VisualStateGroup.Activate","Fayde.Media.VSM.VisualStateGroup.RaiseCurrentStateChanging","Fayde.Media.VSM.VisualStateGroup.RaiseCurrentStateChanged","Fayde.Media.VSM.VisualStateGroupCollection","Fayde.Media.VSM.VisualStateGroupCollection.constructor","Fayde.Media.VSM.genDynamicTransAnimations","Fayde.Media.VSM.ensureTarget","Fayde.Media.VSM.genToAnimation","Fayde.Media.VSM.flattenTimelines","Fayde.Media.VSM.flattenTimeline","Fayde.Media.VSM.removeTuple","Fayde.Media.VSM.VisualStateManager","Fayde.Media.VSM.VisualStateManager.constructor","Fayde.Media.VSM.VisualStateManager.GetVisualStateGroups","Fayde.Media.VSM.VisualStateManager.SetVisualStateGroups","Fayde.Media.VSM.VisualStateManager.GetCustomVisualStateManager","Fayde.Media.VSM.VisualStateManager.SetCustomVisualStateManager","Fayde.Media.VSM.VisualStateManager.GoToState","Fayde.Media.VSM.VisualStateManager.GoToStateCore","Fayde.Media.VSM.VisualStateManager.GoToStateInternal","transition","Storyboard","ExplicitStoryboardCompleted","group","StartNewThenStopOld","element","state","RaiseCurrentStateChanged","lastState","control","DynamicStoryboardCompleted","Completed","off","transitionCompleted","eventClosure","Fayde.Media.VSM.VisualStateManager.DestroyStoryboards","Fayde.Media.VSM.VisualStateManager.Deactivate","Fayde.Media.VSM.VisualStateManager.Activate","Fayde.Media.VSM.VisualStateManager._GetTemplateRoot","Fayde.Media.VSM.VisualStateManager.GetGroup","Fayde.Media.VSM.VisualStateManager._TryGetState","Fayde.Media.VSM.VisualStateManager._GetTransition","Fayde.Media.VSM.VisualTransition","Fayde.Media.VSM.VisualTransition.constructor","Fayde.Media.VSM.VisualTransition.GeneratedDuration","Fayde.Media.VSM.VisualTransition.IsDefault","Fayde.Text.History","Fayde.Text.History.DeleteAction","Fayde.Text.History.DeleteAction.constructor","Fayde.Text.History.DeleteAction.Undo","Fayde.Text.History.DeleteAction.Redo","Fayde.Text.History.InsertAction","Fayde.Text.History.InsertAction.constructor","Fayde.Text.History.InsertAction.Undo","Fayde.Text.History.InsertAction.Redo","Fayde.Text.History.InsertAction.Insert","Fayde.Text.History.ReplaceAction","Fayde.Text.History.ReplaceAction.constructor","Fayde.Text.History.ReplaceAction.Undo","Fayde.Text.History.ReplaceAction.Redo","Fayde.Text.History.Tracker","Fayde.Text.History.Tracker.constructor","Fayde.Text.History.Tracker.canUndo","Fayde.Text.History.Tracker.canRedo","Fayde.Text.History.Tracker.undo","Fayde.Text.History.Tracker.redo","Fayde.Text.History.Tracker.enter","Fayde.Text.History.Tracker.insert","Fayde.Text.History.Tracker.replace","Fayde.Text.History.Tracker.delete","Fayde.Text.History.Tracker.$doAction","Fayde.debugLayers","Fayde.sexify","Fayde.sexyflags","Fayde.sexyuiflags","Fayde.isPowerOf2","Fayde.debugLayersRaw","Fayde.stringify","Fayde.getById","Fayde.debugLayersFlatten"],"mappings":"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","file":"fayde.min.js","sourcesContent":["module Fayde {\r\n    export var version = '0.16.56';\r\n}",null,null,null,null,"module Fayde {\r\n    export var XMLNS = \"http://schemas.wsick.com/fayde\";\r\n    export var XMLNSX = \"http://schemas.wsick.com/fayde/x\";\r\n    export var XMLNSINTERNAL = \"http://schemas.wsick.com/fayde/internal\";\r\n\r\n    export var Enum = nullstone.Enum;\r\n    export interface Enum {\r\n        new(): nullstone.Enum;\r\n    }\r\n\r\n    export var Uri = nullstone.Uri;\r\n    export interface Uri extends nullstone.Uri {\r\n    }\r\n\r\n    export class ResourceTypeManager extends nullstone.TypeManager {\r\n        resolveResource (uri: Uri): string {\r\n            if (uri.scheme === \"lib\") {\r\n                var res = uri.resource;\r\n                var full = uri.toString();\r\n                var base = full.replace(res, \"\");\r\n                var lib = this.resolveLibrary(base);\r\n                if (!lib)\r\n                    throw new Error(`Could not find library when resolving resource [${full}].`);\r\n                return joinPaths(lib.basePath, res.length > 1 ? res.substr(1) : \"\");\r\n            }\r\n            return uri.toString();\r\n        }\r\n    }\r\n    export var TypeManager = new ResourceTypeManager(XMLNS, XMLNSX);\r\n\r\n    function joinPaths (base: string, rel: string): string {\r\n        if (base[base.length - 1] !== \"/\")\r\n            base += \"/\";\r\n        return base + (rel[0] === \"/\" ? rel.substr(1) : rel);\r\n    }\r\n\r\n    export var CoreLibrary = TypeManager.resolveLibrary(XMLNS);\r\n    (<any>CoreLibrary).$$module = Fayde;\r\n    export var XLibrary = TypeManager.resolveLibrary(XMLNSX);\r\n    (<any>XLibrary).$$module = Fayde;\r\n\r\n    export function RegisterType (type: Function, uri: string, name?: string) {\r\n        name = name || nullstone.getTypeName(type);\r\n        TypeManager.add(uri, name, type);\r\n    }\r\n\r\n    export function RegisterEnum (enu: any, uri: string, name: string) {\r\n        TypeManager.addEnum(uri, name, enu);\r\n    }\r\n\r\n    export var IType_ = new nullstone.Interface(\"IType\");\r\n    IType_.is = function (o): boolean {\r\n        return typeof o === \"function\";\r\n    };\r\n}","module Fayde.Collections {\r\n    export enum CollectionChangedAction {\r\n        Add = 1,\r\n        Remove = 2,\r\n        Replace = 3,\r\n        Reset = 4,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(CollectionChangedAction, \"NotifyCollectionChangedAction\");\r\n\r\n    export class CollectionChangedEventArgs implements nullstone.IEventArgs {\r\n        Action: CollectionChangedAction;\r\n        OldStartingIndex: number;\r\n        NewStartingIndex: number;\r\n        OldItems: any[];\r\n        NewItems: any[];\r\n\r\n        static Reset(allValues: any[]): CollectionChangedEventArgs {\r\n            var args = new CollectionChangedEventArgs();\r\n            Object.defineProperty(args, \"Action\", { value: CollectionChangedAction.Reset, writable: false });\r\n            Object.defineProperty(args, \"OldStartingIndex\", { value: 0, writable: false });\r\n            Object.defineProperty(args, \"NewStartingIndex\", { value: -1, writable: false });\r\n            Object.defineProperty(args, \"OldItems\", { value: allValues, writable: false });\r\n            Object.defineProperty(args, \"NewItems\", { value: null, writable: false });\r\n            return args;\r\n        }\r\n        static Replace(newValue: any, oldValue: any, index: number): CollectionChangedEventArgs {\r\n            var args = new CollectionChangedEventArgs();\r\n            Object.defineProperty(args, \"Action\", { value: CollectionChangedAction.Replace, writable: false });\r\n            Object.defineProperty(args, \"OldStartingIndex\", { value: -1, writable: false });\r\n            Object.defineProperty(args, \"NewStartingIndex\", { value: index, writable: false });\r\n            Object.defineProperty(args, \"OldItems\", { value: [oldValue], writable: false });\r\n            Object.defineProperty(args, \"NewItems\", { value: [newValue], writable: false });\r\n            return args;\r\n        }\r\n        static Add(newValue: any, index: number): CollectionChangedEventArgs {\r\n            var args = new CollectionChangedEventArgs();\r\n            Object.defineProperty(args, \"Action\", { value: CollectionChangedAction.Add, writable: false });\r\n            Object.defineProperty(args, \"OldStartingIndex\", { value: -1, writable: false });\r\n            Object.defineProperty(args, \"NewStartingIndex\", { value: index, writable: false });\r\n            Object.defineProperty(args, \"OldItems\", { value: null, writable: false });\r\n            Object.defineProperty(args, \"NewItems\", { value: [newValue], writable: false });\r\n            return args;\r\n        }\r\n        static AddRange(newValues: any[], index: number): CollectionChangedEventArgs {\r\n            var args = new CollectionChangedEventArgs();\r\n            Object.defineProperty(args, \"Action\", { value: CollectionChangedAction.Add, writable: false });\r\n            Object.defineProperty(args, \"OldStartingIndex\", { value: -1, writable: false });\r\n            Object.defineProperty(args, \"NewStartingIndex\", { value: index, writable: false });\r\n            Object.defineProperty(args, \"OldItems\", { value: null, writable: false });\r\n            Object.defineProperty(args, \"NewItems\", { value: newValues, writable: false });\r\n            return args;\r\n        }\r\n        static Remove(oldValue: any, index: number): CollectionChangedEventArgs {\r\n            var args = new CollectionChangedEventArgs();\r\n            Object.defineProperty(args, \"Action\", { value: CollectionChangedAction.Remove, writable: false });\r\n            Object.defineProperty(args, \"OldStartingIndex\", { value: index, writable: false });\r\n            Object.defineProperty(args, \"NewStartingIndex\", { value: -1, writable: false });\r\n            Object.defineProperty(args, \"OldItems\", { value: [oldValue], writable: false });\r\n            Object.defineProperty(args, \"NewItems\", { value: null, writable: false });\r\n            return args;\r\n        }\r\n    }\r\n}","module Fayde.Collections {\r\n    export interface INotifyCollectionChanged {\r\n        CollectionChanged: nullstone.Event<CollectionChangedEventArgs>;\r\n    }\r\n    export var INotifyCollectionChanged_ = new nullstone.Interface<INotifyCollectionChanged>(\"INotifyCollectionChanged\");\r\n    INotifyCollectionChanged_.is = (o: any): boolean => {\r\n        return o && o.CollectionChanged instanceof nullstone.Event;\r\n    };\r\n}","module Fayde {\r\n    export class PropertyChangedEventArgs implements nullstone.IEventArgs {\r\n        PropertyName: string;\r\n        constructor(propertyName: string) {\r\n            Object.defineProperty(this, \"PropertyName\", { value: propertyName, writable: false });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(PropertyChangedEventArgs);\r\n\r\n    export interface INotifyPropertyChanged {\r\n        PropertyChanged: nullstone.Event<PropertyChangedEventArgs>;\r\n    }\r\n    export var INotifyPropertyChanged_ = new nullstone.Interface<INotifyPropertyChanged>(\"INotifyPropertyChanged\");\r\n    INotifyPropertyChanged_.is = (o: any): boolean => {\r\n        return o && o.PropertyChanged instanceof nullstone.Event;\r\n    };\r\n}","/// <reference path=\"INotifyCollectionChanged.ts\" />\r\n/// <reference path=\"../Core/INotifyPropertyChanged.ts\" />\r\n\r\nmodule Fayde.Collections {\r\n    export class ObservableCollection<T> implements nullstone.IEnumerable<T>, nullstone.ICollection<T>, INotifyCollectionChanged, INotifyPropertyChanged {\r\n        private _ht: T[] = [];\r\n\r\n        getEnumerator (): nullstone.IEnumerator<T> {\r\n            return nullstone.IEnumerator_.fromArray(this._ht);\r\n        }\r\n\r\n        CollectionChanged = new nullstone.Event<CollectionChangedEventArgs>();\r\n        PropertyChanged = new nullstone.Event<PropertyChangedEventArgs>();\r\n\r\n        get Count (): number {\r\n            return this._ht.length;\r\n        }\r\n\r\n        ToArray (): T[] {\r\n            return this._ht.slice(0);\r\n        }\r\n\r\n        GetValueAt (index: number): T {\r\n            var ht = this._ht;\r\n            if (index < 0 || index >= ht.length)\r\n                throw new IndexOutOfRangeException(index);\r\n            return ht[index];\r\n        }\r\n\r\n        SetValueAt (index: number, value: T) {\r\n            var ht = this._ht;\r\n            if (index < 0 || index >= ht.length)\r\n                throw new IndexOutOfRangeException(index);\r\n            var oldValue = ht[index];\r\n            ht[index] = value;\r\n            this.CollectionChanged.raise(this, CollectionChangedEventArgs.Replace(value, oldValue, index));\r\n        }\r\n\r\n        Add (value: T) {\r\n            var index = this._ht.push(value) - 1;\r\n            this.CollectionChanged.raise(this, CollectionChangedEventArgs.Add(value, index));\r\n            this._RaisePropertyChanged(\"Count\");\r\n        }\r\n\r\n        AddRange (values: T[]) {\r\n            var index = this._ht.length;\r\n            var len = values.length;\r\n            for (var i = 0; i < len; i++) {\r\n                this._ht.push(values[i]);\r\n            }\r\n            this.CollectionChanged.raise(this, CollectionChangedEventArgs.AddRange(values, index));\r\n            this._RaisePropertyChanged(\"Count\");\r\n        }\r\n\r\n        Insert (index: number, value: T) {\r\n            var ht = this._ht;\r\n            if (index < 0 || index > ht.length)\r\n                throw new IndexOutOfRangeException(index);\r\n            if (index >= ht.length)\r\n                ht.push(value);\r\n            else\r\n                ht.splice(index, 0, value);\r\n            this.CollectionChanged.raise(this, CollectionChangedEventArgs.Add(value, index));\r\n            this._RaisePropertyChanged(\"Count\");\r\n        }\r\n\r\n        IndexOf (value: T): number {\r\n            return this._ht.indexOf(value);\r\n        }\r\n\r\n        Contains (value: T): boolean {\r\n            return this._ht.indexOf(value) > -1;\r\n        }\r\n\r\n        Remove (value: T): boolean {\r\n            var index = this._ht.indexOf(value);\r\n            if (index < 0)\r\n                return false;\r\n            this._ht.splice(index, 1);\r\n            this.CollectionChanged.raise(this, CollectionChangedEventArgs.Remove(value, index));\r\n            this._RaisePropertyChanged(\"Count\");\r\n            return true;\r\n        }\r\n\r\n        RemoveAt (index: number) {\r\n            if (index < 0 || index >= this._ht.length)\r\n                throw new IndexOutOfRangeException(index);\r\n            var item = this._ht.splice(index, 1)[0];\r\n            this.CollectionChanged.raise(this, CollectionChangedEventArgs.Remove(item, index));\r\n            this._RaisePropertyChanged(\"Count\");\r\n        }\r\n\r\n        Clear () {\r\n            var old = this._ht;\r\n            this._ht = [];\r\n            this.CollectionChanged.raise(this, CollectionChangedEventArgs.Reset(old));\r\n            this._RaisePropertyChanged(\"Count\");\r\n        }\r\n\r\n        private _RaisePropertyChanged (propertyName: string) {\r\n            this.PropertyChanged.raise(this, new PropertyChangedEventArgs(propertyName));\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ObservableCollection);\r\n    nullstone.ICollection_.mark(ObservableCollection);\r\n}","/// <reference path=\"ObservableCollection.ts\" />\r\n\r\nmodule Fayde.Collections {\r\n    export class DeepObservableCollection<T> extends ObservableCollection<T> {\r\n        ItemPropertyChanged = new nullstone.Event<ItemPropertyChangedEventArgs<T>>();\r\n        constructor() {\r\n            super();\r\n            this.CollectionChanged.on(this._OnCollectionChanged, this);\r\n        }\r\n\r\n        private _OnCollectionChanged(sender: any, e: CollectionChangedEventArgs) {\r\n            if (e.NewItems) {\r\n                for (var i = 0; i < e.NewItems.length; i++) {\r\n                    var notify = INotifyPropertyChanged_.as(e.NewItems[i]);\r\n                    if (notify)\r\n                        notify.PropertyChanged.on(this._OnItemPropertyChanged, this);\r\n                }\r\n            }\r\n            if (e.OldItems) {\r\n                for (var i = 0; i < e.OldItems.length; i++) {\r\n                    var notify = INotifyPropertyChanged_.as(e.OldItems[i]);\r\n                    if (notify)\r\n                        notify.PropertyChanged.off(this._OnItemPropertyChanged, this);\r\n                }\r\n            }\r\n        }\r\n        private _OnItemPropertyChanged(sender: T, e: PropertyChangedEventArgs) {\r\n            this.ItemPropertyChanged.raise(this, new ItemPropertyChangedEventArgs<T>(sender, e.PropertyName));\r\n        }\r\n    }\r\n} ","module Fayde.Collections {\r\n    export interface IFilterItemFunc<T> {\r\n        (item: T): boolean;\r\n    }\r\n    export interface IFilterItemIndexFunc<T> {\r\n        (item: T, index: number): boolean;\r\n    }\r\n\r\n    export class FilteredCollection<T> extends DeepObservableCollection<T> {\r\n        private _Source: DeepObservableCollection<T>;\r\n        get Source () { return this._Source; }\r\n        set Source (value: DeepObservableCollection<T>) { this._SetSource(value); }\r\n\r\n        private _Filter: IFilterItemIndexFunc<T>;\r\n        get Filter () {\r\n            return this._Filter;\r\n        }\r\n\r\n        set Filter (value: IFilterItemIndexFunc<T>) {\r\n            this._Filter = value;\r\n            this.Update();\r\n        }\r\n\r\n        constructor (filter?: IFilterItemFunc<T>, source?: DeepObservableCollection<T>);\r\n        constructor (filter?: IFilterItemIndexFunc<T>, source?: DeepObservableCollection<T>);\r\n        constructor (filter?: IFilterItemIndexFunc<T>, source?: DeepObservableCollection<T>) {\r\n            super();\r\n            this.Filter = filter;\r\n            this._SetSource(source || new DeepObservableCollection<T>());\r\n        }\r\n\r\n        private _SetSource (source: DeepObservableCollection<T>) {\r\n            if (this._Source) {\r\n                this._Source.CollectionChanged.off(this._OnSourceCollectionChanged, this);\r\n                this._Source.ItemPropertyChanged.off(this._OnSourceItemPropertyChanged, this);\r\n            }\r\n            this._Source = source;\r\n            if (source) {\r\n                source.CollectionChanged.on(this._OnSourceCollectionChanged, this);\r\n                source.ItemPropertyChanged.on(this._OnSourceItemPropertyChanged, this);\r\n            }\r\n            this.Update();\r\n        }\r\n\r\n        private _OnSourceCollectionChanged (sender: any, e: CollectionChangedEventArgs) {\r\n            this.Update();\r\n        }\r\n\r\n        private _OnSourceItemPropertyChanged (sender: any, e: ItemPropertyChangedEventArgs<T>) {\r\n            this.Update();\r\n            var index = this.Source.IndexOf(e.Item);\r\n            if (this.Filter && this.Filter(e.Item, index))\r\n                this.ItemPropertyChanged.raise(this, e);\r\n        }\r\n\r\n        Update () {\r\n            if (!this._Source)\r\n                return;\r\n            var filter = this.Filter || ((item: T) => true);\r\n            for (var i = 0, j = 0, enumerator = this._Source.getEnumerator(); enumerator.moveNext(); i++) {\r\n                var isIncluded = filter(enumerator.current, i);\r\n                var isCurrent = j < this.Count && this.GetValueAt(j) === enumerator.current;\r\n                if (isIncluded && !isCurrent)\r\n                    this.Insert(j, enumerator.current);\r\n                else if (!isIncluded && isCurrent)\r\n                    this.RemoveAt(j);\r\n                if (isIncluded)\r\n                    j++;\r\n            }\r\n        }\r\n    }\r\n}","/// <reference path=\"../Core/INotifyPropertyChanged.ts\" />\r\n\r\nmodule Fayde.Collections {\r\n    export class ItemPropertyChangedEventArgs<T> extends PropertyChangedEventArgs {\r\n        Item: T;\r\n        constructor(item: T, propertyName: string) {\r\n            super(propertyName);\r\n            Object.defineProperty(this, \"Item\", { value: item, writable: false });\r\n        }\r\n    }\r\n}","module Fayde.Collections {\r\n    export class ReadOnlyObservableCollection<T> implements nullstone.ICollection<T>, INotifyCollectionChanged, INotifyPropertyChanged {\r\n        get Count (): number {\r\n            return this._Source.Count;\r\n        }\r\n\r\n        private _Source: ObservableCollection<T>;\r\n\r\n        CollectionChanged = new nullstone.Event<CollectionChangedEventArgs>();\r\n        PropertyChanged = new nullstone.Event<PropertyChangedEventArgs>();\r\n\r\n        constructor (source: ObservableCollection<T>) {\r\n            this._Source = source;\r\n            this._Source.CollectionChanged.on(this._OnCollectionChanged, this);\r\n            this._Source.PropertyChanged.on(this._OnPropertyChanged, this);\r\n        }\r\n\r\n        GetValueAt (index: number) {\r\n            return this._Source.GetValueAt(index);\r\n        }\r\n\r\n        getEnumerator (): nullstone.IEnumerator<T> {\r\n            return this._Source.getEnumerator();\r\n        }\r\n\r\n        ToArray (): T[] {\r\n            return this._Source.ToArray();\r\n        }\r\n\r\n        IndexOf (value: T): number {\r\n            return this._Source.IndexOf(value);\r\n        }\r\n\r\n        Contains (value: T): boolean {\r\n            return this._Source.Contains(value);\r\n        }\r\n\r\n        private _OnCollectionChanged (sender: any, args: CollectionChangedEventArgs) {\r\n            this.CollectionChanged.raise(this, args);\r\n        }\r\n\r\n        private _OnPropertyChanged (sender: any, args: PropertyChangedEventArgs) {\r\n            this.PropertyChanged.raise(this, args);\r\n        }\r\n\r\n        SetValueAt (index: number, value: T) {\r\n            throw new Error(\"Collection is read only.\");\r\n        }\r\n\r\n        Insert (index: number, value: T) {\r\n            throw new Error(\"Collection is read only.\");\r\n        }\r\n\r\n        Add (value: T) {\r\n            throw new Error(\"Collection is read only.\");\r\n        }\r\n\r\n        Remove (value: T): boolean {\r\n            throw new Error(\"Collection is read only.\");\r\n        }\r\n\r\n        RemoveAt (index: number) {\r\n            throw new Error(\"Collection is read only.\");\r\n        }\r\n\r\n        Clear () {\r\n            throw new Error(\"Collection is read only.\");\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ObservableCollection);\r\n    nullstone.addTypeInterfaces(ReadOnlyObservableCollection, nullstone.ICollection_, INotifyCollectionChanged_, INotifyPropertyChanged_);\r\n}","module Fayde {\r\n    export interface IIsAttachedMonitor {\r\n        Callback: (newIsAttached: boolean) => void;\r\n        Detach();\r\n    }\r\n\r\n    export class XamlNode {\r\n        XObject: XamlObject;\r\n        ParentNode: XamlNode = null;\r\n        Name: string = \"\";\r\n        NameScope: NameScope = null;\r\n        DocNameScope: NameScope = null;\r\n        private IsShareable: boolean = false;\r\n        private _OwnerNameScope: NameScope = null;\r\n        private _LogicalChildren: XamlNode[] = [];\r\n\r\n        private _IAMonitors: IIsAttachedMonitor[] = null;\r\n\r\n        constructor(xobj: XamlObject) {\r\n            this.XObject = xobj;\r\n        }\r\n\r\n        private _DataContext: any = undefined;\r\n        get DataContext(): any { return this._DataContext; }\r\n        set DataContext(value: any) {\r\n            var old = this._DataContext;\r\n            if (old === value)\r\n                return;\r\n            this._DataContext = value;\r\n            this.OnDataContextChanged(old, value);\r\n        }\r\n        OnDataContextChanged(oldDataContext: any, newDataContext: any) {\r\n            var childNodes = this._LogicalChildren;\r\n            var len = childNodes.length;\r\n            var childNode: XamlNode = null;\r\n            for (var i = 0; i < len; i++) {\r\n                childNode = childNodes[i];\r\n                childNode.DataContext = newDataContext;\r\n            }\r\n        }\r\n\r\n        private _IsEnabled: boolean = true;\r\n        get IsEnabled(): boolean { return this._IsEnabled; }\r\n        set IsEnabled(value: boolean) {\r\n            value = value !== false;\r\n            var old = this._IsEnabled;\r\n            if (old === value)\r\n                return;\r\n            this._IsEnabled = value;\r\n            this.OnIsEnabledChanged(old, value);\r\n        }\r\n        OnIsEnabledChanged(oldValue: boolean, newValue: boolean) {\r\n            var childNodes = this._LogicalChildren;\r\n            var len = childNodes.length;\r\n            var childNode: XamlNode = null;\r\n            for (var i = 0; i < len; i++) {\r\n                childNode = childNodes[i];\r\n                childNode.IsEnabled = newValue;\r\n            }\r\n        }\r\n\r\n        FindName(name: string, doc?: boolean): XamlNode {\r\n            var scope = this.FindNameScope();\r\n            var node: XamlNode;\r\n            if (scope)\r\n                node = scope.FindName(name);\r\n            var docscope: NameScope;;\r\n            if (!node && doc && (docscope = this.DocNameScope))\r\n                node = docscope.FindName(name);\r\n            return node;\r\n        }\r\n        SetName(name: string) {\r\n            this.Name = name;\r\n            var ns = this.FindNameScope();\r\n            if (ns)\r\n                ns.RegisterName(name, this);\r\n        }\r\n        FindNameScope(): NameScope {\r\n            if (this._OwnerNameScope)\r\n                return this._OwnerNameScope;\r\n\r\n            var curNode = this;\r\n            var ns;\r\n            while (curNode) {\r\n                ns = curNode.NameScope;\r\n                if (ns) {\r\n                    this._OwnerNameScope = ns;\r\n                    return ns;\r\n                }\r\n                curNode = curNode.ParentNode;\r\n            }\r\n            return undefined;\r\n        }\r\n\r\n        IsAttached: boolean = false;\r\n        SetIsAttached(value: boolean) {\r\n            if (this.IsAttached === value)\r\n                return;\r\n            this.IsAttached = value;\r\n            this.OnIsAttachedChanged(value);\r\n        }\r\n        OnIsAttachedChanged(newIsAttached: boolean) {\r\n            var xobj = this.XObject;\r\n            if (newIsAttached && this.ParentNode && !xobj.App) {\r\n                xobj.App = this.ParentNode.XObject.App;\r\n            }\r\n\r\n            var childNodes = this._LogicalChildren;\r\n            var len = childNodes.length;\r\n            var childNode: XamlNode = null;\r\n            for (var i = 0; i < len; i++) {\r\n                childNode = childNodes[i];\r\n                childNode.SetIsAttached(newIsAttached);\r\n            }\r\n\r\n            for (var i = 0, monitors = (this._IAMonitors || []).slice(0), len = monitors.length; i < len; i++) {\r\n                monitors[i].Callback(newIsAttached);\r\n            }\r\n\r\n            if (!newIsAttached)\r\n                this._OwnerNameScope = undefined;\r\n        }\r\n        MonitorIsAttached(func: (newIsAttached: boolean) => void ): IIsAttachedMonitor {\r\n            var monitors = this._IAMonitors;\r\n            if (!monitors) this._IAMonitors = monitors = [];\r\n            var monitor: IIsAttachedMonitor = {\r\n                Callback: func,\r\n                Detach: null\r\n            };\r\n            monitor.Detach = function () {\r\n                var index = monitors.indexOf(monitor);\r\n                if (index > -1) monitors.splice(index, 1);\r\n            };\r\n            this._IAMonitors.push(monitor);\r\n            return monitor;\r\n        }\r\n\r\n        AttachTo(parentNode: XamlNode, error: BError): boolean {\r\n            if (this.ParentNode && this.IsShareable)\r\n                return true;\r\n            var data = {\r\n                ParentNode: parentNode,\r\n                ChildNode: this,\r\n                Name: \"\"\r\n            };\r\n            var curNode = parentNode;\r\n            while (curNode) {\r\n                if (curNode === this) {\r\n                    error.Message = \"Cycle found.\";\r\n                    error.Data = data;\r\n                    error.Number = BError.Attach;\r\n                    return false;\r\n                }\r\n                curNode = curNode.ParentNode;\r\n            }\r\n\r\n            if (this.ParentNode) {\r\n                if (this.ParentNode === parentNode)\r\n                    return true;\r\n                error.Message = \"Element is already a child of another element.\";\r\n                error.Data = data;\r\n                error.Number = BError.Attach;\r\n                return false;\r\n            }\r\n\r\n            var parentScope = parentNode.FindNameScope();\r\n            var thisScope = this.NameScope;\r\n            if (thisScope) {\r\n                if (!thisScope.IsRoot) {\r\n                    parentScope.Absorb(thisScope);\r\n                    this.NameScope = null;\r\n                    this._OwnerNameScope = parentScope;\r\n                }\r\n            } else if (parentScope) {\r\n                var name = this.Name;\r\n                if (name) {\r\n                    var existing = parentScope.FindName(name);\r\n                    if (existing && existing !== this) {\r\n                        error.Message = \"Name is already registered in parent namescope.\";\r\n                        data.Name = name;\r\n                        error.Data = data;\r\n                        error.Number = BError.Attach;\r\n                        return false;\r\n                    }\r\n                    parentScope.RegisterName(name, this);\r\n                }\r\n                this._OwnerNameScope = parentScope;\r\n            }\r\n\r\n            var old = this.ParentNode;\r\n            this.ParentNode = parentNode;\r\n            this.OnParentChanged(old, parentNode);\r\n            \r\n            parentNode._LogicalChildren.push(this);\r\n            this.SetIsAttached(parentNode.IsAttached);\r\n\r\n            return true;\r\n        }\r\n        Detach() {\r\n            var name = this.Name;\r\n            if (name && !this.NameScope) {\r\n                var ns = this.FindNameScope();\r\n                if (ns) ns.UnregisterName(this.Name);\r\n            }\r\n            this._OwnerNameScope = null;\r\n            this.SetIsAttached(false);\r\n            var old = this.ParentNode;\r\n            this.ParentNode = null;\r\n            if (old) {\r\n                var index = old._LogicalChildren.indexOf(this);\r\n                if (index > -1) old._LogicalChildren.splice(index, 1);\r\n                this.OnParentChanged(old, null);\r\n            }\r\n        }\r\n        OnParentChanged(oldParentNode: XamlNode, newParentNode: XamlNode) { }\r\n\r\n        GetInheritedEnumerator(): nullstone.IEnumerator<DONode> { return undefined; }\r\n\r\n        static SetShareable(xn: XamlNode) {\r\n            xn.IsShareable = true;\r\n        }\r\n    }\r\n}","module Fayde {\r\n    export class XamlObject implements Providers.IIsPropertyInheritable {\r\n        private static _LastID: number = 0;\r\n        private _ID: number;\r\n        XamlNode: Fayde.XamlNode;\r\n        TemplateOwner: DependencyObject = null;\r\n        App: Application = null;\r\n\r\n        constructor() {\r\n            this._ID = XamlObject._LastID++;\r\n            this.XamlNode = this.CreateNode();\r\n        }\r\n        CreateNode(): XamlNode {\r\n            return new XamlNode(this);\r\n        }\r\n        get Name() { return this.XamlNode.Name; }\r\n        get Parent(): XamlObject {\r\n            var pn = this.XamlNode.ParentNode;\r\n            if (!pn) return;\r\n            return pn.XObject;\r\n        }\r\n\r\n        FindName(name: string, doc?: boolean): XamlObject {\r\n            var n = this.XamlNode.FindName(name, doc);\r\n            return n ? n.XObject : undefined;\r\n        }\r\n\r\n        Clone(): XamlObject {\r\n            var xobj: XamlObject = new (<any>this).constructor();\r\n            xobj.CloneCore(this);\r\n            return xobj;\r\n        }\r\n        CloneCore(source: XamlObject) { }\r\n\r\n        IsInheritable(propd: DependencyProperty): boolean { return false; }\r\n    }\r\n    Fayde.CoreLibrary.add(XamlObject);\r\n}","interface IOutIsValid {\r\n    IsValid: boolean;\r\n}\r\n\r\ninterface IType {\r\n}\r\n\r\nclass DependencyProperty {\r\n    static UnsetValue = {};\r\n\r\n    private static _IDs: DependencyProperty[] = [];\r\n    private static _LastID: number = 0;\r\n\r\n    _ID: number;\r\n    Name: string;\r\n    GetTargetType: () => IType;\r\n    OwnerType: any;\r\n    DefaultValue: any;\r\n    IsReadOnly: boolean = false;\r\n    IsCustom: boolean = true;\r\n    IsAttached: boolean = false;\r\n    IsInheritable: boolean = false;\r\n    IsImmutable: boolean = false;\r\n    ChangedCallback: (dobj: Fayde.DependencyObject, args: DependencyPropertyChangedEventArgs) => void;\r\n    AlwaysChange: boolean = false;\r\n    Store: Fayde.Providers.PropertyStore;\r\n    private _Coercer: (dobj: Fayde.DependencyObject, propd: DependencyProperty, value: any) => any = null;\r\n    private _Validator: (dobj: Fayde.DependencyObject, propd: DependencyProperty, value: any, original: any) => boolean = null;\r\n\r\n    static Register (name: string, getTargetType: () => IType, ownerType: any, defaultValue?: any, changedCallback?: (dobj: Fayde.DependencyObject, args: DependencyPropertyChangedEventArgs) => void) {\r\n        var propd = new DependencyProperty();\r\n        propd.Name = name;\r\n        propd.GetTargetType = getTargetType;\r\n        propd.OwnerType = ownerType;\r\n        propd.DefaultValue = defaultValue;\r\n        propd.ChangedCallback = changedCallback;\r\n        propd.Store = Fayde.Providers.PropertyStore.Instance;\r\n        propd.FinishRegister();\r\n        return propd;\r\n    }\r\n\r\n    static RegisterReadOnly (name: string, getTargetType: () => IType, ownerType: any, defaultValue?: any, changedCallback?: (dobj: Fayde.DependencyObject, args: DependencyPropertyChangedEventArgs) => void) {\r\n        var propd = new DependencyProperty();\r\n        propd.Name = name;\r\n        propd.GetTargetType = getTargetType;\r\n        propd.OwnerType = ownerType;\r\n        propd.DefaultValue = defaultValue;\r\n        propd.ChangedCallback = changedCallback;\r\n        propd.IsReadOnly = true;\r\n        propd.Store = Fayde.Providers.PropertyStore.Instance;\r\n        propd.FinishRegister();\r\n        return propd;\r\n    }\r\n\r\n    static RegisterAttached (name: string, getTargetType: () => IType, ownerType: any, defaultValue?: any, changedCallback?: (dobj: Fayde.DependencyObject, args: DependencyPropertyChangedEventArgs) => void) {\r\n        var propd = new DependencyProperty();\r\n        propd.Name = name;\r\n        propd.GetTargetType = getTargetType;\r\n        propd.OwnerType = ownerType;\r\n        propd.DefaultValue = defaultValue;\r\n        propd.ChangedCallback = changedCallback;\r\n        propd.IsAttached = true;\r\n        propd.Store = Fayde.Providers.PropertyStore.Instance;\r\n        propd.FinishRegister();\r\n        return propd;\r\n    }\r\n\r\n    static RegisterCore (name: string, getTargetType: () => IType, ownerType: any, defaultValue?: any, changedCallback?: (dobj: Fayde.DependencyObject, args: DependencyPropertyChangedEventArgs) => void) {\r\n        var propd = new DependencyProperty();\r\n        propd.Name = name;\r\n        propd.GetTargetType = getTargetType;\r\n        propd.OwnerType = ownerType;\r\n        propd.DefaultValue = defaultValue;\r\n        propd.ChangedCallback = changedCallback;\r\n        propd.IsCustom = false;\r\n        propd.Store = Fayde.Providers.PropertyStore.Instance;\r\n        propd.FinishRegister();\r\n        return propd;\r\n    }\r\n\r\n    static RegisterReadOnlyCore (name: string, getTargetType: () => IType, ownerType: any, defaultValue?: any, changedCallback?: (dobj: Fayde.DependencyObject, args: DependencyPropertyChangedEventArgs) => void) {\r\n        var propd = new DependencyProperty();\r\n        propd.Name = name;\r\n        propd.GetTargetType = getTargetType;\r\n        propd.OwnerType = ownerType;\r\n        propd.DefaultValue = defaultValue;\r\n        propd.ChangedCallback = changedCallback;\r\n        propd.IsCustom = false;\r\n        propd.IsReadOnly = true;\r\n        propd.Store = Fayde.Providers.PropertyStore.Instance;\r\n        propd.FinishRegister();\r\n        return propd;\r\n    }\r\n\r\n    static RegisterAttachedCore (name: string, getTargetType: () => IType, ownerType: any, defaultValue?: any, changedCallback?: (dobj: Fayde.DependencyObject, args: DependencyPropertyChangedEventArgs) => void) {\r\n        var propd = new DependencyProperty();\r\n        propd.Name = name;\r\n        propd.GetTargetType = getTargetType;\r\n        propd.OwnerType = ownerType;\r\n        propd.DefaultValue = defaultValue;\r\n        propd.ChangedCallback = changedCallback;\r\n        propd.IsCustom = false;\r\n        propd.IsAttached = true;\r\n        propd.Store = Fayde.Providers.PropertyStore.Instance;\r\n        propd.FinishRegister();\r\n        return propd;\r\n    }\r\n\r\n    static RegisterImmutable<T>(name: string, getTargetType: () => IType, ownerType: any): ImmutableDependencyProperty<T> {\r\n        var propd = new ImmutableDependencyProperty<T>();\r\n        propd.Name = name;\r\n        propd.GetTargetType = getTargetType;\r\n        propd.OwnerType = ownerType;\r\n        propd.DefaultValue = undefined;\r\n        propd.IsImmutable = true;\r\n        propd.Store = Fayde.Providers.ImmutableStore.Instance;\r\n        propd.FinishRegister();\r\n        return propd;\r\n    }\r\n\r\n    static RegisterInheritable (name: string, getTargetType: () => IType, ownerType: any, defaultValue?: any, changedCallback?: (dobj: Fayde.DependencyObject, args: DependencyPropertyChangedEventArgs) => void) {\r\n        var propd = new DependencyProperty();\r\n        propd.Name = name;\r\n        propd.GetTargetType = getTargetType;\r\n        propd.OwnerType = ownerType;\r\n        propd.DefaultValue = defaultValue;\r\n        propd.ChangedCallback = changedCallback;\r\n        propd.IsCustom = true;\r\n        propd.IsInheritable = true;\r\n        propd.Store = Fayde.Providers.InheritedStore.Instance;\r\n        propd.FinishRegister();\r\n        return propd;\r\n    }\r\n\r\n    static RegisterFull (name: string, getTargetType: () => IType, ownerType: any, defaultValue?: any, changedCallback?: (dobj: Fayde.DependencyObject, args: DependencyPropertyChangedEventArgs) => void, coercer?: (dobj: Fayde.DependencyObject, propd: DependencyProperty, value: any) => any, alwaysChange?: boolean, validator?: (dobj: Fayde.DependencyObject, propd: DependencyProperty, value: any) => boolean, isCustom?: boolean, isReadOnly?: boolean, isAttached?: boolean): DependencyProperty {\r\n        var propd = new DependencyProperty();\r\n        propd.Name = name;\r\n        propd.GetTargetType = getTargetType;\r\n        propd.OwnerType = ownerType;\r\n        propd.DefaultValue = defaultValue;\r\n        propd.ChangedCallback = changedCallback;\r\n        propd._Coercer = coercer;\r\n        propd.AlwaysChange = alwaysChange;\r\n        propd._Validator = validator;\r\n        propd.IsCustom = isCustom !== false;\r\n        propd.IsReadOnly = isReadOnly === true;\r\n        propd.IsAttached = isAttached === true;\r\n        propd.Store = Fayde.Providers.PropertyStore.Instance;\r\n        propd.FinishRegister();\r\n        return propd;\r\n    }\r\n\r\n    private FinishRegister () {\r\n        var name = this.Name;\r\n        var ownerType = this.OwnerType;\r\n        if (!ownerType || typeof ownerType !== \"function\")\r\n            throw new InvalidOperationException(\"DependencyProperty does not have a valid OwnerType.\");\r\n        var registeredDPs = (<any>ownerType)._RegisteredDPs;\r\n        if (!registeredDPs) {\r\n            var registeredDPs: any = {};\r\n            Object.defineProperty(ownerType, \"_RegisteredDPs\", {\r\n                value: registeredDPs,\r\n                enumerable: false,\r\n                writable: false\r\n            });\r\n        }\r\n        if (registeredDPs[name] !== undefined)\r\n            throw new InvalidOperationException(\"Dependency Property is already registered. [\" + name + \"]\");\r\n        registeredDPs[name] = this;\r\n        this._ID = DependencyProperty._LastID = DependencyProperty._LastID + 1;\r\n        DependencyProperty._IDs[this._ID] = this;\r\n\r\n        if (this.IsImmutable)\r\n            return;\r\n\r\n        var propd = this;\r\n        var getter = function () {\r\n            return (<Fayde.DependencyObject>this).GetValue(propd);\r\n        };\r\n        var setter = function (value) {\r\n            (<Fayde.DependencyObject>this).SetValue(propd, value);\r\n        };\r\n        if (this.IsReadOnly)\r\n            setter = function (value) {\r\n                throw new Exception(\"Property [\" + propd.Name + \"] is readonly.\");\r\n            };\r\n        Object.defineProperty(ownerType.prototype, this.Name, {\r\n            get: getter,\r\n            set: setter,\r\n            configurable: true\r\n        });\r\n    }\r\n\r\n    ExtendTo (type: any): DependencyProperty {\r\n        var registeredDPs = type._RegisteredDPs;\r\n        if (!registeredDPs) {\r\n            var registeredDPs: any = {};\r\n            Object.defineProperty(type, \"_RegisteredDPs\", {\r\n                value: registeredDPs,\r\n                enumerable: false,\r\n                writable: false\r\n            });\r\n        }\r\n        registeredDPs[this.Name] = this;\r\n\r\n        var propd = this;\r\n        var getter = function () {\r\n            return (<Fayde.DependencyObject>this).GetValue(propd);\r\n        };\r\n        var setter = function (value) {\r\n            (<Fayde.DependencyObject>this).SetValue(propd, value);\r\n        };\r\n        Object.defineProperty(type.prototype, this.Name, {\r\n            get: getter,\r\n            set: setter,\r\n            configurable: true\r\n        });\r\n        return this;\r\n    }\r\n\r\n    ValidateSetValue (dobj: Fayde.DependencyObject, value: any, isValidOut: IOutIsValid) {\r\n        var coerced = value;\r\n        if (this._Coercer)\r\n            coerced = this._Coercer(dobj, this, coerced);\r\n        /* TODO: Handle Type Problems\r\n         if (!this._IsValueValid(dobj, coerced))\r\n         return coerced;\r\n         */\r\n        isValidOut.IsValid = true;\r\n        if (this._Validator)\r\n            isValidOut.IsValid = !!this._Validator(dobj, this, coerced, value);\r\n        return coerced;\r\n    }\r\n\r\n    static GetDependencyProperty (ownerType: any, name: string, noError?: boolean): DependencyProperty {\r\n        if (!ownerType)\r\n            return undefined;\r\n        var reg: DependencyProperty[] = (<any>ownerType)._RegisteredDPs;\r\n        var propd: DependencyProperty;\r\n        if (reg)\r\n            propd = reg[name];\r\n        if (!propd)\r\n            propd = DependencyProperty.GetDependencyProperty(nullstone.getTypeParent(ownerType), name, true);\r\n        if (!propd && !noError)\r\n            throw new Exception(\"Cannot locate dependency property [\" + (<any>ownerType).name + \"].[\" + name + \"]\");\r\n        return propd;\r\n    }\r\n}\r\nFayde.CoreLibrary.add(DependencyProperty);\r\n\r\nclass ImmutableDependencyProperty<T> extends DependencyProperty {\r\n    IsImmutable: boolean = true;\r\n\r\n    Initialize (dobj: Fayde.DependencyObject): T {\r\n        var storage = Fayde.Providers.GetStorage(dobj, this);\r\n        storage.Precedence = Fayde.Providers.PropertyPrecedence.LocalValue;\r\n        var type = <any>this.GetTargetType();\r\n        var obj: T = new type();\r\n        Object.defineProperty(dobj, this.Name, {\r\n            value: obj,\r\n            writable: false\r\n        });\r\n        return storage.Local = obj;\r\n    }\r\n}","\r\nmodule Fayde.Providers {\r\n    export enum PropertyPrecedence {\r\n        IsEnabled = 0,\r\n        LocalValue = 1,\r\n        LocalStyle = 2,\r\n        ImplicitStyle = 3,\r\n        Inherited = 4,\r\n        InheritedDataContext = 5,\r\n        DefaultValue = 6,\r\n\r\n        Lowest = 6,\r\n        Highest = 0,\r\n        Count = 7,\r\n    }\r\n    \r\n    export interface IPropertyChangedListener {\r\n        Property: DependencyProperty;\r\n        OnPropertyChanged(sender: DependencyObject, args: IDependencyPropertyChangedEventArgs);\r\n        Detach();\r\n    }\r\n\r\n    export interface IPropertyStorage {\r\n        OwnerNode: DONode;\r\n        Property: DependencyProperty;\r\n        Precedence: PropertyPrecedence;\r\n        Animations: Media.Animation.IAnimationStorage[];\r\n        Local: any;\r\n        LocalStyleValue: any;\r\n        ImplicitStyleValue: any;\r\n        PropListeners: IPropertyChangedListener[];\r\n    }\r\n\r\n    export interface IPropertyStorageOwner {\r\n        _PropertyStorage: IPropertyStorage[];\r\n    }\r\n\r\n    export function GetStorage(dobj: DependencyObject, propd: DependencyProperty): IPropertyStorage {\r\n        var arr = (<IPropertyStorageOwner>dobj)._PropertyStorage;\r\n        var storage = arr[propd._ID];\r\n        if (!storage) arr[propd._ID] = storage = propd.Store.CreateStorage(dobj, propd);\r\n        return storage;\r\n    }\r\n\r\n    export class PropertyStore {\r\n        static Instance: PropertyStore;\r\n        GetValue(storage: IPropertyStorage): any {\r\n            var val: any;\r\n            if ((val = storage.Local) !== undefined)\r\n                return val;\r\n            if ((val = storage.LocalStyleValue) !== undefined)\r\n                return val;\r\n            if ((val = storage.ImplicitStyleValue) !== undefined)\r\n                return val;\r\n            return storage.Property.DefaultValue;\r\n        }\r\n        GetValuePrecedence(storage: IPropertyStorage): PropertyPrecedence {\r\n            if (storage.Local !== undefined)\r\n                return PropertyPrecedence.LocalValue;\r\n            if (storage.LocalStyleValue !== undefined)\r\n                return PropertyPrecedence.LocalStyle;\r\n            if (storage.ImplicitStyleValue !== undefined)\r\n                return PropertyPrecedence.ImplicitStyle;\r\n            return PropertyPrecedence.DefaultValue;\r\n        }\r\n\r\n        SetLocalValue(storage: Providers.IPropertyStorage, newValue: any) {\r\n            if (newValue === undefined || newValue === DependencyProperty.UnsetValue) {\r\n                this.ClearValue(storage);\r\n                return;\r\n            }\r\n\r\n            var propd = storage.Property;\r\n            if (newValue && propd.GetTargetType() === String) {\r\n                if (typeof newValue !== \"string\")\r\n                    newValue = newValue.toString();\r\n                //TODO: More type checks\r\n            }\r\n\r\n            var isValidOut = { IsValid: false };\r\n            newValue = propd.ValidateSetValue(storage.OwnerNode.XObject, newValue, isValidOut);\r\n            if (!isValidOut.IsValid)\r\n                return;\r\n\r\n                \r\n            var precDiff = storage.Precedence - PropertyPrecedence.LocalValue;\r\n            if (!propd.AlwaysChange && precDiff < 0) {\r\n                storage.Local = newValue;\r\n                return;\r\n            }\r\n\r\n            var oldValue = undefined;\r\n            if (precDiff > 0)\r\n                oldValue = this.GetValue(storage);\r\n            else\r\n                oldValue = storage.Local;\r\n            storage.Local = newValue;\r\n            this.OnPropertyChanged(storage, PropertyPrecedence.LocalValue, oldValue, newValue);\r\n        }\r\n        SetLocalStyleValue(storage: IPropertyStorage, newValue: any) {\r\n            var precDiff = storage.Precedence - PropertyPrecedence.LocalStyle;\r\n            if (precDiff < 0) {\r\n                storage.LocalStyleValue = newValue;\r\n                return;\r\n            }\r\n\r\n            var oldValue = undefined;\r\n            if (precDiff > 0)\r\n                oldValue = this.GetValue(storage);\r\n            else\r\n                oldValue = storage.LocalStyleValue;\r\n            storage.LocalStyleValue = newValue;\r\n            this.OnPropertyChanged(storage, PropertyPrecedence.LocalStyle, oldValue, newValue);\r\n        }\r\n        SetImplicitStyle(storage: IPropertyStorage, newValue: any) {\r\n            var precDiff = storage.Precedence - PropertyPrecedence.ImplicitStyle;\r\n            if (precDiff < 0) {\r\n                storage.ImplicitStyleValue = newValue;\r\n                return;\r\n            }\r\n\r\n            var oldValue = undefined;\r\n            if (precDiff > 0)\r\n                oldValue = this.GetValue(storage);\r\n            else\r\n                oldValue = storage.ImplicitStyleValue;\r\n            storage.ImplicitStyleValue = newValue;\r\n            this.OnPropertyChanged(storage, PropertyPrecedence.ImplicitStyle, oldValue, newValue);\r\n        }\r\n\r\n        ClearValue(storage: Providers.IPropertyStorage) {\r\n            var oldLocal = storage.Local;\r\n            if (oldLocal === undefined)\r\n                return;\r\n            storage.Local = undefined;\r\n            this.OnPropertyChanged(storage, PropertyPrecedence.LocalValue, oldLocal, undefined);\r\n        }\r\n\r\n        OnPropertyChanged(storage: IPropertyStorage, effectivePrecedence: PropertyPrecedence, oldValue: any, newValue: any): IDependencyPropertyChangedEventArgs {\r\n            var propd = storage.Property;\r\n            if (newValue === undefined) {\r\n                effectivePrecedence = this.GetValuePrecedence(storage);\r\n                newValue = this.GetValue(storage);\r\n            }\r\n            \r\n            storage.Precedence = effectivePrecedence;\r\n            if (!propd.AlwaysChange && oldValue === newValue)\r\n                return undefined;\r\n\r\n            if (!storage.Property.IsCustom) {\r\n                if (oldValue instanceof XamlObject)\r\n                    (<XamlObject>oldValue).XamlNode.Detach();\r\n                if (newValue instanceof XamlObject) {\r\n                    var error = new BError();\r\n                    if (!(<XamlObject>newValue).XamlNode.AttachTo(storage.OwnerNode, error))\r\n                        error.ThrowException();\r\n                }\r\n            }\r\n\r\n            var args = {\r\n                Property: propd,\r\n                OldValue: oldValue,\r\n                NewValue: newValue\r\n            };\r\n            var sender = storage.OwnerNode.XObject;\r\n            if (propd.ChangedCallback)\r\n                propd.ChangedCallback(sender, args);\r\n            var listeners = storage.PropListeners;\r\n            if (listeners) {\r\n                var len = listeners.length;\r\n                for (var i = 0; i < len; i++) {\r\n                    listeners[i].OnPropertyChanged(sender, args);\r\n                }\r\n            }\r\n            return args;\r\n        }\r\n        ListenToChanged(target: DependencyObject, propd: DependencyProperty, func: (sender, args: IDependencyPropertyChangedEventArgs) => void , closure: any): Providers.IPropertyChangedListener {\r\n            var storage = GetStorage(target, propd);\r\n            var listeners = storage.PropListeners;\r\n            if (!listeners) listeners = storage.PropListeners = [];\r\n\r\n            var listener = {\r\n                Detach: function () {\r\n                    var index = listeners.indexOf(listener);\r\n                    if (index > -1)\r\n                        listeners.splice(index, 1);\r\n                },\r\n                Property: propd,\r\n                OnPropertyChanged: function (sender: DependencyObject, args: IDependencyPropertyChangedEventArgs) { func.call(closure, sender, args); }\r\n            };\r\n            listeners.push(listener);\r\n            return listener;\r\n        }\r\n\r\n        CreateStorage(dobj: DependencyObject, propd: DependencyProperty): IPropertyStorage {\r\n            return {\r\n                OwnerNode: dobj.XamlNode,\r\n                Property: propd,\r\n                Precedence: PropertyPrecedence.DefaultValue,\r\n                Animations: undefined,\r\n                Local: undefined,\r\n                LocalStyleValue: undefined,\r\n                ImplicitStyleValue: undefined,\r\n                PropListeners: undefined,\r\n            };\r\n        }\r\n        Clone(dobj: DependencyObject, sourceStorage: IPropertyStorage): IPropertyStorage {\r\n            var newStorage = this.CreateStorage(dobj, sourceStorage.Property);\r\n            newStorage.Precedence = sourceStorage.Precedence;\r\n            //newStorage.ImplicitStyleValue = undefined;\r\n            //newStorage.LocalStyleValue = undefined;\r\n            newStorage.Local = Fayde.Clone(sourceStorage.Local);\r\n            var anims = newStorage.Animations = sourceStorage.Animations;\r\n            if (anims) {\r\n                for (var i = 0; i < anims.length; i++) {\r\n                    anims[i].PropStorage = newStorage;\r\n                }\r\n            }\r\n            //TODO: Copy over property listeners?\r\n            return newStorage;\r\n        }\r\n    }\r\n    PropertyStore.Instance = new PropertyStore();\r\n}","/// <reference path=\"PropertyStore.ts\" />\r\n\r\nmodule Fayde.Providers {\r\n    export interface IDataContextStorage extends IPropertyStorage {\r\n        InheritedValue: any;\r\n    }\r\n\r\n    export class DataContextStore extends PropertyStore {\r\n        static Instance: DataContextStore;\r\n        GetValue(storage: IDataContextStorage): any {\r\n            var val = super.GetValue(storage);\r\n            if (val === undefined)\r\n                val = storage.InheritedValue;\r\n            return val;\r\n        }\r\n        GetValuePrecedence(storage: IDataContextStorage): PropertyPrecedence {\r\n            var prec = super.GetValuePrecedence(storage);\r\n            if (prec < PropertyPrecedence.InheritedDataContext)\r\n                return prec;\r\n            if (storage.InheritedValue !== undefined)\r\n                return PropertyPrecedence.InheritedDataContext;\r\n            return PropertyPrecedence.DefaultValue;\r\n        }\r\n        OnInheritedChanged(storage: IDataContextStorage, newInherited?: any) {\r\n            var oldInherited = storage.InheritedValue;\r\n            storage.InheritedValue = newInherited;\r\n            if (storage.Precedence >= PropertyPrecedence.InheritedDataContext && oldInherited !== newInherited)\r\n                this.OnPropertyChanged(storage, PropertyPrecedence.InheritedDataContext, oldInherited, newInherited);\r\n        }\r\n\r\n        CreateStorage(dobj: DependencyObject, propd: DependencyProperty): IDataContextStorage {\r\n            return {\r\n                OwnerNode: dobj.XamlNode,\r\n                Property: propd,\r\n                Precedence: PropertyPrecedence.DefaultValue,\r\n                Animations: undefined,\r\n                Local: undefined,\r\n                LocalStyleValue: undefined,\r\n                ImplicitStyleValue: undefined,\r\n                InheritedValue: undefined,\r\n                PropListeners: undefined,\r\n            };\r\n        }\r\n\r\n        OnPropertyChanged(storage: IDataContextStorage, effectivePrecedence: PropertyPrecedence, oldValue: any, newValue: any): IDependencyPropertyChangedEventArgs {\r\n            var args = super.OnPropertyChanged(storage, effectivePrecedence, oldValue, newValue);\r\n            if (args) {\r\n                if (effectivePrecedence > PropertyPrecedence.LocalValue && this.TryUpdateDataContextExpression(storage, args.NewValue))\r\n                    return;\r\n                storage.OwnerNode.OnDataContextChanged(args.OldValue, args.NewValue);\r\n            }\r\n            return args;\r\n        }\r\n\r\n        private TryUpdateDataContextExpression(storage: IDataContextStorage, newDataContext: any): boolean {\r\n            var val = storage.InheritedValue;\r\n            var exprs = <Expression[]>(<any>storage.OwnerNode.XObject)._Expressions;\r\n            var dcexpr = exprs[storage.Property._ID];\r\n            if (!dcexpr)\r\n                return false;\r\n            dcexpr.OnDataContextChanged(newDataContext);\r\n            return true;\r\n        }\r\n    }\r\n    DataContextStore.Instance = new DataContextStore();\r\n}","module Fayde {\r\n    export interface IDPReactionCallback<T> {\r\n        (dobj: DependencyObject, ov: T, nv: T): void;\r\n    }\r\n\r\n    export function DPReaction<TValue>(propd: DependencyProperty, callback?: IDPReactionCallback<TValue>, listen?: boolean) {\r\n        if (listen === false) {\r\n            propd.ChangedCallback = reaction<TValue>(callback);\r\n        } else {\r\n            propd.ChangedCallback = lReaction<TValue>(callback);\r\n        }\r\n    }\r\n\r\n    function reaction<T>(callback: IDPReactionCallback<T>) {\r\n        return (dobj: DependencyObject, args: DependencyPropertyChangedEventArgs) => {\r\n            callback && callback(dobj, args.OldValue, args.NewValue);\r\n        };\r\n    }\r\n\r\n    function lReaction<T>(callback: IDPReactionCallback<T>) {\r\n        return (dobj: DependencyObject, args: DependencyPropertyChangedEventArgs) => {\r\n            var ov = args.OldValue;\r\n            var nv = args.NewValue;\r\n            UnreactTo(ov, dobj);\r\n            callback && callback(dobj, ov, nv);\r\n            ReactTo(nv, dobj, () => callback(dobj, nv, nv));\r\n        };\r\n    }\r\n}","module Fayde {\r\n    interface IReactable {\r\n        $$reaction_sources: any[];\r\n        $$reactions: IReaction[];\r\n    }\r\n    interface IReaction {\r\n        (val?: any);\r\n    }\r\n\r\n    export function Incite (obj: any, val?: any) {\r\n        if (!obj)\r\n            return;\r\n        var reactions = (<IReactable>obj).$$reactions;\r\n        if (!reactions)\r\n            return;\r\n        var rs = (<IReactable>obj).$$reaction_sources;\r\n        for (var i = 0; i < reactions.length; i++) {\r\n            reactions[i].call(rs[i], val);\r\n        }\r\n    }\r\n\r\n    export function ReactTo (obj: any, scope: any, changed: (val?: any) => any) {\r\n        if (!obj)\r\n            return;\r\n        var rs = obj.$$reaction_sources;\r\n        if (!rs) {\r\n            rs = [];\r\n            Object.defineProperty(obj, \"$$reaction_sources\", {value: rs, enumerable: false});\r\n        }\r\n        rs.push(scope);\r\n        var reactions = obj.$$reactions;\r\n        if (!reactions) {\r\n            reactions = [];\r\n            Object.defineProperty(obj, \"$$reactions\", {value: reactions, enumerable: false});\r\n        }\r\n        reactions.push(changed);\r\n    }\r\n\r\n    export function UnreactTo (obj: any, scope: any) {\r\n        if (!obj)\r\n            return;\r\n        var reactions = obj.$$reactions;\r\n        if (!reactions)\r\n            return;\r\n        var rs = obj.$$reaction_sources;\r\n        var index = rs.indexOf(scope);\r\n        if (index < 0)\r\n            return;\r\n        rs.splice(index, 1);\r\n        reactions.splice(index, 1);\r\n    }\r\n}","/// <reference path=\"XamlNode.ts\" />\r\n/// <reference path=\"XamlObject.ts\" />\r\n/// <reference path=\"DependencyProperty.ts\" />\r\n/// <reference path=\"Providers/PropertyStore.ts\" />\r\n/// <reference path=\"Providers/DataContextStore.ts\" />\r\n/// <reference path=\"DPReaction.ts\" />\r\n/// <reference path=\"../Runtime/React.ts\" />\r\n\r\nmodule Fayde {\r\n    export class DONode extends XamlNode {\r\n        XObject: DependencyObject;\r\n        constructor(xobj: DependencyObject) {\r\n            super(xobj);\r\n        }\r\n\r\n        OnParentChanged(oldParentNode: XamlNode, newParentNode: XamlNode) {\r\n            super.OnParentChanged(oldParentNode, newParentNode);\r\n            var propd = DependencyObject.DataContextProperty;\r\n            var storage = <Providers.IDataContextStorage>Providers.GetStorage(this.XObject, propd);\r\n            var newInherited = newParentNode ? newParentNode.DataContext : undefined;\r\n            (<Providers.DataContextStore>propd.Store).OnInheritedChanged(storage, newInherited);\r\n        }\r\n\r\n        get DataContext(): any { return this.XObject.DataContext; }\r\n        set DataContext(value: any) {\r\n            var propd = DependencyObject.DataContextProperty;\r\n            var storage = <Providers.IDataContextStorage>Providers.GetStorage(this.XObject, propd);\r\n            (<Providers.DataContextStore>propd.Store).OnInheritedChanged(storage, value);\r\n        }\r\n        OnDataContextChanged(oldDataContext: any, newDataContext: any) {\r\n            var dcpid = DependencyObject.DataContextProperty._ID.toString();\r\n            var exprs = <Expression[]>(<any>this.XObject)._Expressions;\r\n            var expr: Expression;\r\n            for (var id in exprs) {\r\n                expr = exprs[id];\r\n                if (!(expr instanceof Expression))\r\n                    continue;\r\n                //DataContextProperty expressions are updated in DataContextStore\r\n                if (id === dcpid)\r\n                    continue;\r\n                expr.OnDataContextChanged(newDataContext);\r\n            }\r\n            super.OnDataContextChanged(oldDataContext, newDataContext);\r\n        }\r\n    }\r\n\r\n    export class DependencyObject extends XamlObject implements ICloneable, Providers.IPropertyStorageOwner {\r\n        private _Expressions: Expression[] = [];\r\n        _PropertyStorage: Providers.IPropertyStorage[] = [];\r\n\r\n        static DataContextProperty = DependencyProperty.Register(\"DataContext\", () => Object, DependencyObject);\r\n        DataContext: any;\r\n\r\n        constructor() {\r\n            super();\r\n        }\r\n        XamlNode: DONode;\r\n        CreateNode(): DONode { return new DONode(this); }\r\n\r\n        GetValue(propd: DependencyProperty): any {\r\n            if (!propd)\r\n                throw new ArgumentException(\"No property specified.\");\r\n            var storage = Providers.GetStorage(this, propd);\r\n            return propd.Store.GetValue(storage);\r\n        }\r\n        SetValue(propd: DependencyProperty, value: any) {\r\n            if (!propd)\r\n                throw new ArgumentException(\"No property specified.\");\r\n            if (propd.IsReadOnly)\r\n                throw new InvalidOperationException(\"DependencyProperty '\" + (<any>propd.OwnerType).name + \".\" + propd.Name + \"' is read only.\");\r\n            this.SetValueInternal(propd, value);\r\n        }\r\n        SetValueInternal(propd: DependencyProperty, value: any) {\r\n            var expression: Expression;\r\n            if (value instanceof Expression) {\r\n                expression = value;\r\n                expression.Seal(this, propd);\r\n            }\r\n\r\n            var existing = this._Expressions[propd._ID];\r\n\r\n            var updateTwoWay = false;\r\n            var addingExpression = false;\r\n            if (expression) {\r\n                if (expression !== existing) {\r\n                    if (expression.IsAttached)\r\n                        throw new ArgumentException(\"Cannot attach the same Expression to multiple FrameworkElements\");\r\n\r\n                    if (existing)\r\n                        this._RemoveExpression(propd);\r\n                    this._AddExpression(propd, expression);\r\n                }\r\n                addingExpression = true;\r\n                value = expression.GetValue(propd);\r\n            } else if (existing) {\r\n                if (existing instanceof Data.BindingExpressionBase) {\r\n                    var binding = (<Data.BindingExpressionBase>existing).ParentBinding;\r\n                    if (binding.Mode === Data.BindingMode.TwoWay) {\r\n                        updateTwoWay = !existing.IsUpdating && !propd.IsCustom;\r\n                    } else if (!existing.IsUpdating || binding.Mode === Data.BindingMode.OneTime) {\r\n                        this._RemoveExpression(propd);\r\n                    }\r\n                } else if (!existing.IsUpdating) {\r\n                    this._RemoveExpression(propd);\r\n                }\r\n            }\r\n\r\n            var storage = Providers.GetStorage(this, propd);\r\n            try {\r\n                propd.Store.SetLocalValue(storage, value);\r\n                if (updateTwoWay)\r\n                    (<Data.BindingExpressionBase>existing)._TryUpdateSourceObject(value);\r\n            } catch (err) {\r\n                if (!addingExpression)\r\n                    throw err;\r\n                var msg = \"Error setting value: \" + err.toString();\r\n                msg += err.stack;\r\n                console.warn(msg);\r\n                propd.Store.SetLocalValue(storage, propd.DefaultValue);\r\n                if (updateTwoWay)\r\n                    (<Data.BindingExpressionBase>existing)._TryUpdateSourceObject(value);\r\n            }\r\n        }\r\n        SetCurrentValue(propd: DependencyProperty, value: any) {\r\n            var storage = Providers.GetStorage(this, propd);\r\n            propd.Store.SetLocalValue(storage, value);\r\n\r\n            var expr = <Data.BindingExpressionBase>this._Expressions[propd._ID];\r\n            if (expr instanceof Data.BindingExpressionBase)\r\n                expr._TryUpdateSourceObject(value);\r\n        }\r\n        ClearValue(propd: DependencyProperty) {\r\n            if (!propd)\r\n                throw new ArgumentException(\"No dependency property.\");\r\n            if (propd.IsReadOnly && !propd.IsCustom)\r\n                throw new ArgumentException(\"This property is readonly.\");\r\n            this._RemoveExpression(propd);\r\n\r\n            var storage = Providers.GetStorage(this, propd);\r\n            var anims = storage.Animations;\r\n            if (anims && anims.length > 0)\r\n                return;\r\n            propd.Store.ClearValue(storage);\r\n        }\r\n        ReadLocalValue(propd: DependencyProperty): any {\r\n            if (!propd)\r\n                throw new ArgumentException(\"No property specified.\");\r\n            var expr = this._Expressions[propd._ID];\r\n            var val: any;\r\n            if (expr)\r\n                val = expr.GetValue(propd);\r\n            else\r\n                val = this.ReadLocalValueInternal(propd);\r\n            if (val === undefined)\r\n                return DependencyProperty.UnsetValue;\r\n            return val;\r\n        }\r\n        ReadLocalValueInternal(propd: DependencyProperty): any {\r\n            var storage = Providers.GetStorage(this, propd);\r\n            return storage.Local;\r\n        }\r\n\r\n        private _AddExpression(propd: DependencyProperty, expr: Expression) {\r\n            this._Expressions[propd._ID] = expr;\r\n            expr.OnAttached(this);\r\n        }\r\n        private _RemoveExpression(propd: DependencyProperty) {\r\n            var expr = this._Expressions[propd._ID];\r\n            if (expr) {\r\n                this._Expressions[propd._ID] = undefined;\r\n                expr.OnDetached(this);\r\n            }\r\n        }\r\n        _HasDeferredValueExpression(propd: DependencyProperty) {\r\n            var expr = this._Expressions[propd._ID];\r\n            return expr instanceof DeferredValueExpression;\r\n        }\r\n        GetBindingExpression(propd: DependencyProperty): Data.BindingExpressionBase {\r\n            var expr = this._Expressions[propd._ID];\r\n            if (expr instanceof Data.BindingExpressionBase)\r\n                return <Data.BindingExpressionBase>expr;\r\n        }\r\n        HasValueOrExpression(propd: DependencyProperty): boolean {\r\n            if (this._Expressions[propd._ID] instanceof Expression)\r\n                return true;\r\n            return this.ReadLocalValueInternal(propd) !== undefined;\r\n        }\r\n        SetBinding(propd: DependencyProperty, binding: Data.Binding): Data.BindingExpressionBase {\r\n            if (!propd)\r\n                throw new ArgumentException(\"propd\");\r\n            if (!binding)\r\n                throw new ArgumentException(\"binding\");\r\n\r\n            var e = new Data.BindingExpression(binding);\r\n            this.SetValueInternal(propd, e);\r\n            return e;\r\n        }\r\n\r\n        CloneCore(source: DependencyObject) {\r\n            var sarr = source._PropertyStorage;\r\n            var darr = this._PropertyStorage;\r\n            if (!darr)\r\n                darr = this._PropertyStorage = [];\r\n            for (var id in sarr) {\r\n                var storage: Providers.IPropertyStorage = sarr[id];\r\n                darr[id] = storage.Property.Store.Clone(this, storage);\r\n            }\r\n        }\r\n\r\n        ListenToChanged (propd: DependencyProperty, func: (sender, args: IDependencyPropertyChangedEventArgs) => void, closure?: any): Providers.IPropertyChangedListener {\r\n            return propd.Store.ListenToChanged(this, propd, func, closure);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(DependencyObject);\r\n\r\n    DependencyObject.DataContextProperty.Store = Fayde.Providers.DataContextStore.Instance;\r\n}","module Fayde {\r\n    export interface IUIReactionCallback<T> {\r\n        (updater: minerva.core.Updater, ov: T, nv: T, uie?: UIElement): void;\r\n    }\r\n\r\n    export function UIReaction<TValue>(propd: DependencyProperty, callback?: IUIReactionCallback<TValue>, listen?: boolean, sync?: (src: TValue, dest: TValue) => void, instance?: any);\r\n\r\n    export function UIReaction<TValue>(propd: DependencyProperty, callback?: IUIReactionCallback<TValue>, listen?: boolean, sync?: boolean, instance?: any);\r\n\r\n    export function UIReaction<TValue>(propd: DependencyProperty, callback?: IUIReactionCallback<TValue>, listen?: boolean, sync?: any, instance?: any) {\r\n        var changed: Function;\r\n        if (sync === false) {\r\n            changed = (listen === false) ? reaction<TValue>(callback) : lReaction<TValue>(callback);\r\n        } else {\r\n            var name = propd.Name;\r\n            name = name.charAt(0).toLowerCase() + name.substr(1);\r\n            if (typeof sync !== \"function\")\r\n                changed = (listen === false) ? sReaction<TValue>(callback, name) : slReaction<TValue>(callback, name);\r\n            else\r\n                changed = (listen === false) ? sReaction<TValue>(callback, name, sync) : slReaction<TValue>(callback, name, sync);\r\n        }\r\n        if (instance)\r\n            propd.Store.ListenToChanged(instance, propd, <any>changed, instance);\r\n        else\r\n            propd.ChangedCallback = <any>changed;\r\n    }\r\n\r\n    function reaction<T>(callback: IUIReactionCallback<T>) {\r\n        return (uie: UIElement, args: DependencyPropertyChangedEventArgs) => {\r\n            callback && callback(uie.XamlNode.LayoutUpdater, args.OldValue, args.NewValue, uie);\r\n        };\r\n    }\r\n\r\n    function sReaction<T>(callback: IUIReactionCallback<T>, name: string, syncer?: (src: T, dest: T) => void) {\r\n        return (uie: UIElement, args: DependencyPropertyChangedEventArgs) => {\r\n            var ov = args.OldValue;\r\n            var nv = args.NewValue;\r\n            var upd = uie.XamlNode.LayoutUpdater;\r\n            if (!syncer)\r\n                upd.assets[name] = nv;\r\n            else\r\n                syncer(nv, upd.assets[name]);\r\n            callback && callback(upd, ov, nv, uie);\r\n        };\r\n    }\r\n\r\n    function lReaction<T>(callback: IUIReactionCallback<T>) {\r\n        return (uie: UIElement, args: DependencyPropertyChangedEventArgs) => {\r\n            var ov = args.OldValue;\r\n            var nv = args.NewValue;\r\n            var upd = uie.XamlNode.LayoutUpdater;\r\n            UnreactTo(ov, uie);\r\n            callback && callback(upd, ov, nv, uie);\r\n            ReactTo(nv, uie, () => callback(upd, nv, nv, uie));\r\n        };\r\n    }\r\n\r\n    function slReaction<T>(callback: IUIReactionCallback<T>, name: string, syncer?: (src: T, dest: T) => void) {\r\n        return (uie: UIElement, args: DependencyPropertyChangedEventArgs) => {\r\n            var ov = args.OldValue;\r\n            var nv = args.NewValue;\r\n            var upd = uie.XamlNode.LayoutUpdater;\r\n            UnreactTo(ov, uie);\r\n            if (!syncer)\r\n                upd.assets[name] = nv;\r\n            else\r\n                syncer(nv, upd.assets[name]);\r\n            callback && callback(upd, ov, nv, uie);\r\n            ReactTo(nv, uie, () => callback && callback(upd, nv, nv, uie));\r\n        };\r\n    }\r\n}","module Fayde {\r\n    export function UIReactionAttached<TValue>(propd: DependencyProperty, callback?: IUIReactionCallback<TValue>) {\r\n        propd.ChangedCallback = reaction<TValue>(nullstone.getTypeName(propd.OwnerType) + '.' + propd.Name, callback);\r\n    }\r\n\r\n    function reaction<T>(name: string, callback?: IUIReactionCallback<T>) {\r\n        return (uie: UIElement, args: DependencyPropertyChangedEventArgs) => {\r\n            var ov = args.OldValue;\r\n            var nv = args.NewValue;\r\n            var upd = uie.XamlNode.LayoutUpdater;\r\n            upd.setAttachedValue(name, nv);\r\n            callback && callback(upd, ov, nv, uie);\r\n        };\r\n    }\r\n}","/// <reference path=\"PropertyStore.ts\" />\r\n\r\nmodule Fayde.Providers {\r\n    export interface IInheritedStorage extends IPropertyStorage {\r\n        InheritedValue: any;\r\n    }\r\n\r\n    export interface IIsPropertyInheritable {\r\n        IsInheritable(propd: DependencyProperty): boolean;\r\n    }\r\n\r\n    export class InheritedStore extends PropertyStore {\r\n        static Instance: InheritedStore;\r\n        GetValue(storage: IInheritedStorage): any {\r\n            var val: any;\r\n            if ((val = storage.Local) !== undefined)\r\n                return val;\r\n            if ((val = storage.LocalStyleValue) !== undefined)\r\n                return val;\r\n            if ((val = storage.ImplicitStyleValue) !== undefined)\r\n                return val;\r\n            if ((val = storage.InheritedValue) !== undefined)\r\n                return val;\r\n            return storage.Property.DefaultValue;\r\n        }\r\n        GetValuePrecedence(storage: IInheritedStorage): PropertyPrecedence {\r\n            var prec = super.GetValuePrecedence(storage);\r\n            if (prec < PropertyPrecedence.Inherited)\r\n                return prec;\r\n            if (storage.InheritedValue !== undefined)\r\n                return PropertyPrecedence.Inherited;\r\n            return PropertyPrecedence.DefaultValue;\r\n        }\r\n\r\n        OnPropertyChanged(storage: IPropertyStorage, effectivePrecedence: PropertyPrecedence, oldValue: any, newValue: any): IDependencyPropertyChangedEventArgs {\r\n            var args = super.OnPropertyChanged(storage, effectivePrecedence, oldValue, newValue);\r\n            if (effectivePrecedence <= PropertyPrecedence.Inherited)\r\n                this.Propagate(storage.OwnerNode, storage.Property, newValue);\r\n            return args;\r\n        }\r\n\r\n        CreateStorage(dobj: DependencyObject, propd: DependencyProperty): IInheritedStorage {\r\n            return {\r\n                OwnerNode: dobj.XamlNode,\r\n                Property: propd,\r\n                Precedence: PropertyPrecedence.DefaultValue,\r\n                Animations: undefined,\r\n                Local: undefined,\r\n                LocalStyleValue: undefined,\r\n                ImplicitStyleValue: undefined,\r\n                InheritedValue: undefined,\r\n                PropListeners: undefined,\r\n            };\r\n        }\r\n\r\n        static PropagateInheritedOnAdd(dobj: DependencyObject, subtreeNode: DONode) {\r\n            var destination = subtreeNode.XObject;\r\n            var store: InheritedStore = InheritedStore.Instance;\r\n            var arr = (<IPropertyStorageOwner>destination)._PropertyStorage;\r\n            var storage: IPropertyStorage;\r\n\r\n            var allProps = InheritableOwner.AllInheritedProperties;\r\n            var len = allProps.length;\r\n            var propd: DependencyProperty;\r\n            var newValue: any;\r\n            var sourceNode: XamlNode;\r\n            for (var i = 0; i < len; i++) {\r\n                propd = allProps[i];\r\n                sourceNode = dobj.XamlNode;\r\n                while (sourceNode && !((<IIsPropertyInheritable>sourceNode.XObject).IsInheritable(propd))) {\r\n                    sourceNode = sourceNode.ParentNode;\r\n                }\r\n                if (!sourceNode)\r\n                    continue;\r\n                newValue = (<DependencyObject>sourceNode.XObject).GetValue(propd);\r\n                if (newValue === propd.DefaultValue)\r\n                    continue;\r\n\r\n                storage = arr[propd._ID];\r\n                if (!storage) storage = arr[propd._ID] = store.CreateStorage(destination, propd);\r\n                if (!store.SetInheritedValue(subtreeNode, propd, newValue))\r\n                    store.Propagate(subtreeNode, propd, newValue);\r\n            }\r\n        }\r\n        static ClearInheritedOnRemove(dobj: DependencyObject, subtreeNode: DONode) {\r\n            var store: InheritedStore = InheritedStore.Instance;\r\n            var allProps = InheritableOwner.AllInheritedProperties;\r\n            var len = allProps.length;\r\n            var propd: DependencyProperty;\r\n            for (var i = 0; i < len; i++) {\r\n                propd = allProps[i];\r\n                if (!store.SetInheritedValue(subtreeNode, propd, undefined))\r\n                    store.Propagate(subtreeNode, propd, undefined);\r\n            }\r\n        }\r\n        private Propagate(ownerNode: XamlNode, propd: DependencyProperty, newValue: any) {\r\n            var enumerator = ownerNode.GetInheritedEnumerator();\r\n            var uin: UINode;\r\n            while (enumerator.moveNext()) {\r\n                uin = <UINode>enumerator.current;\r\n                if (!this.SetInheritedValue(uin, propd, newValue))\r\n                    this.Propagate(uin, propd, newValue);\r\n            }\r\n        }\r\n        private SetInheritedValue(don: DONode, propd: DependencyProperty, newValue: any): boolean {\r\n            /// Returns false if object doesn't understand this inheritable property\r\n            var dobj = don.XObject;\r\n            if (!(<IIsPropertyInheritable>dobj).IsInheritable(propd))\r\n                return false;\r\n            var storage = <IInheritedStorage>GetStorage(dobj, propd);\r\n            if (storage.Precedence < PropertyPrecedence.Inherited) {\r\n                //Overriden locally, don't propagate\r\n                storage.InheritedValue = newValue;\r\n                return true;\r\n            }\r\n            var oldValue = storage.InheritedValue;\r\n            if (oldValue === undefined) oldValue = propd.DefaultValue;\r\n            storage.InheritedValue = newValue;\r\n            storage.Precedence = PropertyPrecedence.Inherited;\r\n            this.OnPropertyChanged(storage, PropertyPrecedence.Inherited, oldValue, newValue);\r\n            return true;\r\n        }\r\n    }\r\n    InheritedStore.Instance = new InheritedStore();\r\n}","module Fayde {\r\n    export enum Orientation {\r\n        Horizontal = 0,\r\n        Vertical = 1,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(Orientation, \"Orientation\");\r\n\r\n    export enum Visibility {\r\n        Visible = 0,\r\n        Collapsed = 1,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(Visibility, \"Visibility\");\r\n    nullstone.registerEnumConverter(Visibility, function (val: any): any {\r\n        if (val === \"true\" || val === true || val === Visibility.Visible || val === \"Visible\")\r\n            return Visibility.Visible;\r\n        return Visibility.Collapsed;\r\n    });\r\n\r\n    export enum CursorType {\r\n        Default,\r\n        Hand,\r\n        IBeam,\r\n        Wait,\r\n        SizeNESW,\r\n        SizeNWSE,\r\n        SizeNS,\r\n        SizeWE\r\n        //TODO: Add cursor types\r\n    }\r\n    Fayde.CoreLibrary.addEnum(CursorType, \"CursorType\");\r\n    export var CursorTypeMappings = {\r\n        Default: \"\",\r\n        Hand: \"pointer\",\r\n        IBeam: \"text\",\r\n        Wait: \"wait\",\r\n        SizeNESW: \"ne-resize\",\r\n        SizeNWSE: \"nw-resize\",\r\n        SizeNS: \"n-resize\",\r\n        SizeWE: \"w-resize\"\r\n        //TODO: Add cursor types\r\n    }\r\n\r\n    export enum HorizontalAlignment {\r\n        Left = 0,\r\n        Center = 1,\r\n        Right = 2,\r\n        Stretch = 3,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(HorizontalAlignment, \"HorizontalAlignment\");\r\n\r\n    export enum VerticalAlignment {\r\n        Top = 0,\r\n        Center = 1,\r\n        Bottom = 2,\r\n        Stretch = 3,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(VerticalAlignment, \"VerticalAlignment\");\r\n\r\n    export enum FlowDirection {\r\n        LeftToRight = 0,\r\n        RightToLeft = 1,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(FlowDirection, \"FlowDirection\");\r\n\r\n    export enum FontWeight {\r\n        Thin = 100,\r\n        ExtraLight = 200,\r\n        Light = 300,\r\n        Normal = 400,\r\n        Medium = 500,\r\n        SemiBold = 600,\r\n        Bold = 700,\r\n        ExtraBold = 800,\r\n        Black = 900,\r\n        ExtraBlack = 950,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(FontWeight, \"FontWeight\");\r\n\r\n    export enum TextAlignment {\r\n        Left = 0,\r\n        Center = 1,\r\n        Right = 2,\r\n        Justify = 3,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(TextAlignment, \"TextAlignment\");\r\n\r\n    //FLAGS\r\n    export enum TextDecorations {\r\n        None = 0,\r\n        Underline = 1,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(TextDecorations, \"TextDecorations\");\r\n\r\n    export enum LineStackingStrategy {\r\n        MaxHeight = 0,\r\n        BlockLineHeight = 1,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(LineStackingStrategy, \"LineStackingStrategy\");\r\n}","module Fayde {\r\n    export var FontStyle = minerva.FontStyle;\r\n    export var FontStretch = minerva.FontStretch;\r\n    Fayde.CoreLibrary.addEnum(FontStretch, \"FontStretch\");\r\n    export var Font = minerva.Font;\r\n    Fayde.CoreLibrary.add(minerva.Font);\r\n}","/// <reference path=\"UIReaction.ts\" />\r\n/// <reference path=\"Providers/InheritedStore.ts\" />\r\n/// <reference path=\"../Primitives/Font.ts\" />\r\n\r\nmodule Fayde {\r\n    export class InheritableOwner {\r\n        static UseLayoutRoundingProperty = DependencyProperty.RegisterInheritable(\"UseLayoutRounding\", () => Boolean, InheritableOwner, true);\r\n        static FlowDirectionProperty = DependencyProperty.RegisterInheritable(\"FlowDirection\", () => new Enum(minerva.FlowDirection), InheritableOwner, minerva.FlowDirection.LeftToRight);\r\n\r\n        static ForegroundProperty = DependencyProperty.RegisterInheritable(\"Foreground\", () => Media.Brush, InheritableOwner);\r\n        static FontFamilyProperty = DependencyProperty.RegisterInheritable(\"FontFamily\", () => String, InheritableOwner, Font.DEFAULT_FAMILY);\r\n        static FontSizeProperty = DependencyProperty.RegisterInheritable(\"FontSize\", () => Number, InheritableOwner, Font.DEFAULT_SIZE);\r\n        static FontStretchProperty = DependencyProperty.RegisterInheritable(\"FontStretch\", () => String, InheritableOwner, Font.DEFAULT_STRETCH);\r\n        static FontStyleProperty = DependencyProperty.RegisterInheritable(\"FontStyle\", () => String, InheritableOwner, Font.DEFAULT_STYLE);\r\n        static FontWeightProperty = DependencyProperty.RegisterInheritable(\"FontWeight\", () => new Enum(FontWeight), InheritableOwner, Font.DEFAULT_WEIGHT);\r\n        static TextDecorationsProperty = DependencyProperty.RegisterInheritable(\"TextDecorations\", () => new Enum(TextDecorations), InheritableOwner, TextDecorations.None);\r\n        static LanguageProperty = DependencyProperty.RegisterInheritable(\"Language\", () => String, InheritableOwner);\r\n\r\n        static AllInheritedProperties: DependencyProperty[];\r\n    }\r\n    InheritableOwner.AllInheritedProperties = [\r\n        InheritableOwner.ForegroundProperty,\r\n        InheritableOwner.FontFamilyProperty,\r\n        InheritableOwner.FontStretchProperty,\r\n        InheritableOwner.FontStyleProperty,\r\n        InheritableOwner.FontWeightProperty,\r\n        InheritableOwner.FontSizeProperty,\r\n        InheritableOwner.LanguageProperty,\r\n        InheritableOwner.FlowDirectionProperty,\r\n        InheritableOwner.UseLayoutRoundingProperty,\r\n        InheritableOwner.TextDecorationsProperty\r\n    ];\r\n    Fayde.CoreLibrary.add(InheritableOwner);\r\n\r\n    module reactions {\r\n        UIReaction<boolean>(InheritableOwner.UseLayoutRoundingProperty, minerva.core.reactTo.useLayoutRounding, false);\r\n        UIReaction<minerva.FlowDirection>(InheritableOwner.FlowDirectionProperty, minerva.core.reactTo.flowDirection, false);\r\n    }\r\n}","/// <reference path=\"DependencyObject.ts\" />\r\n/// <reference path=\"UIReaction.ts\" />\r\n/// <reference path=\"UIReactionAttached.ts\" />\r\n/// <reference path=\"Providers/InheritedStore.ts\" />\r\n/// <reference path=\"Enums.ts\" />\r\n/// <reference path=\"InheritableOwner.ts\" />\r\n\r\nmodule Fayde {\r\n    export class UINode extends DONode {\r\n        XObject: UIElement;\r\n        LayoutUpdater: minerva.core.Updater;\r\n        IsMouseOver: boolean = false;\r\n\r\n        constructor(xobj: UIElement) {\r\n            super(xobj);\r\n            var upd = this.LayoutUpdater = xobj.CreateLayoutUpdater();\r\n            upd.setAttachedValue(\"$node\", this);\r\n            upd.setAttachedValue(\"$id\", (<any>this.XObject)._ID);\r\n        }\r\n\r\n        VisualParentNode: UINode;\r\n        GetVisualRoot(): UINode {\r\n            var curNode = this;\r\n            var vpNode: UINode;\r\n            while (vpNode = curNode.VisualParentNode) {\r\n                curNode = vpNode;\r\n            }\r\n            return curNode;\r\n        }\r\n\r\n        IsLoaded: boolean = false;\r\n        SetIsLoaded(value: boolean) { }\r\n\r\n        OnVisualChildAttached(uie: UIElement) {\r\n            var un = uie.XamlNode;\r\n            Providers.InheritedStore.PropagateInheritedOnAdd(this.XObject, un);\r\n            un.SetVisualParentNode(this);\r\n        }\r\n        OnVisualChildDetached(uie: UIElement) {\r\n            var un = uie.XamlNode;\r\n            un.SetVisualParentNode(null);\r\n            Providers.InheritedStore.ClearInheritedOnRemove(this.XObject, un);\r\n        }\r\n\r\n        private SetVisualParentNode(visualParentNode: UINode) {\r\n            if (this.VisualParentNode === visualParentNode)\r\n                return;\r\n            this.VisualParentNode = visualParentNode;\r\n            this.LayoutUpdater.setVisualParent(visualParentNode ? visualParentNode.LayoutUpdater : null);\r\n        }\r\n\r\n        Focus(recurse?: boolean): boolean { return false; }\r\n\r\n        _EmitFocusChange(type: string) {\r\n            if (type === \"got\")\r\n                this._EmitGotFocus();\r\n            else if (type === \"lost\")\r\n                this._EmitLostFocus();\r\n        }\r\n        private _EmitLostFocus() {\r\n            var e = new Fayde.RoutedEventArgs();\r\n            var x = this.XObject;\r\n            x.OnLostFocus(e);\r\n            x.LostFocus.raise(x, e);\r\n        }\r\n        private _EmitGotFocus() {\r\n            var e = new Fayde.RoutedEventArgs();\r\n            var x = this.XObject;\r\n            x.OnGotFocus(e);\r\n            x.GotFocus.raise(x, e);\r\n        }\r\n        _EmitKeyDown(args: Fayde.Input.KeyEventArgs) {\r\n            var x = this.XObject;\r\n            x.OnKeyDown(args);\r\n            x.KeyDown.raise(x, args);\r\n        }\r\n        _EmitKeyUp(args: Fayde.Input.KeyEventArgs) {\r\n            var x = this.XObject;\r\n            x.OnKeyUp(args);\r\n            x.KeyUp.raise(x, args);\r\n        }\r\n        _EmitLostMouseCapture(pos: Point) {\r\n            var x = this.XObject;\r\n            var e = new Input.MouseEventArgs(pos);\r\n            x.OnLostMouseCapture(e);\r\n            x.LostMouseCapture.raise(x, e);\r\n        }\r\n        _EmitMouseEvent(type: Input.MouseInputType, isLeftButton: boolean, isRightButton: boolean, args: Input.MouseEventArgs): boolean {\r\n            var x = this.XObject;\r\n            switch (type) {\r\n                case Input.MouseInputType.MouseUp:\r\n                    if (isLeftButton) {\r\n                        x.OnMouseLeftButtonUp(<Input.MouseButtonEventArgs>args);\r\n                        x.MouseLeftButtonUp.raise(x, args);\r\n                    } else if (isRightButton) {\r\n                        x.OnMouseRightButtonUp(<Input.MouseButtonEventArgs>args);\r\n                        x.MouseRightButtonUp.raise(x, args);\r\n                    }\r\n                    break;\r\n                case Input.MouseInputType.MouseDown:\r\n                    if (isLeftButton) {\r\n                        x.OnMouseLeftButtonDown(<Input.MouseButtonEventArgs>args);\r\n                        x.MouseLeftButtonDown.raise(x, args);\r\n                    } else if (isRightButton) {\r\n                        x.OnMouseRightButtonDown(<Input.MouseButtonEventArgs>args);\r\n                        x.MouseRightButtonDown.raise(x, args);\r\n                    }\r\n                    break;\r\n                case Input.MouseInputType.MouseLeave:\r\n                    this.IsMouseOver = false;\r\n                    x.OnMouseLeave(args);\r\n                    x.MouseLeave.raise(x, args);\r\n                    break;\r\n                case Input.MouseInputType.MouseEnter:\r\n                    this.IsMouseOver = true;\r\n                    x.OnMouseEnter(args);\r\n                    x.MouseEnter.raise(x, args);\r\n                    break;\r\n                case Input.MouseInputType.MouseMove:\r\n                    x.OnMouseMove(args);\r\n                    x.MouseMove.raise(x, args);\r\n                    break;\r\n                case Input.MouseInputType.MouseWheel:\r\n                    x.OnMouseWheel(<Input.MouseWheelEventArgs>args);\r\n                    x.MouseWheel.raise(x, <Input.MouseWheelEventArgs>args);\r\n                    break;\r\n                default:\r\n                    return false;\r\n            }\r\n            return args.Handled;\r\n        }\r\n        _EmitTouchEvent(type: Input.TouchInputType, args: Input.TouchEventArgs) {\r\n            var x = this.XObject;\r\n            switch (type) {\r\n                case Input.TouchInputType.TouchDown:\r\n                    x.OnTouchDown(args);\r\n                    x.TouchDown.raise(x, args);\r\n                    break;\r\n                case Input.TouchInputType.TouchUp:\r\n                    x.OnTouchUp(args);\r\n                    x.TouchUp.raise(x, args);\r\n                    break;\r\n                case Input.TouchInputType.TouchMove:\r\n                    x.OnTouchMove(args);\r\n                    x.TouchMove.raise(x, args);\r\n                    break;\r\n                case Input.TouchInputType.TouchEnter:\r\n                    x.OnTouchEnter(args);\r\n                    x.TouchEnter.raise(x, args);\r\n                    break;\r\n                case Input.TouchInputType.TouchLeave:\r\n                    x.OnTouchLeave(args);\r\n                    x.TouchLeave.raise(x, args);\r\n                    break;\r\n                default:\r\n                    return false;\r\n            }\r\n            return args.Handled;\r\n        }\r\n        _EmitGotTouchCapture(e: Input.TouchEventArgs) {\r\n            var x = this.XObject;\r\n            x.OnGotTouchCapture(e);\r\n            x.GotTouchCapture.raise(this, e);\r\n        }\r\n        _EmitLostTouchCapture(e: Input.TouchEventArgs) {\r\n            var x = this.XObject;\r\n            x.OnLostTouchCapture(e);\r\n            x.LostTouchCapture.raise(this, e);\r\n        }\r\n\r\n        CanCaptureMouse(): boolean { return true; }\r\n        CaptureMouse(): boolean {\r\n            if (!this.IsAttached)\r\n                return false;\r\n            Surface.SetMouseCapture(this);\r\n            return true;\r\n        }\r\n        ReleaseMouseCapture() {\r\n            if (!this.IsAttached)\r\n                return;\r\n            Surface.ReleaseMouseCapture(this);\r\n        }\r\n\r\n        IsAncestorOf(uin: UINode) {\r\n            var vpNode = uin;\r\n            while (vpNode && vpNode !== this)\r\n                vpNode = vpNode.VisualParentNode;\r\n            return vpNode === this;\r\n        }\r\n\r\n        TransformToVisual (uin?: UINode): Media.GeneralTransform {\r\n            var raw = minerva.core.Updater.transformToVisual(this.LayoutUpdater, uin ? uin.LayoutUpdater : null);\r\n            if (!raw)\r\n                throw new ArgumentException(\"UIElement not attached.\");\r\n            var mt = new Media.MatrixTransform();\r\n            mt.SetCurrentValue(Media.MatrixTransform.MatrixProperty, new Media.Matrix(raw));\r\n            return mt;\r\n        }\r\n    }\r\n\r\n    export class UIElement extends DependencyObject implements Providers.IIsPropertyInheritable {\r\n        XamlNode: UINode;\r\n        CreateNode(): UINode { return new UINode(this); }\r\n        CreateLayoutUpdater(): minerva.core.Updater { return new minerva.core.Updater(); }\r\n\r\n        get IsItemsControl(): boolean { return false; }\r\n\r\n        get VisualParent() {\r\n            var vpNode = this.XamlNode.VisualParentNode;\r\n            if (vpNode) return vpNode.XObject;\r\n            return undefined;\r\n        }\r\n\r\n        static AllowDropProperty: DependencyProperty;\r\n        static CacheModeProperty: DependencyProperty;\r\n        static ClipProperty = DependencyProperty.RegisterCore(\"Clip\", () => Media.Geometry, UIElement);\r\n        static EffectProperty = DependencyProperty.Register(\"Effect\", () => Media.Effects.Effect, UIElement);\r\n        static IsHitTestVisibleProperty = DependencyProperty.RegisterCore(\"IsHitTestVisible\", () => Boolean, UIElement, true);\r\n        static OpacityMaskProperty = DependencyProperty.RegisterCore(\"OpacityMask\", () => Media.Brush, UIElement);\r\n        static OpacityProperty = DependencyProperty.RegisterCore(\"Opacity\", () => Number, UIElement, 1.0);\r\n        static RenderTransformProperty = DependencyProperty.RegisterCore(\"RenderTransform\", () => Media.Transform, UIElement);\r\n        static RenderTransformOriginProperty = DependencyProperty.Register(\"RenderTransformOrigin\", () => Point, UIElement);\r\n        static TagProperty = DependencyProperty.Register(\"Tag\", () => Object, UIElement);\r\n        static TriggersProperty: DependencyProperty = DependencyProperty.RegisterCore(\"Triggers\", () => TriggerCollection, UIElement, undefined, (d, args) => (<UIElement>d)._TriggersChanged(args));\r\n        static UseLayoutRoundingProperty = InheritableOwner.UseLayoutRoundingProperty.ExtendTo(UIElement);\r\n        static VisibilityProperty = DependencyProperty.RegisterCore(\"Visibility\", () => new Enum(Visibility), UIElement, Visibility.Visible);\r\n\r\n        IsInheritable(propd: DependencyProperty): boolean {\r\n            return propd === UIElement.UseLayoutRoundingProperty;\r\n        }\r\n\r\n        get IsMouseOver() { return this.XamlNode.IsMouseOver; }\r\n        get DesiredSize(): minerva.Size {\r\n            var ds = this.XamlNode.LayoutUpdater.assets.desiredSize;\r\n            return new minerva.Size(ds.width, ds.height);\r\n        }\r\n        get RenderSize(): minerva.Size {\r\n            var ds = this.XamlNode.LayoutUpdater.assets.renderSize;\r\n            return new minerva.Size(ds.width, ds.height);\r\n        }\r\n\r\n        //AllowDrop: boolean;\r\n        //CacheMode;\r\n        Clip: Media.Geometry;\r\n        Effect: Media.Effects.Effect;\r\n        IsHitTestVisible: boolean;\r\n        Cursor: CursorType;\r\n        OpacityMask: Media.Brush;\r\n        Opacity: number;\r\n        //Projection: Media.Projection;\r\n        RenderTransform: Media.Transform;\r\n        RenderTransformOrigin: Point;\r\n        Tag: any;\r\n        Triggers: TriggerCollection;\r\n        UseLayoutRounding: boolean;\r\n        Visibility: Visibility;\r\n\r\n        Focus(): boolean { return this.XamlNode.Focus(); }\r\n        CaptureMouse():boolean { return this.XamlNode.CaptureMouse(); }\r\n        ReleaseMouseCapture() { this.XamlNode.ReleaseMouseCapture(); }\r\n\r\n        IsAncestorOf(uie: UIElement): boolean {\r\n            if (!uie) return false;\r\n            return this.XamlNode.IsAncestorOf(uie.XamlNode);\r\n        }\r\n        TransformToVisual(uie: UIElement): Media.GeneralTransform {\r\n            var uin = (uie) ? uie.XamlNode : null;\r\n            return this.XamlNode.TransformToVisual(uin);\r\n        }\r\n\r\n        InvalidateMeasure() { this.XamlNode.LayoutUpdater.invalidateMeasure(); }\r\n        Measure(availableSize: minerva.Size) {\r\n            this.XamlNode.LayoutUpdater.measure(availableSize);\r\n        }\r\n        InvalidateArrange() { this.XamlNode.LayoutUpdater.invalidateArrange(); }\r\n        Arrange(finalRect: minerva.Rect) {\r\n            this.XamlNode.LayoutUpdater.arrange(finalRect);\r\n        }\r\n\r\n        LostFocus = new RoutedEvent<RoutedEventArgs>();\r\n        GotFocus = new RoutedEvent<RoutedEventArgs>();\r\n        LostMouseCapture = new RoutedEvent<Input.MouseEventArgs>();\r\n        KeyDown = new RoutedEvent<Input.KeyEventArgs>();\r\n        KeyUp = new RoutedEvent<Input.KeyEventArgs>();\r\n        MouseLeftButtonUp = new RoutedEvent<Input.MouseButtonEventArgs>();\r\n        MouseRightButtonUp = new RoutedEvent<Input.MouseButtonEventArgs>();\r\n        MouseLeftButtonDown = new RoutedEvent<Input.MouseButtonEventArgs>();\r\n        MouseRightButtonDown = new RoutedEvent<Input.MouseButtonEventArgs>();\r\n        MouseLeave = new RoutedEvent<Input.MouseEventArgs>();\r\n        MouseEnter = new RoutedEvent<Input.MouseEventArgs>();\r\n        MouseMove = new RoutedEvent<Input.MouseEventArgs>();\r\n        MouseWheel = new RoutedEvent<Input.MouseWheelEventArgs>();\r\n        TouchDown = new RoutedEvent<Input.TouchEventArgs>();\r\n        TouchUp = new RoutedEvent<Input.TouchEventArgs>();\r\n        TouchEnter = new RoutedEvent<Input.TouchEventArgs>();\r\n        TouchLeave = new RoutedEvent<Input.TouchEventArgs>();\r\n        TouchMove = new RoutedEvent<Input.TouchEventArgs>();\r\n        GotTouchCapture = new RoutedEvent<Input.TouchEventArgs>();\r\n        LostTouchCapture = new RoutedEvent<Input.TouchEventArgs>();\r\n\r\n        OnGotFocus(e: RoutedEventArgs) { }\r\n        OnLostFocus(e: RoutedEventArgs) { }\r\n        OnLostMouseCapture(e: Input.MouseEventArgs) { }\r\n        OnKeyDown(e: Input.KeyEventArgs) { }\r\n        OnKeyUp(e: Input.KeyEventArgs) { }\r\n        OnMouseEnter(e: Input.MouseEventArgs) { }\r\n        OnMouseLeave(e: Input.MouseEventArgs) { }\r\n        OnMouseLeftButtonDown(e: Input.MouseButtonEventArgs) { }\r\n        OnMouseLeftButtonUp(e: Input.MouseButtonEventArgs) { }\r\n        OnMouseMove(e: Input.MouseEventArgs) { }\r\n        OnMouseRightButtonDown(e: Input.MouseButtonEventArgs) { }\r\n        OnMouseRightButtonUp(e: Input.MouseButtonEventArgs) { }\r\n        OnMouseWheel(e: Input.MouseWheelEventArgs) { }\r\n        OnTouchDown(e: Input.TouchEventArgs) { }\r\n        OnTouchUp(e: Input.TouchEventArgs) { }\r\n        OnTouchEnter(e: Input.TouchEventArgs) { }\r\n        OnTouchLeave(e: Input.TouchEventArgs) { }\r\n        OnTouchMove(e: Input.TouchEventArgs) { }\r\n        OnGotTouchCapture(e: Input.TouchEventArgs) { }\r\n        OnLostTouchCapture(e: Input.TouchEventArgs) { }\r\n\r\n        private _TriggersChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            var oldTriggers = <TriggerCollection>args.OldValue;\r\n            var newTriggers = <TriggerCollection>args.NewValue;\r\n            if (oldTriggers instanceof TriggerCollection)\r\n                oldTriggers.DetachTarget(this);\r\n            if (newTriggers instanceof TriggerCollection)\r\n                newTriggers.AttachTarget(this);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(UIElement);\r\n\r\n    module reactions {\r\n        UIReaction<minerva.IGeometry>(UIElement.ClipProperty, minerva.core.reactTo.clip);\r\n        UIReaction<minerva.IEffect>(UIElement.EffectProperty, minerva.core.reactTo.effect);\r\n        UIReaction<boolean>(UIElement.IsHitTestVisibleProperty, minerva.core.reactTo.isHitTestVisible, false);\r\n        UIReaction<number>(UIElement.OpacityProperty, minerva.core.reactTo.opacity, false);\r\n        UIReaction<Media.Transform>(UIElement.RenderTransformProperty, minerva.core.reactTo.renderTransform);\r\n        UIReaction<minerva.Point>(UIElement.RenderTransformOriginProperty, minerva.core.reactTo.renderTransformOrigin, false, minerva.Point.copyTo);\r\n        UIReaction<minerva.Visibility>(UIElement.VisibilityProperty, (upd, ov, nv, uie?) => {\r\n            minerva.core.reactTo.visibility(upd, ov, nv);\r\n            Surface.RemoveFocusFrom(uie);\r\n        }, false);\r\n    }\r\n}","/// <reference path=\"PropertyStore.ts\" />\r\n\r\nmodule Fayde.Providers {\r\n    export class ResourcesStore extends PropertyStore {\r\n        static Instance: ResourcesStore;\r\n\r\n        GetValue (storage: IPropertyStorage): ResourceDictionary {\r\n            if (storage.Local !== undefined)\r\n                return storage.Local;\r\n            var rd = storage.Local = new ResourceDictionary();\r\n            rd.AttachTo(storage.OwnerNode.XObject);\r\n            return rd;\r\n        }\r\n\r\n        GetValuePrecedence (storage: IPropertyStorage): PropertyPrecedence {\r\n            return PropertyPrecedence.LocalValue;\r\n        }\r\n\r\n        SetLocalValue (storage: Providers.IPropertyStorage, newValue: number) {\r\n            console.warn(\"Cannot set Resources.\");\r\n        }\r\n\r\n        SetLocalStyleValue (storage: IPropertyStorage, newValue: any) {\r\n        }\r\n\r\n        SetImplicitStyle (storage: IPropertyStorage, newValue: any) {\r\n        }\r\n\r\n        ClearValue (storage: Providers.IPropertyStorage, notifyListeners?: boolean) {\r\n        }\r\n    }\r\n    ResourcesStore.Instance = new ResourcesStore();\r\n}","/// <reference path=\"PropertyStore.ts\" />\r\n\r\nmodule Fayde.Providers {\r\n    export class ActualSizeStore extends PropertyStore {\r\n        static Instance: ActualSizeStore;\r\n\r\n        GetValue(storage: IPropertyStorage): number {\r\n            if (storage.Local !== undefined)\r\n                return storage.Local;\r\n            return 0.0;\r\n        }\r\n        GetValuePrecedence(storage: IPropertyStorage): PropertyPrecedence { return PropertyPrecedence.LocalValue; }\r\n\r\n        SetLocalValue(storage: Providers.IPropertyStorage, newValue: number) {\r\n            var oldValue = storage.Local;\r\n            storage.Local = newValue;\r\n            if (oldValue === newValue)\r\n                return;\r\n            this.OnPropertyChanged(storage, PropertyPrecedence.LocalValue, oldValue, newValue);\r\n        }\r\n        SetLocalStyleValue(storage: IPropertyStorage, newValue: any) { }\r\n        SetImplicitStyle(storage: IPropertyStorage, newValue: any) { }\r\n\r\n        ClearValue(storage: Providers.IPropertyStorage, notifyListeners?: boolean) { }\r\n    }\r\n    ActualSizeStore.Instance = new ActualSizeStore();\r\n}","/// <reference path=\"UIElement.ts\" />\r\n/// <reference path=\"Providers/ResourcesStore.ts\" />\r\n/// <reference path=\"Providers/ActualSizeStore.ts\" />\r\n\r\nmodule Fayde {\r\n    export class FENode extends UINode implements Providers.IStyleHolder, Providers.IImplicitStyleHolder {\r\n        _LocalStyle: Style;\r\n        _ImplicitStyles: Style[];\r\n        _StyleMask: number;\r\n\r\n        XObject: FrameworkElement;\r\n        constructor(xobj: FrameworkElement) {\r\n            super(xobj);\r\n            var lu = this.LayoutUpdater;\r\n            lu.tree.setTemplateApplier(() => {\r\n                var error = new BError();\r\n                var result = this.ApplyTemplateWithError(error);\r\n                if (error.Message)\r\n                    error.ThrowException();\r\n                return result;\r\n            });\r\n            lu.setSizeUpdater({\r\n                setActualWidth (value: number) {\r\n                    xobj.SetCurrentValue(FrameworkElement.ActualWidthProperty, value);\r\n                },\r\n                setActualHeight (value: number) {\r\n                    xobj.SetCurrentValue(FrameworkElement.ActualHeightProperty, value);\r\n                },\r\n                onSizeChanged (oldSize: minerva.Size, newSize: minerva.Size) {\r\n                    xobj.SizeChanged.raise(xobj, new SizeChangedEventArgs(oldSize, newSize));\r\n                }\r\n            });\r\n        }\r\n        SubtreeNode: XamlNode;\r\n        SetSubtreeNode(subtreeNode: XamlNode, error: BError): boolean {\r\n            if (this.SubtreeNode) {\r\n                this.SubtreeNode.Detach();\r\n                this.SubtreeNode = null;\r\n            }\r\n            if (subtreeNode && !subtreeNode.AttachTo(this, error))\r\n                return false;\r\n            this.SubtreeNode = subtreeNode;\r\n            return true;\r\n        }\r\n\r\n        GetInheritedEnumerator(): nullstone.IEnumerator<DONode> {\r\n            return this.GetVisualTreeEnumerator();\r\n        }\r\n\r\n        GetVisualTreeEnumerator(): nullstone.IEnumerator<FENode> {\r\n            var walker = this.LayoutUpdater.tree.walk();\r\n            return {\r\n                current: undefined,\r\n                moveNext: function() {\r\n                    if (!walker.step())\r\n                        return false;\r\n                    this.current = walker.current.getAttachedValue(\"$node\");\r\n                    return true;\r\n                }\r\n            };\r\n        }\r\n\r\n        SetIsLoaded(value: boolean) {\r\n            if (this.IsLoaded === value)\r\n                return;\r\n            this.IsLoaded = value;\r\n            this.OnIsLoadedChanged(value);\r\n        }\r\n        OnIsLoadedChanged(newIsLoaded: boolean) {\r\n            var xobj = this.XObject;\r\n            var res = xobj.Resources;\r\n            if (!newIsLoaded) {\r\n                Providers.ImplicitStyleBroker.Clear(xobj, Providers.StyleMask.VisualTree);\r\n                xobj.Unloaded.raise(xobj, new RoutedEventArgs());\r\n                //TODO: Should we set is loaded on resources that are FrameworkElements?\r\n            } else {\r\n                Providers.ImplicitStyleBroker.Set(xobj, Providers.StyleMask.All);\r\n            }\r\n            for (var en = this.GetVisualTreeEnumerator(); en.moveNext();) {\r\n                en.current.SetIsLoaded(newIsLoaded);\r\n            }\r\n            if (newIsLoaded) {\r\n                //TODO: Should we set is loaded on resources that are FrameworkElements?\r\n                xobj.Loaded.raise(xobj, new RoutedEventArgs());\r\n                this.InvokeLoaded();\r\n                //LOOKS USELESS: \r\n                //Providers.DataContextStore.EmitDataContextChanged(xobj);\r\n            }\r\n        }\r\n        InvokeLoaded() { }\r\n\r\n        AttachVisualChild(uie: UIElement, error: BError): boolean {\r\n            this.OnVisualChildAttached(uie);\r\n            if (!this.SetSubtreeNode(uie.XamlNode, error))\r\n                return false;\r\n            uie.XamlNode.SetIsLoaded(this.IsLoaded);\r\n            return true;\r\n        }\r\n        DetachVisualChild(uie: UIElement, error: BError) {\r\n            if (!this.SetSubtreeNode(null, error))\r\n                return false;\r\n            this.OnVisualChildDetached(uie);\r\n            uie.XamlNode.SetIsLoaded(false);\r\n            return true;\r\n        }\r\n\r\n        ApplyTemplateWithError(error: BError): boolean {\r\n            if (this.SubtreeNode)\r\n                return false;\r\n            var result = this.DoApplyTemplateWithError(error);\r\n            var xobj = this.XObject;\r\n            if (result)\r\n                xobj.OnApplyTemplate();\r\n            xobj.TemplateApplied.raise(xobj, null);\r\n            return result;\r\n        }\r\n        DoApplyTemplateWithError(error: BError): boolean { return false; }\r\n        FinishApplyTemplateWithError(uie: UIElement, error: BError): boolean {\r\n            if (!uie || error.Message)\r\n                return false;\r\n            this.AttachVisualChild(uie, error);\r\n            return error.Message == null;\r\n        }\r\n\r\n        UpdateLayout() {\r\n            console.warn(\"FENode.UpdateLayout not implemented\");\r\n        }\r\n\r\n        static DetachFromVisualParent (xobj: UIElement) {\r\n            var vpNode = <FENode>xobj.XamlNode.VisualParentNode;\r\n            if (vpNode instanceof FENode) {\r\n                var err = new BError();\r\n                vpNode.DetachVisualChild(xobj, err);\r\n                if (err.Message)\r\n                    err.ThrowException();\r\n            }\r\n        }\r\n    }\r\n\r\n    export class FrameworkElement extends UIElement implements IResourcable, Providers.IIsPropertyInheritable {\r\n        XamlNode: FENode;\r\n        CreateNode(): FENode { return new FENode(this); }\r\n\r\n        static ActualHeightProperty = DependencyProperty.RegisterReadOnly(\"ActualHeight\", () => Number, FrameworkElement);\r\n        static ActualWidthProperty = DependencyProperty.RegisterReadOnly(\"ActualWidth\", () => Number, FrameworkElement);\r\n        static CursorProperty = DependencyProperty.Register(\"Cursor\", () => new Enum(CursorType), FrameworkElement, CursorType.Default);\r\n        static FlowDirectionProperty = InheritableOwner.FlowDirectionProperty.ExtendTo(FrameworkElement);\r\n        static HeightProperty = DependencyProperty.Register(\"Height\", () => Length, FrameworkElement, NaN);\r\n        static HorizontalAlignmentProperty = DependencyProperty.Register(\"HorizontalAlignment\", () => new Enum(HorizontalAlignment), FrameworkElement, HorizontalAlignment.Stretch);\r\n        static LanguageProperty = InheritableOwner.LanguageProperty.ExtendTo(FrameworkElement);\r\n        static MarginProperty = DependencyProperty.RegisterCore(\"Margin\", () => Thickness, FrameworkElement);\r\n        static MaxHeightProperty = DependencyProperty.Register(\"MaxHeight\", () => Number, FrameworkElement, Number.POSITIVE_INFINITY);\r\n        static MaxWidthProperty = DependencyProperty.Register(\"MaxWidth\", () => Number, FrameworkElement, Number.POSITIVE_INFINITY);\r\n        static MinHeightProperty = DependencyProperty.Register(\"MinHeight\", () => Number, FrameworkElement, 0.0);\r\n        static MinWidthProperty = DependencyProperty.Register(\"MinWidth\", () => Number, FrameworkElement, 0.0);\r\n        static StyleProperty = DependencyProperty.Register(\"Style\", () => Style, FrameworkElement, undefined, (dobj, args) => Providers.LocalStyleBroker.Set(<FrameworkElement>dobj, args.NewValue));\r\n        static VerticalAlignmentProperty = DependencyProperty.Register(\"VerticalAlignment\", () => new Enum(VerticalAlignment), FrameworkElement, VerticalAlignment.Stretch);\r\n        static WidthProperty = DependencyProperty.Register(\"Width\", () => Length, FrameworkElement, NaN);\r\n        static ResourcesProperty = DependencyProperty.Register(\"Resources\", () => ResourceDictionary, FrameworkElement);\r\n        static DefaultStyleKeyProperty = DependencyProperty.Register(\"DefaultStyleKey\", () => Function, FrameworkElement);\r\n\r\n        IsInheritable(propd: DependencyProperty): boolean {\r\n            if (propd === FrameworkElement.FlowDirectionProperty)\r\n                return true;\r\n            if (propd === FrameworkElement.LanguageProperty)\r\n                return true;\r\n            return super.IsInheritable(propd);\r\n        }\r\n\r\n        ActualHeight: number;\r\n        ActualWidth: number;\r\n        FlowDirection: FlowDirection;\r\n        Height: number;\r\n        HorizontalAlignment: HorizontalAlignment;\r\n        Language: string;\r\n        Margin: Thickness;\r\n        MaxWidth: number;\r\n        MaxHeight: number;\r\n        MinWidth: number;\r\n        MinHeight: number;\r\n        Style: Style;\r\n        VerticalAlignment: VerticalAlignment;\r\n        Width: number;\r\n        Resources: ResourceDictionary;\r\n        DefaultStyleKey: Function;\r\n\r\n        SizeChanged = new RoutedEvent<RoutedEventArgs>();\r\n        Loaded = new RoutedEvent<RoutedEventArgs>();\r\n        Unloaded = new RoutedEvent<RoutedEventArgs>();\r\n        LayoutUpdated = new nullstone.Event<nullstone.IEventArgs>();\r\n\r\n        OnApplyTemplate() { }\r\n        TemplateApplied = new nullstone.Event<nullstone.IEventArgs>();\r\n\r\n        OnBindingValidationError (args: Validation.ValidationErrorEventArgs) {\r\n            this.BindingValidationError.raise(this, args);\r\n        }\r\n        BindingValidationError = new nullstone.Event<Validation.ValidationErrorEventArgs>();\r\n\r\n        UpdateLayout() { this.XamlNode.UpdateLayout(); }\r\n    }\r\n    Fayde.CoreLibrary.add(FrameworkElement);\r\n\r\n    FrameworkElement.ActualWidthProperty.Store = Providers.ActualSizeStore.Instance;\r\n    FrameworkElement.ActualHeightProperty.Store = Providers.ActualSizeStore.Instance;\r\n    FrameworkElement.ResourcesProperty.Store = Providers.ResourcesStore.Instance;\r\n\r\n    module reactions {\r\n        UIReaction<number>(FrameworkElement.WidthProperty, minerva.core.reactTo.width, false);\r\n        UIReaction<number>(FrameworkElement.HeightProperty, minerva.core.reactTo.height, false);\r\n        UIReaction<number>(FrameworkElement.MaxWidthProperty, minerva.core.reactTo.maxWidth, false);\r\n        UIReaction<number>(FrameworkElement.MaxHeightProperty, minerva.core.reactTo.maxHeight, false);\r\n        UIReaction<number>(FrameworkElement.MinWidthProperty, minerva.core.reactTo.minWidth, false);\r\n        UIReaction<number>(FrameworkElement.MinHeightProperty, minerva.core.reactTo.minHeight, false);\r\n        UIReaction<Thickness>(FrameworkElement.MarginProperty, minerva.core.reactTo.margin, false, minerva.Thickness.copyTo);\r\n        UIReaction<minerva.HorizontalAlignment>(FrameworkElement.HorizontalAlignmentProperty, minerva.core.reactTo.horizontalAlignment, false);\r\n        UIReaction<minerva.VerticalAlignment>(FrameworkElement.VerticalAlignmentProperty, minerva.core.reactTo.verticalAlignment, false);\r\n    }\r\n}","module Fayde.Markup {\r\n    export interface IContentAnnotation {\r\n        (type: Function, prop: DependencyProperty);\r\n        Get(type: Function): DependencyProperty;\r\n    }\r\n    export var Content = <IContentAnnotation>(function () {\r\n        function ca(type: Function, prop: DependencyProperty) {\r\n            nullstone.Annotation(type, \"Content\", prop, true);\r\n        }\r\n        (<any>ca).Get = function (type: Function): DependencyProperty {\r\n            var cur = type;\r\n            while (cur) {\r\n                var anns = nullstone.GetAnnotations(cur, \"Content\");\r\n                if (anns) {\r\n                    var cp = anns[0];\r\n                    if (cp)\r\n                        return cp;\r\n                }\r\n                cur = nullstone.getTypeParent(cur);\r\n            }\r\n            return undefined;\r\n        };\r\n        return ca;\r\n    })();\r\n\r\n    export interface ITextContentAnnotation {\r\n        (type: Function, prop: DependencyProperty);\r\n        Get(type: Function): DependencyProperty;\r\n    }\r\n    export var TextContent = <ITextContentAnnotation>(function () {\r\n        function tca(type: Function, prop: DependencyProperty) {\r\n            nullstone.Annotation(type, \"TextContent\", prop, true);\r\n        }\r\n        (<any>tca).Get = function (type: Function): DependencyProperty {\r\n            var cur = type;\r\n            while (cur) {\r\n                var anns = nullstone.GetAnnotations(cur, \"TextContent\");\r\n                if (anns) {\r\n                    var cp = anns[0];\r\n                    if (cp)\r\n                        return cp;\r\n                }\r\n                cur = nullstone.getTypeParent(cur);\r\n            }\r\n            return undefined;\r\n        };\r\n        return tca;\r\n    })();\r\n}","/// <reference path=\"../Core/FrameworkElement.ts\" />\r\n/// <reference path=\"../Markup/ContentAnnotation.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class Border extends FrameworkElement {\r\n        CreateLayoutUpdater (): minerva.controls.border.BorderUpdater {\r\n            return new minerva.controls.border.BorderUpdater();\r\n        }\r\n\r\n        static BackgroundProperty = DependencyProperty.RegisterCore(\"Background\", () => Media.Brush, Border);\r\n        static BorderBrushProperty = DependencyProperty.RegisterCore(\"BorderBrush\", () => Media.Brush, Border);\r\n        static BorderThicknessProperty = DependencyProperty.Register(\"BorderThickness\", () => Thickness, Border); //TODO: Validator\r\n        static ChildProperty = DependencyProperty.Register(\"Child\", () => UIElement, Border);\r\n        static CornerRadiusProperty = DependencyProperty.Register(\"CornerRadius\", () => CornerRadius, Border); //TODO: Validator\r\n        static PaddingProperty = DependencyProperty.Register(\"Padding\", () => Thickness, Border); //TODO: Validator\r\n        Background: Media.Brush;\r\n        BorderBrush: Media.Brush;\r\n        BorderThickness: minerva.Thickness;\r\n        Child: UIElement;\r\n        CornerRadius: CornerRadius;\r\n        Padding: Thickness;\r\n\r\n        constructor () {\r\n            super();\r\n            this.DefaultStyleKey = Border;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Border);\r\n    Markup.Content(Border, Border.ChildProperty);\r\n\r\n    UIReaction<minerva.IBrush>(Border.BackgroundProperty, (upd, ov, nv) => {\r\n        upd.invalidate();\r\n    });\r\n    UIReaction<minerva.IBrush>(Border.BorderBrushProperty, (upd, ov, nv) => {\r\n        upd.invalidate();\r\n    });\r\n    UIReaction<Thickness>(Border.BorderThicknessProperty, (upd, ov, nv) => upd.invalidateMeasure(), false, minerva.Thickness.copyTo);\r\n    UIReaction<Thickness>(Border.PaddingProperty, (upd, ov, nv) => upd.invalidateMeasure(), false, minerva.Thickness.copyTo);\r\n    UIReaction<minerva.CornerRadius>(Border.CornerRadiusProperty, (upd, ov, nv) => upd.invalidate(), false, minerva.CornerRadius.copyTo);\r\n    UIReaction<UIElement>(Border.ChildProperty, (upd, ov, nv, border?: Border) => {\r\n        var node = border.XamlNode;\r\n        var error = new BError();\r\n        if (ov instanceof UIElement)\r\n            node.DetachVisualChild(ov, error);\r\n        if (nv instanceof UIElement)\r\n            node.AttachVisualChild(nv, error);\r\n        if (error.Message)\r\n            error.ThrowException();\r\n        upd.updateBounds();\r\n        upd.invalidateMeasure();\r\n    }, false, false);\r\n}","/// <reference path=\"PropertyStore.ts\" />\r\n\r\nmodule Fayde.Providers {\r\n    export interface IIsEnabledStorage extends IPropertyStorage {\r\n        InheritedValue: boolean;\r\n    }\r\n\r\n    export class IsEnabledStore extends PropertyStore {\r\n        static Instance: IsEnabledStore;\r\n        GetValue(storage: IIsEnabledStorage): boolean {\r\n            if (storage.InheritedValue === false)\r\n                return false;\r\n            return super.GetValue(storage);\r\n        }\r\n        GetValuePrecedence(storage: IIsEnabledStorage): PropertyPrecedence {\r\n            if (storage.InheritedValue === false)\r\n                return PropertyPrecedence.IsEnabled;\r\n            return super.GetValuePrecedence(storage);\r\n        }\r\n\r\n        SetLocalValue(storage: IIsEnabledStorage, newValue: boolean) {\r\n            var oldValue = storage.Local;\r\n            storage.Local = newValue;\r\n            if (oldValue === newValue || storage.InheritedValue === false)\r\n                return;\r\n            this.OnPropertyChanged(storage, PropertyPrecedence.LocalValue, oldValue, newValue);\r\n        }\r\n\r\n        OnPropertyChanged(storage: IPropertyStorage, effectivePrecedence: PropertyPrecedence, oldValue: any, newValue: any): IDependencyPropertyChangedEventArgs {\r\n            var args = super.OnPropertyChanged(storage, effectivePrecedence, oldValue, newValue);\r\n            storage.OwnerNode.OnIsEnabledChanged(oldValue, newValue);\r\n            return args;\r\n        }\r\n\r\n        CreateStorage(dobj: DependencyObject, propd: DependencyProperty): IIsEnabledStorage {\r\n            return {\r\n                OwnerNode: dobj.XamlNode,\r\n                Property: propd,\r\n                Precedence: PropertyPrecedence.DefaultValue,\r\n                InheritedValue: true,\r\n                Animations: undefined,\r\n                Local: undefined,\r\n                LocalStyleValue: undefined,\r\n                ImplicitStyleValue: undefined,\r\n                PropListeners: undefined,\r\n            };\r\n        }\r\n        \r\n        EmitInheritedChanged(storage: IIsEnabledStorage, newInherited: boolean) {\r\n            var oldInherited = storage.InheritedValue;\r\n            if (newInherited !== false) {\r\n                storage.Precedence = super.GetValuePrecedence(storage);\r\n                storage.InheritedValue = true;\r\n            } else {\r\n                storage.InheritedValue = false;\r\n            }\r\n            if (oldInherited === newInherited)\r\n                return;\r\n            this.OnPropertyChanged(storage, PropertyPrecedence.IsEnabled, oldInherited, newInherited);\r\n        }\r\n        static EmitInheritedChanged(cn: Controls.ControlNode, value: boolean) {\r\n            var propd = Controls.Control.IsEnabledProperty;\r\n            var storage = <Providers.IIsEnabledStorage>Providers.GetStorage(cn.XObject, propd);\r\n            (<Providers.IsEnabledStore>propd.Store).EmitInheritedChanged(storage, value);\r\n        }\r\n    }\r\n    IsEnabledStore.Instance = new IsEnabledStore();\r\n}","module Fayde.Input {\r\n    // http://msdn.microsoft.com/en-us/library/system.windows.input.keyboardnavigationmode.aspx\r\n    export enum KeyboardNavigationMode {\r\n        Continue = 0,\r\n        Once = 1,\r\n        Cycle = 2,\r\n        None = 3,\r\n        Contained = 4,\r\n        Local = 5,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(KeyboardNavigationMode, \"KeyboardNavigationMode\");\r\n\r\n    export enum ModifierKeys {\r\n        None = 0,\r\n        Alt = 1,\r\n        Control = 2,\r\n        Shift = 4,\r\n        Windows = 8,\r\n        Apple = 16,\r\n    }\r\n\r\n    export interface IModifiersOn {\r\n        Shift: boolean;\r\n        Ctrl: boolean;\r\n        Alt: boolean;\r\n    }\r\n\r\n    export class Keyboard {\r\n        static Modifiers: ModifierKeys = ModifierKeys.None;\r\n\r\n        static RefreshModifiers(e: Fayde.Input.IModifiersOn) {\r\n            if (e.Shift)\r\n                Keyboard.Modifiers |= ModifierKeys.Shift;\r\n            else\r\n                Keyboard.Modifiers &= ~ModifierKeys.Shift;\r\n            if (e.Ctrl)\r\n                Keyboard.Modifiers |= ModifierKeys.Control;\r\n            else\r\n                Keyboard.Modifiers &= ~ModifierKeys.Control;\r\n            if (e.Alt)\r\n                Keyboard.Modifiers |= ModifierKeys.Alt;\r\n            else\r\n                Keyboard.Modifiers &= ~ModifierKeys.Alt;\r\n        }\r\n\r\n        static HasControl() {\r\n            return (Keyboard.Modifiers & ModifierKeys.Control) === ModifierKeys.Control;\r\n        }\r\n        static HasAlt() {\r\n            return (Keyboard.Modifiers & ModifierKeys.Alt) === ModifierKeys.Alt;\r\n        }\r\n        static HasShift() {\r\n            return (Keyboard.Modifiers & ModifierKeys.Shift) === ModifierKeys.Shift;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Keyboard);\r\n}","/// <reference path=\"../Core/FrameworkElement.ts\" />\r\n/// <reference path=\"../Core/Providers/IsEnabledStore.ts\" />\r\n/// <reference path=\"../Input/Keyboard.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export interface IIsEnabledListener {\r\n        Callback: (newIsEnabled: boolean) => void;\r\n        Detach();\r\n    }\r\n\r\n    export class ControlNode extends FENode {\r\n        XObject: Control;\r\n        TemplateRoot: FrameworkElement;\r\n        IsFocused: boolean = false;\r\n        LayoutUpdater: minerva.controls.control.ControlUpdater;\r\n\r\n        constructor(xobj: Control) {\r\n            super(xobj);\r\n        }\r\n\r\n        TabTo() {\r\n            var xobj = this.XObject;\r\n            return xobj.IsEnabled && xobj.IsTabStop && this.Focus();\r\n        }\r\n\r\n        ApplyTemplateWithError(error: BError): boolean {\r\n            if (!super.ApplyTemplateWithError(error))\r\n                return false;\r\n            this.XObject.UpdateValidationState();\r\n            return true;\r\n        }\r\n        DoApplyTemplateWithError(error: BError): boolean {\r\n            var xobj = this.XObject;\r\n            var t = xobj.Template;\r\n            var root: UIElement;\r\n            if (t) root = t.GetVisualTree(xobj);\r\n            if (!root && !(root = this.GetDefaultVisualTree()))\r\n                return false;\r\n\r\n            if (this.TemplateRoot && this.TemplateRoot !== root)\r\n                this.DetachVisualChild(this.TemplateRoot, error)\r\n            this.TemplateRoot = <FrameworkElement>root;\r\n            if (this.TemplateRoot)\r\n                this.AttachVisualChild(this.TemplateRoot, error);\r\n            if (error.Message)\r\n                return false;\r\n\r\n            //TODO: Deployment Loaded Event (Async)\r\n\r\n            return true;\r\n        }\r\n        GetDefaultVisualTree(): UIElement { return undefined; }\r\n\r\n        OnIsAttachedChanged(newIsAttached: boolean) {\r\n            super.OnIsAttachedChanged(newIsAttached);\r\n            if (!newIsAttached)\r\n                Media.VSM.VisualStateManager.Deactivate(this.XObject, this.TemplateRoot);\r\n            else\r\n                Media.VSM.VisualStateManager.Activate(this.XObject, this.TemplateRoot);\r\n        }\r\n\r\n        OnParentChanged(oldParentNode: XamlNode, newParentNode: XamlNode) {\r\n            super.OnParentChanged(oldParentNode, newParentNode);\r\n            this.IsEnabled = newParentNode ? newParentNode.IsEnabled : true;\r\n        }\r\n\r\n        OnTemplateChanged(oldTemplate: ControlTemplate, newTemplate: ControlTemplate) {\r\n            var subtree = this.SubtreeNode;\r\n            if (subtree) {\r\n                var error = new BError();\r\n                if (!this.DetachVisualChild(<UIElement>subtree.XObject, error))\r\n                    error.ThrowException();\r\n            }\r\n            this.LayoutUpdater.invalidateMeasure();\r\n        }\r\n\r\n        get IsEnabled(): boolean { return this.XObject.IsEnabled; }\r\n        set IsEnabled(value: boolean) {\r\n            Providers.IsEnabledStore.EmitInheritedChanged(this, value);\r\n            this.OnIsEnabledChanged(undefined, value);\r\n        }\r\n        OnIsEnabledChanged(oldValue: boolean, newValue: boolean) {\r\n            if (!newValue) {\r\n                this.IsMouseOver = false;\r\n                if (Surface.RemoveFocusFrom(this.XObject)) {\r\n                    TabNavigationWalker.Focus(this, true);\r\n                }\r\n                this.ReleaseMouseCapture();\r\n            }\r\n            super.OnIsEnabledChanged(oldValue, newValue);\r\n        }\r\n\r\n        Focus(recurse?: boolean): boolean {\r\n            return Surface.Focus(this.XObject, recurse);\r\n        }\r\n\r\n        CanCaptureMouse(): boolean { return this.XObject.IsEnabled; }\r\n    }\r\n\r\n    export class Control extends FrameworkElement implements Providers.IIsPropertyInheritable {\r\n        XamlNode: ControlNode;\r\n        CreateNode(): ControlNode { return new ControlNode(this); }\r\n        CreateLayoutUpdater() { return new minerva.controls.control.ControlUpdater(); }\r\n\r\n        constructor() {\r\n            super();\r\n            UIReaction<boolean>(Control.IsEnabledProperty, (upd, nv, ov, control?: Control) => {\r\n                var args = {\r\n                    Property: Control.IsEnabledProperty,\r\n                    OldValue: ov,\r\n                    NewValue: nv\r\n                };\r\n                control.OnIsEnabledChanged(args);\r\n                if (nv !== true)\r\n                    control.XamlNode.IsMouseOver = false;\r\n                control.UpdateVisualState();\r\n                control.IsEnabledChanged.raiseAsync(control, args);\r\n            }, false, true, this);\r\n            //TODO: Do these make sense? These properties are usually bound to child visuals which will invalidate\r\n            UIReaction<minerva.Thickness>(Control.PaddingProperty, (upd, nv, ov) => upd.invalidateMeasure(), false, true, this);\r\n            UIReaction<minerva.Thickness>(Control.BorderThicknessProperty, (upd, nv, ov) => upd.invalidateMeasure(), false, true, this);\r\n            UIReaction<HorizontalAlignment>(Control.HorizontalContentAlignmentProperty, (upd, nv, ov) => upd.invalidateArrange(), false, true, this);\r\n            UIReaction<VerticalAlignment>(Control.VerticalContentAlignmentProperty, (upd, nv, ov) => upd.invalidateArrange(), false, true, this);\r\n        }\r\n\r\n        static BackgroundProperty = DependencyProperty.RegisterCore(\"Background\", () => Media.Brush, Control);\r\n        static BorderBrushProperty = DependencyProperty.RegisterCore(\"BorderBrush\", () => Media.Brush, Control);\r\n        static BorderThicknessProperty = DependencyProperty.RegisterCore(\"BorderThickness\", () => Thickness, Control);\r\n        static FontFamilyProperty = InheritableOwner.FontFamilyProperty.ExtendTo(Control);\r\n        static FontSizeProperty = InheritableOwner.FontSizeProperty.ExtendTo(Control);\r\n        static FontStretchProperty = InheritableOwner.FontStretchProperty.ExtendTo(Control);\r\n        static FontStyleProperty = InheritableOwner.FontStyleProperty.ExtendTo(Control);\r\n        static FontWeightProperty = InheritableOwner.FontWeightProperty.ExtendTo(Control);\r\n        static ForegroundProperty = InheritableOwner.ForegroundProperty.ExtendTo(Control);\r\n        static HorizontalContentAlignmentProperty: DependencyProperty = DependencyProperty.Register(\"HorizontalContentAlignment\", () => new Enum(HorizontalAlignment), Control, HorizontalAlignment.Center);\r\n        static IsEnabledProperty = DependencyProperty.Register(\"IsEnabled\", () => Boolean, Control, true);\r\n        static IsTabStopProperty = DependencyProperty.Register(\"IsTabStop\", () => Boolean, Control, true);\r\n        static PaddingProperty = DependencyProperty.RegisterCore(\"Padding\", () => Thickness, Control);\r\n        static TabIndexProperty = DependencyProperty.Register(\"TabIndex\", () => Number, Control);\r\n        static TabNavigationProperty = DependencyProperty.Register(\"TabNavigation\", () => new Enum(Input.KeyboardNavigationMode), Control, Input.KeyboardNavigationMode.Local);\r\n        static TemplateProperty = DependencyProperty.Register(\"Template\", () => ControlTemplate, Control, undefined, (d, args) => (<Control>d).XamlNode.OnTemplateChanged(args.OldValue, args.NewValue));\r\n        static VerticalContentAlignmentProperty = DependencyProperty.Register(\"VerticalContentAlignment\", () => new Enum(VerticalAlignment), Control, VerticalAlignment.Center);\r\n\r\n        IsInheritable(propd: DependencyProperty): boolean {\r\n            if (ControlInheritedProperties.indexOf(propd) > -1)\r\n                return true;\r\n            return super.IsInheritable(propd);\r\n        }\r\n\r\n        Background: Media.Brush;\r\n        BorderBrush: Media.Brush;\r\n        BorderThickness: Thickness;\r\n        FontFamily: string;\r\n        FontSize: number;\r\n        FontStretch: string;\r\n        FontStyle: string;\r\n        FontWeight: FontWeight;\r\n        Foreground: Media.Brush;\r\n        HorizontalContentAlignment: HorizontalAlignment;\r\n        IsEnabled: boolean;\r\n        IsTabStop: boolean;\r\n        Padding: Thickness;\r\n        TabIndex: number;\r\n        TabNavigation: Input.KeyboardNavigationMode;\r\n        Template: ControlTemplate;\r\n        VerticalContentAlignment: VerticalAlignment;\r\n\r\n        get IsFocused() { return this.XamlNode.IsFocused; }\r\n\r\n        GetTemplateChild(childName: string, type?: Function): DependencyObject {\r\n            var root = this.XamlNode.TemplateRoot;\r\n            if (!root)\r\n                return;\r\n            var n = root.XamlNode.FindName(childName);\r\n            if (!n)\r\n                return;\r\n            var xobj = n.XObject;\r\n            if (!type || (xobj instanceof type))\r\n                return <DependencyObject>xobj;\r\n        }\r\n\r\n        ApplyTemplate(): boolean {\r\n            var error = new BError();\r\n            var result = this.XamlNode.ApplyTemplateWithError(error);\r\n            if (error.Message)\r\n                error.ThrowException();\r\n            return result;\r\n        }\r\n\r\n        GetDefaultStyle(): Style {\r\n            return undefined;\r\n        }\r\n\r\n        IsEnabledChanged = new nullstone.Event<DependencyPropertyChangedEventArgs>();\r\n        OnIsEnabledChanged(e: IDependencyPropertyChangedEventArgs) { }\r\n\r\n        OnGotFocus(e: RoutedEventArgs) {\r\n            this.XamlNode.IsFocused = true;\r\n            this.UpdateValidationState();\r\n        }\r\n        OnLostFocus(e: RoutedEventArgs) {\r\n            this.XamlNode.IsFocused = false;\r\n            this.UpdateValidationState();\r\n        }\r\n\r\n        UpdateVisualState(useTransitions?: boolean) {\r\n            useTransitions = useTransitions !== false;\r\n            var gotoFunc = (state: string) => Media.VSM.VisualStateManager.GoToState(this, state, useTransitions);\r\n            this.GoToStates(gotoFunc);\r\n        }\r\n        GoToStates(gotoFunc: (state: string) => boolean) {\r\n            this.GoToStateCommon(gotoFunc);\r\n            this.GoToStateFocus(gotoFunc);\r\n            this.GoToStateSelection(gotoFunc);\r\n        }\r\n        GoToStateCommon(gotoFunc: (state: string) => boolean): boolean {\r\n            if (!this.IsEnabled)\r\n                return gotoFunc(\"Disabled\");\r\n            if (this.IsMouseOver)\r\n                return gotoFunc(\"MouseOver\");\r\n            return gotoFunc(\"Normal\");\r\n        }\r\n        GoToStateFocus(gotoFunc: (state: string) => boolean): boolean {\r\n            if (this.IsFocused && this.IsEnabled)\r\n                return gotoFunc(\"Focused\");\r\n            return gotoFunc(\"Unfocused\");\r\n        }\r\n        GoToStateSelection(gotoFunc: (state: string) => boolean): boolean {\r\n            return false;\r\n        }\r\n\r\n        UpdateValidationState (valid?: boolean) {\r\n            if (valid === undefined) {\r\n                var errors = Validation.GetErrors(this);\r\n                valid = errors.Count < 1;\r\n            }\r\n            var gotoFunc = (state: string) => Media.VSM.VisualStateManager.GoToState(this, state, true);\r\n            this.GoToStateValidation(valid, gotoFunc);\r\n        }\r\n\r\n        GoToStateValidation (valid: boolean, gotoFunc: (state: string) => boolean) {\r\n            if (valid)\r\n                return gotoFunc(\"Valid\");\r\n            else if (this.IsFocused)\r\n                return gotoFunc(\"InvalidFocused\");\r\n            return gotoFunc(\"InvalidUnfocused\");\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Control);\r\n\r\n    Control.IsEnabledProperty.Store = Providers.IsEnabledStore.Instance;\r\n\r\n    var ControlInheritedProperties = [\r\n        Control.FontFamilyProperty,\r\n        Control.FontSizeProperty,\r\n        Control.FontStretchProperty,\r\n        Control.FontStyleProperty,\r\n        Control.FontWeightProperty,\r\n        Control.ForegroundProperty\r\n    ];\r\n\r\n    export interface ITemplateVisualStateDefinition {\r\n        Name: string;\r\n        GroupName: string;\r\n    }\r\n    export var TemplateVisualStates = nullstone.CreateTypedAnnotation<ITemplateVisualStateDefinition>(\"TemplateVisualState\");\r\n\r\n    export interface ITemplatePartDefinition {\r\n        Name: string;\r\n        Type: Function;\r\n    }\r\n    export var TemplateParts = nullstone.CreateTypedAnnotation<ITemplatePartDefinition>(\"TemplatePart\");\r\n}","/// <reference path=\"Control.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class ContentControlNode extends ControlNode {\r\n        private _DefaultPresenter: ContentPresenter = null;\r\n\r\n        XObject: ContentControl;\r\n\r\n        constructor (xobj: ContentControl) {\r\n            super(xobj);\r\n        }\r\n\r\n        GetDefaultVisualTree (): UIElement {\r\n            var xobj = this.XObject;\r\n            var content = xobj.Content;\r\n            if (content instanceof UIElement)\r\n                return <UIElement>content;\r\n\r\n            var presenter = this._DefaultPresenter;\r\n            if (!presenter) {\r\n                presenter = this._DefaultPresenter = new ContentPresenter();\r\n                presenter.TemplateOwner = this.XObject;\r\n            }\r\n            presenter.SetValue(ContentPresenter.ContentProperty, new TemplateBindingExpression(\"Content\"));\r\n            presenter.SetValue(ContentPresenter.ContentTemplateProperty, new TemplateBindingExpression(\"ContentTemplate\"));\r\n            return presenter;\r\n        }\r\n\r\n        OnContentChanged (o: any, n: any) {\r\n            if (o instanceof UIElement || n instanceof UIElement)\r\n                this.CleanOldContent(o);\r\n        }\r\n\r\n        OnTemplateChanged (oldTemplate: ControlTemplate, newTemplate: ControlTemplate) {\r\n            if (oldTemplate)\r\n                this.CleanOldContent(this.XObject.Content);\r\n            super.OnTemplateChanged(oldTemplate, newTemplate);\r\n        }\r\n\r\n        private CleanOldContent (content: any) {\r\n            if (content instanceof UIElement) {\r\n                FENode.DetachFromVisualParent(content);\r\n                this.LayoutUpdater.invalidateMeasure();\r\n            } else {\r\n                var presenter = this._DefaultPresenter;\r\n                if (presenter) {\r\n                    presenter.ClearValue(ContentPresenter.ContentProperty);\r\n                    presenter.ClearValue(ContentPresenter.ContentTemplateProperty);\r\n                    FENode.DetachFromVisualParent(presenter);\r\n                    this.LayoutUpdater.invalidateMeasure();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    export class ContentControl extends Control {\r\n        XamlNode: ContentControlNode;\r\n\r\n        CreateNode (): ContentControlNode {\r\n            return new ContentControlNode(this);\r\n        }\r\n\r\n        static ContentProperty = DependencyProperty.Register(\"Content\", () => Object, ContentControl, undefined, (d: ContentControl, args) => d.OnContentPropertyChanged(args));\r\n        static ContentTemplateProperty = DependencyProperty.Register(\"ContentTemplate\", () => DataTemplate, ContentControl, undefined, (d: ContentControl, args) => d.OnContentTemplateChanged(args.OldValue, args.NewValue));\r\n        static ContentUriProperty = DependencyProperty.Register(\"ContentUri\", () => Uri, ContentControl, undefined, (d: ContentControl, args) => d.OnContentUriPropertyChanged(args));\r\n        Content: any;\r\n        ContentTemplate: DataTemplate;\r\n        ContentUri: Uri;\r\n\r\n        private OnContentPropertyChanged (args: DependencyPropertyChangedEventArgs) {\r\n            this.XamlNode.OnContentChanged(args.OldValue, args.NewValue);\r\n            this.OnContentChanged(args.OldValue, args.NewValue);\r\n        }\r\n\r\n        private OnContentUriPropertyChanged (args: DependencyPropertyChangedEventArgs) {\r\n            var oldUri: Uri;\r\n            if (args.OldValue instanceof Uri) {\r\n                this.Content = undefined;\r\n                oldUri = <Uri>args.OldValue;\r\n            }\r\n            var newUri: Uri;\r\n            if (args.NewValue instanceof Uri) {\r\n                newUri = <Uri>args.NewValue;\r\n                Markup.Resolve(newUri)\r\n                    .then(m => this._OnLoadedUri(m), err => this._OnErroredUri(err, newUri))\r\n            }\r\n            this.OnContentUriChanged(oldUri, newUri);\r\n        }\r\n\r\n        constructor () {\r\n            super();\r\n            this.DefaultStyleKey = ContentControl;\r\n        }\r\n\r\n        OnContentChanged (oldContent: any, newContent: any) {\r\n        }\r\n\r\n        OnContentTemplateChanged (oldContentTemplate: DataTemplate, newContentTemplate: DataTemplate) {\r\n        }\r\n\r\n        OnContentUriChanged (oldSourceUri: Uri, newSourceUri: Uri) {\r\n        }\r\n\r\n        private _OnLoadedUri (xm: nullstone.markup.Markup<any>) {\r\n            this.Content = Markup.Load(this.App, xm);\r\n        }\r\n\r\n        private _OnErroredUri (err: any, src: Uri) {\r\n            console.warn(\"Error resolving XamlResource: '\" + src.toString() + \"'.\");\r\n            //TODO: Set content to error message?\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ContentControl);\r\n    Markup.Content(ContentControl, ContentControl.ContentProperty);\r\n}","\r\nmodule Fayde.Controls {\r\n    export enum TextWrapping {\r\n        NoWrap = 0,\r\n        Wrap = 1,\r\n        WrapWithOverflow = 2,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(TextWrapping, \"TextWrapping\");\r\n\r\n    export enum ScrollBarVisibility {\r\n        Disabled = 0,\r\n        Auto = 1,\r\n        Hidden = 2,\r\n        Visible = 3,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(ScrollBarVisibility, \"ScrollBarVisibility\");\r\n\r\n    export enum TextTrimming {\r\n        None = 0,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(TextTrimming, \"TextTrimming\");\r\n\r\n    export enum ClickMode {\r\n        Release = 0,\r\n        Press = 1,\r\n        Hover = 2,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(ClickMode, \"ClickMode\");\r\n\r\n    export enum PlacementMode {\r\n        Bottom = 0,\r\n        Right = 1,\r\n        Mouse = 2,\r\n        Left = 3,\r\n        Top = 4,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(PlacementMode, \"PlacementMode\");\r\n\r\n    export enum SelectionMode {\r\n        Single = 0,\r\n        Multiple = 1,\r\n        Extended = 2,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(SelectionMode, \"SelectionMode\");\r\n\r\n    export enum MediaElementState {\r\n        Closed = 0,\r\n        Opening = 1,\r\n        //Individualizing = 2,\r\n        //AcquiringLicense = 3,\r\n        Buffering = 4,\r\n        Playing = 5,\r\n        Paused = 6,\r\n        Stopped = 7\r\n    }\r\n    Fayde.CoreLibrary.addEnum(MediaElementState, \"MediaElementState\");\r\n}","/// <reference path=\"../ContentControl.ts\" />\r\n/// <reference path=\"../Enums.ts\" />\r\n\r\nmodule Fayde.Controls.Primitives {\r\n    export class ButtonBase extends ContentControl {\r\n        static ClickModeProperty = DependencyProperty.Register(\"ClickMode\", () => new Enum(ClickMode), ButtonBase, ClickMode.Release);\r\n        static IsPressedProperty = DependencyProperty.RegisterReadOnly(\"IsPressed\", () => Boolean, ButtonBase, false, (d, args) => (<ButtonBase>d).OnIsPressedChanged(args));\r\n        static IsFocusedProperty = DependencyProperty.RegisterReadOnly(\"IsFocused\", () => Boolean, ButtonBase, false);\r\n        static CommandProperty = DependencyProperty.RegisterCore(\"Command\", () => Input.ICommand_, ButtonBase, undefined, (d, args) => (<ButtonBase>d).OnCommandChanged(args));\r\n        static CommandParameterProperty = DependencyProperty.RegisterCore(\"CommandParameter\", () => Object, ButtonBase, undefined, (d, args) => (<ButtonBase>d).OnCommandParameterChanged(args));\r\n        ClickMode: ClickMode;\r\n        IsPressed: boolean;\r\n        IsFocused: boolean;\r\n        Command: Input.ICommand;\r\n        CommandParameter: any;\r\n        Click = new RoutedEvent<RoutedEventArgs>();\r\n\r\n        private _IsMouseCaptured: boolean = false;\r\n        private _TouchCaptures: number[];\r\n        private _IsMouseLeftButtonDown: boolean = false;\r\n        private _IsSpaceKeyDown: boolean = false;\r\n        _MousePosition: Point = new Point();\r\n        private _SuspendStateChanges: boolean = false;\r\n\r\n        constructor() {\r\n            super();\r\n            this.IsTabStop = true;\r\n        }\r\n\r\n        OnIsPressedChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this.UpdateVisualState();\r\n        }\r\n\r\n        OnIsEnabledChanged(e: IDependencyPropertyChangedEventArgs) {\r\n            if (!!e.NewValue)\r\n                return;\r\n            this._DoWithSuspend(() => {\r\n                this.SetCurrentValue(ButtonBase.IsFocusedProperty, false);\r\n                this.SetCurrentValue(ButtonBase.IsPressedProperty, false);\r\n                this._IsMouseCaptured = false;\r\n                this._IsSpaceKeyDown = false;\r\n                this._IsMouseLeftButtonDown = false;\r\n            });\r\n        }\r\n        OnMouseEnter(e: Input.MouseEventArgs) {\r\n            super.OnMouseEnter(e);\r\n            this.UpdateVisualState();\r\n\r\n            if (this.ClickMode !== ClickMode.Hover || !this.IsEnabled)\r\n                return;\r\n\r\n            this._DoWithSuspend(() => {\r\n                this.SetCurrentValue(ButtonBase.IsPressedProperty, true);\r\n                this.OnClick();\r\n            });\r\n        }\r\n        OnMouseLeave(e: Input.MouseEventArgs) {\r\n            super.OnMouseLeave(e);\r\n            this.UpdateVisualState();\r\n\r\n            if (this.ClickMode !== ClickMode.Hover || !this.IsEnabled)\r\n                return;\r\n\r\n            this._DoWithSuspend(() => {\r\n                this.SetCurrentValue(ButtonBase.IsPressedProperty, false);\r\n            });\r\n        }\r\n        OnMouseMove(e: Input.MouseEventArgs) {\r\n            super.OnMouseMove(e);\r\n\r\n            this._MousePosition = e.GetPosition(this);\r\n\r\n            if (this._IsMouseLeftButtonDown && this.IsEnabled && this.ClickMode !== ClickMode.Hover && this._IsMouseCaptured && !this._IsSpaceKeyDown) {\r\n                this.SetCurrentValue(ButtonBase.IsPressedProperty, this._IsValidPosition(this._MousePosition));\r\n            }\r\n        }\r\n        OnMouseLeftButtonDown(e: Input.MouseButtonEventArgs) {\r\n            super.OnMouseLeftButtonDown(e);\r\n\r\n            this._IsMouseLeftButtonDown = true;\r\n            if (!this.IsEnabled)\r\n                return;\r\n            var clickMode = this.ClickMode;\r\n            if (clickMode === ClickMode.Hover)\r\n                return;\r\n\r\n            e.Handled = true;\r\n            this._DoWithSuspend(() => {\r\n                this.Focus();\r\n                this._CaptureMouseInternal();\r\n                if (this._IsMouseCaptured)\r\n                    this.SetCurrentValue(ButtonBase.IsPressedProperty, true);\r\n            });\r\n\r\n            if (clickMode === ClickMode.Press)\r\n                this.OnClick();\r\n        }\r\n        OnMouseLeftButtonUp(e: Input.MouseButtonEventArgs) {\r\n            super.OnMouseLeftButtonDown(e);\r\n\r\n            this._IsMouseLeftButtonDown = false;\r\n            if (!this.IsEnabled)\r\n                return;\r\n            var clickMode = this.ClickMode;\r\n            if (clickMode === ClickMode.Hover)\r\n                return;\r\n\r\n            e.Handled = true;\r\n            if (!this._IsSpaceKeyDown && this.IsPressed && clickMode === ClickMode.Release)\r\n                this.OnClick();\r\n\r\n            if (!this._IsSpaceKeyDown) {\r\n                this._ReleaseMouseCaptureInternal();\r\n                this.SetCurrentValue(ButtonBase.IsPressedProperty, false);\r\n            }\r\n        }\r\n\r\n        OnGotFocus(e: RoutedEventArgs) {\r\n            super.OnGotFocus(e);\r\n            this.SetCurrentValue(ButtonBase.IsFocusedProperty, true);\r\n            this.UpdateVisualState();\r\n        }\r\n        OnLostFocus(e: RoutedEventArgs) {\r\n            super.OnLostFocus(e);\r\n            this.SetCurrentValue(ButtonBase.IsFocusedProperty, false);\r\n\r\n            if (this.ClickMode === ClickMode.Hover)\r\n                return;\r\n\r\n            this._DoWithSuspend(() => {\r\n                this.SetCurrentValue(ButtonBase.IsPressedProperty, false);\r\n                this._ReleaseMouseCaptureInternal();\r\n                this._IsSpaceKeyDown = false;\r\n            });\r\n        }\r\n\r\n        OnTouchMove(e: Input.TouchEventArgs) {\r\n            super.OnTouchMove(e);\r\n            if (!this.IsEnabled || e.Device.Captured !== this)\r\n                return;\r\n            var tp = e.GetTouchPoint(this);\r\n            this.SetCurrentValue(ButtonBase.IsPressedProperty, this._IsValidPosition(tp.Position));\r\n        }\r\n        OnTouchDown(e: Input.TouchEventArgs) {\r\n            super.OnTouchDown(e);\r\n            if (!this.IsEnabled)\r\n                return;\r\n            e.Handled = true;\r\n            this._DoWithSuspend(() => {\r\n                this.Focus();\r\n                if (e.Device.Capture(this))\r\n                    this.SetCurrentValue(ButtonBase.IsPressedProperty, true);\r\n            });\r\n\r\n            if (this.ClickMode === ClickMode.Press)\r\n                this.OnClick();\r\n        }\r\n        OnTouchUp(e: Input.TouchEventArgs) {\r\n            super.OnTouchUp(e);\r\n            if (!this.IsEnabled)\r\n                return;\r\n            e.Handled = true;\r\n            if (this.IsPressed && this.ClickMode === ClickMode.Release)\r\n                this.OnClick();\r\n            e.Device.ReleaseCapture(this);\r\n            this.SetCurrentValue(ButtonBase.IsPressedProperty, false);\r\n        }\r\n\r\n        OnClick() {\r\n            var cmd = this.Command;\r\n            var par = this.CommandParameter;\r\n            if (cmd != null) {\r\n                var canf = cmd.CanExecute;\r\n                if ((canf == null || typeof canf !== \"function\" || canf(par)) && (cmd.Execute && typeof cmd.Execute === \"function\"))\r\n                    cmd.Execute(par);\r\n            }\r\n\r\n            this.Click.raise(this, new RoutedEventArgs());\r\n        }\r\n\r\n        private _DoWithSuspend(action: () => void) {\r\n            this._SuspendStateChanges = true;\r\n            try {\r\n                action();\r\n            } finally {\r\n                this._SuspendStateChanges = false;\r\n                this.UpdateVisualState();\r\n            }\r\n        }\r\n\r\n        UpdateVisualState(useTransitions?: boolean) {\r\n            if (this._SuspendStateChanges)\r\n                return;\r\n            super.UpdateVisualState(useTransitions);\r\n        }\r\n        GoToStateCommon(gotoFunc: (state: string) => boolean): boolean {\r\n            if (!this.IsEnabled)\r\n                return gotoFunc(\"Disabled\");\r\n            if (this.IsPressed)\r\n                return gotoFunc(\"Pressed\");\r\n            if (this.IsMouseOver)\r\n                return gotoFunc(\"MouseOver\");\r\n            return gotoFunc(\"Normal\");\r\n        }\r\n\r\n        private _CaptureMouseInternal() {\r\n            if (!this._IsMouseCaptured)\r\n                this._IsMouseCaptured = this.CaptureMouse();\r\n        }\r\n        private _ReleaseMouseCaptureInternal() {\r\n            this.ReleaseMouseCapture();\r\n            this._IsMouseCaptured = false;\r\n        }\r\n        private _IsValidPosition(pos: Point): boolean {\r\n            return pos.x >= 0.0 && pos.x <= this.ActualWidth\r\n                && pos.y >= 0.0 && pos.y <= this.ActualHeight;\r\n        }\r\n\r\n        private OnCommandChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            var cmd = Input.ICommand_.as(args.OldValue);\r\n            if (cmd)\r\n                cmd.CanExecuteChanged.off(this.OnCommandCanExecuteChanged, this);\r\n\r\n            cmd = Input.ICommand_.as(args.NewValue);\r\n            if (cmd) {\r\n                cmd.CanExecuteChanged.on(this.OnCommandCanExecuteChanged, this);\r\n                this.IsEnabled = cmd.CanExecute(this.CommandParameter);\r\n            }\r\n        }\r\n        private OnCommandCanExecuteChanged(sender, e) {\r\n            this.IsEnabled = this.Command.CanExecute(this.CommandParameter);\r\n        }\r\n        private OnCommandParameterChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            var cmd = this.Command;\r\n            if (cmd)\r\n                this.IsEnabled = cmd.CanExecute(args.NewValue);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ButtonBase);\r\n}","/// <reference path=\"Primitives/ButtonBase.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class Button extends Primitives.ButtonBase {\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = Button;\r\n        }\r\n\r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n            this.UpdateVisualState(false);\r\n        }\r\n\r\n        OnIsEnabledChanged(e: IDependencyPropertyChangedEventArgs) {\r\n            super.OnIsEnabledChanged(e);\r\n            this.IsTabStop = e.NewValue;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Button);\r\n    TemplateVisualStates(Button, \r\n        { GroupName: \"CommonStates\", Name: \"Normal\" },\r\n        { GroupName: \"CommonStates\", Name: \"MouseOver\" },\r\n        { GroupName: \"CommonStates\", Name: \"Pressed\" },\r\n        { GroupName: \"CommonStates\", Name: \"Disabled\" },\r\n        { GroupName: \"FocusStates\", Name: \"Unfocused\" },\r\n        { GroupName: \"FocusStates\", Name: \"Focused\" });\r\n}","/// <reference path=\"XamlObject.ts\" />\r\n\r\nmodule Fayde {\r\n    export class XamlObjectCollection<T extends XamlObject> extends XamlObject implements nullstone.ICollection<T> {\r\n        _ht: Array<T> = [];\r\n\r\n        AttachTo (xobj: XamlObject) {\r\n            var error = new BError();\r\n            if (!this.XamlNode.AttachTo(xobj.XamlNode, error))\r\n                error.ThrowException();\r\n        }\r\n\r\n        get Count () {\r\n            return this._ht.length;\r\n        }\r\n\r\n        GetRange (startIndex: number, endIndex: number): T[] {\r\n            return this._ht.slice(startIndex, endIndex);\r\n        }\r\n\r\n        GetValueAt (index: number): T {\r\n            return this._ht[index];\r\n        }\r\n\r\n        SetValueAt (index: number, value: T): boolean {\r\n            if (!this.CanAdd(value))\r\n                return false;\r\n\r\n            if (index < 0 || index >= this._ht.length)\r\n                return false;\r\n\r\n            var removed = this._ht[index];\r\n            var added = value;\r\n\r\n            var error = new BError();\r\n            if (this.AddingToCollection(added, error)) {\r\n                this._ht[index] = added;\r\n                this.RemovedFromCollection(removed, true);\r\n                this._RaiseItemReplaced(removed, added, index);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        Add (value: T): number {\r\n            var rv = this.Insert(this._ht.length, value);\r\n            return rv ? this._ht.length - 1 : -1;\r\n        }\r\n\r\n        Insert (index: number, value: T): boolean {\r\n            if (!this.CanAdd(value))\r\n                return false;\r\n            if (index < 0)\r\n                return false;\r\n            var count = this._ht.length;\r\n            if (index > count)\r\n                index = count;\r\n\r\n            var error = new BError();\r\n            if (this.AddingToCollection(value, error)) {\r\n                this._ht.splice(index, 0, value);\r\n                this._RaiseItemAdded(value, index);\r\n                return true;\r\n            }\r\n            if (error.Message)\r\n                throw new Exception(error.Message);\r\n            return false;\r\n        }\r\n\r\n        Remove (value: T): boolean {\r\n            var index = this.IndexOf(value);\r\n            if (index === -1)\r\n                return false;\r\n            return this.RemoveAt(index);\r\n        }\r\n\r\n        RemoveAt (index: number): boolean {\r\n            if (index < 0 || index >= this._ht.length)\r\n                return false;\r\n            var value = this._ht[index];\r\n            this._ht.splice(index, 1);\r\n            this.RemovedFromCollection(value, true);\r\n            this._RaiseItemRemoved(value, index);\r\n            return true;\r\n        }\r\n\r\n        Clear (): boolean {\r\n            var old = this._ht;\r\n            //LOOKS USELESS: this._RaiseClearing(old);\r\n            this._ht = [];\r\n            var len = old.length;\r\n            for (var i = 0; i < len; i++) {\r\n                this.RemovedFromCollection(old[i], true);\r\n            }\r\n            this._RaiseCleared(old);\r\n            return true;\r\n        }\r\n\r\n        IndexOf (value: T): number {\r\n            return this._ht.indexOf(value);\r\n        }\r\n\r\n        Contains (value: T): boolean {\r\n            return this.IndexOf(value) > -1;\r\n        }\r\n\r\n        CanAdd (value: T): boolean {\r\n            return true;\r\n        }\r\n\r\n        AddingToCollection (value: T, error: BError): boolean {\r\n            if (value instanceof XamlObject)\r\n                return value.XamlNode.AttachTo(this.XamlNode, error);\r\n            return true;\r\n        }\r\n\r\n        RemovedFromCollection (value: T, isValueSafe: boolean) {\r\n            if (value instanceof XamlObject)\r\n                value.XamlNode.Detach();\r\n        }\r\n\r\n        getEnumerator (reverse?: boolean): nullstone.IEnumerator<T> {\r\n            return nullstone.IEnumerator_.fromArray(this._ht, reverse);\r\n        }\r\n\r\n        GetNodeEnumerator<U extends XamlNode>(reverse?: boolean): nullstone.IEnumerator<U> {\r\n            var prev = this.getEnumerator(reverse);\r\n            return {\r\n                current: undefined,\r\n                moveNext: function (): boolean {\r\n                    if (!prev.moveNext()) {\r\n                        this.current = undefined;\r\n                        return false;\r\n                    }\r\n                    var xobj = prev.current;\r\n                    this.current = xobj.XamlNode;\r\n                    return true;\r\n                }\r\n            };\r\n        }\r\n\r\n        _RaiseItemAdded (value: T, index: number) {\r\n        }\r\n\r\n        _RaiseItemRemoved (value: T, index: number) {\r\n        }\r\n\r\n        _RaiseItemReplaced (removed: T, added: T, index: number) {\r\n        }\r\n\r\n        //_RaiseClearing(arr: T[]) { }\r\n        _RaiseCleared (old: T[]) {\r\n        }\r\n\r\n        CloneCore (source: XamlObjectCollection<T>) {\r\n            for (var en = source.getEnumerator(); en.moveNext();) {\r\n                this.Add(Fayde.Clone(en.current));\r\n            }\r\n        }\r\n\r\n        ToArray (): T[] {\r\n            return this._ht.slice(0);\r\n        }\r\n    }\r\n    nullstone.ICollection_.mark(XamlObjectCollection);\r\n}","/// <reference path=\"PropertyStore.ts\" />\r\n\r\nmodule Fayde.Providers {\r\n    export class ImmutableStore extends PropertyStore {\r\n        static Instance: ImmutableStore;\r\n\r\n        GetValue(storage: IPropertyStorage): any {\r\n            return storage.Local;\r\n        }\r\n        GetValuePrecedence(storage: IPropertyStorage): PropertyPrecedence {\r\n            return PropertyPrecedence.LocalValue;\r\n        }\r\n        SetLocalValue(storage: Providers.IPropertyStorage, newValue: any) {\r\n            console.warn(\"Trying to set value for immutable property.\");\r\n        }\r\n        ClearValue(storage: Providers.IPropertyStorage) {\r\n            console.warn(\"Trying to clear value for immutable property.\");\r\n        }\r\n        ListenToChanged(target: DependencyObject, propd: DependencyProperty, func: (sender, args: IDependencyPropertyChangedEventArgs) => void, closure: any): Providers.IPropertyChangedListener {\r\n            return {\r\n                Property: propd,\r\n                OnPropertyChanged: function (sender: DependencyObject, args: IDependencyPropertyChangedEventArgs) { },\r\n                Detach: function () { }\r\n            };\r\n        }\r\n        Clone(dobj: DependencyObject, sourceStorage: IPropertyStorage): IPropertyStorage {\r\n            if (sourceStorage.Local instanceof XamlObjectCollection) {\r\n                var newStorage = Providers.GetStorage(dobj, sourceStorage.Property);\r\n                var newColl = <XamlObjectCollection<any>>newStorage.Local;\r\n                newColl.CloneCore(<XamlObjectCollection<any>>sourceStorage.Local);\r\n                var anims = newStorage.Animations = sourceStorage.Animations;\r\n                if (anims) {\r\n                    for (var i = 0; i < anims.length; i++) {\r\n                        anims[i].PropStorage = newStorage;\r\n                    }\r\n                }\r\n                return newStorage;\r\n            } else {\r\n                console.warn(\"Cloning Immutable improperly\");\r\n                return super.Clone(dobj, sourceStorage);\r\n            }\r\n        }\r\n    }\r\n    ImmutableStore.Instance = new ImmutableStore();\r\n}","/// <reference path=\"../Core/FrameworkElement.ts\" />\r\n/// <reference path=\"../Core/XamlObjectCollection.ts\" />\r\n/// <reference path=\"../Core/Providers/ImmutableStore.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    class PanelChildrenCollection extends XamlObjectCollection<UIElement> {\r\n        $$updaters: minerva.core.Updater[] = [];\r\n        AddingToCollection(value: UIElement, error: BError): boolean {\r\n            var panelNode = <PanelNode>this.XamlNode.ParentNode;\r\n            if (!panelNode.AttachVisualChild(value, error))\r\n                return false;\r\n            return super.AddingToCollection(value, error);\r\n        }\r\n        RemovedFromCollection(value: UIElement, isValueSafe: boolean) {\r\n            var panelNode = <PanelNode>this.XamlNode.ParentNode;\r\n            panelNode.DetachVisualChild(value, null);\r\n            super.RemovedFromCollection(value, isValueSafe);\r\n        }\r\n        _RaiseCleared (values: UIElement[]) {\r\n            this.$$updaters.length = 0;\r\n        }\r\n        _RaiseItemAdded(value: UIElement, index: number) {\r\n            this.$$updaters.splice(index, 0, value.XamlNode.LayoutUpdater);\r\n        }\r\n        _RaiseItemRemoved(value: UIElement, index: number) {\r\n            this.$$updaters.splice(index, 1);\r\n        }\r\n        _RaiseItemReplaced(removed: UIElement, added: UIElement, index: number) {\r\n            this.$$updaters.splice(index, 1, added.XamlNode.LayoutUpdater);\r\n        }\r\n    }\r\n\r\n    export class PanelNode extends FENode {\r\n        LayoutUpdater: minerva.controls.panel.PanelUpdater;\r\n        XObject: Panel;\r\n        constructor(xobj: Panel) {\r\n            super(xobj);\r\n        }\r\n        AttachVisualChild(uie: UIElement, error: BError): boolean {\r\n            this.OnVisualChildAttached(uie);\r\n            uie.XamlNode.SetIsLoaded(this.IsLoaded);\r\n            return true;\r\n        }\r\n        DetachVisualChild(uie: UIElement, error: BError): boolean {\r\n            this.OnVisualChildDetached(uie);\r\n            uie.XamlNode.SetIsLoaded(false);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    export class Panel extends FrameworkElement {\r\n        XamlNode: PanelNode;\r\n        CreateNode(): PanelNode { return new PanelNode(this); }\r\n        CreateLayoutUpdater() { return new minerva.controls.panel.PanelUpdater(); }\r\n\r\n        static BackgroundProperty = DependencyProperty.Register(\"Background\", () => Media.Brush, Panel);\r\n        static ChildrenProperty = DependencyProperty.RegisterImmutable<XamlObjectCollection<UIElement>>(\"Children\", () => PanelChildrenCollection, Panel);\r\n        static ZIndexProperty = DependencyProperty.RegisterAttached(\"ZIndex\", () => Number, Panel, 0);\r\n        static GetZIndex(uie: UIElement): number { return uie.GetValue(Panel.ZIndexProperty); }\r\n        static SetZIndex(uie: UIElement, value: number) { uie.SetValue(Panel.ZIndexProperty, value); }\r\n        Background: Media.Brush;\r\n        Children: XamlObjectCollection<UIElement>;\r\n\r\n        constructor() {\r\n            super();\r\n            var coll = <PanelChildrenCollection>Panel.ChildrenProperty.Initialize(this);\r\n            this.XamlNode.LayoutUpdater.setChildren(coll.$$updaters);\r\n            var error = new BError();\r\n            this.XamlNode.SetSubtreeNode(coll.XamlNode, error);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Panel);\r\n    Markup.Content(Panel, Panel.ChildrenProperty);\r\n\r\n    module reactions {\r\n        UIReaction<minerva.IBrush>(Panel.BackgroundProperty, (upd, ov, nv) => {\r\n            if (nv !== ov) //nv === ov when child properties update\r\n                upd.updateBounds();\r\n            upd.invalidate();\r\n        });\r\n        UIReactionAttached<number>(Panel.ZIndexProperty, minerva.controls.panel.reactTo.zIndex);\r\n    }\r\n}","/// <reference path=\"Panel.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class Canvas extends Panel {\r\n        CreateLayoutUpdater() { return new minerva.controls.canvas.CanvasUpdater(); }\r\n\r\n        static TopProperty: DependencyProperty = DependencyProperty.RegisterAttached(\"Top\", () => Number, Canvas, 0.0);\r\n        static GetTop(d: DependencyObject): number { return d.GetValue(Canvas.TopProperty); }\r\n        static SetTop(d: DependencyObject, value: number) { d.SetValue(Canvas.TopProperty, value); }\r\n        static LeftProperty: DependencyProperty = DependencyProperty.RegisterAttached(\"Left\", () => Number, Canvas, 0.0);\r\n        static GetLeft(d: DependencyObject): number { return d.GetValue(Canvas.LeftProperty); }\r\n        static SetLeft(d: DependencyObject, value: number) { d.SetValue(Canvas.LeftProperty, value); }\r\n    }\r\n    Fayde.CoreLibrary.add(Canvas);\r\n\r\n    module reactions {\r\n        UIReactionAttached<number>(Canvas.TopProperty, minerva.controls.canvas.reactTo.top);\r\n        UIReactionAttached<number>(Canvas.LeftProperty, minerva.controls.canvas.reactTo.left);\r\n    }\r\n}","/// <reference path=\"ButtonBase.ts\" />\r\n\r\nmodule Fayde.Controls.Primitives {\r\n    export class ToggleButton extends ButtonBase {\r\n        Checked = new RoutedEvent<RoutedEventArgs>();\r\n        Indeterminate = new RoutedEvent<RoutedEventArgs>();\r\n        Unchecked = new RoutedEvent<RoutedEventArgs>();\r\n\r\n        static IsCheckedProperty: DependencyProperty = DependencyProperty.RegisterCore(\"IsChecked\", () => Boolean, ToggleButton, false, (d, args) => (<ToggleButton>d).OnIsCheckedChanged(args));\r\n        static IsThreeStateProperty: DependencyProperty = DependencyProperty.RegisterCore(\"IsThreeState\", () => Boolean, ToggleButton, false);\r\n        IsChecked: boolean;\r\n        IsThreeState: boolean;\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = ToggleButton;\r\n        }\r\n\r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n            this.UpdateVisualState(false);\r\n        }\r\n\r\n        OnContentChanged(oldContent: any, newContent: any) {\r\n            super.OnContentChanged(oldContent, newContent);\r\n            this.UpdateVisualState();\r\n        }\r\n        OnClick() {\r\n            this.OnToggle();\r\n            super.OnClick();\r\n        }\r\n        UpdateVisualState(useTransitions?: boolean) {\r\n            useTransitions = useTransitions !== false;\r\n            super.UpdateVisualState(useTransitions);\r\n\r\n            var isChecked = this.IsChecked;\r\n            var vsm = Fayde.Media.VSM.VisualStateManager;\r\n            if (isChecked === true) {\r\n                vsm.GoToState(this, \"Checked\", useTransitions);\r\n            } else if (isChecked === false) {\r\n                vsm.GoToState(this, \"Unchecked\", useTransitions);\r\n            } else {\r\n                // isChecked is null\r\n                if (!vsm.GoToState(this, \"Indeterminate\", useTransitions)) {\r\n                    vsm.GoToState(this, \"Unchecked\", useTransitions)\r\n                }\r\n            }\r\n        }\r\n\r\n        OnIsCheckedChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            var isChecked = args.NewValue;\r\n            this.UpdateVisualState();\r\n            var rargs = new RoutedEventArgs();\r\n            if (isChecked === true) {\r\n                this.Checked.raise(this, rargs);\r\n            } else if (isChecked === false) {\r\n                this.Unchecked.raise(this, rargs);\r\n            } else {\r\n                this.Indeterminate.raise(this, rargs);\r\n            }\r\n        }\r\n        OnToggle() {\r\n            var isChecked = this.IsChecked;\r\n            if (isChecked === true) {\r\n                this.IsChecked = this.IsThreeState ? null : false;\r\n            } else {\r\n                this.IsChecked = isChecked != null;\r\n            }\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ToggleButton);\r\n    TemplateVisualStates(ToggleButton, { GroupName: \"CommonStates\", Name: \"Pressed\" },\r\n        { GroupName: \"CommonStates\", Name: \"MouseOver\" },\r\n        { GroupName: \"CommonStates\", Name: \"Normal\" },\r\n        { GroupName: \"CommonStates\", Name: \"Disabled\" },\r\n        { GroupName: \"FocusStates\", Name: \"Unfocused\" },\r\n        { GroupName: \"FocusStates\", Name: \"Focused\" },\r\n        { GroupName: \"CheckStates\", Name: \"Checked\" },\r\n        { GroupName: \"CheckStates\", Name: \"Unchecked\" },\r\n        { GroupName: \"CheckStates\", Name: \"Indeterminate\" });\r\n}","/// <reference path=\"Primitives/ToggleButton.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class CheckBox extends Primitives.ToggleButton {\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = CheckBox;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(CheckBox);\r\n    TemplateVisualStates(CheckBox, \r\n        { GroupName: \"CommonStates\", Name: \"Normal\" },\r\n        { GroupName: \"CommonStates\", Name: \"MouseOver\" },\r\n        { GroupName: \"CommonStates\", Name: \"Pressed\" },\r\n        { GroupName: \"CommonStates\", Name: \"Disabled\" },\r\n        { GroupName: \"FocusStates\", Name: \"Unfocused\" },\r\n        { GroupName: \"FocusStates\", Name: \"Focused\" },\r\n        { GroupName: \"CheckStates\", Name: \"Checked\" },\r\n        { GroupName: \"CheckStates\", Name: \"Unchecked\" },\r\n        { GroupName: \"CheckStates\", Name: \"Indeterminate\" },\r\n        { GroupName: \"ValidationStates\", Name: \"InvalidUnfocused\" },\r\n        { GroupName: \"ValidationStates\", Name: \"InvalidFocused\" },\r\n        { GroupName: \"ValidationStates\", Name: \"Valid\" });\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n/// <reference path=\"../Core/XamlObjectCollection.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class ColumnDefinition extends DependencyObject implements minerva.controls.grid.IColumnDefinition {\r\n        //NOTE: Will not receive property changes from GridLength\r\n        static WidthProperty = DependencyProperty.Register(\"Width\", () => GridLength, ColumnDefinition, undefined, Incite);\r\n        static MaxWidthProperty = DependencyProperty.Register(\"MaxWidth\", () => Number, ColumnDefinition, Number.POSITIVE_INFINITY, Incite);\r\n        static MinWidthProperty = DependencyProperty.Register(\"MinWidth\", () => Number, ColumnDefinition, 0.0, Incite);\r\n        static ActualWidthProperty = DependencyProperty.RegisterReadOnly(\"ActualWidth\", () => Number, ColumnDefinition, 0.0);\r\n        Width: GridLength;\r\n        MaxWidth: number;\r\n        MinWidth: number;\r\n        ActualWidth: number;\r\n\r\n        setActualWidth (value: number) {\r\n            this.SetCurrentValue(ColumnDefinition.ActualWidthProperty, value);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ColumnDefinition);\r\n\r\n    import GridUnitType = minerva.controls.grid.GridUnitType;\r\n    function ConvertColumnDefinition (o: any): ColumnDefinition {\r\n        if (!o || o instanceof ColumnDefinition)\r\n            return <ColumnDefinition>o;\r\n        var s: string = o.toString();\r\n        var cd = new ColumnDefinition();\r\n        if (s.toLowerCase() === \"auto\") {\r\n            cd.Width = new GridLength(0, GridUnitType.Auto);\r\n            return cd;\r\n        }\r\n        if (s === \"*\") {\r\n            cd.Width = new GridLength(1, GridUnitType.Star);\r\n            return cd;\r\n        }\r\n        var v = parseFloat(s);\r\n        if (isNaN(v))\r\n            throw new XamlParseException(\"Invalid ColumnDefinition: '\" + s + \"'.\");\r\n        cd.Width = new GridLength(v, s[s.length - 1] === \"*\" ? GridUnitType.Star : GridUnitType.Pixel);\r\n        return cd;\r\n    }\r\n\r\n    nullstone.registerTypeConverter(ColumnDefinition, ConvertColumnDefinition);\r\n\r\n    export class ColumnDefinitionCollection extends XamlObjectCollection<ColumnDefinition> {\r\n        _RaiseItemAdded (value: ColumnDefinition, index: number) {\r\n            Incite(this, {\r\n                item: value,\r\n                index: index,\r\n                add: true\r\n            });\r\n        }\r\n\r\n        _RaiseItemRemoved (value: ColumnDefinition, index: number) {\r\n            Incite(this, {\r\n                item: value,\r\n                index: index,\r\n                add: false\r\n            });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ColumnDefinitionCollection);\r\n\r\n    function ConvertColumnDefinitionCollection (o: any): ColumnDefinitionCollection {\r\n        if (!o || o instanceof ColumnDefinitionCollection)\r\n            return <ColumnDefinitionCollection>o;\r\n        if (typeof o === \"string\") {\r\n            var tokens = (<string>o).split(\" \");\r\n            var len = tokens.length;\r\n            var cdc = new ColumnDefinitionCollection();\r\n            var cd: ColumnDefinition;\r\n            for (var i = 0; i < len; i++) {\r\n                if (cd = ConvertColumnDefinition(tokens[i]))\r\n                    cdc.Add(cd);\r\n            }\r\n            return cdc;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    nullstone.registerTypeConverter(ColumnDefinitionCollection, ConvertColumnDefinitionCollection);\r\n}","/// <reference path=\"Control.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class ItemsControlNode extends ControlNode {\r\n        XObject: ItemsControl;\r\n        constructor(xobj: ItemsControl) {\r\n            super(xobj);\r\n        }\r\n\r\n        ItemsPresenter: ItemsPresenter = null;\r\n        GetDefaultVisualTree(): UIElement {\r\n            var presenter = this.ItemsPresenter;\r\n            if (!presenter)\r\n                (presenter = new ItemsPresenter()).TemplateOwner = this.XObject;\r\n            return presenter;\r\n        }\r\n    }\r\n\r\n    export class ItemsControl extends Control {\r\n        XamlNode: ItemsControlNode;\r\n        CreateNode(): ItemsControlNode { return new ItemsControlNode(this); }\r\n\r\n        get IsItemsControl(): boolean { return true; }\r\n\r\n        static DisplayMemberPathProperty = DependencyProperty.Register(\"DisplayMemberPath\", () => String, ItemsControl, null, (d, args) => (<ItemsControl>d).OnDisplayMemberPathChanged(args));\r\n        static ItemsPanelProperty = DependencyProperty.Register(\"ItemsPanel\", () => ItemsPanelTemplate, ItemsControl);\r\n        static ItemsSourceProperty = DependencyProperty.RegisterFull(\"ItemsSource\", () => nullstone.IEnumerable_, ItemsControl, null, (d, args) => (<ItemsControl>d).OnItemsSourceChanged(args));\r\n        static ItemsProperty = DependencyProperty.RegisterImmutable<ItemCollection>(\"Items\", () => ItemCollection, ItemsControl);\r\n        static ItemTemplateProperty = DependencyProperty.Register(\"ItemTemplate\", () => DataTemplate, ItemsControl, undefined, (d, args) => (<ItemsControl>d).OnItemTemplateChanged(args));\r\n\r\n        static IsItemsHostProperty = DependencyProperty.RegisterAttached(\"IsItemsHost\", () => Boolean, ItemsControl, false);\r\n        static GetIsItemsHost(d: DependencyObject): boolean { return d.GetValue(ItemsControl.IsItemsHostProperty) === true; }\r\n        static SetIsItemsHost(d: DependencyObject, value: boolean) { d.SetValue(ItemsControl.IsItemsHostProperty, value === true); }\r\n\r\n        DisplayMemberPath: string;\r\n        ItemsPanel: ItemsPanelTemplate;\r\n        ItemsSource: nullstone.IEnumerable<any>;\r\n        Items: ItemCollection;\r\n        ItemTemplate: DataTemplate;\r\n\r\n        OnDisplayMemberPathChanged(e: IDependencyPropertyChangedEventArgs) {\r\n            for (var en = this.ItemContainersManager.GetEnumerator(); en.moveNext();) {\r\n                this.UpdateContainerTemplate(en.current, en.CurrentItem);\r\n            }\r\n        }\r\n        OnItemsSourceChanged(e: IDependencyPropertyChangedEventArgs) {\r\n            //Unsubscribe from old\r\n            var nc = Collections.INotifyCollectionChanged_.as(e.OldValue);\r\n            if (nc)\r\n                nc.CollectionChanged.off(this._OnItemsSourceUpdated, this);\r\n            var items = this.Items;\r\n            var resetargs = Collections.CollectionChangedEventArgs.Reset(items.ToArray());\r\n\r\n            //Reset old\r\n            try {\r\n                this._SuspendItemsChanged = true;\r\n                items.Clear();\r\n            } finally {\r\n                this._SuspendItemsChanged = false;\r\n            }\r\n            this.OnItemsChanged(resetargs);\r\n\r\n            //Notify new\r\n            this._IsDataBound = !!e.NewValue;\r\n            var arr = toArray(e.NewValue);\r\n            try {\r\n                this._SuspendItemsChanged = true;\r\n                if (arr)\r\n                    items.AddRange(arr);\r\n            } finally {\r\n                this._SuspendItemsChanged = false;\r\n            }\r\n            if (arr)\r\n                this.OnItemsChanged(Collections.CollectionChangedEventArgs.AddRange(arr, 0));\r\n\r\n            //Subscribe to new\r\n            var nc = Collections.INotifyCollectionChanged_.as(e.NewValue);\r\n            if (nc)\r\n                nc.CollectionChanged.on(this._OnItemsSourceUpdated, this);\r\n        }\r\n\r\n        OnItemTemplateChanged (e: IDependencyPropertyChangedEventArgs) {\r\n            for (var en = this.ItemContainersManager.GetEnumerator(); en.moveNext();) {\r\n                this.UpdateContainerTemplate(en.current, en.CurrentItem);\r\n            }\r\n        }\r\n\r\n        private _ItemContainersManager: Internal.IItemContainersManager;\r\n        get ItemContainersManager(): Internal.IItemContainersManager { return this._ItemContainersManager; }\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = ItemsControl;\r\n            var coll = <ItemCollection>ItemsControl.ItemsProperty.Initialize(this);\r\n            coll.ItemsChanged.on(this._OnItemsUpdated, this);\r\n\r\n            this._ItemContainersManager = new Internal.ItemContainersManager(this);\r\n        }\r\n\r\n        PrepareContainerForItem(container: UIElement, item: any) {\r\n            if (this.DisplayMemberPath != null && this.ItemTemplate != null)\r\n                throw new InvalidOperationException(\"Cannot set 'DisplayMemberPath' and 'ItemTemplate' simultaneously\");\r\n            this.UpdateContainerTemplate(container, item);\r\n        }\r\n        ClearContainerForItem(container: UIElement, item: any) {\r\n            if (container instanceof ContentPresenter) {\r\n                var cp = <ContentPresenter>container;\r\n                if (cp.Content === item)\r\n                    cp.Content = null;\r\n            } else if (container instanceof ContentControl) {\r\n                var cc = <ContentControl>container;\r\n                if (cc.Content === item)\r\n                    cc.Content = null;\r\n            }\r\n        }\r\n        GetContainerForItem(): UIElement { return new ContentPresenter(); }\r\n        IsItemItsOwnContainer(item: any): boolean { return item instanceof UIElement; }\r\n\r\n        private _IsDataBound = false;\r\n        private _SuspendItemsChanged = false;\r\n        private _OnItemsUpdated(sender: any, e: Collections.CollectionChangedEventArgs) {\r\n            if (this._SuspendItemsChanged) //Ignore OnItemsSourceChanged operations\r\n                return;\r\n            if (this._IsDataBound)\r\n                throw new InvalidOperationException(\"Cannot modify Items while bound to ItemsSource.\");\r\n            this.OnItemsChanged(e);\r\n        }\r\n        private _OnItemsSourceUpdated(sender: any, e: Collections.CollectionChangedEventArgs) {\r\n            var items = this.Items;\r\n            try {\r\n                this._SuspendItemsChanged = true;\r\n                switch (e.Action) {\r\n                    case Collections.CollectionChangedAction.Add:\r\n                        for (var i = 0, len = e.NewItems.length; i < len; i++) {\r\n                            items.Insert(e.NewStartingIndex + i, e.NewItems[i]);\r\n                        }\r\n                        break;\r\n                    case Collections.CollectionChangedAction.Remove:\r\n                        for (var i = 0, len = e.OldItems.length; i < len; i++) {\r\n                            items.RemoveAt(e.OldStartingIndex);\r\n                        }\r\n                        break;\r\n                    case Collections.CollectionChangedAction.Replace:\r\n                        items.SetValueAt(e.NewStartingIndex, e.NewItems[0]);\r\n                        break;\r\n                    case Collections.CollectionChangedAction.Reset:\r\n                        items.Clear();\r\n                        break;\r\n                }\r\n            } finally {\r\n                this._SuspendItemsChanged = false;\r\n            }\r\n            this.OnItemsChanged(e);\r\n        }\r\n        OnItemsChanged(e: Collections.CollectionChangedEventArgs) {\r\n            switch (e.Action) {\r\n                case Collections.CollectionChangedAction.Add:\r\n                    this.OnItemsAdded(e.NewStartingIndex, e.NewItems);\r\n                    break;\r\n                case Collections.CollectionChangedAction.Remove:\r\n                    this.OnItemsRemoved(e.OldStartingIndex, e.OldItems);\r\n                    break;\r\n                case Collections.CollectionChangedAction.Replace:\r\n                    this.OnItemsRemoved(e.NewStartingIndex, e.OldItems);\r\n                    this.OnItemsAdded(e.NewStartingIndex, e.NewItems);\r\n                    break;\r\n                case Collections.CollectionChangedAction.Reset:\r\n                    this.OnItemsRemoved(0, e.OldItems);\r\n                    break;\r\n            }\r\n        }\r\n        OnItemsAdded(index: number, newItems: any[]) {\r\n            this._ItemContainersManager.OnItemsAdded(index, newItems);\r\n            var presenter = this.XamlNode.ItemsPresenter;\r\n            if (presenter)\r\n                presenter.OnItemsAdded(index, newItems);\r\n        }\r\n        OnItemsRemoved(index: number, oldItems: any[]) {\r\n            var presenter = this.XamlNode.ItemsPresenter;\r\n            if (presenter)\r\n                presenter.OnItemsRemoved(index, oldItems);\r\n            this._ItemContainersManager.OnItemsRemoved(index, oldItems);\r\n        }\r\n\r\n        private UpdateContainerTemplate(container: UIElement, item: any) {\r\n            if (!container || container === item)\r\n                return;\r\n\r\n            var template: DataTemplate;\r\n            if (!(item instanceof UIElement))\r\n                template = this.ItemTemplate || this._GetDisplayMemberTemplate();\r\n\r\n            if (container instanceof ContentPresenter) {\r\n                var cp = <ContentPresenter>container;\r\n                cp.ContentTemplate = template;\r\n                cp.Content = item;\r\n            } else if (container instanceof ContentControl) {\r\n                var cc = <ContentControl>container;\r\n                cc.ContentTemplate = template;\r\n                cc.Content = item;\r\n            }\r\n        }\r\n        private _DisplayMemberTemplate: DataTemplate = null;\r\n        private _GetDisplayMemberTemplate(): DataTemplate {\r\n            if (!this._DisplayMemberTemplate) {\r\n                var xm = DisplayTemplate.create(this.DisplayMemberPath || \"\");\r\n                this._DisplayMemberTemplate = Markup.Load<DataTemplate>(this.App, xm);\r\n            }\r\n            return this._DisplayMemberTemplate;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ItemsControl);\r\n    Markup.Content(ItemsControl, ItemsControl.ItemsProperty);\r\n\r\n    function toArray(value: any): any[] {\r\n        if (value instanceof Array)\r\n            return <any[]>value;\r\n        var enu = nullstone.IEnumerable_.as(value);\r\n        if (enu) {\r\n            var arr = [];\r\n            for (var en = enu.getEnumerator(); en.moveNext();) {\r\n                arr.push(en.current);\r\n            }\r\n            return arr;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    module DisplayTemplate {\r\n        export function create (dmp: string) {\r\n            return Fayde.Markup.CreateXaml(\"<DataTemplate xmlns=\\\"\" + Fayde.XMLNS + \"\\\"><Grid><TextBlock Text=\\\"{Binding \" + dmp + \"}\\\" /></Grid></DataTemplate>\"\r\n                , Fayde.XMLNS + \"/itemscontrol/displaymember/\" + dmp);\r\n        }\r\n    }\r\n}","/// <reference path=\"../ItemsControl.ts\" />\r\n\r\nmodule Fayde.Controls.Primitives {\r\n    export class Selector extends ItemsControl {\r\n        static IsSynchronizedWithCurrentItemProperty = DependencyProperty.Register(\"IsSynchronizedWithCurrentItem\", () => Boolean, Selector, null, (d, args) => (<Selector>d)._OnIsSynchronizedWithCurrentItemChanged(args));\r\n        static SelectedIndexProperty = DependencyProperty.Register(\"SelectedIndex\", () => Number, Selector, -1, (d, args) => (<Selector>d)._OnSelectedIndexChanged(args));\r\n        static SelectedItemProperty = DependencyProperty.Register(\"SelectedItem\", () => Object, Selector, undefined, (d, args) => (<Selector>d)._OnSelectedItemChanged(args));\r\n        static SelectedValueProperty = DependencyProperty.Register(\"SelectedValue\", () => Object, Selector, undefined, (d, args) => (<Selector>d)._OnSelectedValueChanged(args));\r\n        static SelectedValuePathProperty = DependencyProperty.Register(\"SelectedValuePath\", () => String, Selector, \"\", (d, args) => (<Selector>d)._OnSelectedValuePathChanged(args));\r\n        static IsSelectionActiveProperty = DependencyProperty.RegisterReadOnlyCore(\"IsSelectionActive\", () => Boolean, Selector);\r\n        static SelectionModeProperty = DependencyProperty.Register(\"SelectionMode\", () => new Enum(SelectionMode), Selector, undefined, (d, args) => (<Selector>d)._OnSelectionModeChanged(args));\r\n        IsSynchronizedWithCurrentItem: boolean;\r\n        SelectedIndex: number;\r\n        SelectedItem: any;\r\n        SelectedValue: any;\r\n        SelectedValuePath: string;\r\n        IsSelectionActive: boolean;\r\n        SelectionMode: SelectionMode;\r\n\r\n        SelectionChanged: RoutedEvent<SelectionChangedEventArgs> = new RoutedEvent<SelectionChangedEventArgs>();\r\n        private _Selection: SelectorSelection;\r\n        private _SelectedItems: Collections.ObservableCollection<any> = new Collections.ObservableCollection<any>();\r\n        _SelectedItemsIsInvalid: boolean = false;\r\n        $TemplateScrollViewer: ScrollViewer = null;\r\n        private _SelectedValueWalker: Data.PropertyPathWalker = null;\r\n\r\n        private get SynchronizeWithCurrentItem(): boolean {\r\n            if (!Data.ICollectionView_.is(this.ItemsSource))\r\n                return false;\r\n            return this.IsSynchronizedWithCurrentItem !== false;\r\n        }\r\n\r\n        constructor() {\r\n            super();\r\n            this._Selection = new SelectorSelection(this);\r\n        }\r\n\r\n        get SelectedItems(): Collections.ObservableCollection<any> {\r\n            if (this._SelectedItemsIsInvalid)\r\n                this._Selection.RepopulateSelectedItems();\r\n            return this._SelectedItems;\r\n        }\r\n\r\n        private _OnIsSynchronizedWithCurrentItemChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            if (args.NewValue === true)\r\n                throw new ArgumentException(\"Setting IsSynchronizedWithCurrentItem to 'true' is not supported\");\r\n\r\n            if (args.NewValue != null)\r\n                return this.SelectedItem = null;\r\n            var icv = Data.ICollectionView_.as(this.ItemsSource);\r\n            if (icv)\r\n                this.SelectedItem = icv.CurrentItem;\r\n        }\r\n        private _OnSelectedIndexChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            if (this._Selection.IsUpdating)\r\n                return;\r\n\r\n            var items = this.Items;\r\n            if (args.NewValue < 0 || args.NewValue >= items.Count)\r\n                this._Selection.ClearSelection();\r\n            else\r\n                this._Selection.Select(items.GetValueAt(args.NewValue));\r\n        }\r\n        private _OnSelectedItemChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            if (this._Selection.IsUpdating)\r\n                return;\r\n\r\n            if (args.NewValue == null)\r\n                this._Selection.ClearSelection();\r\n            else if (this.Items.IndexOf(args.NewValue) !== -1)\r\n                this._Selection.Select(args.NewValue);\r\n            else if (this.Items.IndexOf(args.OldValue) !== -1)\r\n                this._Selection.Select(args.OldValue);\r\n            else\r\n                this._Selection.ClearSelection();\r\n        }\r\n        private _OnSelectedValueChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            if (this._Selection.IsUpdating)\r\n                return;\r\n            this._SelectItemFromValue(args.NewValue, false);\r\n        }\r\n        private _OnSelectedValuePathChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this._SelectedValueWalker = !args.NewValue ? null : new Data.PropertyPathWalker(args.NewValue);\r\n            this._SelectItemFromValue(this.SelectedValue, true);\r\n        }\r\n        private _OnSelectionModeChanged(args: DependencyPropertyChangedEventArgs) {\r\n            this._Selection.Mode = args.NewValue;\r\n            if (args.NewValue !== SelectionMode.Single)\r\n                return;\r\n            var selIndex = this.SelectedIndex;\r\n            if (selIndex === -1)\r\n                return;\r\n            this._Selection.SelectOnly(this.Items.GetValueAt(selIndex));\r\n        }\r\n\r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n            var tsv = this.$TemplateScrollViewer = <ScrollViewer>this.GetTemplateChild(\"ScrollViewer\", ScrollViewer);\r\n            if (tsv) {\r\n                tsv.$TemplatedParentHandlesScrolling = true;\r\n                tsv.HorizontalScrollBarVisibility = Controls.ScrollViewer.GetHorizontalScrollBarVisibility(this);\r\n                tsv.VerticalScrollBarVisibility = Controls.ScrollViewer.GetVerticalScrollBarVisibility(this);\r\n            }\r\n        }\r\n\r\n        OnItemsChanged(e: Collections.CollectionChangedEventArgs) {\r\n            super.OnItemsChanged(e);\r\n            var item: any;\r\n            switch (e.Action) {\r\n                case Collections.CollectionChangedAction.Add:\r\n                    var lbi: ListBoxItem;\r\n                    if (e.NewItems[0] instanceof ListBoxItem) lbi = <ListBoxItem>e.NewItems[0];\r\n                    if (lbi != null && lbi.IsSelected && !this.SelectedItems.Contains(lbi)) {\r\n                        this._Selection.Select(lbi);\r\n                    } else if (this.SelectedItem != null) {\r\n                        this._Selection.Select(this.SelectedItem);\r\n                    }\r\n                    break;\r\n                case Collections.CollectionChangedAction.Reset:\r\n                    var o: any;\r\n                    var icv = Data.ICollectionView_.as(this.ItemsSource);\r\n                    if (icv && this.SynchronizeWithCurrentItem)\r\n                        o = icv.CurrentItem;\r\n                    else\r\n                        o = this.SelectedItem;\r\n                    if (this.Items.Contains(o))\r\n                        this._Selection.Select(o);\r\n                    else\r\n                        this._Selection.ClearSelection();\r\n                    break;\r\n                case Collections.CollectionChangedAction.Remove:\r\n                    item = e.OldItems[0];\r\n                    if (this.SelectedItems.Contains(item))\r\n                        this._Selection.Unselect(item);\r\n                    else if (e.OldStartingIndex <= this.SelectedIndex)\r\n                        this._Selection.Select(this.SelectedItem);\r\n                    break;\r\n                case Collections.CollectionChangedAction.Replace:\r\n                    item = e.OldItems[0];\r\n                    this._Selection.Unselect(item);\r\n                    break;\r\n                default:\r\n                    throw new NotSupportedException(\"Collection changed action '\" + e.Action + \"' not supported\");\r\n            }\r\n        }\r\n        OnItemsSourceChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            super.OnItemsSourceChanged(args);\r\n\r\n            var view = Data.ICollectionView_.as(args.OldValue);\r\n            if (view)\r\n                view.CurrentChanged.off(this._OnCurrentItemChanged, this);\r\n            \r\n            view = Data.ICollectionView_.as(args.NewValue);\r\n            if (view) {\r\n                view.CurrentChanged.on(this._OnCurrentItemChanged, this);\r\n                if (this.SynchronizeWithCurrentItem)\r\n                    this._Selection.SelectOnly(view.CurrentItem);\r\n                else\r\n                    this._Selection.ClearSelection();\r\n            } else {\r\n                this._Selection.ClearSelection();\r\n            }\r\n        }\r\n        OnItemContainerStyleChanged(oldStyle, newStyle) { }\r\n\r\n        ClearContainerForItem(element: UIElement, item: any) {\r\n            super.ClearContainerForItem(element, item);\r\n            var lbi = <ListBoxItem>element;\r\n            lbi.ParentSelector = null;\r\n            if (lbi !== item)\r\n                lbi.Content = null;\r\n        }\r\n        PrepareContainerForItem(element: UIElement, item: any) {\r\n            super.PrepareContainerForItem(element, item);\r\n            var lbi = <ListBoxItem>element;\r\n            lbi.ParentSelector = this;\r\n            if (this.SelectedItems.Contains(item))\r\n                lbi.IsSelected = true;\r\n            if (lbi.IsSelected && !this.SelectedItems.Contains(item))\r\n                this._Selection.Select(item);\r\n        }\r\n\r\n        _GetValueFromItem(item: any) {\r\n            if (this._SelectedValueWalker == null)\r\n                return item;\r\n            if (item == null)\r\n                return item;\r\n            return this._SelectedValueWalker.GetValue(item);\r\n        }\r\n        private _SelectItemFromValue(selectedValue: any, ignoreSelectedValue?: boolean) {\r\n            if (selectedValue == null) {\r\n                this._Selection.ClearSelection(ignoreSelectedValue);\r\n                return;\r\n            }\r\n\r\n            var items = this.Items;\r\n            var count = items.Count;\r\n            for (var i = 0; i < count; i++) {\r\n                var item = items.GetValueAt(i);\r\n                var val = this._GetValueFromItem(item);\r\n                if (nullstone.equals(selectedValue, val)) {\r\n                    if (!this.SelectedItems.Contains(item))\r\n                        this._Selection.Select(item);\r\n                    return;\r\n                }\r\n            }\r\n            this._Selection.ClearSelection(ignoreSelectedValue);\r\n        }\r\n\r\n        SelectAll() {\r\n            this._Selection.SelectAll(this.Items.ToArray());\r\n        }\r\n\r\n        private _OnCurrentItemChanged(sender, e: nullstone.IEventArgs) {\r\n            if (!this._Selection.IsUpdating && this.SynchronizeWithCurrentItem) {\r\n                var icv = <Data.ICollectionView>this.ItemsSource;\r\n                if (!nullstone.equals(icv.CurrentItem, this.SelectedItem))\r\n                    this._Selection.SelectOnly(icv.CurrentItem);\r\n            }\r\n        }\r\n\r\n        _RaiseSelectionChanged(oldVals: any[], newVals: any[]) {\r\n            if (!oldVals) oldVals = [];\r\n            if (!newVals) newVals = [];\r\n\r\n            var lbi: ListBoxItem;\r\n            var oldCount = oldVals.length;\r\n            var oldValue;\r\n            for (var i = 0; i < oldCount; i++) {\r\n                oldValue = oldVals[i];\r\n                if (oldValue == null)\r\n                    continue;\r\n                lbi = null;\r\n                if (oldValue instanceof ListBoxItem) lbi = <ListBoxItem>oldValue;\r\n                lbi = lbi || <ListBoxItem>this.ItemContainersManager.ContainerFromItem(oldValue);\r\n                if (lbi)\r\n                    lbi.IsSelected = false;\r\n            }\r\n\r\n            var newCount = newVals.length;\r\n            var newValue;\r\n            for (var i = 0; i < newCount; i++) {\r\n                newValue = newVals[i];\r\n                if (newValue == null)\r\n                    continue;\r\n                lbi = null;\r\n                if (newValue instanceof ListBoxItem) lbi = <ListBoxItem>newValue;\r\n                lbi = lbi || <ListBoxItem>this.ItemContainersManager.ContainerFromItem(newValue);\r\n                if (lbi) {\r\n                    lbi.IsSelected = true;\r\n                    lbi.Focus();\r\n                }\r\n            }\r\n\r\n            var args = new SelectionChangedEventArgs(oldVals, newVals);\r\n            this.OnSelectionChanged(args);\r\n            this.SelectionChanged.raise(this, args);\r\n        }\r\n        OnSelectionChanged(args: SelectionChangedEventArgs) { }\r\n\r\n        NotifyListItemClicked(lbi: ListBoxItem) {\r\n            this._Selection.Select(this.ItemContainersManager.ItemFromContainer(lbi));\r\n        }\r\n        NotifyListItemLoaded(lbi: ListBoxItem) {\r\n            if (this.ItemContainersManager.ItemFromContainer(lbi) === this.SelectedItem) {\r\n                lbi.IsSelected = true;\r\n                lbi.Focus();\r\n            }\r\n        }\r\n        NotifyListItemGotFocus(lbi: ListBoxItem) { }\r\n        NotifyListItemLostFocus(lbi: ListBoxItem) { }\r\n    }\r\n    Fayde.CoreLibrary.add(Selector);\r\n}","module Fayde.Markup {\r\n    import XamlMarkup = nullstone.markup.xaml.XamlMarkup;\r\n    var lastId = 0;\r\n\r\n    export function CreateXaml (xaml: string, uri?: string): XamlMarkup;\r\n    export function CreateXaml (el: Element, uri?: string): XamlMarkup;\r\n    export function CreateXaml (obj: any, uri?: string): XamlMarkup {\r\n        lastId++;\r\n        uri = uri || \"http://gen/\" + lastId.toString();\r\n        var xm = new XamlMarkup(uri);\r\n        var root = (typeof obj === \"string\")\r\n            ? xm.loadRoot(obj)\r\n            : obj;\r\n        if (!root.isDefaultNamespace(Fayde.XMLNS))\r\n            throw new XamlParseException(\"Invalid default namespace. [\" + root.lookupNamespaceURI(null) + \"]\");\r\n        xm.setRoot(root);\r\n        return xm;\r\n    }\r\n}","/// <reference path=\"../Core/FrameworkElement.ts\" />\r\n/// <reference path=\"../Markup/Creator.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    var fmd = Markup.CreateXaml(\"<DataTemplate xmlns=\\\"\" + Fayde.XMLNS + \"\\\"><Grid><TextBlock Text=\\\"{Binding}\\\" /></Grid></DataTemplate>\"\r\n        , Fayde.XMLNS + \"/contentpresenter/default\");\r\n    var fallbackTemplate: DataTemplate;\r\n    function getFallbackTemplate (app: Application): DataTemplate {\r\n        return fallbackTemplate = fallbackTemplate || Markup.Load<DataTemplate>(app, fmd);\r\n    }\r\n\r\n    export class ContentPresenterNode extends FENode {\r\n        private _ContentRoot: UIElement;\r\n        get ContentRoot(): UIElement { return this._ContentRoot; }\r\n\r\n        XObject: ContentPresenter;\r\n        constructor(xobj: ContentPresenter) {\r\n            super(xobj);\r\n        }\r\n\r\n        DoApplyTemplateWithError(error: BError): boolean {\r\n            if (this._ContentRoot)\r\n                return false;\r\n\r\n            var xobj = this.XObject;\r\n            // This is meant to create {TemplateBinding ...} as a convenience when user doesn't\r\n            // This really should check for a value or an expression\r\n            if (xobj.TemplateOwner instanceof ContentControl) {\r\n                if (!xobj.HasValueOrExpression(ContentPresenter.ContentProperty)) {\r\n                    xobj.SetValue(ContentPresenter.ContentProperty, new TemplateBindingExpression(\"Content\"));\r\n                }\r\n                if (!xobj.HasValueOrExpression(ContentPresenter.ContentTemplateProperty)) {\r\n                    xobj.SetValue(ContentPresenter.ContentTemplateProperty, new TemplateBindingExpression(\"ContentTemplate\"));\r\n                }\r\n            }\r\n\r\n            var content = xobj.Content;\r\n            if (content instanceof UIElement) {\r\n                this._ContentRoot = content;\r\n                xobj.DataContext = undefined;\r\n            } else {\r\n                xobj.DataContext = content == null ? null : content;\r\n                this._ContentRoot = this._GetContentTemplate(content ? content.constructor : null).GetVisualTree(xobj);\r\n            }\r\n\r\n            if (!this._ContentRoot)\r\n                return false;\r\n\r\n            return this.AttachVisualChild(this._ContentRoot, error);\r\n        }\r\n\r\n        ClearRoot() {\r\n            if (this._ContentRoot)\r\n                this.DetachVisualChild(this._ContentRoot, null);\r\n            this._ContentRoot = null;\r\n        }\r\n\r\n        _ContentChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            var isUIContent = args.NewValue instanceof UIElement;\r\n            if (isUIContent || args.OldValue instanceof UIElement) {\r\n                this.ClearRoot();\r\n            } else if (!isUIContent) {\r\n                if (this._ShouldInvalidateImplicitTemplate(args.OldValue, args.NewValue))\r\n                    this.ClearRoot();\r\n                this.XObject.DataContext = args.NewValue == null ? null : args.NewValue;\r\n            }\r\n            this.LayoutUpdater.invalidateMeasure();\r\n        }\r\n        _ContentTemplateChanged() {\r\n            this.ClearRoot();\r\n            this.LayoutUpdater.invalidateMeasure();\r\n        }\r\n\r\n        private _ShouldInvalidateImplicitTemplate(oldValue: any, newValue: any): boolean {\r\n            //NOTE: If we are using an implicit data template, we need to make sure we invalidate when Content changes\r\n            var octor = oldValue ? oldValue.constructor : null;\r\n            var nctor = newValue ? newValue.constructor : null;\r\n            if (octor !== nctor)\r\n                return true;\r\n            if (octor === Object)\r\n                return true;\r\n            return false;\r\n        }\r\n\r\n        private _GetContentTemplate(type: Function): DataTemplate {\r\n            var dt = this.XObject.ContentTemplate;\r\n            if (dt)\r\n                return dt;\r\n\r\n            if (type && typeof type === \"function\") {\r\n                //Traverse logical tree looking in Resources for implicitly typed DataTemplate\r\n                var node = <XamlNode>this;\r\n                var rd: ResourceDictionary;\r\n                while (node) {\r\n                    var xobj = node.XObject;\r\n                    if (xobj instanceof FrameworkElement && (rd = (<FrameworkElement>xobj).Resources)) {\r\n                        dt = rd.Get(type);\r\n                        if (dt instanceof DataTemplate)\r\n                            return dt;\r\n                    }\r\n                    node = node.ParentNode;\r\n                }\r\n                var surface = <Surface>this.LayoutUpdater.tree.surface;\r\n                var app = surface ? surface.App : null;\r\n                if (app) {\r\n                    dt = app.Resources.Get(type);\r\n                    if (dt instanceof DataTemplate)\r\n                        return dt;\r\n                }\r\n            }\r\n\r\n            return getFallbackTemplate(this.XObject.App);\r\n        }\r\n    }\r\n\r\n    export class ContentPresenter extends FrameworkElement {\r\n        XamlNode: ContentPresenterNode;\r\n        CreateNode(): ContentPresenterNode { return new ContentPresenterNode(this); }\r\n\r\n        static ContentProperty = DependencyProperty.Register(\"Content\", () => Object, ContentPresenter, undefined, (d: ContentPresenter, args) => d.XamlNode._ContentChanged(args));\r\n        static ContentTemplateProperty = DependencyProperty.Register(\"ContentTemplate\", () => DataTemplate, ContentPresenter, undefined, (d: ContentPresenter, args) => d.XamlNode._ContentTemplateChanged());\r\n        Content: any;\r\n        ContentTemplate: DataTemplate;\r\n    }\r\n    Fayde.CoreLibrary.add(ContentPresenter);\r\n    Markup.Content(ContentPresenter, ContentPresenter.ContentProperty);\r\n}","/// <reference path=\"../../Core/FrameworkElement.ts\" />\r\n\r\nmodule Fayde.Controls.Primitives {\r\n    import PopupUpdater = minerva.controls.popup.PopupUpdater;\r\n\r\n    export class PopupNode extends FENode {\r\n        LayoutUpdater: PopupUpdater;\r\n        XObject: Popup;\r\n\r\n        ClickedOutside = new nullstone.Event<nullstone.IEventArgs>();\r\n\r\n        OnIsAttachedChanged (newIsAttached: boolean) {\r\n            super.OnIsAttachedChanged(newIsAttached);\r\n            this.RegisterInitiator(this.VisualParentNode.XObject);\r\n            if (!newIsAttached && this.XObject.IsOpen)\r\n                this.XObject.IsOpen = false;\r\n        }\r\n\r\n        private _Overlay: Canvas = null;\r\n        private _Catcher: Canvas = null;\r\n\r\n        EnsureOverlay (): Canvas {\r\n            if (!this._Overlay) {\r\n                this._Overlay = new Canvas();\r\n                this.LayoutUpdater.setLayer(this._Overlay.XamlNode.LayoutUpdater);\r\n            }\r\n            return this._Overlay;\r\n        }\r\n\r\n        EnsureCatcher (): Canvas {\r\n            var catcher = this._Catcher;\r\n            if (this.ClickedOutside.has && !catcher) {\r\n                catcher = this._Catcher = new Canvas();\r\n                catcher.Background = Media.SolidColorBrush.FromColor(Color.FromRgba(255, 255, 255, 0));\r\n                catcher.LayoutUpdated.on(this.UpdateCatcher, this);\r\n                catcher.MouseLeftButtonDown.on(this._RaiseClickedOutside, this);\r\n                this.EnsureOverlay().Children.Insert(0, catcher);\r\n            }\r\n            return catcher;\r\n        }\r\n\r\n        UpdateCatcher () {\r\n            var root = this._Overlay;\r\n            if (!root)\r\n                return;\r\n            var surface = this.LayoutUpdater.tree.initiatorSurface;\r\n            if (!surface)\r\n                return;\r\n            root.Width = surface.width;\r\n            root.Height = surface.height;\r\n            var catcher = this._Catcher;\r\n            if (!catcher)\r\n                return;\r\n            catcher.Width = root.Width;\r\n            catcher.Height = root.Height;\r\n        }\r\n\r\n        private _RaiseClickedOutside (sender, e) {\r\n            this.ClickedOutside.raise(this, null);\r\n        }\r\n\r\n        RegisterInitiator (initiator: UIElement) {\r\n            if (!(initiator instanceof UIElement))\r\n                return;\r\n            this.LayoutUpdater.setInitiator(initiator.XamlNode.LayoutUpdater);\r\n        }\r\n    }\r\n\r\n    export class Popup extends FrameworkElement {\r\n        XamlNode: PopupNode;\r\n        CreateNode (): PopupNode { return new PopupNode(this); }\r\n        CreateLayoutUpdater () { return new PopupUpdater(); }\r\n\r\n        static ChildProperty = DependencyProperty.Register(\"Child\", () => UIElement, Popup);\r\n        static HorizontalOffsetProperty = DependencyProperty.Register(\"HorizontalOffset\", () => Number, Popup, 0.0);\r\n        static VerticalOffsetProperty = DependencyProperty.Register(\"VerticalOffset\", () => Number, Popup, 0.0);\r\n        static IsOpenProperty = DependencyProperty.Register(\"IsOpen\", () => Boolean, Popup, false);\r\n        Child: UIElement;\r\n        HorizontalOffset: number;\r\n        VerticalOffset: number;\r\n        IsOpen: boolean;\r\n\r\n        Opened = new nullstone.Event<nullstone.IEventArgs>();\r\n        Closed = new nullstone.Event<nullstone.IEventArgs>();\r\n\r\n        WatchOutsideClick (callback: () => void, closure: any) {\r\n            this.XamlNode.ClickedOutside.on(callback, closure);\r\n            this.XamlNode.EnsureCatcher();\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Popup);\r\n    Markup.Content(Popup, Popup.ChildProperty);\r\n\r\n    module reactions {\r\n        UIReaction<boolean>(Popup.IsOpenProperty, (upd, ov, nv, popup?: Popup) => {\r\n            if (nv === true) {\r\n                popup.Opened.raiseAsync(popup, null);\r\n                popup.XamlNode.UpdateCatcher();\r\n            } else {\r\n                popup.Closed.raiseAsync(popup, null);\r\n            }\r\n            minerva.controls.popup.reactTo.isOpen(upd, ov, nv);\r\n        }, false);\r\n        UIReaction<UIElement>(Popup.ChildProperty, (upd, ov, nv, popup?: Popup) => {\r\n            var overlay = popup.XamlNode.EnsureOverlay();\r\n            if (ov) {\r\n                Providers.InheritedStore.ClearInheritedOnRemove(popup, ov.XamlNode);\r\n                overlay.Children.Remove(ov);\r\n            }\r\n            upd.setChild(nv ? nv.XamlNode.LayoutUpdater : null);\r\n            if (nv) {\r\n                popup.XamlNode.EnsureCatcher();\r\n                overlay.Children.Add(nv);\r\n                Providers.InheritedStore.PropagateInheritedOnAdd(popup, nv.XamlNode);\r\n            }\r\n        }, false, false);\r\n        UIReaction<number>(Popup.HorizontalOffsetProperty, minerva.controls.popup.reactTo.horizontalOffset, false);\r\n        UIReaction<number>(Popup.VerticalOffsetProperty, minerva.controls.popup.reactTo.verticalOffset, false);\r\n    }\r\n}","module Fayde.Controls.Primitives {\r\n    export interface IScrollInfo {\r\n        ScrollOwner: ScrollViewer;\r\n\r\n        LineUp(): boolean;\r\n        LineDown(): boolean;\r\n        LineLeft(): boolean;\r\n        LineRight(): boolean;\r\n\r\n        MouseWheelUp(): boolean;\r\n        MouseWheelDown(): boolean;\r\n        MouseWheelLeft(): boolean;\r\n        MouseWheelRight(): boolean;\r\n\r\n        PageUp(): boolean;\r\n        PageDown(): boolean;\r\n        PageLeft(): boolean;\r\n        PageRight(): boolean;\r\n\r\n        MakeVisible(uie: UIElement, rectangle: minerva.Rect): minerva.Rect;\r\n\r\n        SetHorizontalOffset(offset: number): boolean;\r\n        SetVerticalOffset(offset: number): boolean;\r\n\r\n        CanHorizontallyScroll: boolean;\r\n        CanVerticallyScroll: boolean;\r\n        ExtentHeight: number;\r\n        ExtentWidth: number;\r\n        HorizontalOffset: number;\r\n        VerticalOffset: number;\r\n        ViewportHeight: number;\r\n        ViewportWidth: number;\r\n    }\r\n    export var IScrollInfo_ = new nullstone.Interface<IScrollInfo>(\"IScrollInfo\");\r\n}","/// <reference path=\"ContentPresenter.ts\" />\r\n/// <reference path=\"Primitives/IScrollInfo.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class ScrollContentPresenter extends ContentPresenter implements Primitives.IScrollInfo {\r\n        CreateLayoutUpdater() {\r\n            var updater = new minerva.controls.scrollcontentpresenter.ScrollContentPresenterUpdater();\r\n            updater.assets.scrollData = this._ScrollData = new Primitives.ScrollData();\r\n            return updater;\r\n        }\r\n\r\n        private _ScrollData: Primitives.ScrollData;\r\n        private _IsClipPropertySet: boolean = false;\r\n        private _ClippingRectangle: Media.RectangleGeometry = null;\r\n\r\n        get ScrollOwner(): ScrollViewer { return this._ScrollData.scrollOwner; }\r\n        set ScrollOwner(value: ScrollViewer) { this._ScrollData.scrollOwner = value; }\r\n        get CanHorizontallyScroll(): boolean { return this._ScrollData.canHorizontallyScroll;; }\r\n        set CanHorizontallyScroll(value: boolean) {\r\n            var sd = this._ScrollData;\r\n            if (sd.canHorizontallyScroll !== value) {\r\n                sd.canHorizontallyScroll = value;\r\n                this.XamlNode.LayoutUpdater.invalidateMeasure();\r\n            }\r\n        }\r\n        get CanVerticallyScroll(): boolean { return this._ScrollData.canVerticallyScroll; }\r\n        set CanVerticallyScroll(value: boolean) {\r\n            var sd = this._ScrollData;\r\n            if (sd.canVerticallyScroll !== value) {\r\n                sd.canVerticallyScroll = value;\r\n                this.XamlNode.LayoutUpdater.invalidateMeasure();\r\n            }\r\n        }\r\n        get ExtentWidth(): number { return this._ScrollData.extentWidth; }\r\n        get ExtentHeight(): number { return this._ScrollData.extentHeight; }\r\n        get ViewportWidth(): number { return this._ScrollData.viewportWidth; }\r\n        get ViewportHeight(): number { return this._ScrollData.viewportHeight; }\r\n        get HorizontalOffset(): number { return this._ScrollData.offsetX; }\r\n        get VerticalOffset(): number { return this._ScrollData.offsetY; }\r\n        LineUp(): boolean { return this.SetVerticalOffset(this._ScrollData.offsetY - 16); }\r\n        LineDown(): boolean { return this.SetVerticalOffset(this._ScrollData.offsetY + 16); }\r\n        LineLeft(): boolean { return this.SetHorizontalOffset(this._ScrollData.offsetX - 16); }\r\n        LineRight(): boolean { return this.SetHorizontalOffset(this._ScrollData.offsetX + 16); }\r\n        MouseWheelUp(): boolean { return this.SetVerticalOffset(this._ScrollData.offsetY - 48); }\r\n        MouseWheelDown(): boolean { return this.SetVerticalOffset(this._ScrollData.offsetY + 48); }\r\n        MouseWheelLeft(): boolean { return this.SetHorizontalOffset(this._ScrollData.offsetX - 48); }\r\n        MouseWheelRight(): boolean { return this.SetHorizontalOffset(this._ScrollData.offsetX + 48); }\r\n        PageUp(): boolean { return this.SetVerticalOffset(this._ScrollData.offsetY - this._ScrollData.viewportHeight); }\r\n        PageDown(): boolean { return this.SetVerticalOffset(this._ScrollData.offsetY + this._ScrollData.viewportHeight); }\r\n        PageLeft(): boolean { return this.SetHorizontalOffset(this._ScrollData.offsetX - this._ScrollData.viewportWidth); }\r\n        PageRight(): boolean { return this.SetHorizontalOffset(this._ScrollData.offsetX + this._ScrollData.viewportWidth); }\r\n        MakeVisible(uie: UIElement, viewport: minerva.Rect): minerva.Rect {\r\n            var vis = new minerva.Rect();\r\n            if (minerva.Rect.isEmpty(viewport) || !uie || uie === this || !this.XamlNode.IsAncestorOf(uie.XamlNode))\r\n                return vis;\r\n\r\n            var generalTransform = uie.TransformToVisual(this);\r\n            var xpoint = generalTransform.Transform(viewport);\r\n            minerva.Size.copyTo(viewport, vis);\r\n            minerva.Point.copyTo(xpoint, vis);\r\n            return vis;\r\n\r\n            //TODO: Not sure why this was skipped\r\n            /*\r\n            var irect = new minerva.Rect();\r\n            minerva.Rect.set(irect, this.HorizontalOffset, this.VerticalOffset, this.ViewportWidth, this.ViewportHeight);\r\n            viewport.X += irect.X;\r\n            viewport.Y += irect.Y;\r\n            var num = computeScrollOffsetWithMinimalScroll(irect.X, irect.X + irect.Width, viewport.X, viewport.X + viewport.Width);\r\n            var num1 = computeScrollOffsetWithMinimalScroll(irect.Y, irect.Y + irect.Height, viewport.Y, viewport.Y + viewport.Height);\r\n            this.SetHorizontalOffset(num);\r\n            this.SetVerticalOffset(num1);\r\n            irect.X = num;\r\n            irect.Y = num1;\r\n            minerva.Rect.intersection(viewport, irect);\r\n            if (!minerva.Rect.isEmpty(viewport)) {\r\n                viewport.X -= irect.X;\r\n                viewport.Y -= irect.Y;\r\n            }\r\n            return viewport;\r\n            */\r\n        }\r\n        SetHorizontalOffset(offset: number): boolean {\r\n            if (isNaN(offset))\r\n                throw new ArgumentException(\"Offset is not a number.\");\r\n            var sd = this._ScrollData;\r\n            if (!sd.canHorizontallyScroll)\r\n                return false;\r\n            offset = Math.max(0, Math.min(offset, sd.extentWidth - sd.viewportWidth));\r\n            if (NumberEx.AreClose(this._ScrollData.offsetX, offset))\r\n                return false;\r\n\r\n            sd.cachedOffsetX = offset;\r\n            this.XamlNode.LayoutUpdater.invalidateArrange();\r\n            return true;\r\n        }\r\n        SetVerticalOffset(offset: number): boolean {\r\n            if (isNaN(offset))\r\n                throw new ArgumentException(\"Offset is not a number.\");\r\n            var sd = this._ScrollData;\r\n            if (!sd.canVerticallyScroll)\r\n                return false;\r\n            offset = Math.max(0, Math.min(offset, sd.extentHeight - sd.viewportHeight));\r\n            if (NumberEx.AreClose(this._ScrollData.offsetY, offset))\r\n                return false;\r\n\r\n            sd.cachedOffsetY = offset;\r\n            this.XamlNode.LayoutUpdater.invalidateArrange();\r\n            return true;\r\n        }\r\n\r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n\r\n            var sv: ScrollViewer;\r\n            if (this.TemplateOwner instanceof ScrollViewer)\r\n                sv = <ScrollViewer>this.TemplateOwner;\r\n            else\r\n                return;\r\n\r\n            var content = this.Content;\r\n            var info = Primitives.IScrollInfo_.as(content);\r\n            if (!info && content instanceof ItemsPresenter) {\r\n                var ip = <ItemsPresenter>content;\r\n                var err = new BError();\r\n                ip.XamlNode.ApplyTemplateWithError(err);\r\n                if (err.Message)\r\n                    err.ThrowException();\r\n                info = Primitives.IScrollInfo_.as(ip.Panel);\r\n            }\r\n\r\n            if (!info)\r\n                info = this;\r\n\r\n            info.CanHorizontallyScroll = sv.HorizontalScrollBarVisibility !== ScrollBarVisibility.Disabled;\r\n            info.CanVerticallyScroll = sv.VerticalScrollBarVisibility !== ScrollBarVisibility.Disabled;\r\n            info.ScrollOwner = sv;\r\n            sv.ScrollInfo = info;\r\n            sv.InvalidateScrollInfo();\r\n        }\r\n\r\n    }\r\n    Fayde.CoreLibrary.add(ScrollContentPresenter);\r\n    nullstone.addTypeInterfaces(ScrollContentPresenter, Primitives.IScrollInfo_);\r\n\r\n    function computeScrollOffsetWithMinimalScroll(topView, bottomView, topChild, bottomChild) {\r\n        var flag = NumberEx.IsLessThanClose(topChild, topView) && NumberEx.IsLessThanClose(bottomChild, bottomView);\r\n        var flag1 = NumberEx.IsGreaterThanClose(topChild, topView) && NumberEx.IsGreaterThanClose(bottomChild, bottomView);\r\n\r\n        var flag4 = (bottomChild - topChild) > (bottomView - topView);\r\n        if ((!flag || flag4) && (!flag1 || !flag4)) {\r\n            if (flag || flag1)\r\n                return bottomChild - bottomView - topView;\r\n            return topView;\r\n        }\r\n        return topChild;\r\n    }\r\n}","/// <reference path=\"../Control.ts\" />\r\n\r\nmodule Fayde.Controls.Primitives {\r\n    export class RangeBase extends Controls.Control {\r\n        static MinimumProperty = DependencyProperty.RegisterFull(\"Minimum\", () => Number, RangeBase, 0, (d, args) => (<RangeBase>d)._Coercer.OnMinimumChanged(args.OldValue, args.NewValue), undefined, false, numberValidator);\r\n        static MaximumProperty = DependencyProperty.RegisterFull(\"Maximum\", () => Number, RangeBase, 1, (d, args) => (<RangeBase>d)._Coercer.OnMaximumChanged(args.OldValue, args.NewValue), undefined, false, numberValidator);\r\n        static LargeChangeProperty = DependencyProperty.RegisterFull(\"LargeChange\", () => Number, RangeBase, 1, undefined, undefined, false, changeValidator);\r\n        static SmallChangeProperty = DependencyProperty.RegisterFull(\"SmallChange\", () => Number, RangeBase, 0.1, undefined, undefined, false, changeValidator);\r\n        static ValueProperty = DependencyProperty.RegisterFull(\"Value\", () => Number, RangeBase, 0, (d, args) => (<RangeBase>d)._Coercer.OnValueChanged(args.OldValue, args.NewValue), undefined, false, numberValidator);\r\n\r\n        Minimum: number;\r\n        Maximum: number;\r\n        SmallChange: number;\r\n        LargeChange: number;\r\n        Value: number;\r\n        \r\n        OnMinimumChanged(oldMin: number, newMin: number) { }\r\n        OnMaximumChanged(oldMax: number, newMax: number) { }\r\n        OnValueChanged(oldVal: number, newVal: number) {\r\n            this.ValueChanged.raise(this, new RoutedPropertyChangedEventArgs(oldVal, newVal));\r\n        }\r\n        ValueChanged = new RoutedPropertyChangedEvent<number>();\r\n\r\n        private _Coercer: Internal.IRangeCoercer;\r\n\r\n        constructor() {\r\n            super();\r\n            this._Coercer = new Internal.RangeCoercer(this, \r\n                (val) => this.SetCurrentValue(RangeBase.MaximumProperty, val),\r\n                (val) => this.SetCurrentValue(RangeBase.ValueProperty, val));\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(RangeBase);\r\n\r\n    function numberValidator(d: DependencyObject, propd: DependencyProperty, value: any): boolean {\r\n        if (typeof value !== \"number\")\r\n            return false;\r\n        if (isNaN(value))\r\n            return false;\r\n        if (!isFinite(value))\r\n            return false;\r\n        return true;\r\n    }\r\n    function changeValidator(d: DependencyObject, propd: DependencyProperty, value: any): boolean {\r\n        if (!numberValidator(d, propd, value))\r\n            return false;\r\n        return value >= 0;\r\n    }\r\n}","/// <reference path=\"ButtonBase.ts\" />\r\n\r\nmodule Fayde.Controls.Primitives {\r\n    export class RepeatButton extends ButtonBase {\r\n        static DelayProperty = DependencyProperty.Register(\"Delay\", () => Number, RepeatButton, 500, (d: RepeatButton, args) => d.OnDelayChanged(args));\r\n        static IntervalProperty = DependencyProperty.Register(\"Interval\", () => Number, RepeatButton, 33, (d: RepeatButton, args) => d.OnIntervalChanged(args));\r\n        Delay: number;\r\n        Interval: number;\r\n\r\n        private _KeyboardCausingRepeat: boolean = false;\r\n        private _MouseCausingRepeat: boolean = false;\r\n        _MousePosition: Point = null;\r\n        private _IntervalID: number = null;\r\n        private _NewInterval: number = null;\r\n\r\n        constructor() {\r\n            super();\r\n            this.ClickMode = ClickMode.Press;\r\n            this.DefaultStyleKey = RepeatButton;\r\n        }\r\n\r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n            this.UpdateVisualState(false);\r\n        }\r\n\r\n        OnDelayChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            if (args.NewValue < 0)\r\n                throw new ArgumentException(\"Delay Property cannot be negative.\");\r\n        }\r\n        OnIntervalChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            if (args.NewValue < 0)\r\n                throw new ArgumentException(\"Interval Property cannot be negative.\");\r\n            this._NewInterval = args.NewValue;\r\n        }\r\n\r\n        OnIsEnabledChanged(e: IDependencyPropertyChangedEventArgs) {\r\n            super.OnIsEnabledChanged(e);\r\n            this._KeyboardCausingRepeat = false;\r\n            this._MouseCausingRepeat = false;\r\n            this._UpdateRepeatState();\r\n        }\r\n        OnKeyDown(e: Input.KeyEventArgs) {\r\n            if (e.Key === Input.Key.Space && this.ClickMode !== ClickMode.Hover) {\r\n                this._KeyboardCausingRepeat = true;\r\n                this._UpdateRepeatState();\r\n            }\r\n            super.OnKeyDown(e);\r\n        }\r\n        OnKeyUp(e: Input.KeyEventArgs) {\r\n            super.OnKeyUp(e);\r\n            if (e.Key === Input.Key.Space && this.ClickMode !== ClickMode.Hover) {\r\n                this._KeyboardCausingRepeat = false;\r\n                this._UpdateRepeatState();\r\n            }\r\n            this.UpdateVisualState();\r\n        }\r\n        OnLostFocus(e: RoutedEventArgs) {\r\n            super.OnLostFocus(e);\r\n            if (this.ClickMode !== ClickMode.Hover) {\r\n                this._KeyboardCausingRepeat = false;\r\n                this._MouseCausingRepeat = false;\r\n                this._UpdateRepeatState();\r\n            }\r\n        }\r\n        OnMouseEnter(e: Input.MouseEventArgs) {\r\n            super.OnMouseEnter(e);\r\n            if (this.ClickMode === ClickMode.Hover) {\r\n                this._MouseCausingRepeat = true;\r\n                this._UpdateRepeatState();\r\n            }\r\n            this.UpdateVisualState();\r\n            this._UpdateMousePosition(e);\r\n        }\r\n        OnMouseLeave(e: Input.MouseEventArgs) {\r\n            super.OnMouseLeave(e);\r\n            if (this.ClickMode === ClickMode.Hover) {\r\n                this._MouseCausingRepeat = false;\r\n                this._UpdateRepeatState();\r\n            }\r\n            this.UpdateVisualState();\r\n        }\r\n        OnMouseLeftButtonDown(e: Input.MouseButtonEventArgs) {\r\n            if (e.Handled)\r\n                return;\r\n            super.OnMouseLeftButtonDown(e);\r\n            if (this.ClickMode !== ClickMode.Hover) {\r\n                this._MouseCausingRepeat = true;\r\n                this._UpdateRepeatState();\r\n            }\r\n        }\r\n        OnMouseLeftButtonUp(e: Input.MouseButtonEventArgs) {\r\n            if (e.Handled)\r\n                return;\r\n            super.OnMouseLeftButtonUp(e);\r\n            if (this.ClickMode !== ClickMode.Hover) {\r\n                this._MouseCausingRepeat = false;\r\n                this._UpdateRepeatState();\r\n            }\r\n            this.UpdateVisualState();\r\n        }\r\n        OnMouseMove(e: Input.MouseEventArgs) {\r\n            this._UpdateMousePosition(e);\r\n        }\r\n\r\n        private _UpdateMousePosition(e: Input.MouseEventArgs) {\r\n            var curNode: XamlNode = this.XamlNode;\r\n            var parentNode: FENode = <FENode>curNode;\r\n            while (curNode instanceof FENode) {\r\n                parentNode = <FENode>curNode;\r\n                curNode = curNode.ParentNode;\r\n            }\r\n            this._MousePosition = e.GetPosition(parentNode.XObject);\r\n        }\r\n\r\n        private _UpdateRepeatState() {\r\n            if (this._MouseCausingRepeat || this._KeyboardCausingRepeat) {\r\n                if (this._IntervalID == null)\r\n                    this._IntervalID = window.setInterval(() => this._StartRepeatingAfterDelay(), this.Delay);\r\n            } else {\r\n                if (this._IntervalID != null)\r\n                    window.clearInterval(this._IntervalID);\r\n                this._IntervalID = null;\r\n            }\r\n        }\r\n\r\n        private _StartRepeatingAfterDelay() {\r\n            window.clearInterval(this._IntervalID);\r\n            this._IntervalID = window.setInterval(() => this._OnTimeout(), this.Interval);\r\n        }\r\n        private _OnTimeout() {\r\n            if (this._NewInterval != null) {\r\n                window.clearInterval(this._IntervalID);\r\n                this._IntervalID = window.setInterval(() => this._OnTimeout(), this._NewInterval);\r\n                this._NewInterval = null;\r\n            }\r\n\r\n            if (!this.IsPressed)\r\n                return;\r\n\r\n            if (this._KeyboardCausingRepeat) {\r\n                this.OnClick();\r\n                return;\r\n            }\r\n\r\n            var els = VisualTreeHelper.FindElementsInHostCoordinates(this._MousePosition, this);\r\n            if (els.indexOf(this) > -1) {\r\n                this.OnClick();\r\n            }\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(RepeatButton);\r\n    TemplateVisualStates(RepeatButton, \r\n        { GroupName: \"CommonStates\", Name: \"Normal\" },\r\n        { GroupName: \"CommonStates\", Name: \"MouseOver\" },\r\n        { GroupName: \"CommonStates\", Name: \"Pressed\" },\r\n        { GroupName: \"CommonStates\", Name: \"Disabled\" },\r\n        { GroupName: \"FocusStates\", Name: \"Unfocused\" },\r\n        { GroupName: \"FocusStates\", Name: \"Focused\" });\r\n}","/// <reference path=\"../Control.ts\" />\r\n\r\nmodule Fayde.Controls.Primitives {\r\n    export class Thumb extends Control {\r\n        private _PreviousPosition: Point = null;\r\n        private _Origin: Point = null;\r\n\r\n        DragCompleted = new RoutedEvent<DragCompletedEventArgs>();\r\n        DragDelta = new RoutedEvent<DragDeltaEventArgs>();\r\n        DragStarted = new RoutedEvent<DragStartedEventArgs>();\r\n\r\n        static IsDraggingProperty = DependencyProperty.RegisterReadOnly(\"IsDragging\", () => Boolean, Thumb, false, (d, args) => (<Thumb>d).OnDraggingChanged(args));\r\n        static IsFocusedProperty = DependencyProperty.RegisterReadOnly(\"IsFocused\", () => Boolean, Thumb);\r\n        IsDragging: boolean;\r\n        IsFocused: boolean;\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = Thumb;\r\n        }\r\n\r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n            this.UpdateVisualState(false);\r\n        }\r\n\r\n        private OnDraggingChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this.UpdateVisualState();\r\n        }\r\n\r\n        OnGotFocus(e: RoutedEventArgs) {\r\n            super.OnGotFocus(e);\r\n            this._FocusChanged(Surface.HasFocus(this));\r\n        }\r\n        OnLostFocus(e: RoutedEventArgs) {\r\n            super.OnLostFocus(e);\r\n            this._FocusChanged(Surface.HasFocus(this));\r\n        }\r\n        private _FocusChanged(hasFocus: boolean) {\r\n            this.SetCurrentValue(Thumb.IsFocusedProperty, hasFocus);\r\n            this.UpdateVisualState();\r\n        }\r\n\r\n        OnLostMouseCapture(e: Input.MouseEventArgs) {\r\n            if (!this.IsDragging || !this.IsEnabled)\r\n                return;\r\n            this.SetCurrentValue(Thumb.IsDraggingProperty, false);\r\n            this._RaiseDragCompleted(false);\r\n        }\r\n        OnMouseEnter(e: Input.MouseEventArgs) {\r\n            if (this.IsEnabled)\r\n                this.UpdateVisualState();\r\n        }\r\n        OnMouseLeave(e: Input.MouseEventArgs) {\r\n            if (this.IsEnabled)\r\n                this.UpdateVisualState();\r\n        }\r\n        OnMouseLeftButtonDown(e: Input.MouseButtonEventArgs) {\r\n            super.OnMouseLeftButtonDown(e);\r\n            if (e.Handled || this.IsDragging || !this.IsEnabled)\r\n                return;\r\n            e.Handled = true;\r\n            this.CaptureMouse();\r\n            this.SetCurrentValue(Thumb.IsDraggingProperty, true);\r\n\r\n            var vpNode = this.XamlNode.VisualParentNode;\r\n            this._Origin = this._PreviousPosition = e.GetPosition((vpNode) ? vpNode.XObject : undefined);\r\n            var success = false;\r\n            try {\r\n                this._RaiseDragStarted();\r\n                success = true;\r\n            } finally {\r\n                if (!success)\r\n                    this.CancelDrag();\r\n            }\r\n        }\r\n        OnMouseMove(e: Input.MouseEventArgs) {\r\n            if (!this.IsDragging)\r\n                return;\r\n            var vpNode = this.XamlNode.VisualParentNode;\r\n            var p = e.GetPosition((vpNode) ? vpNode.XObject : undefined);\r\n            if (!minerva.Point.isEqual(p, this._PreviousPosition)) {\r\n                this._RaiseDragDelta(p.x - this._PreviousPosition.x, p.y - this._PreviousPosition.y);\r\n                this._PreviousPosition = p;\r\n            }\r\n        }\r\n\r\n        OnLostTouchCapture(e: Input.TouchEventArgs) {\r\n            super.OnLostTouchCapture(e);\r\n            if (!this.IsDragging || !this.IsEnabled)\r\n                return;\r\n            this.SetCurrentValue(Thumb.IsDraggingProperty, false);\r\n            this._RaiseDragCompleted(false);\r\n        }\r\n        OnTouchEnter(e: Input.TouchEventArgs) {\r\n            super.OnTouchEnter(e);\r\n            if (this.IsEnabled)\r\n                this.UpdateVisualState();\r\n        }\r\n        OnTouchLeave(e: Input.TouchEventArgs) {\r\n            super.OnTouchLeave(e);\r\n            if (this.IsEnabled)\r\n                this.UpdateVisualState();\r\n        }\r\n        OnTouchDown(e: Input.TouchEventArgs) {\r\n            super.OnTouchDown(e);\r\n            if (e.Handled || this.IsDragging || !this.IsEnabled)\r\n                return;\r\n            e.Handled = true;\r\n            e.Device.Capture(this);\r\n            this.SetCurrentValue(Thumb.IsDraggingProperty, true);\r\n\r\n            var vpNode = this.XamlNode.VisualParentNode;\r\n            var tp = e.GetTouchPoint(vpNode ? vpNode.XObject : undefined);\r\n            this._Origin = this._PreviousPosition = tp.Position;\r\n            var success = false;\r\n            try {\r\n                this._RaiseDragStarted();\r\n                success = true;\r\n            } finally {\r\n                if (!success)\r\n                    this.CancelDrag();\r\n            }\r\n        }\r\n        OnTouchUp(e: Input.TouchEventArgs) {\r\n            super.OnTouchUp(e);\r\n            if (e.Handled || !this.IsDragging || !this.IsEnabled)\r\n                return;\r\n            e.Handled = true;\r\n            e.Device.ReleaseCapture(this);\r\n        }\r\n        OnTouchMove(e: Input.TouchEventArgs) {\r\n            super.OnTouchMove(e);\r\n            if (!this.IsDragging || e.Device.Captured !== this)\r\n                return;\r\n            var vpNode = this.XamlNode.VisualParentNode;\r\n            var tp = e.Device.GetTouchPoint(vpNode ? vpNode.XObject : undefined);\r\n            var pos = tp.Position;\r\n            if (!minerva.Point.isEqual(pos, this._PreviousPosition)) {\r\n                this._RaiseDragDelta(pos.x - this._PreviousPosition.x, pos.y - this._PreviousPosition.y);\r\n                this._PreviousPosition = pos;\r\n            }\r\n        }\r\n\r\n        CancelDrag() {\r\n            if (!this.IsDragging)\r\n                return;\r\n            this.SetCurrentValue(Thumb.IsDraggingProperty, false);\r\n            this._RaiseDragCompleted(true);\r\n        }\r\n\r\n        private _RaiseDragStarted() {\r\n            this.DragStarted.raise(this, new DragStartedEventArgs(this._Origin.x, this._Origin.y));\r\n        }\r\n        private _RaiseDragDelta(x: number, y: number) {\r\n            this.DragDelta.raise(this, new DragDeltaEventArgs(x, y));\r\n        }\r\n        private _RaiseDragCompleted(canceled: boolean) {\r\n            this.DragCompleted.raise(this, new DragCompletedEventArgs(this._PreviousPosition.x - this._Origin.x, this._PreviousPosition.y - this._Origin.y, canceled));\r\n        }\r\n\r\n        GoToStateCommon(gotoFunc: (state: string) => boolean): boolean {\r\n            if (!this.IsEnabled)\r\n                return gotoFunc(\"Disabled\");\r\n            if (this.IsDragging)\r\n                return gotoFunc(\"Pressed\");\r\n            if (this.IsMouseOver)\r\n                return gotoFunc(\"MouseOver\");\r\n            return gotoFunc(\"Normal\");\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Thumb);\r\n    TemplateVisualStates(Thumb,\r\n        { GroupName: \"CommonStates\", Name: \"Normal\" },\r\n        { GroupName: \"CommonStates\", Name: \"MouseOver\" },\r\n        { GroupName: \"CommonStates\", Name: \"Pressed\" },\r\n        { GroupName: \"CommonStates\", Name: \"Disabled\" },\r\n        { GroupName: \"FocusStates\", Name: \"Unfocused\" },\r\n        { GroupName: \"FocusStates\", Name: \"Focused\" });\r\n}","/// <reference path=\"RangeBase.ts\" />\r\n/// <reference path=\"RepeatButton.ts\" />\r\n/// <reference path=\"Thumb.ts\" />\r\n\r\nmodule Fayde.Controls.Primitives {\r\n    export class ScrollBar extends RangeBase {\r\n        private _DragValue: number = 0;\r\n\r\n        Scroll = new RoutedEvent<ScrollEventArgs>();\r\n\r\n        static OrientationProperty = DependencyProperty.Register(\"Orientation\", () => new Enum(Orientation), ScrollBar, Orientation.Horizontal, (d, args) => (<ScrollBar>d)._OnOrientationChanged());\r\n        static ViewportSizeProperty = DependencyProperty.Register(\"ViewportSize\", () => Number, ScrollBar, 0, (d, args) => (<ScrollBar>d)._UpdateTrackLayout());\r\n        Orientation: Orientation;\r\n        ViewportSize: number;\r\n\r\n        get IsDragging(): boolean {\r\n            if (this.$HorizontalThumb)\r\n                return this.$HorizontalThumb.IsDragging;\r\n            if (this.$VerticalThumb)\r\n                return this.$VerticalThumb.IsDragging;\r\n            return false;\r\n        }\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = ScrollBar;\r\n            this.SizeChanged.on(this._HandleSizeChanged, this);\r\n        }\r\n\r\n        private $HorizontalTemplate: FrameworkElement;\r\n        private $HorizontalSmallIncrease: RepeatButton;\r\n        private $HorizontalSmallDecrease: RepeatButton;\r\n        private $HorizontalLargeIncrease: RepeatButton;\r\n        private $HorizontalLargeDecrease: RepeatButton;\r\n        private $HorizontalThumb: Thumb;\r\n\r\n        private $VerticalTemplate: FrameworkElement;\r\n        private $VerticalSmallIncrease: RepeatButton;\r\n        private $VerticalSmallDecrease: RepeatButton;\r\n        private $VerticalLargeIncrease: RepeatButton;\r\n        private $VerticalLargeDecrease: RepeatButton;\r\n        private $VerticalThumb: Thumb;\r\n        \r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n            this.$HorizontalTemplate = <FrameworkElement>this.GetTemplateChild(\"HorizontalRoot\", FrameworkElement);\r\n            this.$HorizontalLargeIncrease = <RepeatButton>this.GetTemplateChild(\"HorizontalLargeIncrease\", RepeatButton);\r\n            this.$HorizontalLargeDecrease = <RepeatButton>this.GetTemplateChild(\"HorizontalLargeDecrease\", RepeatButton);\r\n            this.$HorizontalSmallIncrease = <RepeatButton>this.GetTemplateChild(\"HorizontalSmallIncrease\", RepeatButton);\r\n            this.$HorizontalSmallDecrease = <RepeatButton>this.GetTemplateChild(\"HorizontalSmallDecrease\", RepeatButton);\r\n            this.$HorizontalThumb = <Thumb>this.GetTemplateChild(\"HorizontalThumb\", Thumb);\r\n            this.$VerticalTemplate = <FrameworkElement>this.GetTemplateChild(\"VerticalRoot\", FrameworkElement);\r\n            this.$VerticalLargeIncrease = <RepeatButton>this.GetTemplateChild(\"VerticalLargeIncrease\", RepeatButton);\r\n            this.$VerticalLargeDecrease = <RepeatButton>this.GetTemplateChild(\"VerticalLargeDecrease\", RepeatButton);\r\n            this.$VerticalSmallIncrease = <RepeatButton>this.GetTemplateChild(\"VerticalSmallIncrease\", RepeatButton);\r\n            this.$VerticalSmallDecrease = <RepeatButton>this.GetTemplateChild(\"VerticalSmallDecrease\", RepeatButton);\r\n            this.$VerticalThumb = <Thumb>this.GetTemplateChild(\"VerticalThumb\", Thumb);\r\n\r\n            if (this.$HorizontalThumb) {\r\n                this.$HorizontalThumb.DragStarted.on(this._OnThumbDragStarted, this);\r\n                this.$HorizontalThumb.DragDelta.on(this._OnThumbDragDelta, this);\r\n                this.$HorizontalThumb.DragCompleted.on(this._OnThumbDragCompleted, this);\r\n            }\r\n            if (this.$HorizontalLargeIncrease) {\r\n                this.$HorizontalLargeIncrease.Click.on(this._LargeIncrement, this);\r\n            }\r\n            if (this.$HorizontalLargeDecrease) {\r\n                this.$HorizontalLargeDecrease.Click.on(this._LargeDecrement, this);\r\n            }\r\n            if (this.$HorizontalSmallIncrease) {\r\n                this.$HorizontalSmallIncrease.Click.on(this._SmallIncrement, this);\r\n            }\r\n            if (this.$HorizontalSmallDecrease) {\r\n                this.$HorizontalSmallDecrease.Click.on(this._SmallDecrement, this);\r\n            }\r\n            if (this.$VerticalThumb) {\r\n                this.$VerticalThumb.DragStarted.on(this._OnThumbDragStarted, this);\r\n                this.$VerticalThumb.DragDelta.on(this._OnThumbDragDelta, this);\r\n                this.$VerticalThumb.DragCompleted.on(this._OnThumbDragCompleted, this);\r\n            }\r\n            if (this.$VerticalLargeIncrease) {\r\n                this.$VerticalLargeIncrease.Click.on(this._LargeIncrement, this);\r\n            }\r\n            if (this.$VerticalLargeDecrease) {\r\n                this.$VerticalLargeDecrease.Click.on(this._LargeDecrement, this);\r\n            }\r\n            if (this.$VerticalSmallIncrease) {\r\n                this.$VerticalSmallIncrease.Click.on(this._SmallIncrement, this);\r\n            }\r\n            if (this.$VerticalSmallDecrease) {\r\n                this.$VerticalSmallDecrease.Click.on(this._SmallDecrement, this);\r\n            }\r\n\r\n            this._OnOrientationChanged();\r\n            this.UpdateVisualState(false);\r\n        }\r\n\r\n        OnMaximumChanged(oldMax: number, newMax: number) {\r\n            super.OnMaximumChanged(oldMax, newMax);\r\n            this._UpdateTrackLayout();\r\n        }\r\n        OnMinimumChanged(oldMin: number, newMin: number) {\r\n            super.OnMinimumChanged(oldMin, newMin);\r\n            this._UpdateTrackLayout();\r\n        }\r\n        OnValueChanged(oldValue: number, newValue: number) {\r\n            super.OnValueChanged(oldValue, newValue);\r\n            this._UpdateTrackLayout();\r\n        }\r\n\r\n        private _OnThumbDragStarted(sender, e: DragStartedEventArgs) {\r\n            this._DragValue = this.Value;\r\n        }\r\n        private _OnThumbDragDelta(sender, e: DragDeltaEventArgs) {\r\n            var change = 0;\r\n            var zoomFactor = 1; //TODO: FullScreen?\r\n            var num = zoomFactor;\r\n            var max = this.Maximum;\r\n            var min = this.Minimum;\r\n            var diff = max - min;\r\n            var trackLength = this._GetTrackLength();\r\n            var isHorizontal = this.Orientation === Orientation.Horizontal;\r\n            if (this.$VerticalThumb && !isHorizontal) {\r\n                change = num * e.VerticalChange / (trackLength - this.$VerticalThumb.ActualHeight) * diff;\r\n            }\r\n            if (this.$HorizontalThumb && isHorizontal) {\r\n                change = num * e.HorizontalChange / (trackLength - this.$HorizontalThumb.ActualWidth) * diff;\r\n            }\r\n            if (!isNaN(change) && isFinite(change)) {\r\n                this._DragValue += change;\r\n                var num1 = Math.min(max, Math.max(min, this._DragValue));\r\n                if (num1 !== this.Value) {\r\n                    this.Value = num1;\r\n                    this._RaiseScroll(ScrollEventType.ThumbTrack);\r\n                }\r\n            }\r\n        }\r\n        private _OnThumbDragCompleted(sender, e: DragCompletedEventArgs) {\r\n            this._RaiseScroll(ScrollEventType.EndScroll);\r\n        }\r\n\r\n        private _SmallDecrement(sender, e: RoutedEventArgs) {\r\n            var curValue = this.Value;\r\n            var num = Math.max(curValue - this.SmallChange, this.Minimum);\r\n            if (curValue !== num) {\r\n                this.SetCurrentValue(RangeBase.ValueProperty, num);\r\n                this._RaiseScroll(ScrollEventType.SmallDecrement);\r\n            }\r\n        }\r\n        private _SmallIncrement(sender, e: RoutedEventArgs) {\r\n            var curValue = this.Value;\r\n            var num = Math.min(curValue + this.SmallChange, this.Maximum);\r\n            if (curValue !== num) {\r\n                this.SetCurrentValue(RangeBase.ValueProperty, num);\r\n                this._RaiseScroll(ScrollEventType.SmallIncrement);\r\n            }\r\n        }\r\n        private _LargeDecrement(sender, e: RoutedEventArgs) {\r\n            var curValue = this.Value;\r\n            var num = Math.max(curValue - this.LargeChange, this.Minimum);\r\n            if (curValue !== num) {\r\n                this.SetCurrentValue(RangeBase.ValueProperty, num);\r\n                this._RaiseScroll(ScrollEventType.LargeDecrement);\r\n            }\r\n        }\r\n        private _LargeIncrement(sender, e: RoutedEventArgs) {\r\n            var curValue = this.Value;\r\n            var num = Math.min(curValue + this.LargeChange, this.Maximum);\r\n            if (curValue !== num) {\r\n                this.SetCurrentValue(RangeBase.ValueProperty, num);\r\n                this._RaiseScroll(ScrollEventType.LargeIncrement);\r\n            }\r\n        }\r\n\r\n        private _HandleSizeChanged(sender, e: nullstone.IEventArgs) {\r\n            this._UpdateTrackLayout();\r\n        }\r\n        private _OnOrientationChanged() {\r\n            var isHorizontal = this.Orientation === Orientation.Horizontal;\r\n            if (this.$HorizontalTemplate) {\r\n                this.$HorizontalTemplate.Visibility = isHorizontal ? Visibility.Visible : Visibility.Collapsed;\r\n            }\r\n            if (this.$VerticalTemplate) {\r\n                this.$VerticalTemplate.Visibility = isHorizontal ? Visibility.Collapsed : Visibility.Visible;\r\n            }\r\n            this._UpdateTrackLayout();\r\n        }\r\n        private _UpdateTrackLayout() {\r\n            var trackLength = this._GetTrackLength();\r\n            var max = this.Maximum;\r\n            var min = this.Minimum;\r\n            var val = this.Value;\r\n            var multiplier = (val - min) / (max - min);\r\n            var thumbSize = this._UpdateThumbSize(trackLength);\r\n\r\n            var isHorizontal = this.Orientation === Orientation.Horizontal;\r\n            if (isHorizontal && this.$HorizontalLargeDecrease && this.$HorizontalThumb) {\r\n                this.$HorizontalLargeDecrease.Width = Math.max(0, multiplier * (trackLength - thumbSize));\r\n            } else if (!isHorizontal && this.$VerticalLargeDecrease && this.$VerticalThumb) {\r\n                this.$VerticalLargeDecrease.Height = Math.max(0, multiplier * (trackLength - thumbSize));\r\n            }\r\n        }\r\n        private _UpdateThumbSize(trackLength: number): number {\r\n            var result = Number.NaN;\r\n            var hideThumb = trackLength <= 0;\r\n            if (trackLength > 0) {\r\n                var isHorizontal = this.Orientation === Orientation.Horizontal;\r\n                var max = this.Maximum;\r\n                var min = this.Minimum;\r\n                if (isHorizontal && this.$HorizontalThumb) {\r\n                    if (max - min !== 0)\r\n                        result = Math.max(this.$HorizontalThumb.MinWidth, this._ConvertViewportSizeToDisplayUnits(trackLength));\r\n                    if (max - min === 0 || result > this.ActualWidth || trackLength <= this.$HorizontalThumb.MinWidth) {\r\n                        hideThumb = true;\r\n                    } else {\r\n                        this.$HorizontalThumb.Visibility = Visibility.Visible;\r\n                        this.$HorizontalThumb.Width = result;\r\n                    }\r\n                } else if (!isHorizontal && this.$VerticalThumb) {\r\n                    if (max - min !== 0)\r\n                        result = Math.max(this.$VerticalThumb.MinHeight, this._ConvertViewportSizeToDisplayUnits(trackLength));\r\n                    if (max - min === 0 || result > this.ActualHeight || trackLength <= this.$VerticalThumb.MinHeight) {\r\n                        hideThumb = true;\r\n                    } else {\r\n                        this.$VerticalThumb.Visibility = Visibility.Visible;\r\n                        this.$VerticalThumb.Height = result;\r\n                    }\r\n                }\r\n            }\r\n            if (hideThumb) {\r\n                if (this.$HorizontalThumb) {\r\n                    this.$HorizontalThumb.Visibility = Visibility.Collapsed;\r\n                }\r\n                if (this.$VerticalThumb) {\r\n                    this.$VerticalThumb.Visibility = Visibility.Collapsed;\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        private _GetTrackLength(): number {\r\n            var actual = NaN;\r\n            if (this.Orientation === Orientation.Horizontal) {\r\n                actual = this.ActualWidth;\r\n                if (this.$HorizontalSmallDecrease) {\r\n                    var thickness = this.$HorizontalSmallDecrease.Margin;\r\n                    actual = actual - (this.$HorizontalSmallDecrease.ActualWidth + thickness.left + thickness.right);\r\n                }\r\n                if (this.$HorizontalSmallIncrease) {\r\n                    var thickness = this.$HorizontalSmallIncrease.Margin;\r\n                    actual = actual - (this.$HorizontalSmallIncrease.ActualWidth + thickness.left + thickness.right);\r\n                }\r\n            } else {\r\n                actual = this.ActualHeight;\r\n                if (this.$VerticalSmallDecrease) {\r\n                    var thickness = this.$VerticalSmallDecrease.Margin;\r\n                    actual = actual - (this.$VerticalSmallDecrease.ActualHeight + thickness.top + thickness.bottom);\r\n                }\r\n                if (this.$VerticalSmallIncrease) {\r\n                    var thickness = this.$VerticalSmallIncrease.Margin;\r\n                    actual = actual - (this.$VerticalSmallIncrease.ActualHeight + thickness.top + thickness.bottom);\r\n                }\r\n            }\r\n            return actual;\r\n        }\r\n        private _ConvertViewportSizeToDisplayUnits(trackLength: number): number {\r\n            var viewportSize = this.ViewportSize;\r\n            return trackLength * viewportSize / (viewportSize + this.Maximum - this.Minimum);\r\n        }\r\n        private _RaiseScroll(type: Primitives.ScrollEventType) {\r\n            var args = new ScrollEventArgs(type, this.Value);\r\n            args.OriginalSource = this;\r\n            this.Scroll.raise(this, args);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ScrollBar);\r\n    TemplateVisualStates(ScrollBar, \r\n        { GroupName: \"CommonStates\", Name: \"Normal\" },\r\n        { GroupName: \"CommonStates\", Name: \"MouseOver\" },\r\n        { GroupName: \"CommonStates\", Name: \"Disabled\" });\r\n    TemplateParts(ScrollBar,\r\n        { Name: \"VerticalRoot\", Type: FrameworkElement },\r\n        { Name: \"VerticalLargeIncrease\", Type: RepeatButton },\r\n        { Name: \"VerticalLargeDecrease\", Type: RepeatButton },\r\n        { Name: \"VerticalSmallIncrease\", Type: RepeatButton },\r\n        { Name: \"VerticalSmallDecrease\", Type: RepeatButton },\r\n        { Name: \"VerticalThumb\", Type: Thumb },\r\n        { Name: \"HorizontalRoot\", Type: FrameworkElement },\r\n        { Name: \"HorizontalLargeIncrease\", Type: RepeatButton },\r\n        { Name: \"HorizontalLargeDecrease\", Type: RepeatButton },\r\n        { Name: \"HorizontalSmallIncrease\", Type: RepeatButton },\r\n        { Name: \"HorizontalSmallDecrease\", Type: RepeatButton },\r\n        { Name: \"HorizontalThumb\", Type: Thumb });\r\n}","/// <reference path=\"ContentControl.ts\" />\r\n/// <reference path=\"ScrollContentPresenter.ts\" />\r\n/// <reference path=\"Primitives/ScrollBar.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class ScrollViewer extends ContentControl {\r\n        private static _ScrollBarVisibilityChanged(d: DependencyObject, args: IDependencyPropertyChangedEventArgs) {\r\n            if (!d) return;\r\n            if (d instanceof ScrollViewer) {\r\n                var sv = <ScrollViewer>d;\r\n                sv.XamlNode.LayoutUpdater.invalidateMeasure();\r\n                var scrollInfo = sv.ScrollInfo;\r\n                if (scrollInfo) {\r\n                    scrollInfo.CanHorizontallyScroll = sv.HorizontalScrollBarVisibility !== ScrollBarVisibility.Disabled;\r\n                    scrollInfo.CanVerticallyScroll = sv.VerticalScrollBarVisibility !== ScrollBarVisibility.Disabled;\r\n                }\r\n                sv._UpdateScrollBarVisibility();\r\n                return;\r\n            }\r\n\r\n            if (d instanceof ListBox) {\r\n                var listbox = <ListBox>d;\r\n                if (listbox.$TemplateScrollViewer)\r\n                    listbox.$TemplateScrollViewer.SetValue(args.Property, args.NewValue);\r\n                return;\r\n            }\r\n        }\r\n\r\n        static HorizontalScrollBarVisibilityProperty = DependencyProperty.RegisterAttachedCore(\"HorizontalScrollBarVisibility\", () => new Enum(ScrollBarVisibility), ScrollViewer, ScrollBarVisibility.Disabled, ScrollViewer._ScrollBarVisibilityChanged);\r\n        static GetHorizontalScrollBarVisibility(d: DependencyObject): ScrollBarVisibility { return d.GetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty); }\r\n        static SetHorizontalScrollBarVisibility(d: DependencyObject, value: ScrollBarVisibility) { d.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, value); }\r\n        get HorizontalScrollBarVisibility(): ScrollBarVisibility { return this.GetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty); }\r\n        set HorizontalScrollBarVisibility(value: ScrollBarVisibility) { this.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty, value); }\r\n\r\n        static VerticalScrollBarVisibilityProperty = DependencyProperty.RegisterAttachedCore(\"VerticalScrollBarVisibility\", () => new Enum(ScrollBarVisibility), ScrollViewer, ScrollBarVisibility.Disabled, ScrollViewer._ScrollBarVisibilityChanged);\r\n        static GetVerticalScrollBarVisibility(d: DependencyObject): ScrollBarVisibility { return d.GetValue(ScrollViewer.VerticalScrollBarVisibilityProperty); }\r\n        static SetVerticalScrollBarVisibility(d: DependencyObject, value: ScrollBarVisibility) { d.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, value); }\r\n        get VerticalScrollBarVisibility(): ScrollBarVisibility { return this.GetValue(ScrollViewer.VerticalScrollBarVisibilityProperty); }\r\n        set VerticalScrollBarVisibility(value: ScrollBarVisibility) { this.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, value); }\r\n\r\n        static ComputedHorizontalScrollBarVisibilityProperty = DependencyProperty.RegisterReadOnlyCore(\"ComputedHorizontalScrollBarVisibility\", () => new Enum(Visibility), ScrollViewer);\r\n        static ComputedVerticalScrollBarVisibilityProperty = DependencyProperty.RegisterReadOnlyCore(\"ComputedVerticalScrollBarVisibility\", () => new Enum(Visibility), ScrollViewer);\r\n        static HorizontalOffsetProperty = DependencyProperty.RegisterReadOnlyCore(\"HorizontalOffset\", () => Number, ScrollViewer);\r\n        static VerticalOffsetProperty = DependencyProperty.RegisterReadOnlyCore(\"VerticalOffset\", () => Number, ScrollViewer);\r\n        static ScrollableWidthProperty = DependencyProperty.RegisterReadOnlyCore(\"ScrollableWidth\", () => Number, ScrollViewer);\r\n        static ScrollableHeightProperty = DependencyProperty.RegisterReadOnlyCore(\"ScrollableHeight\", () => Number, ScrollViewer);\r\n        static ViewportWidthProperty = DependencyProperty.RegisterReadOnlyCore(\"ViewportWidth\", () => Number, ScrollViewer);\r\n        static ViewportHeightProperty = DependencyProperty.RegisterReadOnlyCore(\"ViewportHeight\", () => Number, ScrollViewer);\r\n        static ExtentWidthProperty = DependencyProperty.RegisterReadOnlyCore(\"ExtentWidth\", () => Number, ScrollViewer);\r\n        static ExtentHeightProperty = DependencyProperty.RegisterReadOnlyCore(\"ExtentHeight\", () => Number, ScrollViewer);\r\n\r\n        ComputedHorizontalScrollBarVisibility: Visibility;\r\n        ComputedVerticalScrollBarVisibility: Visibility;\r\n        HorizontalOffset: number;\r\n        VerticalOffset: number;\r\n        ScrollableWidth: number;\r\n        ScrollableHeight: number;\r\n        ViewportWidth: number;\r\n        ViewportHeight: number;\r\n        ExtentWidth: number;\r\n        ExtentHeight: number;\r\n\r\n        $TemplatedParentHandlesScrolling: boolean = false;\r\n        $ScrollContentPresenter: ScrollContentPresenter;\r\n        private $HorizontalScrollBar: Primitives.ScrollBar;\r\n        private $VerticalScrollBar: Primitives.ScrollBar;\r\n\r\n        constructor() {\r\n            super();\r\n            //this.RequestBringIntoView.Subscribe(this._OnRequestBringIntoView, this);\r\n            this.DefaultStyleKey = ScrollViewer;\r\n        }\r\n\r\n        private _ScrollInfo: Primitives.IScrollInfo;\r\n        get ScrollInfo(): Primitives.IScrollInfo { return this._ScrollInfo; }\r\n        set ScrollInfo(value: Primitives.IScrollInfo) {\r\n            this._ScrollInfo = value;\r\n            if (value) {\r\n                value.CanHorizontallyScroll = this.HorizontalScrollBarVisibility !== ScrollBarVisibility.Disabled;\r\n                value.CanVerticallyScroll = this.VerticalScrollBarVisibility !== ScrollBarVisibility.Disabled;\r\n            }\r\n        }\r\n\r\n        InvalidateScrollInfo() {\r\n            var scrollInfo = this.ScrollInfo;\r\n            if (scrollInfo) {\r\n                this.SetCurrentValue(ScrollViewer.ExtentWidthProperty, scrollInfo.ExtentWidth);\r\n                this.SetCurrentValue(ScrollViewer.ExtentHeightProperty, scrollInfo.ExtentHeight);\r\n                this.SetCurrentValue(ScrollViewer.ViewportWidthProperty, scrollInfo.ViewportWidth);\r\n                this.SetCurrentValue(ScrollViewer.ViewportHeightProperty, scrollInfo.ViewportHeight);\r\n                this._UpdateScrollBar(Orientation.Horizontal, scrollInfo.HorizontalOffset);\r\n                this._UpdateScrollBar(Orientation.Vertical, scrollInfo.VerticalOffset);\r\n                this._UpdateScrollBarVisibility();\r\n            }\r\n\r\n            var lu = this.XamlNode.LayoutUpdater;\r\n\r\n            var w = Math.max(0, this.ExtentWidth - this.ViewportWidth);\r\n            if (w !== this.ScrollableWidth) {\r\n                this.SetCurrentValue(ScrollViewer.ScrollableWidthProperty, w);\r\n                lu.invalidateMeasure();\r\n            }\r\n\r\n            var h = Math.max(0, this.ExtentHeight - this.ViewportHeight);\r\n            if (h !== this.ScrollableHeight) {\r\n                this.SetCurrentValue(ScrollViewer.ScrollableHeightProperty, h);\r\n                lu.invalidateMeasure();\r\n            }\r\n        }\r\n        private _UpdateScrollBarVisibility() {\r\n            var lu = this.XamlNode.LayoutUpdater;\r\n            var scrollInfo = this.ScrollInfo;\r\n\r\n            var horizontalVisibility = Visibility.Visible;\r\n            var hsbv = this.HorizontalScrollBarVisibility;\r\n            switch (hsbv) {\r\n                case ScrollBarVisibility.Visible:\r\n                    break;\r\n                case ScrollBarVisibility.Disabled:\r\n                case ScrollBarVisibility.Hidden:\r\n                    horizontalVisibility = Visibility.Collapsed;\r\n                    break;\r\n                case ScrollBarVisibility.Auto:\r\n                default:\r\n                    horizontalVisibility = (!scrollInfo || scrollInfo.ExtentWidth <= scrollInfo.ViewportWidth) ? Visibility.Collapsed : Visibility.Visible;\r\n                    break;\r\n            }\r\n\r\n            if (horizontalVisibility !== this.ComputedHorizontalScrollBarVisibility) {\r\n                this.SetCurrentValue(ScrollViewer.ComputedHorizontalScrollBarVisibilityProperty, horizontalVisibility);\r\n                lu.invalidateMeasure();\r\n            }\r\n\r\n            var verticalVisibility = Fayde.Visibility.Visible;\r\n            var vsbv = this.VerticalScrollBarVisibility;\r\n            switch (vsbv) {\r\n                case ScrollBarVisibility.Visible:\r\n                    break;\r\n                case ScrollBarVisibility.Disabled:\r\n                case ScrollBarVisibility.Hidden:\r\n                    verticalVisibility = Fayde.Visibility.Collapsed;\r\n                    break;\r\n                case ScrollBarVisibility.Auto:\r\n                default:\r\n                    verticalVisibility = (!scrollInfo || scrollInfo.ExtentHeight <= scrollInfo.ViewportHeight) ? Fayde.Visibility.Collapsed : Fayde.Visibility.Visible;\r\n                    break;\r\n            }\r\n\r\n            if (verticalVisibility !== this.ComputedVerticalScrollBarVisibility) {\r\n                this.SetCurrentValue(ScrollViewer.ComputedVerticalScrollBarVisibilityProperty, verticalVisibility);\r\n                lu.invalidateMeasure();\r\n            }\r\n        }\r\n\r\n        private _UpdateScrollBar (orientation: Orientation, value: number) {\r\n            var propd: DependencyProperty;\r\n            var sb: Primitives.ScrollBar;\r\n            if (orientation === Orientation.Horizontal) {\r\n                propd = ScrollViewer.HorizontalOffsetProperty;\r\n                sb = this.$HorizontalScrollBar;\r\n            } else {\r\n                propd = ScrollViewer.VerticalOffsetProperty;\r\n                sb = this.$VerticalScrollBar;\r\n            }\r\n\r\n            try {\r\n                this.SetCurrentValue(propd, value);\r\n                if (sb)\r\n                    sb.SetCurrentValue(Primitives.RangeBase.ValueProperty, value);\r\n            } finally {\r\n            }\r\n        }\r\n\r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n            this.$ScrollContentPresenter = <ScrollContentPresenter>this.GetTemplateChild(\"ScrollContentPresenter\", ScrollContentPresenter);\r\n            this.$HorizontalScrollBar = <Primitives.ScrollBar>this.GetTemplateChild(\"HorizontalScrollBar\", Primitives.ScrollBar);\r\n            if (this.$HorizontalScrollBar) {\r\n                this.$HorizontalScrollBar.Scroll.on((sender, e: Primitives.ScrollEventArgs) => this._HandleScroll(Orientation.Horizontal, e), this);\r\n            }\r\n            this.$VerticalScrollBar = <Primitives.ScrollBar>this.GetTemplateChild(\"VerticalScrollBar\", Primitives.ScrollBar);\r\n            if (this.$VerticalScrollBar) {\r\n                this.$VerticalScrollBar.Scroll.on((sender, e: Primitives.ScrollEventArgs) => this._HandleScroll(Orientation.Vertical, e), this);\r\n            }\r\n            this._UpdateScrollBarVisibility();\r\n        }\r\n\r\n        OnMouseLeftButtonDown(e: Input.MouseButtonEventArgs) {\r\n            if (!e.Handled && this.Focus())\r\n                e.Handled = true;\r\n            super.OnMouseLeftButtonDown(e);\r\n        }\r\n        OnMouseWheel(e: Input.MouseWheelEventArgs) {\r\n            super.OnMouseWheel(e);\r\n            if (e.Handled)\r\n                return;\r\n            var scrollInfo = this.ScrollInfo;\r\n            if (!scrollInfo)\r\n                return;\r\n            if ((e.Delta > 0 && scrollInfo.VerticalOffset !== 0) || (e.Delta < 0 && scrollInfo.VerticalOffset < this.ScrollableHeight)) {\r\n                if (e.Delta >= 0)\r\n                    scrollInfo.MouseWheelUp();\r\n                else\r\n                    scrollInfo.MouseWheelDown();\r\n                e.Handled = true;\r\n            }\r\n        }\r\n\r\n        private _TouchOrigin: Point;\r\n        private _Delta = new Point();\r\n        private _TouchInitialOffset = new Point();\r\n        OnTouchDown(e: Input.TouchEventArgs) {\r\n            super.OnTouchDown(e);\r\n            var scrollInfo = this.ScrollInfo;\r\n            if (e.Handled || !this.IsEnabled || !scrollInfo)\r\n                return;\r\n            e.Handled = true;\r\n            this.Focus();\r\n            e.Device.Capture(this);\r\n\r\n            var offset = this._TouchInitialOffset;\r\n            offset.x = scrollInfo.HorizontalOffset;\r\n            offset.y = scrollInfo.VerticalOffset;\r\n\r\n            this._TouchOrigin = e.GetTouchPoint(this).Position;\r\n        }\r\n        OnTouchUp(e: Input.TouchEventArgs) {\r\n            super.OnTouchUp(e);\r\n            if (e.Handled || !this.IsEnabled)\r\n                return;\r\n            e.Handled = true;\r\n            e.Device.ReleaseCapture(this);\r\n        }\r\n        OnTouchMove(e: Input.TouchEventArgs) {\r\n            super.OnTouchMove(e);\r\n            if (e.Handled || e.Device.Captured !== this)\r\n                return;\r\n            var tp = e.GetTouchPoint(this);\r\n            var pos = tp.Position;\r\n            var delta = this._Delta;\r\n            var origin = this._TouchOrigin;\r\n            delta.x = pos.x - origin.x;\r\n            delta.y = pos.y - origin.y;\r\n            this.ScrollToHorizontalOffset(delta.x);\r\n            this.ScrollToVerticalOffset(delta.y);\r\n        }\r\n\r\n        OnKeyDown(e: Input.KeyEventArgs) {\r\n            super.OnKeyDown(e);\r\n\r\n            if (e.Handled)\r\n                return;\r\n\r\n            if (this.$TemplatedParentHandlesScrolling)\r\n                return;\r\n\r\n            var orientation = Orientation.Vertical;\r\n            var scrollEventType = Primitives.ScrollEventType.ThumbTrack;\r\n            //TODO: FlowDirection\r\n            //var flowDirection = this.FlowDirection === Fayde.FlowDirection.RightToLeft;\r\n            switch (e.Key) {\r\n                case Input.Key.PageUp:\r\n                    scrollEventType = Primitives.ScrollEventType.LargeDecrement;\r\n                    break;\r\n                case Input.Key.PageDown:\r\n                    scrollEventType = Primitives.ScrollEventType.LargeIncrement;\r\n                    break;\r\n                case Input.Key.End:\r\n                    if (!e.Modifiers.Ctrl)\r\n                        orientation = Orientation.Horizontal;\r\n                    scrollEventType = Primitives.ScrollEventType.Last;\r\n                    break;\r\n                case Input.Key.Home:\r\n                    if (!e.Modifiers.Ctrl)\r\n                        orientation = Orientation.Horizontal;\r\n                    scrollEventType = Primitives.ScrollEventType.First;\r\n                    break;\r\n                case Input.Key.Left:\r\n                    orientation = Orientation.Horizontal;\r\n                    scrollEventType = Primitives.ScrollEventType.SmallDecrement;\r\n                case Input.Key.Up:\r\n                    scrollEventType = Primitives.ScrollEventType.SmallDecrement;\r\n                    break;\r\n                case Input.Key.Right:\r\n                    orientation = Orientation.Horizontal;\r\n                    scrollEventType = Primitives.ScrollEventType.SmallIncrement;\r\n                case Input.Key.Down:\r\n                    scrollEventType = Primitives.ScrollEventType.SmallIncrement;\r\n                    break;\r\n            }\r\n            if (scrollEventType !== Primitives.ScrollEventType.ThumbTrack)\r\n                e.Handled = !!this._HandleScroll(orientation, new Primitives.ScrollEventArgs(scrollEventType, 0));\r\n        }\r\n\r\n        ScrollInDirection(key: Input.Key) {\r\n            switch (key) {\r\n                case Input.Key.PageUp:\r\n                    this.PageUp();\r\n                    break;\r\n                case Input.Key.PageDown:\r\n                    this.PageDown();\r\n                    break;\r\n                case Input.Key.End:\r\n                    this.PageEnd();\r\n                    break;\r\n                case Input.Key.Home:\r\n                    this.PageHome();\r\n                    break;\r\n                case Input.Key.Left:\r\n                    this.LineLeft();\r\n                    break;\r\n                case Input.Key.Up:\r\n                    this.LineUp();\r\n                    break;\r\n                case Input.Key.Right:\r\n                    this.LineRight();\r\n                    break;\r\n                case Input.Key.Down:\r\n                    this.LineDown();\r\n                    break;\r\n            }\r\n        }\r\n        ScrollToHorizontalOffset(offset: number) { this._HandleHorizontalScroll(new Primitives.ScrollEventArgs(Primitives.ScrollEventType.ThumbPosition, offset)); }\r\n        ScrollToVerticalOffset(offset: number) { this._HandleVerticalScroll(new Primitives.ScrollEventArgs(Primitives.ScrollEventType.ThumbPosition, offset)); }\r\n\r\n        LineUp() { this._HandleVerticalScroll(new Primitives.ScrollEventArgs(Primitives.ScrollEventType.SmallDecrement, 0)); }\r\n        LineDown() { this._HandleVerticalScroll(new Primitives.ScrollEventArgs(Primitives.ScrollEventType.SmallIncrement, 0)); }\r\n        LineLeft() { this._HandleHorizontalScroll(new Primitives.ScrollEventArgs(Primitives.ScrollEventType.SmallDecrement, 0)); }\r\n        LineRight() { this._HandleHorizontalScroll(new Primitives.ScrollEventArgs(Primitives.ScrollEventType.SmallIncrement, 0)); }\r\n\r\n        PageHome() { this._HandleHorizontalScroll(new Primitives.ScrollEventArgs(Primitives.ScrollEventType.First, 0)); }\r\n        PageEnd() { this._HandleHorizontalScroll(new Primitives.ScrollEventArgs(Primitives.ScrollEventType.Last, 0)); }\r\n\r\n        PageUp() { this._HandleVerticalScroll(new Primitives.ScrollEventArgs(Primitives.ScrollEventType.LargeDecrement, 0)); }\r\n        PageDown() { this._HandleVerticalScroll(new Primitives.ScrollEventArgs(Primitives.ScrollEventType.LargeIncrement, 0)); }\r\n        PageLeft() { this._HandleHorizontalScroll(new Primitives.ScrollEventArgs(Primitives.ScrollEventType.LargeDecrement, 0)); }\r\n        PageRight() { this._HandleHorizontalScroll(new Primitives.ScrollEventArgs(Primitives.ScrollEventType.LargeIncrement, 0)); }\r\n\r\n        private _HandleScroll(orientation: Orientation, e: Primitives.ScrollEventArgs): boolean {\r\n            if (orientation !== Orientation.Horizontal)\r\n                return this._HandleVerticalScroll(e);\r\n            return this._HandleHorizontalScroll(e);\r\n        }\r\n        private _HandleHorizontalScroll(e: Primitives.ScrollEventArgs): boolean {\r\n            var scrollInfo = this.ScrollInfo;\r\n            if (!scrollInfo)\r\n                return false;\r\n            var offset = scrollInfo.HorizontalOffset;\r\n            var newValue = offset;\r\n            switch (e.ScrollEventType) {\r\n                case Primitives.ScrollEventType.SmallDecrement:\r\n                    return scrollInfo.LineLeft();\r\n                case Primitives.ScrollEventType.SmallIncrement:\r\n                    return scrollInfo.LineRight();\r\n                case Primitives.ScrollEventType.LargeDecrement:\r\n                    return scrollInfo.PageLeft();\r\n                case Primitives.ScrollEventType.LargeIncrement:\r\n                    return scrollInfo.PageRight();\r\n                case Primitives.ScrollEventType.ThumbPosition:\r\n                case Primitives.ScrollEventType.ThumbTrack:\r\n                    newValue = e.Value;\r\n                    break;\r\n                case Primitives.ScrollEventType.First:\r\n                    newValue = Number.NEGATIVE_INFINITY;\r\n                    break;\r\n                case Primitives.ScrollEventType.Last:\r\n                    newValue = Number.POSITIVE_INFINITY;\r\n                    break;\r\n            }\r\n            newValue = Math.max(newValue, 0);\r\n            newValue = Math.min(this.ScrollableWidth, newValue);\r\n            if (NumberEx.AreClose(offset, newValue))\r\n                return false;\r\n            scrollInfo.SetHorizontalOffset(newValue);\r\n            return true;\r\n        }\r\n        private _HandleVerticalScroll(e: Primitives.ScrollEventArgs): boolean {\r\n            var scrollInfo = this.ScrollInfo;\r\n            if (!scrollInfo)\r\n                return false;\r\n            var offset = scrollInfo.VerticalOffset;\r\n            var newValue = offset;\r\n            switch (e.ScrollEventType) {\r\n                case Primitives.ScrollEventType.SmallDecrement:\r\n                    return scrollInfo.LineUp();\r\n                case Primitives.ScrollEventType.SmallIncrement:\r\n                    return scrollInfo.LineDown();\r\n                    break;\r\n                case Primitives.ScrollEventType.LargeDecrement:\r\n                    return scrollInfo.PageUp();\r\n                    break;\r\n                case Primitives.ScrollEventType.LargeIncrement:\r\n                    return scrollInfo.PageDown();\r\n                    break;\r\n                case Primitives.ScrollEventType.ThumbPosition:\r\n                case Primitives.ScrollEventType.ThumbTrack:\r\n                    newValue = e.Value;\r\n                    break;\r\n                case Primitives.ScrollEventType.First:\r\n                    newValue = Number.NEGATIVE_INFINITY;\r\n                    break;\r\n                case Primitives.ScrollEventType.Last:\r\n                    newValue = Number.POSITIVE_INFINITY;\r\n                    break;\r\n            }\r\n            newValue = Math.max(newValue, 0);\r\n            newValue = Math.min(this.ScrollableHeight, newValue);\r\n            if (NumberEx.AreClose(offset, newValue))\r\n                return false;\r\n            return scrollInfo.SetVerticalOffset(newValue);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ScrollViewer);\r\n    TemplateParts(ScrollViewer,\r\n        { Name: \"ScrollContentPresenter\", Type: ScrollContentPresenter },\r\n        { Name: \"HorizontalScrollBar\", Type: Primitives.ScrollBar },\r\n        { Name: \"VerticalScrollBar\", Type: Primitives.ScrollBar });\r\n}","/// <reference path=\"Primitives/Selector.ts\" />\r\n/// <reference path=\"ContentPresenter.ts\" />\r\n/// <reference path=\"Primitives/Popup.ts\" />\r\n/// <reference path=\"Primitives/ToggleButton.ts\" />\r\n/// <reference path=\"ScrollViewer.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class ComboBox extends Primitives.Selector {\r\n        DropDownOpened = new nullstone.Event();\r\n        DropDownClosed = new nullstone.Event();\r\n\r\n        static IsDropDownOpenProperty = DependencyProperty.Register(\"IsDropDownOpen\", () => Boolean, ComboBox, false, (d, args) => (<ComboBox>d)._IsDropDownOpenChanged(args));\r\n        static ItemContainerStyleProperty = DependencyProperty.Register(\"ItemContainerStyle\", () => Style, ComboBox, undefined, (d, args) => (<ListBox>d).OnItemContainerStyleChanged(args));\r\n        static MaxDropDownHeightProperty = DependencyProperty.Register(\"MaxDropDownHeight\", () => Number, ComboBox, Number.POSITIVE_INFINITY, (d, args) => (<ComboBox>d)._MaxDropDownHeightChanged(args));\r\n        static IsSelectionActiveProperty = Primitives.Selector.IsSelectionActiveProperty;\r\n        IsDropDownOpen: boolean;\r\n        ItemContainerStyle: Style;\r\n        MaxDropDownHeight: number;\r\n\r\n        private $ContentPresenter: ContentPresenter;\r\n        private $Popup: Primitives.Popup;\r\n        private $DropDownToggle: Primitives.ToggleButton;\r\n        private $DisplayedItem: ComboBoxItem = null;\r\n        private $SelectionBoxItem: any = null;\r\n        private $SelectionBoxItemTemplate: DataTemplate = null;\r\n        private _NullSelFallback: any;\r\n        private _FocusedIndex: number = -1;\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = ComboBox;\r\n        }\r\n\r\n        private _IsDropDownOpenChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            var open = args.NewValue;\r\n\r\n            if (this.$Popup != null)\r\n                this.$Popup.IsOpen = open;\r\n            if (this.$DropDownToggle != null)\r\n                this.$DropDownToggle.IsChecked = open;\r\n\r\n            if (open) {\r\n                this._FocusedIndex = this.Items.Count > 0 ? Math.max(this.SelectedIndex, 0) : -1;\r\n                if (this._FocusedIndex > -1) {\r\n                    var focusedItem = this.ItemContainersManager.ContainerFromIndex(this._FocusedIndex);\r\n                    if (focusedItem instanceof ComboBoxItem)\r\n                        (<ComboBoxItem>focusedItem).Focus();\r\n                }\r\n\r\n                this.LayoutUpdated.on(this._UpdatePopupSizeAndPosition, this);\r\n                this.DropDownOpened.raise(this, null);\r\n            } else {\r\n                this.Focus();\r\n                this.LayoutUpdated.off(this._UpdatePopupSizeAndPosition, this);\r\n                this.DropDownClosed.raise(this, null);\r\n            }\r\n\r\n            var selectedItem = this.SelectedItem;\r\n            this._UpdateDisplayedItem(open && selectedItem instanceof Fayde.UIElement ? null : selectedItem);\r\n            this.UpdateVisualState(true);\r\n        }\r\n        private _MaxDropDownHeightChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this._UpdatePopupMaxHeight(args.NewValue);\r\n        }\r\n        \r\n        private _GetChildOfType(name: string, type: Function): any {\r\n            var temp = this.GetTemplateChild(name);\r\n            if (temp instanceof type)\r\n                return temp;\r\n        }\r\n\r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n            this.UpdateVisualState(false);\r\n\r\n            this.$ContentPresenter = this._GetChildOfType(\"ContentPresenter\", ContentPresenter);\r\n            this.$Popup = this._GetChildOfType(\"Popup\", Primitives.Popup);\r\n            this.$DropDownToggle = this._GetChildOfType(\"DropDownToggle\", Primitives.ToggleButton);\r\n\r\n            if (this.$ContentPresenter != null)\r\n                this._NullSelFallback = this.$ContentPresenter.Content;\r\n\r\n            if (this.$Popup != null) {\r\n                this._UpdatePopupMaxHeight(this.MaxDropDownHeight);\r\n                this.$Popup.WatchOutsideClick(this._PopupClickedOutside, this);\r\n\r\n                var child = this.$Popup.Child;\r\n                if (child != null) {\r\n                    child.KeyDown.on(this._OnChildKeyDown, this);\r\n                    (<FrameworkElement>child).SizeChanged.on(this._UpdatePopupSizeAndPosition, this);\r\n                }\r\n            }\r\n\r\n            if (this.$DropDownToggle != null) {\r\n                this.$DropDownToggle.Checked.on(this._OnToggleChecked, this);\r\n                this.$DropDownToggle.Unchecked.on(this._OnToggleUnchecked, this);\r\n            }\r\n\r\n            this.UpdateVisualState(false);\r\n            this._UpdateDisplayedItem(this.SelectedItem);\r\n        }\r\n\r\n        OnItemContainerStyleChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            var newStyle = <Style>args.NewValue;\r\n            var enumerator = this.ItemContainersManager.GetEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                var container = <FrameworkElement>enumerator.current;\r\n                if (container && container !== enumerator.CurrentItem)\r\n                    container.Style = newStyle;\r\n            }\r\n        }\r\n        IsItemItsOwnContainer(item: any): boolean {\r\n            return item instanceof ComboBoxItem;\r\n        }\r\n        GetContainerForItem(): UIElement {\r\n            return new ComboBoxItem();\r\n        }\r\n        PrepareContainerForItem(container: UIElement, item: any) {\r\n            super.PrepareContainerForItem(container, item);\r\n            var cbi = <ComboBoxItem>container;\r\n            if (cbi !== item) {\r\n                var ics = this.ItemContainerStyle;\r\n                if (!cbi.Style && ics)\r\n                    cbi.Style = ics;\r\n            }\r\n        }\r\n\r\n        GoToStateFocus(gotoFunc: (state: string) => boolean): boolean {\r\n            var isEnabled = this.IsEnabled;\r\n            if (this.IsDropDownOpen && isEnabled)\r\n                return gotoFunc(\"FocusedDropDown\");\r\n            else if (this.IsFocused && isEnabled)\r\n                return gotoFunc(\"Focused\");\r\n            return gotoFunc(\"Unfocused\");\r\n        }\r\n\r\n        OnIsEnabledChanged(e: IDependencyPropertyChangedEventArgs) {\r\n            super.OnIsEnabledChanged(e);\r\n            if (!this.IsEnabled)\r\n                this.IsDropDownOpen = false;\r\n        }\r\n\r\n        OnMouseLeftButtonDown(e: Input.MouseButtonEventArgs) {\r\n            super.OnMouseLeftButtonDown(e);\r\n            if (!e.Handled) {\r\n                e.Handled = true;\r\n                this.SetValueInternal(ComboBox.IsSelectionActiveProperty, true);\r\n                this.IsDropDownOpen = !this.IsDropDownOpen;\r\n            }\r\n        }\r\n        OnMouseEnter(e: Input.MouseEventArgs) {\r\n            super.OnMouseEnter(e);\r\n            this.UpdateVisualState(true);\r\n        }\r\n        OnMouseLeave(e: Input.MouseEventArgs) {\r\n            super.OnMouseLeave(e);\r\n            this.UpdateVisualState(true);\r\n        }\r\n        OnKeyDown(e: Input.KeyEventArgs) {\r\n            super.OnKeyDown(e);\r\n            if (e.Handled)\r\n                return;\r\n            e.Handled = true;\r\n\r\n            var key = e.Key;\r\n            if (this.FlowDirection === FlowDirection.RightToLeft) {\r\n                if (key === Input.Key.Left)\r\n                    key = Input.Key.Right;\r\n                else if (key === Input.Key.Right)\r\n                    key = Input.Key.Left;\r\n            }\r\n            switch (key) {\r\n                case Input.Key.Escape:\r\n                    this.IsDropDownOpen = false;\r\n                    break;\r\n                case Input.Key.Enter:\r\n                case Input.Key.Space:\r\n                    if (this.IsDropDownOpen && this._FocusedIndex !== this.SelectedIndex) {\r\n                        this.SelectedIndex = this._FocusedIndex;\r\n                        this.IsDropDownOpen = false;\r\n                    } else {\r\n                        this.IsDropDownOpen = true;\r\n                    }\r\n                    break;\r\n                case Input.Key.Right:\r\n                case Input.Key.Down:\r\n                    if (this.IsDropDownOpen) {\r\n                        if (this._FocusedIndex < (this.Items.Count - 1)) {\r\n                            this._FocusedIndex++;\r\n                            (<UIElement>this.ItemContainersManager.ContainerFromIndex(this._FocusedIndex)).Focus();\r\n                        }\r\n                    } else {\r\n                        this.SelectedIndex = Math.min(this.SelectedIndex + 1, this.Items.Count - 1);\r\n                    }\r\n                    break;\r\n                case Input.Key.Left:\r\n                case Input.Key.Up:\r\n                    if (this.IsDropDownOpen) {\r\n                        if (this._FocusedIndex > 0) {\r\n                            this._FocusedIndex--;\r\n                            (<UIElement>this.ItemContainersManager.ContainerFromIndex(this._FocusedIndex)).Focus();\r\n                        }\r\n                    } else {\r\n                        this.SelectedIndex = Math.max(this.SelectedIndex - 1, 0);\r\n                    }\r\n                    break;\r\n                default:\r\n                    e.Handled = false;\r\n                    break;\r\n            }\r\n        }\r\n        OnGotFocus(e: RoutedEventArgs) {\r\n            super.OnGotFocus(e);\r\n            this.UpdateVisualState(true);\r\n        }\r\n        OnLostFocus(e: RoutedEventArgs) {\r\n            super.OnLostFocus(e);\r\n            this.SetValueInternal(ComboBox.IsSelectionActiveProperty, this.$Popup == null ? false : this.$Popup.IsOpen);\r\n            this.UpdateVisualState(true);\r\n        }\r\n\r\n        private _OnChildKeyDown(sender, e: Input.KeyEventArgs) {\r\n            this.OnKeyDown(e);\r\n        }\r\n        OnSelectionChanged(e: Primitives.SelectionChangedEventArgs) {\r\n            if (!this.IsDropDownOpen)\r\n                this._UpdateDisplayedItem(this.SelectedItem);\r\n        }\r\n        private _OnToggleChecked(sender, e) { this.IsDropDownOpen = true; }\r\n        private _OnToggleUnchecked(sender, e) { this.IsDropDownOpen = false; }\r\n\r\n        private _PopupClickedOutside() {\r\n            this.IsDropDownOpen = false;\r\n        }\r\n        private _UpdateDisplayedItem(selectedItem: any) {\r\n            if (!this.$ContentPresenter)\r\n                return;\r\n\r\n            if (this.$DisplayedItem != null) {\r\n                this.$DisplayedItem.Content = this.$ContentPresenter.Content;\r\n                this.$DisplayedItem = null;\r\n            }\r\n            this.$ContentPresenter.Content = null;\r\n\r\n            if (selectedItem == null) {\r\n                this.$ContentPresenter.Content = this._NullSelFallback;\r\n                this.$ContentPresenter.ContentTemplate = null;\r\n                this.$SelectionBoxItem = null;\r\n                this.$SelectionBoxItemTemplate = null;\r\n                return;\r\n            }\r\n\r\n            var content = selectedItem;\r\n            if (content instanceof ComboBoxItem)\r\n                content = content.Content;\r\n\r\n            var icm = this.ItemContainersManager;\r\n            var selectedIndex = this.SelectedIndex;\r\n            var temp = icm.ContainerFromIndex(selectedIndex);\r\n            if (temp instanceof ComboBoxItem) this.$DisplayedItem = <ComboBoxItem>temp;\r\n\r\n            this.$SelectionBoxItem = content;\r\n            this.$SelectionBoxItemTemplate = this.ItemTemplate;\r\n\r\n            if (this.$DisplayedItem != null) {\r\n                this.$SelectionBoxItemTemplate = this.$DisplayedItem.ContentTemplate;\r\n                if (content instanceof Fayde.UIElement)\r\n                    this.$DisplayedItem.Content = null;\r\n                else\r\n                    this.$DisplayedItem = null;\r\n            } else {\r\n                temp = icm.ContainerFromIndex(selectedIndex);\r\n                var container: ComboBoxItem;\r\n                if (temp instanceof ComboBoxItem) container = <ComboBoxItem>temp;\r\n                if (!container) {\r\n                    var generator = icm.CreateGenerator(selectedIndex, 1);\r\n                    if (generator.Generate() && generator.Current instanceof ComboBoxItem) {\r\n                        container = <ComboBoxItem>generator.Current;\r\n                        this.PrepareContainerForItem(container, generator.CurrentItem);\r\n                    }\r\n                }\r\n                if (container)\r\n                    this.$SelectionBoxItemTemplate = container.ContentTemplate;\r\n            }\r\n\r\n            this.$ContentPresenter.Content = this.$SelectionBoxItem;\r\n            this.$ContentPresenter.ContentTemplate = this.$SelectionBoxItemTemplate;\r\n        }\r\n        private _UpdatePopupSizeAndPosition(sender, e: nullstone.IEventArgs) {\r\n            var popup = this.$Popup;\r\n            if (!popup)\r\n                return;\r\n            var child = <FrameworkElement>popup.Child;\r\n            if (!(child instanceof FrameworkElement))\r\n                return;\r\n\r\n            child.MinWidth = this.ActualWidth;\r\n\r\n            var root = <FrameworkElement>VisualTreeHelper.GetRoot(this);\r\n            if (!root)\r\n                return;\r\n\r\n            try {\r\n                var xform = this.TransformToVisual(null);\r\n            } catch (err) {\r\n                //Ignore ComboBox being detached\r\n                return;\r\n            }\r\n\r\n            var offset = new Point(0, this.ActualHeight);\r\n            var bottomRight = new Point(offset.x + child.ActualWidth, offset.y + child.ActualHeight);\r\n\r\n            var topLeft = xform.Transform(offset);\r\n            bottomRight = xform.Transform(bottomRight);\r\n\r\n            var isRightToLeft = (this.FlowDirection === FlowDirection.RightToLeft);\r\n            if (isRightToLeft) {\r\n                var left = bottomRight.x;\r\n                bottomRight.x = topLeft.x;\r\n                topLeft.x = left;\r\n            }\r\n\r\n            var finalOffset = new Point();\r\n            var raw = root.ActualWidth;\r\n            if (bottomRight.x > raw) {\r\n                finalOffset.x = raw - bottomRight.x;\r\n            } else if (topLeft.x < 0) {\r\n                finalOffset.x = offset.x - topLeft.x;\r\n            } else {\r\n                finalOffset.x = offset.x;\r\n            }\r\n\r\n            if (isRightToLeft)\r\n                finalOffset.x = -finalOffset.x;\r\n\r\n            var rah = root.ActualHeight;\r\n            if (bottomRight.y > rah) {\r\n                finalOffset.y = -child.ActualHeight;\r\n            } else {\r\n                finalOffset.y = this.RenderSize.height;\r\n            }\r\n\r\n            popup.HorizontalOffset = finalOffset.x;\r\n            popup.VerticalOffset = finalOffset.y;\r\n\r\n            this._UpdatePopupMaxHeight(this.MaxDropDownHeight);\r\n        }\r\n        private _UpdatePopupMaxHeight(height: number) {\r\n            var child: FrameworkElement;\r\n            if (this.$Popup && (child = <FrameworkElement>this.$Popup.Child) && child instanceof FrameworkElement) {\r\n                if (height === Number.POSITIVE_INFINITY) {\r\n                    var surface = this.XamlNode.LayoutUpdater.tree.surface;\r\n                    if (surface)\r\n                        height = surface.height / 2.0;\r\n                }\r\n                child.MaxHeight = height;\r\n            }\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ComboBox);\r\n    TemplateParts(ComboBox, \r\n        { Name: \"ContentPresenter\", Type: ContentPresenter },\r\n        { Name: \"Popup\", Type: Primitives.Popup },\r\n        { Name: \"ContentPresenterBorder\", Type: FrameworkElement },\r\n        { Name: \"DropDownToggle\", Type: Primitives.ToggleButton },\r\n        { Name: \"ScrollViewer\", Type: ScrollViewer });\r\n    TemplateVisualStates(ComboBox, \r\n        { GroupName: \"CommonStates\", Name: \"Normal\" },\r\n        { GroupName: \"CommonStates\", Name: \"MouseOver\" },\r\n        { GroupName: \"CommonStates\", Name: \"Disabled\" },\r\n        { GroupName: \"FocusStates\", Name: \"Unfocused\" },\r\n        { GroupName: \"FocusStates\", Name: \"Focused\" },\r\n        { GroupName: \"FocusStates\", Name: \"FocusedDropDown\" },\r\n        { GroupName: \"ValidationStates\", Name: \"Valid\" },\r\n        { GroupName: \"ValidationStates\", Name: \"InvalidUnfocused\" },\r\n        { GroupName: \"ValidationStates\", Name: \"InvalidFocused\" });\r\n}","/// <reference path=\"ContentControl.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class ListBoxItem extends ContentControl {\r\n        private _ParentSelector: Primitives.Selector;\r\n        get ParentSelector(): Primitives.Selector { return this._ParentSelector; }\r\n        set ParentSelector(value: Primitives.Selector) {\r\n            if (this._ParentSelector === value)\r\n                return;\r\n            this._ParentSelector = value;\r\n            this.ParentSelectorChanged.raise(this, null);\r\n        }\r\n        ParentSelectorChanged = new nullstone.Event();\r\n\r\n        static IsSelectedProperty: DependencyProperty = DependencyProperty.RegisterCore(\"IsSelected\", () => Boolean, ListBoxItem, null, (d, args) => (<ListBoxItem>d).OnIsSelectedChanged(args));\r\n        IsSelected: boolean;\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = ListBoxItem;\r\n        }\r\n\r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n            this.UpdateVisualState(false);\r\n        }\r\n\r\n        OnMouseLeftButtonDown(e: Input.MouseButtonEventArgs) {\r\n            if (e.Handled)\r\n                return;\r\n            e.Handled = true;\r\n            if (!this.XamlNode.Focus(true))\r\n                return;\r\n            if (this._ParentSelector != null)\r\n                this._ParentSelector.NotifyListItemClicked(this);\r\n        }\r\n        OnMouseEnter(e: Input.MouseEventArgs) {\r\n            super.OnMouseEnter(e);\r\n            this.UpdateVisualState();\r\n        }\r\n        OnMouseLeave(e: Input.MouseEventArgs) {\r\n            super.OnMouseLeave(e);\r\n            this.UpdateVisualState();\r\n        }\r\n        OnGotFocus(e: RoutedEventArgs) {\r\n            super.OnGotFocus(e);\r\n            this.UpdateVisualState();\r\n            if (this._ParentSelector != null) {\r\n                this._ParentSelector.NotifyListItemGotFocus(this);\r\n            }\r\n        }\r\n        OnLostFocus(e: RoutedEventArgs) {\r\n            super.OnLostFocus(e);\r\n            this.UpdateVisualState();\r\n            if (this._ParentSelector != null) {\r\n                this._ParentSelector.NotifyListItemLostFocus(this);\r\n            }\r\n        }\r\n\r\n        GoToStateSelection(gotoFunc: (state: string) => boolean): boolean {\r\n            if (!this.IsSelected)\r\n                return gotoFunc(\"Unselected\");\r\n            if (gotoFunc(\"SelectedUnfocused\"))\r\n                return true;\r\n            return gotoFunc(\"Selected\");\r\n        }\r\n        \r\n        private OnIsSelectedChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this.UpdateVisualState();\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ListBoxItem);\r\n    TemplateVisualStates(ListBoxItem, \r\n        { GroupName: \"CommonStates\", Name: \"Normal\" },\r\n        { GroupName: \"CommonStates\", Name: \"MouseOver\" },\r\n        { GroupName: \"CommonStates\", Name: \"Disabled\" },\r\n        { GroupName: \"FocusStates\", Name: \"Unfocused\" },\r\n        { GroupName: \"FocusStates\", Name: \"Focused\" },\r\n        { GroupName: \"SelectionStates\", Name: \"Unselected\" },\r\n        { GroupName: \"SelectionStates\", Name: \"Selected\" },\r\n        { GroupName: \"SelectionStates\", Name: \"SelectedUnfocused\" });\r\n}","/// <reference path=\"ListBoxItem.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class ComboBoxItem extends ListBoxItem {\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = ComboBoxItem;\r\n        }\r\n\r\n        OnMouseLeftButtonUp(e: Input.MouseButtonEventArgs) {\r\n            super.OnMouseLeftButtonUp(e);\r\n            if (this.ParentSelector instanceof ComboBox)\r\n                (<ComboBox>this.ParentSelector).IsDropDownOpen = false;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ComboBoxItem);\r\n    TemplateVisualStates(ComboBoxItem, \r\n        { GroupName: \"CommonStates\", Name: \"Normal\" },\r\n        { GroupName: \"CommonStates\", Name: \"MouseOver\" },\r\n        { GroupName: \"FocusStates\", Name: \"Unfocused\" },\r\n        { GroupName: \"FocusStates\", Name: \"Focused\" },\r\n        { GroupName: \"SelectionStates\", Name: \"Unselected\" },\r\n        { GroupName: \"SelectionStates\", Name: \"Selected\" },\r\n        { GroupName: \"SelectionStates\", Name: \"SelectedUnfocused\" });\r\n}","module Fayde.Markup {\r\n    export class FrameworkTemplate extends DependencyObject {\r\n        private $$markup: nullstone.markup.Markup<any>;\r\n        private $$resources: ResourceDictionary[];\r\n\r\n        Validate (): string {\r\n            return \"\";\r\n        }\r\n\r\n        GetVisualTree (bindingSource: DependencyObject): UIElement {\r\n            var uie = LoadImpl<UIElement>(this.App, this.$$markup, this.$$resources, bindingSource);\r\n            if (!(uie instanceof UIElement))\r\n                throw new XamlParseException(\"Template root visual is not a UIElement.\");\r\n            return uie;\r\n        }\r\n    }\r\n\r\n    function setTemplateRoot (ft: FrameworkTemplate, root: any) {\r\n        if (root instanceof Element)\r\n            (<any>ft).$$markup = CreateXaml(root);\r\n    }\r\n\r\n    function setResources (ft: FrameworkTemplate, res: ResourceDictionary[]) {\r\n        (<any>ft).$$resources = res;\r\n    }\r\n\r\n    export function LoadXaml<T extends XamlObject>(app: Application, xaml: string): T;\r\n    export function LoadXaml<T extends XamlObject>(app: Application, el: Element): T;\r\n    export function LoadXaml<T extends XamlObject>(app: Application, xaml: any): T {\r\n        var markup = CreateXaml(xaml);\r\n        return Load<T>(app, markup);\r\n    }\r\n\r\n    export function Load<T extends XamlObject>(app: Application, xm: nullstone.markup.Markup<any>): T {\r\n        return LoadImpl<T>(app, xm);\r\n    }\r\n\r\n    function LoadImpl<T>(app: Application, xm: nullstone.markup.Markup<any>, resources?: ResourceDictionary[], bindingSource?: DependencyObject): T {\r\n        perfex.timer.start('MarkupLoad', xm.uri.toString());\r\n\r\n        var oresolve: nullstone.IOutType = {\r\n            isPrimitive: false,\r\n            type: undefined\r\n        };\r\n\r\n        var namescope = new NameScope(true);\r\n        var active = Internal.createActiveObject(app, namescope, bindingSource);\r\n        var pactor = Internal.createPropertyActor(active, extractType, extractDP);\r\n        var oactor = Internal.createObjectActor(pactor);\r\n        var ractor = Internal.createResourcesActor(active, resources);\r\n\r\n        var last: any;\r\n        var parser = xm.createParser()\r\n            .setNamespaces(Fayde.XMLNS, Fayde.XMLNSX);\r\n        var parse = {\r\n            resolveType: (uri, name) => {\r\n                if (!TypeManager.resolveType(uri, name, oresolve))\r\n                    throw new XamlParseException(\"Could not resolve type [\" + uri + \"][\" + name + \"].\");\r\n                return oresolve;\r\n            },\r\n            resolveObject: (type) => {\r\n                if (type === ResourceDictionary && !pactor.isNewResources())\r\n                    return undefined;\r\n                perfex.timer.start('MarkupCreateObject', type);\r\n                var obj = new (type)();\r\n                if (obj instanceof FrameworkTemplate)\r\n                    parser.skipBranch();\r\n                else if (obj instanceof StaticResource)\r\n                    (<StaticResource>obj).setContext(active.getApp(), resources);\r\n                perfex.timer.stop();\r\n                return obj;\r\n            },\r\n            resolvePrimitive: (type, text) => {\r\n                return nullstone.convertAnyToType(text, type);\r\n            },\r\n            resolveResources: (owner, ownerType) => {\r\n                var rd = owner.Resources;\r\n                return rd;\r\n            },\r\n            branchSkip: (root: any, obj: any) => {\r\n                if (obj instanceof FrameworkTemplate) {\r\n                    var ft: FrameworkTemplate = last = obj;\r\n                    var err = obj.Validate();\r\n                    if (err)\r\n                        throw new XamlParseException(err);\r\n                    setTemplateRoot(ft, root);\r\n                    setResources(ft, ractor.get());\r\n                }\r\n            },\r\n            object: (obj, isContent) => {\r\n                active.set(obj);\r\n                oactor.start();\r\n                ractor.start();\r\n            },\r\n            objectEnd: (obj, key, isContent, prev) => {\r\n                last = obj;\r\n                ractor.end();\r\n                oactor.end();\r\n                active.set(prev);\r\n                if (!active.obj)\r\n                    return;\r\n                if (isContent) {\r\n                    pactor.startContent();\r\n                    pactor.addObject(obj, key);\r\n                    pactor.end();\r\n                } else {\r\n                    pactor.addObject(obj, key);\r\n                }\r\n            },\r\n            contentText: (text) => {\r\n                pactor.setContentText(text);\r\n            },\r\n            name: (name) => {\r\n                active.setName(name);\r\n            },\r\n            propertyStart: (ownerType, propName) => {\r\n                pactor.start(ownerType, propName);\r\n            },\r\n            propertyEnd: (ownerType, propName) => {\r\n                pactor.end();\r\n            },\r\n            attributeStart: (ownerType, attrName) => {\r\n            },\r\n            attributeEnd: (ownerType, attrName, obj) => {\r\n                pactor.setObject(ownerType, attrName, obj);\r\n            },\r\n            error: (err) => false,\r\n            end: () => {\r\n            }\r\n        };\r\n\r\n        function extractType (text: string): any {\r\n            var prefix = <string>null;\r\n            var name = text;\r\n            var ind = name.indexOf(':');\r\n            if (ind > -1) {\r\n                prefix = name.substr(0, ind);\r\n                name = name.substr(ind + 1);\r\n            }\r\n\r\n            var uri = parser.resolvePrefix(prefix);\r\n            TypeManager.resolveType(uri, name, oresolve);\r\n            return oresolve.type;\r\n        }\r\n\r\n        function extractDP (text: string): any {\r\n            var name = text;\r\n            var ind = name.indexOf('.');\r\n            var ownerType: any;\r\n            if (ind > -1) {\r\n                ownerType = extractType(name.substr(0, ind));\r\n                name = name.substr(ind + 1);\r\n            } else {\r\n                for (var en = parser.walkUpObjects(); en.moveNext();) {\r\n                    var style: Style = en.current;\r\n                    if (style instanceof Style) {\r\n                        ownerType = style.TargetType;\r\n                        if (!ownerType)\r\n                            throw new XamlParseException(\"Style must have a TargetType.\");\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return (ownerType)\r\n                ? DependencyProperty.GetDependencyProperty(ownerType, name)\r\n                : null;\r\n        }\r\n\r\n        parser.on(parse)\r\n            .parse(xm.root);\r\n\r\n        if (last instanceof XamlObject) {\r\n            last.XamlNode.NameScope = namescope;\r\n        }\r\n\r\n        perfex.timer.stop();\r\n\r\n        return last;\r\n    }\r\n}","/// <reference path=\"../Markup/Loader\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class ControlTemplate extends Markup.FrameworkTemplate {\r\n        static TargetTypeProperty = DependencyProperty.Register(\"TargetType\", () => IType_, ControlTemplate);\r\n        TargetType: Function;\r\n\r\n        Validate(): string {\r\n            if (!this.TargetType)\r\n                return \"ControlTemplate must have a TargetType.\";\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ControlTemplate);\r\n}","/// <reference path=\"ContentControl\" />\r\n\r\nmodule Fayde.Controls {\r\n    function clickResultPropertyChanged (dobj: DependencyObject, args: IDependencyPropertyChangedEventArgs) {\r\n        var btn = (dobj instanceof Primitives.ButtonBase) ? <Primitives.ButtonBase>dobj : null;\r\n        if (!btn)\r\n            return;\r\n        if (args.OldValue !== undefined)\r\n            btn.Click.off(buttonClicked, btn);\r\n        if (args.NewValue !== undefined)\r\n            btn.Click.on(buttonClicked, btn);\r\n    }\r\n\r\n    function buttonClicked (sender: Primitives.ButtonBase, args) {\r\n        var dialog = VisualTreeHelper.GetParentOfType<Dialog>(sender, Dialog);\r\n        if (dialog)\r\n            dialog.DialogResult = Dialog.GetClickResult(sender);\r\n    }\r\n\r\n    export class Dialog extends ContentControl {\r\n        static DialogResultProperty = DependencyProperty.Register(\"DialogResult\", () => Boolean, Dialog, undefined, (d: Dialog, args) => d.OnDialogResultChanged(args));\r\n        static ClickResultProperty = DependencyProperty.RegisterAttached(\"ClickResult\", () => Boolean, Dialog, undefined, clickResultPropertyChanged);\r\n        DialogResult: boolean;\r\n\r\n        private _IgnoreResult = false;\r\n\r\n        private OnDialogResultChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            if (this._IgnoreResult === true)\r\n                return;\r\n            var overlay = Primitives.Overlay.FindOverlay(this);\r\n            if (overlay) {\r\n                overlay.Close(args.NewValue);\r\n                this._IgnoreResult = true;\r\n                try {\r\n                    this.SetCurrentValue(Dialog.DialogResultProperty, undefined);\r\n                } finally {\r\n                    this._IgnoreResult = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        static GetClickResult (dobj: DependencyObject): boolean {\r\n            return dobj.GetValue(Dialog.ClickResultProperty);\r\n        }\r\n\r\n        static SetClickResult (dobj: DependencyObject, value: boolean) {\r\n            dobj.SetValue(Dialog.ClickResultProperty, value);\r\n        }\r\n\r\n        constructor () {\r\n            super();\r\n            this.DefaultStyleKey = Dialog;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Dialog);\r\n}","/// <reference path=\"Control.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class UserControl extends Control {\r\n        static ContentProperty: DependencyProperty = DependencyProperty.Register(\"Content\", () => UIElement, UserControl);\r\n        Content: UIElement;\r\n\r\n        CreateLayoutUpdater () {\r\n            return new minerva.controls.usercontrol.UserControlUpdater();\r\n        }\r\n\r\n        InitializeComponent () {\r\n            this.ApplyTemplate();\r\n        }\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = UserControl;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(UserControl);\r\n    Markup.Content(UserControl, UserControl.ContentProperty);\r\n\r\n    module reactions {\r\n        UIReaction<UIElement>(UserControl.ContentProperty, (updater, ov, nv, uc?: UserControl) => {\r\n            var error = new BError();\r\n            if (ov instanceof UIElement)\r\n                uc.XamlNode.DetachVisualChild(ov, error);\r\n            if (nv instanceof UIElement)\r\n                uc.XamlNode.AttachVisualChild(nv, error);\r\n            if (error.Message)\r\n                error.ThrowException();\r\n            updater.updateBounds();\r\n        }, false, false);\r\n    }\r\n}","/// <reference path=\"UserControl.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class Page extends UserControl {\r\n        static TitleProperty = DependencyProperty.Register(\"Title\", () => String, Page);\r\n        Title: string;\r\n\r\n        constructor () {\r\n            super();\r\n            this.DefaultStyleKey = Page;\r\n        }\r\n\r\n        static GetAsync (initiator: DependencyObject, url: string): nullstone.async.IAsyncRequest<Page> {\r\n            return nullstone.async.create((resolve, reject) => {\r\n                Markup.Resolve(url)\r\n                    .then(xm => {\r\n                        TimelineProfile.Parse(true, \"Page\");\r\n                        var page = Markup.Load<Page>(initiator.App, xm);\r\n                        TimelineProfile.Parse(false, \"Page\");\r\n                        if (!(page instanceof Controls.Page))\r\n                            reject(\"Markup must be a Page.\");\r\n                        else\r\n                            resolve(page);\r\n                    }, reject);\r\n            });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Page);\r\n}","module Fayde.Navigation {\r\n    export interface INavigate {\r\n        Navigate(source: Uri): boolean;\r\n    }\r\n    export var INavigate_ = new nullstone.Interface<INavigate>(\"INavigate\");\r\n}","/// <reference path=\"ContentControl.ts\" />\r\n/// <reference path=\"Page.ts\" />\r\n/// <reference path=\"../Navigation/INavigate.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    function createErrorDoc(error: any): nullstone.markup.xaml.XamlMarkup {\r\n        var safe = (error || '').toString()\r\n            .replace(/&/g, '&amp;')\r\n            .replace(/</g, '&lt;')\r\n            .replace(/>/g, '&gt;')\r\n            .replace(/\"/g, '&quot;')\r\n            .replace(/'/g, '&apos;');\r\n        var xaml = '<Page xmlns=\"' + Fayde.XMLNS + '\" xmlns:x=\"' + Fayde.XMLNSX + '\" Title=\"Error\">';\r\n        xaml += '<TextBlock Text=\"' + safe + '\" />';\r\n        xaml += '</Page>';\r\n        return Markup.CreateXaml(xaml, Fayde.XMLNS + \"/frame/error\");\r\n    }\r\n\r\n    function getErrorPage(app: Application, error: string): Page {\r\n        return Markup.Load<Page>(app, createErrorDoc(error));\r\n    }\r\n\r\n    export class Frame extends ContentControl implements Navigation.INavigate {\r\n        static IsDeepLinkedProperty = DependencyProperty.Register(\"IsDeepLinked\", () => Boolean, Frame, true);\r\n        static CurrentSourceProperty = DependencyProperty.RegisterReadOnly(\"CurrentSource\", () => Uri, Frame);\r\n        static SourceProperty = DependencyProperty.Register(\"Source\", () => Uri, Frame, undefined, (d, args) => (<Frame>d).SourcePropertyChanged(args));\r\n        static UriMapperProperty = DependencyProperty.Register(\"UriMapper\", () => Navigation.UriMapper, Frame);\r\n        static RouteMapperProperty = DependencyProperty.Register(\"RouteMapper\", () => Navigation.RouteMapper, Frame);\r\n        static IsLoadingProperty = DependencyProperty.RegisterReadOnly(\"IsLoading\", () => Boolean, Frame, false, (d: Frame, args) => d.OnIsLoadingChanged(args.OldValue, args.NewValue));\r\n        IsDeepLinked: boolean;\r\n        CurrentSource: Uri;\r\n        Source: Uri;\r\n        UriMapper: Navigation.UriMapper;\r\n        RouteMapper: Navigation.RouteMapper;\r\n        IsLoading: boolean;\r\n\r\n        private _NavService = new Navigation.NavigationService();\r\n        private _CurrentRoute: Fayde.Navigation.Route = undefined;\r\n\r\n        OnIsLoadingChanged(oldIsLoading: boolean, newIsLoading: boolean) {\r\n            this.UpdateVisualState();\r\n        }\r\n\r\n        //Navigated = new MulticastEvent();\r\n        //Navigating = new MulticastEvent();\r\n        //NavigationFailed = new MulticastEvent();\r\n        //NavigationStopped = new MulticastEvent();\r\n        //FragmentNavigation = new MulticastEvent();\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = Frame;\r\n            this.Loaded.on(this._FrameLoaded, this);\r\n        }\r\n\r\n        GoToStates(gotoFunc: (state: string) => boolean) {\r\n            this.GoToStateLoading(gotoFunc);\r\n        }\r\n\r\n        GoToStateLoading(gotoFunc: (state: string) => boolean): boolean {\r\n            return gotoFunc(this.IsLoading ? \"Loading\" : \"Idle\");\r\n        }\r\n\r\n        Navigate(uri: Uri): boolean {\r\n            return this._NavService.Navigate(uri);\r\n        }\r\n\r\n        GoForward() {\r\n            //TODO: Implement\r\n        }\r\n\r\n        GoBackward() {\r\n            //TODO: Implement\r\n        }\r\n\r\n        StopLoading() {\r\n            //TODO: Implement\r\n        }\r\n\r\n        private _FrameLoaded(sender, e: RoutedEventArgs) {\r\n            if (this.IsDeepLinked) {\r\n                this._NavService.LocationChanged.on(this._HandleDeepLink, this);\r\n                this._HandleDeepLink();\r\n            }\r\n        }\r\n\r\n        private _HandleDeepLink() {\r\n            this._LoadContent(this._NavService.CurrentUri);\r\n        }\r\n\r\n        private _LoadContent(source: Uri) {\r\n            this.SetCurrentValue(Frame.CurrentSourceProperty, source);\r\n            this.StopLoading();\r\n            this.SetCurrentValue(Frame.IsLoadingProperty, true);\r\n\r\n            var fragment = source.fragment;\r\n            if (fragment[0] === \"#\")\r\n                fragment = fragment.substr(1);\r\n            TimelineProfile.Navigate(true, fragment);\r\n\r\n            var targetUri = new Uri(fragment, nullstone.UriKind.Relative);\r\n            var target: string = undefined;\r\n            if (this.RouteMapper) {\r\n                this._CurrentRoute = this.RouteMapper.MapUri(targetUri);\r\n                if (!this._CurrentRoute)\r\n                    throw new InvalidOperationException(\"Route could not be mapped.\" + targetUri.toString());\r\n                target = this._CurrentRoute.View.toString();\r\n            }\r\n            else if (this.UriMapper) {\r\n                var mapped = this.UriMapper.MapUri(targetUri);\r\n                if (!mapped)\r\n                    throw new InvalidOperationException(\"Uri could not be mapped.\" + targetUri.toString());\r\n                target = mapped.toString();\r\n            }\r\n\r\n            Page.GetAsync(this, target)\r\n                .then(page => this._HandleSuccess(page),\r\n                    err => this._HandleError(err));\r\n        }\r\n\r\n        private _HandleSuccess(page: Page) {\r\n            this._SetPage(page);\r\n            this.SetCurrentValue(Frame.IsLoadingProperty, false);\r\n            TimelineProfile.Navigate(false);\r\n            TimelineProfile.IsNextLayoutPassProfiled = true;\r\n        }\r\n\r\n        private _HandleError(error: any) {\r\n            this._SetPage(getErrorPage(this.App, error));\r\n            this.SetCurrentValue(Frame.IsLoadingProperty, false);\r\n            TimelineProfile.Navigate(false);\r\n        }\r\n\r\n        private _SetPage(page: Page) {\r\n            document.title = page.Title;\r\n            this.Content = page;\r\n            if (this._CurrentRoute)\r\n                page.DataContext = this._CurrentRoute.DataContext;\r\n            if (page.DataContext == null)\r\n                page.DataContext = this.DataContext;\r\n        }\r\n\r\n        private SourcePropertyChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            //TODO: Ignore in design mode\r\n            if (true)//if loaded and not updating source from nav service\r\n                this.Navigate(args.NewValue);\r\n\r\n            //TODO: Show default content uri in Content when in design mode\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Frame);\r\n    nullstone.addTypeInterfaces(Frame, Navigation.INavigate_);\r\n    TemplateVisualStates(Frame,\r\n        {GroupName: \"LoadingStates\", Name: \"Idle\"},\r\n        {GroupName: \"LoadingStates\", Name: \"Loading\"});\r\n}","/// <reference path=\"Panel.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class GridNode extends PanelNode {\r\n        LayoutUpdater: minerva.controls.grid.GridUpdater;\r\n\r\n        ColumnDefinitionsChanged (coldef: ColumnDefinition, index: number, add: boolean) {\r\n            var updater = this.LayoutUpdater;\r\n            var coldefs = updater.assets.columnDefinitions;\r\n\r\n            if (add) {\r\n                coldefs.splice(index, 0, coldef);\r\n                ReactTo(coldef, this, () => updater.invalidateMeasure());\r\n            } else {\r\n                UnreactTo(coldef, this);\r\n                coldefs.splice(index, 1);\r\n            }\r\n\r\n            updater.invalidateMeasure();\r\n        }\r\n\r\n        RowDefinitionsChanged (rowdef: RowDefinition, index: number, add: boolean) {\r\n            var updater = this.LayoutUpdater;\r\n            var rowdefs = updater.assets.rowDefinitions;\r\n\r\n            if (add) {\r\n                rowdefs.splice(index, 0, rowdef);\r\n                ReactTo(rowdef, this, () => updater.invalidateMeasure());\r\n            } else {\r\n                UnreactTo(rowdef, this);\r\n                rowdefs.splice(index, 1);\r\n            }\r\n\r\n            updater.invalidateMeasure();\r\n        }\r\n    }\r\n\r\n    export class Grid extends Panel {\r\n        XamlNode: GridNode;\r\n        CreateNode(): GridNode { return new GridNode(this); }\r\n        CreateLayoutUpdater () { return new minerva.controls.grid.GridUpdater(); }\r\n\r\n        static ColumnProperty = DependencyProperty.RegisterAttached(\"Column\", () => Number, Grid, 0);\r\n        static GetColumn (d: DependencyObject): number { return d.GetValue(Grid.ColumnProperty); }\r\n        static SetColumn (d: DependencyObject, value: number) { d.SetValue(Grid.ColumnProperty, value); }\r\n\r\n        static ColumnSpanProperty = DependencyProperty.RegisterAttached(\"ColumnSpan\", () => Number, Grid, 1);\r\n        static GetColumnSpan (d: DependencyObject): number { return d.GetValue(Grid.ColumnSpanProperty); }\r\n        static SetColumnSpan (d: DependencyObject, value: number) { d.SetValue(Grid.ColumnSpanProperty, value); }\r\n\r\n        static RowProperty = DependencyProperty.RegisterAttached(\"Row\", () => Number, Grid, 0);\r\n        static GetRow (d: DependencyObject): number { return d.GetValue(Grid.RowProperty); }\r\n        static SetRow (d: DependencyObject, value: number) { d.SetValue(Grid.RowProperty, value); }\r\n\r\n        static RowSpanProperty = DependencyProperty.RegisterAttached(\"RowSpan\", () => Number, Grid, 1);\r\n        static GetRowSpan (d: DependencyObject): number { return d.GetValue(Grid.RowSpanProperty); }\r\n        static SetRowSpan (d: DependencyObject, value: number) { d.SetValue(Grid.RowSpanProperty, value); }\r\n\r\n        static ColumnDefinitionsProperty = DependencyProperty.RegisterImmutable<ColumnDefinitionCollection>(\"ColumnDefinitions\", () => ColumnDefinitionCollection, Grid);\r\n        static RowDefinitionsProperty = DependencyProperty.RegisterImmutable<RowDefinitionCollection>(\"RowDefinitions\", () => RowDefinitionCollection, Grid);\r\n        static ShowGridLinesProperty = DependencyProperty.Register(\"ShowGridLines\", () => Boolean, Grid, false);\r\n        ShowGridLines: boolean;\r\n        ColumnDefinitions: ColumnDefinitionCollection;\r\n        RowDefinitions: RowDefinitionCollection;\r\n\r\n        constructor () {\r\n            super();\r\n            var coldefs = Grid.ColumnDefinitionsProperty.Initialize(this);\r\n            ReactTo(coldefs, this, (obj?) => this.XamlNode.ColumnDefinitionsChanged(obj.item, obj.index, obj.add));\r\n            var rowdefs = Grid.RowDefinitionsProperty.Initialize(this);\r\n            ReactTo(rowdefs, this, (obj?) => this.XamlNode.RowDefinitionsChanged(obj.item, obj.index, obj.add));\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Grid);\r\n\r\n    module reactions {\r\n        UIReaction<boolean>(Grid.ShowGridLinesProperty, minerva.controls.grid.reactTo.showGridLines, false);\r\n        UIReactionAttached<number>(Grid.ColumnProperty, minerva.controls.grid.reactTo.column);\r\n        UIReactionAttached<number>(Grid.ColumnSpanProperty, minerva.controls.grid.reactTo.columnSpan);\r\n        UIReactionAttached<number>(Grid.RowProperty, minerva.controls.grid.reactTo.row);\r\n        UIReactionAttached<number>(Grid.RowSpanProperty, minerva.controls.grid.reactTo.rowSpan);\r\n    }\r\n}","module Fayde.Controls {\r\n    import GridUnitType = minerva.controls.grid.GridUnitType;\r\n    Fayde.CoreLibrary.addEnum(GridUnitType, \"GridUnitType\");\r\n\r\n    export class GridLength implements minerva.controls.grid.IGridLength, ICloneable {\r\n        Value: number;\r\n        Type: GridUnitType;\r\n        constructor(value?: number, unitType?: GridUnitType) {\r\n            this.Value = value == null ? 0 : value;\r\n            this.Type = unitType || GridUnitType.Auto;\r\n        }\r\n        static Equals(gl1: GridLength, gl2: GridLength): boolean {\r\n            return Math.abs(gl1.Value - gl2.Value) < 0.001 && gl1.Type == gl2.Type;\r\n        }\r\n        Clone(): GridLength {\r\n            return new Controls.GridLength(this.Value, this.Type);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(GridLength);\r\n\r\n    nullstone.registerTypeConverter(GridLength, (val: any): GridLength => {\r\n        if (val instanceof GridLength)\r\n            return <GridLength>val;\r\n        if (!val || val.toLowerCase() === \"auto\")\r\n            return new GridLength();\r\n        var type = GridUnitType.Pixel;\r\n        if (val[val.length - 1] === \"*\") {\r\n            val = val.substr(0, val.length - 1);\r\n            type = GridUnitType.Star;\r\n        }\r\n        var v = parseFloat(val);\r\n        if (isNaN(v)) v = 1;\r\n        return new GridLength(v, type);\r\n    });\r\n}","/// <reference path=\"ContentControl.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class HeaderedContentControl extends ContentControl {\r\n        static HeaderProperty = DependencyProperty.Register(\"Header\", () => Object, HeaderedContentControl, undefined, (d, args) => (<HeaderedContentControl>d).OnHeaderChanged(args.OldValue, args.NewValue));\r\n        Header: any;\r\n        static HeaderTemplateProperty = DependencyProperty.Register(\"HeaderTemplate\", () => DataTemplate, HeaderedContentControl, undefined, (d, args) => (<HeaderedContentControl>d).OnHeaderTemplateChanged(args.OldValue, args.NewValue));\r\n        HeaderTemplate: DataTemplate;\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = HeaderedContentControl;\r\n        }\r\n\r\n        OnHeaderChanged(oldHeader: any, newHeader: any) { }\r\n        OnHeaderTemplateChanged(oldHeaderTemplate: DataTemplate, newHeaderTemplate: DataTemplate) { }\r\n    }\r\n    Fayde.CoreLibrary.add(HeaderedContentControl);\r\n}","/// <reference path=\"Primitives/ButtonBase.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    type Target = string|Frame;\r\n\r\n    export class HyperlinkButton extends Primitives.ButtonBase {\r\n        static NavigateUriProperty = DependencyProperty.Register(\"NavigateUri\", () => Uri, HyperlinkButton);\r\n        static TargetNameProperty = DependencyProperty.Register(\"TargetName\", () => String, HyperlinkButton);\r\n        NavigateUri: Uri;\r\n        TargetName: string;\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = HyperlinkButton;\r\n        }\r\n\r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n            this.UpdateVisualState(false);\r\n        }\r\n\r\n        OnClick() {\r\n            super.OnClick();\r\n            var navUri = this.NavigateUri;\r\n            if (navUri)\r\n                Navigation.Navigate(this, this.TargetName, navUri);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(HyperlinkButton);\r\n    TemplateVisualStates(HyperlinkButton,\r\n        {GroupName: \"CommonStates\", Name: \"Normal\"},\r\n        {GroupName: \"CommonStates\", Name: \"MouseOver\"},\r\n        {GroupName: \"CommonStates\", Name: \"Pressed\"},\r\n        {GroupName: \"CommonStates\", Name: \"Disabled\"},\r\n        {GroupName: \"FocusStates\", Name: \"Unfocused\"},\r\n        {GroupName: \"FocusStates\", Name: \"Focused\"});\r\n}","module Fayde.Media {\r\n    export enum BrushMappingMode {\r\n        Absolute = 0,\r\n        RelativeToBoundingBox = 1,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(BrushMappingMode, \"BrushMappingMode\");\r\n\r\n    export enum GradientSpreadMethod {\r\n        Pad = 0,\r\n        Reflect = 1,\r\n        Repeat = 2,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(GradientSpreadMethod, \"GradientSpreadMethod\");\r\n\r\n    export enum Stretch {\r\n        None = 0,\r\n        Fill = 1,\r\n        Uniform = 2,\r\n        UniformToFill = 3,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(Stretch, \"Stretch\");\r\n\r\n    export enum AlignmentX {\r\n        Left = 0,\r\n        Center = 1,\r\n        Right = 2,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(AlignmentX, \"AlignmentX\");\r\n\r\n    export enum AlignmentY {\r\n        Top = 0,\r\n        Center = 1,\r\n        Bottom = 2,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(AlignmentY, \"AlignmentY\");\r\n\r\n    export enum TextHintingMode {\r\n        Fixed = 0,\r\n        Animated = 1,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(TextHintingMode, \"TextHintingMode\");\r\n}","/// <reference path=\"../Core/FrameworkElement.ts\" />\r\n/// <reference path=\"../Media/Enums.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    import ImageUpdater = minerva.controls.image.ImageUpdater;\r\n    export class Image extends FrameworkElement implements Media.Imaging.IImageChangedListener {\r\n        CreateLayoutUpdater () {\r\n            return new ImageUpdater();\r\n        }\r\n\r\n        private static _SourceCoercer (d: DependencyObject, propd: DependencyProperty, value: any): any {\r\n            if (typeof value === \"string\")\r\n                return new Media.Imaging.BitmapImage(new Uri(value));\r\n            if (value instanceof Uri)\r\n                return new Media.Imaging.BitmapImage(value);\r\n            return value;\r\n        }\r\n\r\n        static SourceProperty = DependencyProperty.RegisterFull(\"Source\", () => Media.Imaging.ImageSource, Image, undefined, undefined, Image._SourceCoercer);\r\n        // http: //msdn.microsoft.com/en-us/library/system.windows.media.stretch(v=vs.95).aspx\r\n        static StretchProperty = DependencyProperty.RegisterCore(\"Stretch\", () => new Enum(Media.Stretch), Image, Media.Stretch.Uniform);\r\n        Source: Media.Imaging.ImageSource;\r\n        Stretch: Media.Stretch;\r\n\r\n        ImageOpened = new nullstone.Event();\r\n        ImageFailed = new nullstone.Event();\r\n\r\n        OnImageErrored (source: Media.Imaging.BitmapSource, e: Event) {\r\n            this.ImageFailed.raise(this, null);\r\n        }\r\n\r\n        OnImageLoaded (source: Media.Imaging.BitmapSource, e: Event) {\r\n            this.ImageOpened.raise(this, null);\r\n            var lu = this.XamlNode.LayoutUpdater;\r\n            lu.invalidateMeasure();\r\n        }\r\n\r\n        ImageChanged (source: Media.Imaging.BitmapSource) {\r\n            var lu = this.XamlNode.LayoutUpdater;\r\n            lu.invalidateMeasure();\r\n            lu.invalidate();\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Image);\r\n\r\n    UIReaction<Media.Imaging.ImageSource>(Image.SourceProperty, (upd: ImageUpdater, ov, nv, image?: Image) => {\r\n        if (ov instanceof Media.Imaging.BitmapSource)\r\n            (<Media.Imaging.BitmapSource>ov).Unlisten(image);\r\n        if (nv instanceof Media.Imaging.BitmapSource) {\r\n            (<Media.Imaging.BitmapSource>nv).Listen(image);\r\n        } else {\r\n            upd.updateBounds();\r\n            upd.invalidate();\r\n        }\r\n        upd.invalidateMeasure();\r\n        upd.invalidateMetrics();\r\n    }, false);\r\n    UIReaction<minerva.Stretch>(Image.StretchProperty, (upd: ImageUpdater, ov, nv) => {\r\n        upd.invalidateMeasure();\r\n        upd.invalidateMetrics();\r\n    }, false);\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export interface IItemCollection extends nullstone.ICollection<any> {\r\n        ItemsChanged: nullstone.Event<Collections.CollectionChangedEventArgs>;\r\n        ToArray(): any[];\r\n\r\n        GetRange(startIndex: number, endIndex: number): any[];\r\n        Contains(value: any): boolean;\r\n        IndexOf(value: any): number;\r\n        AddRange(values: any[]);\r\n    }\r\n\r\n    export class ItemCollection extends XamlObjectCollection<any> implements IItemCollection {\r\n        ItemsChanged = new nullstone.Event<Collections.CollectionChangedEventArgs>();\r\n\r\n        ToArray (): any[] {\r\n            return this._ht.slice(0);\r\n        }\r\n\r\n        get Count (): number {\r\n            return this._ht.length;\r\n        }\r\n\r\n        IsReadOnly: boolean = false;\r\n\r\n        GetValueAt (index: number): XamlObject {\r\n            var ht = this._ht;\r\n            if (index < 0 || index >= ht.length)\r\n                throw new IndexOutOfRangeException(index);\r\n            return ht[index];\r\n        }\r\n\r\n        GetRange (startIndex: number, endIndex: number): XamlObject[] {\r\n            return this._ht.slice(startIndex, endIndex + 1);\r\n        }\r\n\r\n        SetValueAt (index: number, value: XamlObject): boolean {\r\n            this._ValidateReadOnly();\r\n            this.SetValueAtImpl(index, value);\r\n            return true;\r\n        }\r\n\r\n        SetValueAtImpl (index: number, value: any) {\r\n            var ht = this._ht;\r\n            if (index < 0 || index >= ht.length)\r\n                throw new IndexOutOfRangeException(index);\r\n            var oldValue = ht[index];\r\n            ht[index] = value;\r\n            this.ItemsChanged.raise(this, Collections.CollectionChangedEventArgs.Replace(value, oldValue, index));\r\n        }\r\n\r\n        Add (value: XamlObject): number {\r\n            this._ValidateReadOnly();\r\n            if (value == null)\r\n                throw new ArgumentException(\"value\");\r\n            return this.AddImpl(value);\r\n        }\r\n\r\n        AddImpl (value: any): number {\r\n            var index = this._ht.push(value) - 1;\r\n            this.ItemsChanged.raise(this, Collections.CollectionChangedEventArgs.Add(value, index));\r\n            return index;\r\n        }\r\n\r\n        AddRange (values: any[]) {\r\n            this._ValidateReadOnly();\r\n            if (!values) return;\r\n            for (var i = 0; i < values.length; i++) {\r\n                if (values[i] == null) throw new ArgumentException(\"value\");\r\n            }\r\n            this.AddRangeImpl(values);\r\n        }\r\n\r\n        AddRangeImpl (values: any[]) {\r\n            var index = this._ht.length;\r\n            this._ht = this._ht.concat(values);\r\n            this.ItemsChanged.raise(this, Collections.CollectionChangedEventArgs.AddRange(values, index));\r\n        }\r\n\r\n        Insert (index: number, value: XamlObject): boolean {\r\n            this._ValidateReadOnly();\r\n            if (value == null)\r\n                throw new ArgumentException(\"value\");\r\n            this.InsertImpl(index, value);\r\n            return true;\r\n        }\r\n\r\n        InsertImpl (index: number, value: XamlObject) {\r\n            var ht = this._ht;\r\n            if (index < 0 || index > ht.length)\r\n                throw new IndexOutOfRangeException(index);\r\n            if (index >= ht.length)\r\n                ht.push(value);\r\n            else\r\n                ht.splice(index, 0, value);\r\n            this.ItemsChanged.raise(this, Collections.CollectionChangedEventArgs.Add(value, index));\r\n        }\r\n\r\n        IndexOf (value: XamlObject): number {\r\n            return this._ht.indexOf(value);\r\n        }\r\n\r\n        Contains (value: XamlObject): boolean {\r\n            return this._ht.indexOf(value) > -1;\r\n        }\r\n\r\n        Remove (value: XamlObject): boolean {\r\n            this._ValidateReadOnly();\r\n            this.RemoveImpl(value);\r\n            return true;\r\n        }\r\n\r\n        RemoveImpl (value: XamlObject) {\r\n            var index = this._ht.indexOf(value);\r\n            if (index < 0)\r\n                return;\r\n            this._ht.splice(index, 1);\r\n            this.ItemsChanged.raise(this, Collections.CollectionChangedEventArgs.Remove(value, index));\r\n        }\r\n\r\n        RemoveAt (index: number): boolean {\r\n            this._ValidateReadOnly();\r\n            if (index < 0 || index >= this._ht.length)\r\n                throw new IndexOutOfRangeException(index);\r\n            this.RemoveAtImpl(index);\r\n            return true;\r\n        }\r\n\r\n        RemoveAtImpl (index: number) {\r\n            var item = this._ht.splice(index, 1)[0];\r\n            this.ItemsChanged.raise(this, Collections.CollectionChangedEventArgs.Remove(item, index));\r\n        }\r\n\r\n        Clear (): boolean {\r\n            this._ValidateReadOnly();\r\n            this.ClearImpl();\r\n            return true;\r\n        }\r\n\r\n        ClearImpl () {\r\n            var old = this._ht;\r\n            this._ht = [];\r\n            this.ItemsChanged.raise(this, Collections.CollectionChangedEventArgs.Reset(old));\r\n        }\r\n\r\n        private _ValidateReadOnly () {\r\n            if (this.IsReadOnly)\r\n                throw new InvalidOperationException(\"The collection is readonly.\");\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ItemCollection);\r\n}","/// <reference path=\"../Markup/Loader\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class ItemsPanelTemplate extends Markup.FrameworkTemplate {\r\n        GetVisualTree(bindingSource: DependencyObject): Panel {\r\n            var panel = <Panel>super.GetVisualTree(bindingSource);\r\n            if (!(panel instanceof Panel))\r\n                throw new XamlParseException(\"The root element of an ItemsPanelTemplate must be a Panel subclass.\");\r\n            return panel;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ItemsPanelTemplate);\r\n}","/// <reference path=\"../Core/FrameworkElement.ts\" />\r\n/// <reference path=\"../Markup/Creator.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    var spxd = Markup.CreateXaml(\"<ItemsPanelTemplate xmlns=\\\"\" + Fayde.XMLNS + \"\\\"><StackPanel /></ItemsPanelTemplate>\"\r\n        , Fayde.XMLNS + \"/itemspresenter/stackpanel/default\");\r\n    var spft: ItemsPanelTemplate;\r\n\r\n    var vspxd = Markup.CreateXaml(\"<ItemsPanelTemplate xmlns=\\\"\" + Fayde.XMLNS + \"\\\"><VirtualizingStackPanel /></ItemsPanelTemplate>\"\r\n        , Fayde.XMLNS + \"/itemspresenter/virtualizingstackpanel/default\");\r\n    var vspft: ItemsPanelTemplate;\r\n\r\n    function getFallbackTemplate(ic: ItemsControl): ItemsPanelTemplate {\r\n        if (ic instanceof ListBox)\r\n            return vspft = vspft || Markup.Load<ItemsPanelTemplate>(ic.App, vspxd);\r\n        return spft = spft || Markup.Load<ItemsPanelTemplate>(ic.App, spxd);\r\n    }\r\n\r\n    export class ItemsPresenterNode extends FENode {\r\n        XObject: ItemsPresenter;\r\n        constructor(xobj: ItemsPresenter) {\r\n            super(xobj);\r\n        }\r\n\r\n        private _ElementRoot: Panel;\r\n        get ElementRoot(): Panel { return this._ElementRoot; }\r\n\r\n        DoApplyTemplateWithError(error: BError): boolean {\r\n            if (this._ElementRoot)\r\n                return false;\r\n\r\n            var xobj = this.XObject;\r\n            var ic = xobj.TemplateOwner;\r\n            if (!(ic instanceof ItemsControl))\r\n                return false;\r\n\r\n            var er: Panel;\r\n            if (ic.ItemsPanel)\r\n                er = this._ElementRoot = ic.ItemsPanel.GetVisualTree(xobj);\r\n            if (!er)\r\n                er = this._ElementRoot = getFallbackTemplate(ic).GetVisualTree(xobj);\r\n\r\n            ItemsControl.SetIsItemsHost(er, true);\r\n            if (!this.FinishApplyTemplateWithError(er, error))\r\n                return false;\r\n            ic.XamlNode.ItemsPresenter = xobj;\r\n            xobj.OnItemsAdded(0, ic.Items.ToArray());\r\n            return true;\r\n        }\r\n    }\r\n\r\n    export class ItemsPresenter extends FrameworkElement {\r\n        TemplateOwner: ItemsControl;\r\n        XamlNode: ItemsPresenterNode;\r\n        CreateNode(): ItemsPresenterNode { return new ItemsPresenterNode(this); }\r\n\r\n        get ItemsControl(): ItemsControl {\r\n            return this.TemplateOwner instanceof ItemsControl ? this.TemplateOwner : null;\r\n        }\r\n        get Panel(): Panel {\r\n            var er = this.XamlNode.ElementRoot;\r\n            return er instanceof Panel ? er : undefined;\r\n        }\r\n\r\n        static Get(panel: Panel): ItemsPresenter {\r\n            if (!(panel instanceof Panel))\r\n                return null;\r\n            if (!ItemsControl.GetIsItemsHost(panel))\r\n                return null;\r\n            return panel.TemplateOwner instanceof ItemsPresenter ? <ItemsPresenter>panel.TemplateOwner : null;\r\n        }\r\n\r\n        OnItemsAdded(index: number, newItems: any[]) {\r\n            var panel = this.Panel;\r\n            if (!panel)\r\n                return;\r\n            if (panel instanceof VirtualizingPanel) {\r\n                (<VirtualizingPanel>panel).OnItemsAdded(index, newItems);\r\n            } else {\r\n                for (var ic = this.ItemsControl, children = panel.Children, generator = ic.ItemContainersManager.CreateGenerator(index, newItems.length); generator.Generate();) {\r\n                    var container = generator.Current;\r\n                    children.Insert(index + generator.GenerateIndex, <UIElement>container);\r\n                    ic.PrepareContainerForItem(container, generator.CurrentItem);\r\n                }\r\n            }\r\n        }\r\n        OnItemsRemoved(index: number, oldItems: any[]) {\r\n            var panel = this.Panel;\r\n            if (!panel)\r\n                return;\r\n            if (panel instanceof VirtualizingPanel) {\r\n                (<VirtualizingPanel>panel).OnItemsRemoved(index, oldItems);\r\n            } else {\r\n                var icm = this.ItemsControl.ItemContainersManager;\r\n                var children = panel.Children;\r\n                var count = oldItems ? oldItems.length : null;\r\n                if (count == null || count === children.Count) {\r\n                    children.Clear();\r\n                } else {\r\n                    while (count > 0) {\r\n                        children.RemoveAt(index);\r\n                        count--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ItemsPresenter);\r\n}","/// <reference path=\"Primitives/Selector.ts\" />\r\n/// <reference path=\"ScrollViewer.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    interface IOutValue {\r\n        Value: any;\r\n    }\r\n    export class ListBox extends Primitives.Selector {\r\n        private _FocusedIndex: number = 0;\r\n        static ItemContainerStyleProperty = DependencyProperty.Register(\"ItemContainerStyle\", () => Style, ListBox, undefined, (d, args) => (<ListBox>d).OnItemContainerStyleChanged(args));\r\n        static IsSelectionActiveProperty = Primitives.Selector.IsSelectionActiveProperty;\r\n        ItemContainerStyle: Style;\r\n\r\n        constructor () {\r\n            super();\r\n            this.DefaultStyleKey = ListBox;\r\n        }\r\n\r\n        ScrollIntoView(item: any) {\r\n            var tsv = this.$TemplateScrollViewer;\r\n            if (!tsv)\r\n                return;\r\n            var items = this.Items;\r\n            if (!items.Contains(item))\r\n                return;\r\n\r\n            var ihro = { Value: null };\r\n            var lbiro = { Value: null };\r\n            var virtualizing = VirtualizingStackPanel.GetIsVirtualizing(this);\r\n            if (this._IsOnCurrentPage(item, ihro, lbiro))\r\n                return;\r\n            var ihr = ihro.Value;\r\n            var lbir = lbiro.Value;\r\n\r\n            if (this._GetIsVerticalOrientation()) {\r\n                if (virtualizing) {\r\n                    tsv.ScrollToVerticalOffset(this.SelectedIndex);\r\n                    return;\r\n                }\r\n                var verticalOffset = tsv.VerticalOffset;\r\n                var verticalDelta = 0;\r\n                if (ihr.GetBottom() < lbir.GetBottom()) {\r\n                    verticalDelta = lbir.GetBottom() - ihr.GetBottom();\r\n                    verticalOffset += verticalDelta;\r\n                }\r\n                if ((lbir.Y - verticalDelta) < ihr.Y) {\r\n                    verticalOffset -= ihr.Y - (lbir.Y - verticalDelta);\r\n                }\r\n                tsv.ScrollToVerticalOffset(verticalOffset);\r\n            } else {\r\n                if (virtualizing) {\r\n                    tsv.ScrollToHorizontalOffset(this.SelectedIndex);\r\n                    return;\r\n                }\r\n                var horizontalOffset = tsv.HorizontalOffset;\r\n                var horizontalDelta = 0;\r\n                if (ihr.GetRight() < lbir.GetRight()) {\r\n                    horizontalDelta = lbir.GetRight() - ihr.GetRight();\r\n                    horizontalOffset += horizontalDelta;\r\n                }\r\n                if ((ihr.X - horizontalDelta) < ihr.X) {\r\n                    horizontalOffset -= ihr.X - (lbir.X - horizontalDelta);\r\n                }\r\n                tsv.ScrollToHorizontalOffset(horizontalOffset);\r\n            }\r\n        }\r\n\r\n        private _NavigateByPage(forward: boolean) {\r\n            var tsv = this.$TemplateScrollViewer;\r\n            var newFocusedIndex = -1;\r\n            var item = (this._FocusedIndex !== -1) ? this.Items.GetValueAt(this._FocusedIndex) : null;\r\n            if (item != null && !this._IsOnCurrentPage(item)) {\r\n                this.ScrollIntoView(item);\r\n                if (tsv != null)\r\n                    tsv.UpdateLayout();\r\n            }\r\n            if (item == null) {\r\n                newFocusedIndex = this._GetFirstItemOnCurrentPage(this._FocusedIndex, forward);\r\n            } else {\r\n                var firstItemOnCurrentPage = this._GetFirstItemOnCurrentPage(this._FocusedIndex, forward);\r\n                if (firstItemOnCurrentPage !== this._FocusedIndex) {\r\n                    newFocusedIndex = firstItemOnCurrentPage;\r\n                } else {\r\n                    if (tsv != null) {\r\n                        if (this._GetIsVerticalOrientation()) {\r\n                            tsv.ScrollToVerticalOffset(Math.max(0, Math.min(tsv.ScrollableHeight,\r\n                                tsv.VerticalOffset + (tsv.ViewportHeight * (forward ? 1 : -1)))));\r\n                        } else {\r\n                            tsv.ScrollToHorizontalOffset(Math.max(0, Math.min(tsv.ScrollableWidth,\r\n                                tsv.HorizontalOffset + (tsv.ViewportWidth * (forward ? 1 : -1)))));\r\n\r\n                        }\r\n                        tsv.UpdateLayout();\r\n                    }\r\n                    newFocusedIndex = this._GetFirstItemOnCurrentPage(this._FocusedIndex, forward);\r\n                }\r\n            }\r\n            return newFocusedIndex;\r\n        }\r\n        private _ScrollInDirection(key: Input.Key) {\r\n            if (this.$TemplateScrollViewer)\r\n                this.$TemplateScrollViewer.ScrollInDirection(key);\r\n        }\r\n        private _IsOnCurrentPage(item: any, itemsHostRectOut?: IOutValue, listBoxItemsRectOut?: IOutValue) {\r\n            if (!itemsHostRectOut) itemsHostRectOut = { Value: null };\r\n            if (!listBoxItemsRectOut) listBoxItemsRectOut = { Value: null };\r\n\r\n            var itemsHost: UIElement = <UIElement>VisualTreeHelper.GetChild(VisualTreeHelper.GetChild(this, 0), 0);\r\n\r\n            var tsv = this.$TemplateScrollViewer;\r\n            if (tsv != null) {\r\n                itemsHost = tsv;\r\n                if (tsv.$ScrollContentPresenter != null)\r\n                    itemsHost = tsv.$ScrollContentPresenter;\r\n            }\r\n            if (!(itemsHost instanceof FrameworkElement))\r\n                itemsHost = null;\r\n\r\n            var ihro = itemsHostRectOut.Value = new minerva.Rect();\r\n            var lbiro = listBoxItemsRectOut.Value = new minerva.Rect();\r\n            if (!itemsHost)\r\n                return false;\r\n            minerva.Size.copyTo(itemsHost.RenderSize, ihro);\r\n\r\n            var lbi = <ListBoxItem>this.ItemContainersManager.ContainerFromItem(item);\r\n            if (!lbi)\r\n                return false;\r\n\r\n            minerva.Size.copyTo(lbi.RenderSize, lbiro);\r\n\r\n            if (itemsHost instanceof Control) {\r\n                var padding = (<Control>itemsHost).Padding;\r\n                if (padding) {\r\n                    ihro.x = ihro.x + padding.left;\r\n                    ihro.y = ihro.y + padding.top;\r\n                    ihro.width = ihro.width - padding.left - padding.right;\r\n                    ihro.height = ihro.height - padding.top - padding.bottom;\r\n                }\r\n            }\r\n\r\n            var genXform = lbi.TransformToVisual(itemsHost);\r\n            if (genXform != null) {\r\n                var ptl = genXform.Transform(new Point());\r\n                var pbr = genXform.Transform(new Point(lbi.RenderSize.width, lbi.RenderSize.height));\r\n                lbiro.x = Math.min(ptl.x, pbr.x);\r\n                lbiro.y = Math.min(ptl.y, pbr.y);\r\n                lbiro.width = Math.abs(ptl.x - pbr.x);\r\n                lbiro.height = Math.abs(ptl.y - pbr.y);\r\n            }\r\n\r\n            return this._GetIsVerticalOrientation()\r\n                ? ihro.y <= lbiro.y && minerva.Rect.getBottom(ihro) >= minerva.Rect.getBottom(lbiro)\r\n                : ihro.x <= lbiro.x && minerva.Rect.getRight(ihro) >= minerva.Rect.getRight(lbiro);\r\n        }\r\n        private _GetFirstItemOnCurrentPage(startingIndex: number, forward: boolean): number {\r\n            var delta = forward ? 1 : -1;\r\n            var fiocp = -1;\r\n            var probeIndex = startingIndex;\r\n            var items = this.Items;\r\n            var itemsCount = items.Count;\r\n            while (probeIndex >= 0 && probeIndex < itemsCount && !this._IsOnCurrentPage(items.GetValueAt(probeIndex))) {\r\n                fiocp = probeIndex;\r\n                probeIndex += delta;\r\n            }\r\n            while (probeIndex >= 0 && probeIndex < itemsCount && this._IsOnCurrentPage(items.GetValueAt(probeIndex))) {\r\n                fiocp = probeIndex;\r\n                probeIndex += delta;\r\n            }\r\n            return fiocp;\r\n        }\r\n\r\n        OnItemContainerStyleChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            var oldStyle = <Style>args.OldValue;\r\n            var newStyle = <Style>args.NewValue;\r\n            var enumerator = this.ItemContainersManager.GetEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                var lbi = <ListBoxItem>enumerator.current;\r\n                if (lbi instanceof ListBoxItem && lbi.Style === oldStyle)\r\n                    lbi.Style = newStyle;\r\n            }\r\n        }\r\n\r\n        OnKeyDown(args: Input.KeyEventArgs) {\r\n            if (args.Handled)\r\n                return;\r\n\r\n            var newFocusedIndex = -1;\r\n            switch (args.Key) {\r\n                case Input.Key.Space:\r\n                case Input.Key.Enter:\r\n                    if (Input.Key.Enter !== args.Key || Input.KeyboardNavigation.GetAcceptsReturn(this)) {\r\n                        if (!Input.Keyboard.HasAlt()) {\r\n                            var focusedEl = Surface.GetFocusedElement(this);\r\n                            var lbi: ListBoxItem;\r\n                            if (focusedEl instanceof ListBoxItem) lbi = <ListBoxItem>focusedEl;\r\n                            if (lbi) {\r\n                                if (Input.Keyboard.HasControl() && lbi.IsSelected) {\r\n                                    this.SelectedItem = null;\r\n                                } else {\r\n                                    this.SelectedItem = this.ItemContainersManager.ItemFromContainer(lbi);\r\n                                }\r\n                                args.Handled = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case Input.Key.Home:\r\n                    newFocusedIndex = 0;\r\n                    break;\r\n                case Input.Key.End:\r\n                    newFocusedIndex = this.Items.Count - 1;\r\n                    break;\r\n                case Input.Key.PageUp:\r\n                    newFocusedIndex = this._NavigateByPage(false);\r\n                    break;\r\n                case Input.Key.PageDown:\r\n                    newFocusedIndex = this._NavigateByPage(true);\r\n                    break;\r\n                case Input.Key.Left:\r\n                    if (this._GetIsVerticalOrientation()) {\r\n                        this._ScrollInDirection(Input.Key.Left);\r\n                    } else {\r\n                        newFocusedIndex = this._FocusedIndex - 1;\r\n                    }\r\n                    break;\r\n                case Input.Key.Up:\r\n                    if (this._GetIsVerticalOrientation()) {\r\n                        newFocusedIndex = this._FocusedIndex - 1;\r\n                    } else {\r\n                        this._ScrollInDirection(Input.Key.Up);\r\n                    }\r\n                    break;\r\n                case Input.Key.Right:\r\n                    if (this._GetIsVerticalOrientation()) {\r\n                        this._ScrollInDirection(Input.Key.Right);\r\n                    } else {\r\n                        newFocusedIndex = this._FocusedIndex + 1;\r\n                    }\r\n                    break;\r\n                case Input.Key.Down:\r\n                    if (this._GetIsVerticalOrientation()) {\r\n                        newFocusedIndex = this._FocusedIndex + 1;\r\n                    } else {\r\n                        this._ScrollInDirection(Input.Key.Down);\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if (newFocusedIndex !== -1 && this._FocusedIndex !== -1 && newFocusedIndex !== this._FocusedIndex && newFocusedIndex >= 0 && newFocusedIndex < this.Items.Count) {\r\n                // A key press changes the focused ListBoxItem\r\n                var icm = this.ItemContainersManager;\r\n                var lbi = <ListBoxItem>icm.ContainerFromIndex(newFocusedIndex);\r\n                var item = icm.ItemFromContainer(lbi);\r\n                this.ScrollIntoView(item);\r\n                if (Fayde.Input.Keyboard.HasControl()) {\r\n                    lbi.Focus();\r\n                } else {\r\n                    this.SelectedItem = item;\r\n                }\r\n                args.Handled = true;\r\n            }\r\n        }\r\n        private _GetIsVerticalOrientation(): boolean {\r\n            var presenter = this.XamlNode.ItemsPresenter;\r\n            if (!presenter)\r\n                return true;\r\n            var p = presenter.Panel;\r\n            if (p instanceof StackPanel)\r\n                return (<StackPanel>p).Orientation === Orientation.Vertical;\r\n            if (p instanceof VirtualizingStackPanel)\r\n                return (<VirtualizingStackPanel>p).Orientation === Orientation.Vertical;\r\n            return true;\r\n        }\r\n\r\n        IsItemItsOwnContainer(item: any): boolean {\r\n            return item instanceof ListBoxItem;\r\n        }\r\n        GetContainerForItem(): UIElement {\r\n            var item = new ListBoxItem();\r\n            var ics = this.ItemContainerStyle;\r\n            if (ics != null)\r\n                item.Style = ics;\r\n            return item;\r\n        }\r\n        PrepareContainerForItem(element: UIElement, item: any) {\r\n            super.PrepareContainerForItem(element, item);\r\n            var ics = this.ItemContainerStyle;\r\n            var lbi = <ListBoxItem>element;\r\n            if (!lbi.Style && ics)\r\n                lbi.Style = ics;\r\n        }\r\n\r\n        OnGotFocus(e: RoutedEventArgs) {\r\n            super.OnGotFocus(e);\r\n            this.SetValueInternal(ListBox.IsSelectionActiveProperty, true);\r\n        }\r\n        OnLostFocus(e: RoutedEventArgs) {\r\n            super.OnLostFocus(e);\r\n            this.SetValueInternal(ListBox.IsSelectionActiveProperty, false);\r\n        }\r\n\r\n        NotifyListItemGotFocus(lbi: ListBoxItem) {\r\n            this._FocusedIndex = this.ItemContainersManager.IndexFromContainer(lbi);\r\n        }\r\n        NotifyListItemLostFocus(lbi: ListBoxItem) {\r\n            this._FocusedIndex = -1;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ListBox);\r\n    TemplateVisualStates(ListBox,\r\n        { GroupName: \"ValidationStates\", Name: \"Valid\" },\r\n        { GroupName: \"ValidationStates\", Name: \"InvalidUnfocused\" },\r\n        { GroupName: \"ValidationStates\", Name: \"InvalidFocused\" });\r\n    TemplateParts(ListBox,\r\n        { Name: \"ScrollViewer\", Type: ScrollViewer });\r\n}","/// <reference path=\"../Core/FrameworkElement.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class MediaElement extends FrameworkElement {\r\n    }\r\n    Fayde.CoreLibrary.add(MediaElement);\r\n}","module Fayde {\r\n    export class RoutedEventArgs implements nullstone.IEventArgs {\r\n        Handled: boolean = false;\r\n        Source: any = null;\r\n        OriginalSource: any = null;\r\n    }\r\n    Fayde.CoreLibrary.add(RoutedEventArgs);\r\n}","/// <reference path=\"../Core/RoutedEventArgs.ts\" />\r\n\r\nmodule Fayde.Input {\r\n    export enum Key {\r\n        //     A special value indicating no key.\r\n        None = 0,\r\n        //     The BACKSPACE key.\r\n        Back = 1,\r\n        //     The TAB key.\r\n        Tab = 2,\r\n        //     The ENTER key.\r\n        Enter = 3,\r\n        //     The SHIFT key.\r\n        Shift = 4,\r\n        //     The CTRL (control) key.\r\n        Ctrl = 5,\r\n        //     The ALT key.\r\n        Alt = 6,\r\n        //     The CAPSLOCK key.\r\n        CapsLock = 7,\r\n        //     The ESC (also known as ESCAPE) key.\r\n        Escape = 8,\r\n        //     The SPACE key.\r\n        Space = 9,\r\n        //     The PAGEUP key.\r\n        PageUp = 10,\r\n        //     The PAGEDOWN key.\r\n        PageDown = 11,\r\n        //     The END key.\r\n        End = 12,\r\n        //     The HOME key.\r\n        Home = 13,\r\n        //     The left arrow key.\r\n        Left = 14,\r\n        //     The up arrow key.\r\n        Up = 15,\r\n        //     The right arrow key.\r\n        Right = 16,\r\n        //     The down arrow key.\r\n        Down = 17,\r\n        //     The INSERT key.\r\n        Insert = 18,\r\n        //     The DEL (also known as DELETE) key.\r\n        Delete = 19,\r\n        //     The 0 (zero) key.\r\n        D0 = 20,\r\n        //     The 1 key.\r\n        D1 = 21,\r\n        //     The 2 key.\r\n        D2 = 22,\r\n        //     The 3 key.\r\n        D3 = 23,\r\n        //     The 4 key.\r\n        D4 = 24,\r\n        //     The 5 key.\r\n        D5 = 25,\r\n        //     The 6 key.\r\n        D6 = 26,\r\n        //     The 7 key.\r\n        D7 = 27,\r\n        //     The 8 key.\r\n        D8 = 28,\r\n        //     The 9 key.\r\n        D9 = 29,\r\n        //     The A key.\r\n        A = 30,\r\n        //     The B key.\r\n        B = 31,\r\n        //     The C key.\r\n        C = 32,\r\n        //     The D key.\r\n        D = 33,\r\n        //     The E key.\r\n        E = 34,\r\n        //     The F key.\r\n        F = 35,\r\n        //     The G key.\r\n        G = 36,\r\n        //     The H key.\r\n        H = 37,\r\n        //     The I key.\r\n        I = 38,\r\n        //     The J key.\r\n        J = 39,\r\n        //     The K key.\r\n        K = 40,\r\n        //     The L key.\r\n        L = 41,\r\n        //     The M key.\r\n        M = 42,\r\n        //     The N key.\r\n        N = 43,\r\n        //     The O key.\r\n        O = 44,\r\n        //     The P key.\r\n        P = 45,\r\n        //     The Q key.\r\n        Q = 46,\r\n        //     The R key.\r\n        R = 47,\r\n        //     The S key.\r\n        S = 48,\r\n        //     The T key.\r\n        T = 49,\r\n        //     The U key.\r\n        U = 50,\r\n        //     The V key.\r\n        V = 51,\r\n        //     The W key.\r\n        W = 52,\r\n        //     The X key.\r\n        X = 53,\r\n        //     The Y key.\r\n        Y = 54,\r\n        //     The Z key.\r\n        Z = 55,\r\n        //     The F1 key.\r\n        F1 = 56,\r\n        //     The F2 key.\r\n        F2 = 57,\r\n        //     The F3 key.\r\n        F3 = 58,\r\n        //     The F4 key.\r\n        F4 = 59,\r\n        //     The F5 key.\r\n        F5 = 60,\r\n        //     The F6 key.\r\n        F6 = 61,\r\n        //     The F7 key.\r\n        F7 = 62,\r\n        //     The F8 key.\r\n        F8 = 63,\r\n        //     The F9 key.\r\n        F9 = 64,\r\n        //     The F10 key.\r\n        F10 = 65,\r\n        //     The F11 key.\r\n        F11 = 66,\r\n        //     The F12 key.\r\n        F12 = 67,\r\n        //     The 0 key on the number pad.\r\n        NumPad0 = 68,\r\n        //     The 1 key on the number pad.\r\n        NumPad1 = 69,\r\n        //     The 2 key on the number pad.\r\n        NumPad2 = 70,\r\n        //     The 3 key on the number pad.\r\n        NumPad3 = 71,\r\n        //     The 4 key on the number pad.\r\n        NumPad4 = 72,\r\n        //     The 5 key on the number pad.\r\n        NumPad5 = 73,\r\n        //     The 6 key on the number pad.\r\n        NumPad6 = 74,\r\n        //     The 7 key on the number pad.\r\n        NumPad7 = 75,\r\n        //     The 8 key on the number pad.\r\n        NumPad8 = 76,\r\n        //     The 9 key on the number pad.\r\n        NumPad9 = 77,\r\n        //     The * (MULTIPLY) key.\r\n        Multiply = 78,\r\n        //     The + (ADD) key.\r\n        Add = 79,\r\n        //     The - (SUBTRACT) key.\r\n        Subtract = 80,\r\n        //     The . (DECIMAL) key.\r\n        Decimal = 81,\r\n        //     The / (DIVIDE) key.\r\n        Divide = 82,\r\n        //     A special value indicating the key is out of range of this enumeration.\r\n        Unknown = 255,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(Key, \"Key\");\r\n\r\n    export class KeyboardEventArgs extends RoutedEventArgs {\r\n    }\r\n    Fayde.CoreLibrary.add(KeyboardEventArgs);\r\n\r\n    ///Modifers = { Shift: <boolean>, Ctrl: <boolean>, Alt: <boolean> }\r\n    export class KeyEventArgs extends KeyboardEventArgs {\r\n        Modifiers: IModifiersOn;\r\n        PlatformKeyCode: number;\r\n        Key: Key;\r\n        Char: string;\r\n        constructor(modifiers: IModifiersOn, keyCode: number, key: Key, c?: string) {\r\n            super();\r\n            this.Modifiers = modifiers;\r\n            this.PlatformKeyCode = keyCode;\r\n            this.Key = key;\r\n            if (this.Key == null)\r\n                this.Key = Key.Unknown;\r\n            this.Char = c;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(KeyEventArgs);\r\n}","/// <reference path=\"Control.ts\" />\r\n/// <reference path=\"../Input/KeyEventArgs.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    var Key = Input.Key;\r\n    var MAX_UNDO_COUNT = 10;\r\n    export class TextBoxBase extends Control {\r\n        static CaretBrushProperty = DependencyProperty.RegisterCore(\"CaretBrush\", () => Media.Brush, TextBoxBase);\r\n        static SelectionForegroundProperty = DependencyProperty.RegisterCore(\"SelectionForeground\", () => Media.Brush, TextBoxBase);\r\n        static SelectionBackgroundProperty = DependencyProperty.RegisterCore(\"SelectionBackground\", () => Media.Brush, TextBoxBase);\r\n        static SelectionLengthProperty = DependencyProperty.RegisterFull(\"SelectionLength\", () => Number, TextBoxBase, 0, undefined, undefined, true, positiveIntValidator);\r\n        static SelectionStartProperty = DependencyProperty.RegisterFull(\"SelectionStart\", () => Number, TextBoxBase, 0, undefined, undefined, true, positiveIntValidator);\r\n        static BaselineOffsetProperty = DependencyProperty.Register(\"BaselineOffset\", () => Number, TextBoxBase);\r\n        static MaxLengthProperty = DependencyProperty.RegisterFull(\"MaxLength\", () => Number, TextBoxBase, 0, undefined, undefined, undefined, positiveIntValidator);\r\n        CaretBrush: Media.Brush;\r\n        SelectionForeground: Media.Brush;\r\n        SelectionBackground: Media.Brush;\r\n        SelectionLength: number;\r\n        SelectionStart: number;\r\n        BaselineOffset: number;\r\n        MaxLength: number;\r\n\r\n        private _Selecting: boolean = false;\r\n        private _Captured: boolean = false;\r\n\r\n        IsReadOnly = false;\r\n        AcceptsReturn = false;\r\n\r\n        $ContentProxy = new Internal.TextBoxContentProxy();\r\n        $Proxy: Text.Proxy;\r\n        $Advancer: Internal.ICursorAdvancer;\r\n        $View: Internal.TextBoxView;\r\n\r\n        constructor (eventsMask: Text.EmitChangedType) {\r\n            super();\r\n            var view = this.$View = this.CreateView();\r\n            view.MouseLeftButtonDown.on((s, e) => this.OnMouseLeftButtonDown(e), this);\r\n            view.MouseLeftButtonUp.on((s, e) => this.OnMouseLeftButtonUp(e), this);\r\n            this.$Proxy = new Text.Proxy(eventsMask, MAX_UNDO_COUNT);\r\n\r\n            this._SyncFont();\r\n        }\r\n\r\n        private _SyncFont () {\r\n            var view = this.$View;\r\n            var propds = [\r\n                Control.ForegroundProperty,\r\n                Control.FontFamilyProperty,\r\n                Control.FontSizeProperty,\r\n                Control.FontStretchProperty,\r\n                Control.FontStyleProperty,\r\n                Control.FontWeightProperty\r\n            ];\r\n            propds.forEach(propd => propd.Store.ListenToChanged(this, propd, (dobj, args) => view.setFontProperty(propd, args.NewValue), this));\r\n        }\r\n\r\n        CreateView (): Internal.TextBoxView {\r\n            return new Internal.TextBoxView();\r\n        }\r\n\r\n        get Cursor (): CursorType {\r\n            var cursor = this.GetValue(FrameworkElement.CursorProperty);\r\n            if (cursor === CursorType.Default)\r\n                return CursorType.IBeam;\r\n            return cursor;\r\n        }\r\n\r\n        OnApplyTemplate () {\r\n            super.OnApplyTemplate();\r\n            this.$ContentProxy.setElement(<FrameworkElement>this.GetTemplateChild(\"ContentElement\", FrameworkElement), this.$View);\r\n        }\r\n\r\n        OnLostFocus (e: RoutedEventArgs) {\r\n            super.OnLostFocus(e);\r\n            this.$View.setIsFocused(false);\r\n        }\r\n\r\n        OnGotFocus (e: RoutedEventArgs) {\r\n            super.OnGotFocus(e);\r\n            this.$View.setIsFocused(true);\r\n        }\r\n\r\n        OnMouseLeftButtonDown (e: Input.MouseButtonEventArgs) {\r\n            if (e.Handled)\r\n                return;\r\n            e.Handled = true;\r\n            this.Focus();\r\n            this._Captured = this.CaptureMouse();\r\n            this._Selecting = true;\r\n\r\n            var cursor = this.$View.GetCursorFromPoint(e.GetPosition(this.$View));\r\n            this.$Proxy.beginSelect(cursor);\r\n        }\r\n\r\n        OnMouseLeftButtonUp (e: Input.MouseButtonEventArgs) {\r\n            if (e.Handled)\r\n                return;\r\n            if (this._Captured)\r\n                this.ReleaseMouseCapture();\r\n            e.Handled = true;\r\n            this._Selecting = false;\r\n            this._Captured = false;\r\n        }\r\n\r\n        OnMouseMove (e: Input.MouseEventArgs) {\r\n            if (!this._Selecting)\r\n                return;\r\n            e.Handled = true;\r\n            var cursor = this.$View.GetCursorFromPoint(e.GetPosition(this.$View));\r\n            this.$Proxy.adjustSelection(cursor);\r\n        }\r\n\r\n        OnTouchDown (e: Input.TouchEventArgs) {\r\n            super.OnTouchDown(e);\r\n            if (e.Handled)\r\n                return;\r\n            e.Handled = true;\r\n            this.Focus();\r\n            e.Device.Capture(this);\r\n            this._Selecting = true;\r\n\r\n            var pos = e.Device.GetTouchPoint(this.$View).Position;\r\n            var cursor = this.$View.GetCursorFromPoint(pos);\r\n            this.$Proxy.beginSelect(cursor);\r\n        }\r\n\r\n        OnTouchUp (e: Input.TouchEventArgs) {\r\n            super.OnTouchUp(e);\r\n            if (e.Handled)\r\n                return;\r\n            if (e.Device.Captured === this)\r\n                e.Device.ReleaseCapture(this);\r\n            e.Handled = true;\r\n            this._Selecting = false;\r\n        }\r\n\r\n        OnTouchMove (e: Input.TouchEventArgs) {\r\n            super.OnTouchMove(e);\r\n            if (!this._Selecting)\r\n                return;\r\n            e.Handled = true;\r\n            var pos = e.Device.GetTouchPoint(this.$View).Position;\r\n            var cursor = this.$View.GetCursorFromPoint(pos);\r\n            this.$Proxy.adjustSelection(cursor);\r\n        }\r\n\r\n        OnKeyDown (args: Input.KeyEventArgs) {\r\n            switch (args.Key) {\r\n                case Key.Shift: //shift\r\n                case Key.Ctrl: //ctrl\r\n                case Key.Alt: //alt\r\n                    return;\r\n            }\r\n\r\n            var isReadOnly = this.IsReadOnly;\r\n            var handled = false;\r\n            var proxy = this.$Proxy;\r\n            proxy.begin();\r\n\r\n            switch (args.Key) {\r\n                case Key.Back:\r\n                    if (isReadOnly)\r\n                        break;\r\n                    handled = this._KeyDownBackSpace(args.Modifiers);\r\n                    break;\r\n                case Key.Delete:\r\n                    if (isReadOnly)\r\n                        break;\r\n                    if (args.Modifiers.Shift) {\r\n                        //Shift+Delete => Cut\r\n                        handled = true;\r\n                    } else {\r\n                        handled = this._KeyDownDelete(args.Modifiers);\r\n                    }\r\n                    break;\r\n                case Key.Insert:\r\n                    if (args.Modifiers.Shift) {\r\n                        //Shift+Insert => Paste\r\n                        handled = true;\r\n                    } else if (args.Modifiers.Ctrl) {\r\n                        //Ctrl+Insert => Copy\r\n                        handled = true;\r\n                    }\r\n                    break;\r\n                case Key.PageDown:\r\n                    handled = this._KeyDownPageDown(args.Modifiers);\r\n                    break;\r\n                case Key.PageUp:\r\n                    handled = this._KeyDownPageUp(args.Modifiers);\r\n                    break;\r\n                case Key.Home:\r\n                    handled = this._KeyDownHome(args.Modifiers);\r\n                    break;\r\n                case Key.End:\r\n                    handled = this._KeyDownEnd(args.Modifiers);\r\n                    break;\r\n                case Key.Left:\r\n                    handled = this._KeyDownLeft(args.Modifiers);\r\n                    break;\r\n                case Key.Right:\r\n                    handled = this._KeyDownRight(args.Modifiers);\r\n                    break;\r\n                case Key.Down:\r\n                    handled = this._KeyDownDown(args.Modifiers);\r\n                    break;\r\n                case Key.Up:\r\n                    handled = this._KeyDownUp(args.Modifiers);\r\n                    break;\r\n                default:\r\n                    if (args.Modifiers.Ctrl) {\r\n                        switch (args.Key) {\r\n                            case Key.A:\r\n                                //Ctrl+A => Select All\r\n                                handled = true;\r\n                                proxy.selectAll();\r\n                                break;\r\n                            case Key.C:\r\n                                //Ctrl+C => Copy\r\n                                //TODO: Copy to clipboard\r\n                                handled = true;\r\n                                break;\r\n                            case Key.X:\r\n                                //Ctrl+X => Cut\r\n                                if (isReadOnly)\r\n                                    break;\r\n                                //TODO: Copy to clipboard\r\n                                //TODO: Clear text\r\n                                handled = true;\r\n                                break;\r\n                            case Key.Y:\r\n                                //Ctrl+Y => Redo\r\n                                if (!isReadOnly) {\r\n                                    handled = true;\r\n                                    proxy.redo();\r\n                                }\r\n                                break;\r\n                            case Key.Z:\r\n                                //Ctrl+Z => Undo\r\n                                if (!isReadOnly) {\r\n                                    handled = true;\r\n                                    proxy.undo();\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if (handled) {\r\n                args.Handled = handled;\r\n            }\r\n            proxy.end();\r\n\r\n            if (!args.Handled && !isReadOnly)\r\n                this.PostOnKeyDown(args);\r\n        }\r\n\r\n        PostOnKeyDown (args: Input.KeyEventArgs) {\r\n            if (args.Handled)\r\n                return;\r\n\r\n            if (args.Modifiers.Alt || args.Modifiers.Ctrl)\r\n                return;\r\n\r\n            var proxy = this.$Proxy;\r\n            proxy.begin();\r\n            if (args.Key === Key.Enter) {\r\n                if (this.AcceptsReturn === true) {\r\n                    proxy.enterText('\\n');\r\n                    args.Handled = true;\r\n                }\r\n            } else if (args.Char != null && !args.Modifiers.Ctrl && !args.Modifiers.Alt) {\r\n                proxy.enterText(args.Char);\r\n                args.Handled = true;\r\n            }\r\n            proxy.end();\r\n        }\r\n\r\n        private _KeyDownBackSpace (modifiers: Input.IModifiersOn): boolean {\r\n            if (modifiers.Shift || modifiers.Alt)\r\n                return false;\r\n\r\n            var proxy = this.$Proxy;\r\n            var anchor = proxy.selAnchor;\r\n            var cursor = proxy.selCursor;\r\n            var start = 0;\r\n            var length = 0;\r\n\r\n            if (cursor !== anchor) {\r\n                length = Math.abs(cursor - anchor);\r\n                start = Math.min(anchor, cursor);\r\n            } else if (modifiers.Ctrl) {\r\n                start = this.$Advancer.CursorPrevWord(cursor);\r\n                length = cursor - start;\r\n            } else if (cursor > 0) {\r\n                start = this.$Advancer.CursorPrevChar(cursor);\r\n                length = cursor - start;\r\n            }\r\n\r\n            proxy.removeText(start, length);\r\n            return true;\r\n        }\r\n\r\n        private _KeyDownDelete (modifiers: Input.IModifiersOn): boolean {\r\n            if (modifiers.Shift || modifiers.Alt)\r\n                return false;\r\n\r\n            var proxy = this.$Proxy;\r\n            var anchor = proxy.selAnchor;\r\n            var cursor = proxy.selCursor;\r\n            var start = 0;\r\n            var length = 0;\r\n\r\n            if (cursor !== anchor) {\r\n                length = Math.abs(cursor - anchor);\r\n                start = Math.min(anchor, cursor);\r\n            } else if (modifiers.Ctrl) {\r\n                //Ctrl+Delete => delete the word start at the cursor\r\n                length = this.$Advancer.CursorNextWord(cursor) - cursor;\r\n                start = cursor;\r\n            } else {\r\n                length = this.$Advancer.CursorNextChar(cursor) - cursor;\r\n                start = cursor;\r\n            }\r\n\r\n            return proxy.removeText(start, length);\r\n        }\r\n\r\n        private _KeyDownPageDown (modifiers: Input.IModifiersOn): boolean {\r\n            if (modifiers.Alt)\r\n                return false;\r\n\r\n            var proxy = this.$Proxy;\r\n            var anchor = proxy.selAnchor;\r\n            var cursor = proxy.selCursor;\r\n\r\n            cursor = this.$Advancer.CursorDown(cursor, true);\r\n\r\n            if (!modifiers.Shift)\r\n                anchor = cursor;\r\n\r\n            return proxy.setAnchorCursor(anchor, cursor);\r\n        }\r\n\r\n        private _KeyDownPageUp (modifiers: Input.IModifiersOn): boolean {\r\n            if (modifiers.Alt)\r\n                return false;\r\n\r\n            var proxy = this.$Proxy;\r\n            var anchor = proxy.selAnchor;\r\n            var cursor = proxy.selCursor;\r\n\r\n            cursor = this.$Advancer.CursorUp(cursor, true);\r\n\r\n            if (!modifiers.Shift)\r\n                anchor = cursor;\r\n\r\n            return proxy.setAnchorCursor(anchor, cursor);\r\n        }\r\n\r\n        private _KeyDownHome (modifiers: Input.IModifiersOn): boolean {\r\n            if (modifiers.Alt)\r\n                return false;\r\n\r\n            var proxy = this.$Proxy;\r\n            var anchor = proxy.selAnchor;\r\n            var cursor = proxy.selCursor;\r\n\r\n            if (modifiers.Ctrl) {\r\n                cursor = this.$Advancer.CursorBegin(cursor);\r\n            } else {\r\n                cursor = this.$Advancer.CursorLineBegin(cursor);\r\n            }\r\n\r\n            if (!modifiers.Shift)\r\n                anchor = cursor;\r\n\r\n            return proxy.setAnchorCursor(anchor, cursor);\r\n        }\r\n\r\n        private _KeyDownEnd (modifiers: Input.IModifiersOn): boolean {\r\n            if (modifiers.Alt)\r\n                return false;\r\n\r\n            var proxy = this.$Proxy;\r\n            var anchor = proxy.selAnchor;\r\n            var cursor = proxy.selCursor;\r\n\r\n            if (modifiers.Ctrl) {\r\n                cursor = this.$Advancer.CursorEnd(cursor);\r\n            } else {\r\n                cursor = this.$Advancer.CursorLineEnd(cursor);\r\n            }\r\n\r\n            if (!modifiers.Shift)\r\n                anchor = cursor;\r\n\r\n            return proxy.setAnchorCursor(anchor, cursor);\r\n        }\r\n\r\n        private _KeyDownLeft (modifiers: Input.IModifiersOn): boolean {\r\n            if (modifiers.Alt)\r\n                return false;\r\n\r\n            var proxy = this.$Proxy;\r\n            var anchor = proxy.selAnchor;\r\n            var cursor = proxy.selCursor;\r\n\r\n            if (modifiers.Ctrl) {\r\n                cursor = this.$Advancer.CursorPrevWord(cursor);\r\n            } else if (!modifiers.Shift && anchor !== cursor) {\r\n                cursor = Math.min(anchor, cursor);\r\n            } else {\r\n                cursor = this.$Advancer.CursorPrevChar(cursor);\r\n            }\r\n\r\n            if (!modifiers.Shift)\r\n                anchor = cursor;\r\n\r\n            return proxy.setAnchorCursor(anchor, cursor);\r\n        }\r\n\r\n        private _KeyDownRight (modifiers: Input.IModifiersOn): boolean {\r\n            if (modifiers.Alt)\r\n                return false;\r\n\r\n            var proxy = this.$Proxy;\r\n            var anchor = proxy.selAnchor;\r\n            var cursor = proxy.selCursor;\r\n\r\n            if (modifiers.Ctrl) {\r\n                cursor = this.$Advancer.CursorNextWord(cursor);\r\n            } else if (!modifiers.Shift && anchor !== cursor) {\r\n                cursor = Math.max(anchor, cursor);\r\n            } else {\r\n                cursor = this.$Advancer.CursorNextChar(cursor);\r\n            }\r\n\r\n            if (!modifiers.Shift)\r\n                anchor = cursor;\r\n\r\n            return proxy.setAnchorCursor(anchor, cursor);\r\n        }\r\n\r\n        private _KeyDownDown (modifiers: Input.IModifiersOn): boolean {\r\n            if (modifiers.Alt)\r\n                return false;\r\n\r\n            var proxy = this.$Proxy;\r\n            var cursor = this.$Advancer.CursorDown(proxy.selCursor, false);\r\n            var anchor = proxy.selAnchor;\r\n            if (!modifiers.Shift)\r\n                anchor = cursor;\r\n            return proxy.setAnchorCursor(anchor, cursor);\r\n        }\r\n\r\n        private _KeyDownUp (modifiers: Input.IModifiersOn): boolean {\r\n            if (modifiers.Alt)\r\n                return false;\r\n\r\n            var proxy = this.$Proxy;\r\n            var cursor = this.$Advancer.CursorUp(proxy.selCursor, false);\r\n            var anchor = proxy.selAnchor;\r\n            if (!modifiers.Shift)\r\n                anchor = cursor;\r\n            return proxy.setAnchorCursor(anchor, cursor);\r\n        }\r\n    }\r\n    Fayde.RegisterType(TextBoxBase, Fayde.XMLNSINTERNAL);\r\n\r\n    module reactions {\r\n        DPReaction<Media.Brush>(TextBoxBase.CaretBrushProperty, (tbb: TextBoxBase, ov, nv) => {\r\n            tbb.$View.setCaretBrush(nv);\r\n        });\r\n        DPReaction<number>(TextBoxBase.SelectionStartProperty, (tbb: TextBoxBase, ov, nv) => {\r\n            tbb.$Proxy.setSelectionStart(nv);\r\n            tbb.$View.setSelectionStart(nv);\r\n        }, false);\r\n        DPReaction<number>(TextBoxBase.SelectionLengthProperty, (tbb: TextBoxBase, ov, nv) => {\r\n            tbb.$Proxy.setSelectionLength(nv);\r\n            tbb.$View.setSelectionLength(nv);\r\n        }, false);\r\n        DPReaction<Media.Brush>(TextBoxBase.SelectionBackgroundProperty, (tbb: TextBoxBase, ov, nv) => {\r\n            tbb.$View.setFontAttr(\"selectionBackground\", nv);\r\n            tbb.XamlNode.LayoutUpdater.invalidate();\r\n        });\r\n        DPReaction<Media.Brush>(TextBoxBase.SelectionForegroundProperty, (tbb: TextBoxBase, ov, nv) => {\r\n            tbb.$View.setFontAttr(\"selectionForeground\", nv);\r\n            tbb.XamlNode.LayoutUpdater.invalidate();\r\n        });\r\n        DPReaction<number>(TextBoxBase.MaxLengthProperty, (tbb: TextBoxBase, ov, nv) => {\r\n            tbb.$Proxy.maxLength = nv;\r\n        }, false);\r\n    }\r\n\r\n    function positiveIntValidator (dobj: DependencyObject, propd: DependencyProperty, value: any): boolean {\r\n        if (typeof value !== 'number')\r\n            return false;\r\n        return value >= 0;\r\n    }\r\n}","/// <reference path=\"TextBoxBase.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class PasswordBox extends TextBoxBase {\r\n        static PasswordCharProperty = DependencyProperty.Register(\"PasswordChar\", () => String, PasswordBox, String.fromCharCode(9679));\r\n        static PasswordProperty = DependencyProperty.Register(\"Password\", () => String, PasswordBox);\r\n        PasswordChar: string;\r\n        Password: string;\r\n\r\n        constructor () {\r\n            super(Text.EmitChangedType.TEXT);\r\n            this.DefaultStyleKey = PasswordBox;\r\n\r\n            var proxy = this.$Proxy;\r\n            proxy.SyncSelectionStart = (value) => this.SetCurrentValue(PasswordBox.SelectionStartProperty, value);\r\n            proxy.SyncSelectionLength = (value) => this.SetCurrentValue(PasswordBox.SelectionLengthProperty, value);\r\n            proxy.SyncText = (value) => this.SetCurrentValue(PasswordBox.PasswordProperty, value);\r\n            this.$Advancer = new Internal.PasswordBoxCursorAdvancer(this.$Proxy);\r\n        }\r\n\r\n        get DisplayText (): string {\r\n            var result = \"\";\r\n            var count = this.$Proxy.text.length;\r\n            var pattern = this.PasswordChar;\r\n            while (count > 0) {\r\n                if (count & 1) result += pattern;\r\n                count >>= 1, pattern += pattern;\r\n            }\r\n            return result;\r\n        }\r\n\r\n    }\r\n    Fayde.CoreLibrary.add(PasswordBox);\r\n    TemplateVisualStates(PasswordBox,\r\n        { GroupName: \"CommonStates\", Name: \"Normal\" },\r\n        { GroupName: \"CommonStates\", Name: \"MouseOver\" },\r\n        { GroupName: \"CommonStates\", Name: \"Disabled\" },\r\n        { GroupName: \"FocusStates\", Name: \"Unfocused\" },\r\n        { GroupName: \"FocusStates\", Name: \"Focused\" },\r\n        { GroupName: \"ValidationStates\", Name: \"Valid\" },\r\n        { GroupName: \"ValidationStates\", Name: \"InvalidUnfocused\" },\r\n        { GroupName: \"ValidationStates\", Name: \"InvalidFocused\" });\r\n\r\n    module reactions {\r\n        DPReaction<string>(PasswordBox.PasswordCharProperty, (pb: PasswordBox, ov, nv) => {\r\n            pb.$View.setText(pb.DisplayText);\r\n        }, false);\r\n        DPReaction<string>(PasswordBox.PasswordProperty, (pb: PasswordBox, ov, nv) => {\r\n            pb.$Proxy.setText(nv);\r\n            pb.$View.setText(pb.DisplayText);\r\n        }, false);\r\n    }\r\n}","/// <reference path=\"Primitives/RangeBase.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class ProgressBar extends Primitives.RangeBase {\r\n        private _Track: FrameworkElement;\r\n        private _Indicator: FrameworkElement;\r\n\r\n        static IsIndeterminateProperty = DependencyProperty.Register(\"IsIndeterminate\", () => Boolean, ProgressBar, false, (d, args) => (<ProgressBar>d).OnIsIndeterminateChanged(args));\r\n        IsIndeterminate: boolean;\r\n        private OnIsIndeterminateChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this._UpdateIndicator();\r\n            this.UpdateVisualState();\r\n        }\r\n\r\n        OnMinimumChanged(oldMinimum: number, newMinimum: number) {\r\n            super.OnMinimumChanged(oldMinimum, newMinimum);\r\n            this._UpdateIndicator();\r\n        }\r\n        OnMaximumChanged(oldMaximum: number, newMaximum: number) {\r\n            super.OnMaximumChanged(oldMaximum, newMaximum);\r\n            this._UpdateIndicator();\r\n        }\r\n        OnValueChanged(oldValue: number, newValue: number) {\r\n            super.OnValueChanged(oldValue, newValue);\r\n            this._UpdateIndicator();\r\n        }\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = ProgressBar;\r\n        }\r\n\r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n\r\n            var track = this._Track;\r\n            if (track)\r\n                track.SizeChanged.off(this._OnTrackSizeChanged, this);\r\n\r\n            track = this._Track = <FrameworkElement>this.GetTemplateChild(\"ProgressBarTrack\", FrameworkElement);\r\n            this._Indicator = <FrameworkElement>this.GetTemplateChild(\"ProgressBarIndicator\", FrameworkElement);\r\n\r\n            if (track)\r\n                track.SizeChanged.on(this._OnTrackSizeChanged, this);\r\n\r\n            this.UpdateVisualState(false);\r\n        }\r\n\r\n        GoToStates(gotoFunc: (state: string) => boolean) {\r\n            if (this.IsIndeterminate)\r\n                gotoFunc(\"Indeterminate\");\r\n            else\r\n                gotoFunc(\"Determinate\");\r\n        }\r\n\r\n        private _OnTrackSizeChanged(sender, e) {\r\n            this._UpdateIndicator();\r\n        }\r\n        private _UpdateIndicator() {\r\n            var min = this.Minimum;\r\n            var max = this.Maximum;\r\n            var val = this.Value;\r\n\r\n            var indicator = this._Indicator;\r\n            if (!indicator)\r\n                return;\r\n\r\n            var parent = <FrameworkElement>VisualTreeHelper.GetParent(indicator);\r\n            if (!parent)\r\n                return;\r\n\r\n            var margin = indicator.Margin;\r\n            var outerWidth = (margin) ? margin.left + margin.right : 0.0;\r\n            var padding: Thickness = null;\r\n            if (parent instanceof Border)\r\n                padding = (<Border>parent).Padding;\r\n            else if (parent instanceof Control)\r\n                padding = (<Control>parent).Padding;\r\n\r\n            if (padding) {\r\n                outerWidth += padding.left;\r\n                outerWidth += padding.right;\r\n            }\r\n\r\n            var progress = 1.0;\r\n            if (!this.IsIndeterminate && max !== min)\r\n                progress = (val - min) / (max - min);\r\n            var fullWidth = Math.max(0, parent.ActualWidth - outerWidth);\r\n            indicator.Width = fullWidth * progress;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ProgressBar);\r\n    TemplateVisualStates(ProgressBar,\r\n        { GroupName: \"CommonStates\", Name: \"Indeterminate\" },\r\n        { GroupName: \"CommonStates\", Name: \"Determinate\" });\r\n    TemplateParts(ProgressBar,\r\n        { Name: \"ProgressBarIndicator\", Type: FrameworkElement },\r\n        { Name: \"ProgressBarTrack\", Type: FrameworkElement });\r\n}","/// <reference path=\"Primitives/ToggleButton.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class RadioButton extends Primitives.ToggleButton {\r\n        static GroupNameProperty: DependencyProperty = DependencyProperty.Register(\"GroupName\", () => String, RadioButton, false, (d, args) => (<RadioButton>d).OnGroupNameChanged(args));\r\n        GroupName: string;\r\n        OnGroupNameChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            unregister(args.OldValue, this);\r\n            register(args.NewValue, this);\r\n        }\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = RadioButton;\r\n            register(\"\", this);\r\n        }\r\n\r\n        OnIsCheckedChanged(e: IDependencyPropertyChangedEventArgs) {\r\n            if (e.NewValue === true)\r\n                this.UpdateRadioButtonGroup();\r\n            super.OnIsCheckedChanged(e);\r\n        }\r\n        OnToggle() {\r\n            this.IsChecked = true;\r\n        }\r\n\r\n        UpdateRadioButtonGroup() {\r\n            var groupName = this.GroupName || \"\";\r\n            var elements = groupNameToElements[groupName];\r\n            if (!elements)\r\n                return;\r\n\r\n            //if this RadioButton has been assigned a group\r\n            var element: RadioButton = null;\r\n            if (groupName) {\r\n                var rootNode = this.XamlNode.GetVisualRoot();\r\n                for (var i = 0; i < elements.length; i++) {\r\n                    element = elements[i];\r\n                    if (element === this)\r\n                        continue;\r\n                    if (!element.IsChecked)\r\n                        continue;\r\n                    if (rootNode !== element.XamlNode.GetVisualRoot())\r\n                        continue;\r\n                    element.IsChecked = false;\r\n\r\n                }\r\n            } else {\r\n                //no group has been assigned\r\n                //it is automatically groups with all RadioButtons with no group and with the same visual root\r\n                var vpNode = this.XamlNode.VisualParentNode;\r\n                for (var i = 0; i < elements.length; i++) {\r\n                    element = elements[i];\r\n                    if (element === this)\r\n                        continue;\r\n                    if (!element.IsChecked)\r\n                        continue;\r\n                    if (vpNode !== element.XamlNode.VisualParentNode)\r\n                        continue;\r\n                    element.IsChecked = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(RadioButton);\r\n    TemplateVisualStates(RadioButton, \r\n        { GroupName: \"CommonStates\", Name: \"Normal\" },\r\n        { GroupName: \"CommonStates\", Name: \"MouseOver\" },\r\n        { GroupName: \"CommonStates\", Name: \"Pressed\" },\r\n        { GroupName: \"CommonStates\", Name: \"Disabled\" },\r\n        { GroupName: \"FocusStates\", Name: \"Unfocused\" },\r\n        { GroupName: \"FocusStates\", Name: \"Focused\" },\r\n        { GroupName: \"CheckStates\", Name: \"Unchecked\" },\r\n        { GroupName: \"CheckStates\", Name: \"Checked\" },\r\n        { GroupName: \"CheckStates\", Name: \"Indeterminate\" },\r\n        { GroupName: \"ValidationStates\", Name: \"InvalidUnfocused\" },\r\n        { GroupName: \"ValidationStates\", Name: \"InvalidFocused\" },\r\n        { GroupName: \"ValidationStates\", Name: \"Valid\" });\r\n\r\n    var groupNameToElements: RadioButton[][] = [];\r\n    function register(groupName: string, radioButton: RadioButton) {\r\n        // Treat null as being string.Empty\r\n        if (!groupName) groupName = \"\";\r\n\r\n        var list: RadioButton[] = groupNameToElements[groupName];\r\n        if (!list)\r\n            groupNameToElements[groupName] = list = [];\r\n        list.push(radioButton);\r\n    }\r\n    function unregister(groupName: string, radioButton: RadioButton) {\r\n        // Treat null as being string.Empty\r\n        if (!groupName) groupName = \"\";\r\n\r\n        var list: RadioButton[] = groupNameToElements[groupName];\r\n        if (list) {\r\n            var index = list.indexOf(radioButton);\r\n            if (index > -1)\r\n                list.splice(index, 1);\r\n        }\r\n    }\r\n}","/// <reference path=\"Control.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class _RichTextBoxView {\r\n    }\r\n    Fayde.RegisterType(_RichTextBoxView, Fayde.XMLNSINTERNAL);\r\n\r\n    export class RichTextBox extends Control {\r\n        HorizontalScrollBarVisibility: ScrollBarVisibility;\r\n        TextWrapping: TextWrapping;\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = RichTextBox;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(RichTextBox);\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n/// <reference path=\"../Core/XamlObjectCollection.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class RowDefinition extends DependencyObject implements minerva.controls.grid.IRowDefinition {\r\n        //NOTE: Will not receive property changes from GridLength\r\n        static HeightProperty = DependencyProperty.Register(\"Height\", () => GridLength, RowDefinition, undefined, Incite);\r\n        static MaxHeightProperty = DependencyProperty.Register(\"MaxHeight\", () => Number, RowDefinition, Number.POSITIVE_INFINITY, Incite);\r\n        static MinHeightProperty = DependencyProperty.Register(\"MinHeight\", () => Number, RowDefinition, 0.0, Incite);\r\n        static ActualHeightProperty = DependencyProperty.RegisterReadOnly(\"ActualHeight\", () => Number, RowDefinition, 0.0);\r\n        Height: GridLength;\r\n        MaxHeight: number;\r\n        MinHeight: number;\r\n        ActualHeight: number;\r\n\r\n        setActualHeight (value: number) {\r\n            this.SetCurrentValue(RowDefinition.ActualHeightProperty, value);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(RowDefinition);\r\n\r\n    import GridUnitType = minerva.controls.grid.GridUnitType;\r\n    function ConvertRowDefinition (o: any): RowDefinition {\r\n        if (!o || o instanceof RowDefinition)\r\n            return <RowDefinition>o;\r\n        var s: string = o.toString();\r\n        var rd = new RowDefinition();\r\n        if (s.toLowerCase() === \"auto\") {\r\n            rd.Height = new GridLength(0, GridUnitType.Auto);\r\n            return rd;\r\n        }\r\n        if (s === \"*\") {\r\n            rd.Height = new GridLength(1, GridUnitType.Star);\r\n            return rd;\r\n        }\r\n        var v = parseFloat(s);\r\n        if (isNaN(v))\r\n            throw new XamlParseException(\"Invalid RowDefinition: '\" + s + \"'.\");\r\n        rd.Height = new GridLength(v, s[s.length - 1] === \"*\" ? GridUnitType.Star : GridUnitType.Pixel);\r\n        return rd;\r\n    }\r\n\r\n    nullstone.registerTypeConverter(RowDefinition, ConvertRowDefinition);\r\n\r\n    export class RowDefinitionCollection extends XamlObjectCollection<RowDefinition> {\r\n        _RaiseItemAdded (value: RowDefinition, index: number) {\r\n            Incite(this, {\r\n                item: value,\r\n                index: index,\r\n                add: true\r\n            });\r\n        }\r\n\r\n        _RaiseItemRemoved (value: RowDefinition, index: number) {\r\n            Incite(this, {\r\n                item: value,\r\n                index: index,\r\n                add: false\r\n            });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(RowDefinitionCollection);\r\n\r\n    function ConvertRowDefinitionCollection (o: any): RowDefinitionCollection {\r\n        if (!o || o instanceof RowDefinitionCollection)\r\n            return <RowDefinitionCollection>o;\r\n        if (typeof o === \"string\") {\r\n            var tokens = (<string>o).split(\" \");\r\n            var len = tokens.length;\r\n            var rdc = new RowDefinitionCollection();\r\n            var rd: RowDefinition;\r\n            for (var i = 0; i < len; i++) {\r\n                if (rd = ConvertRowDefinition(tokens[i]))\r\n                    rdc.Add(rd);\r\n            }\r\n            return rdc;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    nullstone.registerTypeConverter(RowDefinitionCollection, ConvertRowDefinitionCollection);\r\n}","/// <reference path=\"Primitives/RangeBase.ts\" />\r\n/// <reference path=\"Primitives/RepeatButton.ts\" />\r\n/// <reference path=\"Primitives/Thumb.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    import GridUnitType = minerva.controls.grid.GridUnitType;\r\n    export class Slider extends Primitives.RangeBase {\r\n        private _DragValue: number = 0;\r\n\r\n        static IsDirectionReversedProperty: DependencyProperty = DependencyProperty.RegisterCore(\"IsDirectionReversed\", () => Boolean, Slider, false, (d, args) => (<Slider>d)._UpdateTrackLayout());\r\n        static IsFocusedProperty: DependencyProperty = DependencyProperty.RegisterReadOnlyCore(\"IsFocused\", () => Boolean, Slider, false, (d, args) => (<Slider>d).UpdateVisualState());\r\n        static OrientationProperty: DependencyProperty = DependencyProperty.RegisterCore(\"Orientation\", () => new Enum(Orientation), Slider, Orientation.Horizontal, (d, args) => (<Slider>d)._OnOrientationChanged());\r\n        IsDirectionReversed: boolean;\r\n        IsFocused: boolean;\r\n        Orientation: Orientation;\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = Slider;\r\n            this.SizeChanged.on(this._HandleSizeChanged, this);\r\n        }\r\n\r\n        private $HorizontalTemplate: FrameworkElement;\r\n        private $HorizontalLargeIncrease: Primitives.RepeatButton;\r\n        private $HorizontalLargeDecrease: Primitives.RepeatButton;\r\n        private $HorizontalThumb: Primitives.Thumb;\r\n\r\n        private $VerticalTemplate: FrameworkElement;\r\n        private $VerticalLargeIncrease: Primitives.RepeatButton;\r\n        private $VerticalLargeDecrease: Primitives.RepeatButton;\r\n        private $VerticalThumb: Primitives.Thumb;\r\n\r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n            this.$HorizontalTemplate = <FrameworkElement>this.GetTemplateChild(\"HorizontalTemplate\", FrameworkElement);\r\n            this.$HorizontalLargeIncrease = <Primitives.RepeatButton>this.GetTemplateChild(\"HorizontalTrackLargeChangeIncreaseRepeatButton\", Primitives.RepeatButton);\r\n            this.$HorizontalLargeDecrease = <Primitives.RepeatButton>this.GetTemplateChild(\"HorizontalTrackLargeChangeDecreaseRepeatButton\", Primitives.RepeatButton);\r\n            this.$HorizontalThumb = <Primitives.Thumb>this.GetTemplateChild(\"HorizontalThumb\", Primitives.Thumb);\r\n            this.$VerticalTemplate = <FrameworkElement>this.GetTemplateChild(\"VerticalTemplate\", FrameworkElement);\r\n            this.$VerticalLargeIncrease = <Primitives.RepeatButton>this.GetTemplateChild(\"VerticalTrackLargeChangeIncreaseRepeatButton\", Primitives.RepeatButton);\r\n            this.$VerticalLargeDecrease = <Primitives.RepeatButton>this.GetTemplateChild(\"VerticalTrackLargeChangeDecreaseRepeatButton\", Primitives.RepeatButton);\r\n            this.$VerticalThumb = <Primitives.Thumb>this.GetTemplateChild(\"VerticalThumb\", Primitives.Thumb);\r\n\r\n            if (this.$HorizontalThumb != null) {\r\n                this.$HorizontalThumb.DragStarted.on(this._OnThumbDragStarted, this);\r\n                this.$HorizontalThumb.DragDelta.on(this._OnThumbDragDelta, this);\r\n            }\r\n            if (this.$HorizontalLargeDecrease != null) {\r\n                this.$HorizontalLargeDecrease.Click.on(function (sender, e) { this.Focus(); this.Value -= this.LargeChange; }, this);\r\n            }\r\n            if (this.$HorizontalLargeIncrease != null) {\r\n                this.$HorizontalLargeIncrease.Click.on(function (sender, e) { this.Focus(); this.Value += this.LargeChange; }, this);\r\n            }\r\n\r\n            if (this.$VerticalThumb != null) {\r\n                this.$VerticalThumb.DragStarted.on(this._OnThumbDragStarted, this);\r\n                this.$VerticalThumb.DragDelta.on(this._OnThumbDragDelta, this);\r\n            }\r\n            if (this.$VerticalLargeDecrease != null) {\r\n                this.$VerticalLargeDecrease.Click.on(function (sender, e) { this.Focus(); this.Value -= this.LargeChange; }, this);\r\n            }\r\n            if (this.$VerticalLargeIncrease != null) {\r\n                this.$VerticalLargeIncrease.Click.on(function (sender, e) { this.Focus(); this.Value += this.LargeChange; }, this);\r\n            }\r\n\r\n            this._OnOrientationChanged();\r\n            this.UpdateVisualState(false);\r\n        }\r\n\r\n        OnIsEnabledChanged(e: IDependencyPropertyChangedEventArgs) {\r\n            super.OnIsEnabledChanged(e);\r\n            this.UpdateVisualState();\r\n        }\r\n\r\n        OnMinimumChanged(oldMin: number, newMin: number) {\r\n            super.OnMinimumChanged(oldMin, newMin);\r\n            this._UpdateTrackLayout();\r\n        }\r\n        OnMaximumChanged(oldMax: number, newMax: number) {\r\n            super.OnMaximumChanged(oldMax, newMax);\r\n            this._UpdateTrackLayout();\r\n        }\r\n        OnValueChanged(oldValue: number, newValue: number) {\r\n            super.OnValueChanged(oldValue, newValue);\r\n            this._UpdateTrackLayout();\r\n        }\r\n\r\n        private _HandleSizeChanged(sender, e: SizeChangedEventArgs) {\r\n            this._UpdateTrackLayout();\r\n        }\r\n        private _OnOrientationChanged() {\r\n            var isHorizontal = this.Orientation === Orientation.Horizontal;\r\n            if (this.$HorizontalTemplate != null)\r\n                this.$HorizontalTemplate.Visibility = isHorizontal ? Visibility.Visible : Visibility.Collapsed;\r\n            if (this.$VerticalTemplate != null)\r\n                this.$VerticalTemplate.Visibility = !isHorizontal ? Visibility.Visible : Visibility.Collapsed;\r\n            this._UpdateTrackLayout();\r\n        }\r\n        private _UpdateTrackLayout() {\r\n            var max = this.Maximum;\r\n            var min = this.Minimum;\r\n            var val = this.Value;\r\n            \r\n            var isHorizontal = this.Orientation === Orientation.Horizontal;\r\n            var temp = isHorizontal ? this.$HorizontalTemplate : this.$VerticalTemplate;\r\n            if (!(temp instanceof Grid))\r\n                return;\r\n            var templateGrid = <Grid>temp;\r\n            \r\n            var isReversed = this.IsDirectionReversed;\r\n            var largeDecrease: Primitives.RepeatButton;\r\n            var largeIncrease: Primitives.RepeatButton;\r\n            var thumb: Primitives.Thumb;\r\n            if (isHorizontal) {\r\n                var coldefs = templateGrid.ColumnDefinitions;\r\n                largeDecrease = this.$HorizontalLargeDecrease;\r\n                largeIncrease = this.$HorizontalLargeIncrease;\r\n                thumb = this.$HorizontalThumb;\r\n\r\n                if (coldefs && coldefs.Count === 3) {\r\n                    (<ColumnDefinition>coldefs.GetValueAt(0)).Width = new GridLength(1, isReversed ? GridUnitType.Star : GridUnitType.Auto);\r\n                    (<ColumnDefinition>coldefs.GetValueAt(2)).Width = new GridLength(1, isReversed ? GridUnitType.Auto : GridUnitType.Star);\r\n\r\n                    if (largeDecrease != null)\r\n                        Grid.SetColumn(largeDecrease, isReversed ? 2 : 0);\r\n                    if (largeIncrease != null)\r\n                        Grid.SetColumn(largeIncrease, isReversed ? 0 : 2);\r\n                }\r\n            } else {\r\n                var rowdefs = templateGrid.RowDefinitions;\r\n                largeDecrease = this.$VerticalLargeDecrease;\r\n                largeIncrease = this.$VerticalLargeIncrease;\r\n                thumb = this.$VerticalThumb;\r\n\r\n                if (rowdefs && rowdefs.Count === 3) {\r\n                    (<RowDefinition>rowdefs.GetValueAt(0)).Height = new GridLength(1, isReversed ? GridUnitType.Auto : GridUnitType.Star);\r\n                    (<RowDefinition>rowdefs.GetValueAt(2)).Height = new GridLength(1, isReversed ? GridUnitType.Star : GridUnitType.Auto);\r\n\r\n                    if (largeDecrease != null)\r\n                        Grid.SetRow(largeDecrease, isReversed ? 0 : 2);\r\n                    if (largeIncrease != null)\r\n                        Grid.SetRow(largeIncrease, isReversed ? 2 : 0);\r\n                }\r\n            }\r\n\r\n            if (max === min)\r\n                return;\r\n            var percent = val / (max - min);\r\n            if (largeDecrease != null && thumb != null) {\r\n                if (isHorizontal)\r\n                    largeDecrease.Width = Math.max(0, percent * (this.ActualWidth - thumb.ActualWidth));\r\n                else\r\n                    largeDecrease.Height = Math.max(0, percent * (this.ActualHeight - thumb.ActualHeight));\r\n            }\r\n\r\n        }\r\n\r\n        private _OnThumbDragStarted(sender, e: Primitives.DragStartedEventArgs) {\r\n            this.Focus();\r\n            this._DragValue = this.Value;\r\n        }\r\n        private _OnThumbDragDelta(sender, e: Primitives.DragDeltaEventArgs) {\r\n            var offset = 0;\r\n            var isHorizontal = this.Orientation === Orientation.Horizontal;\r\n            if (isHorizontal && this.$HorizontalThumb != null) {\r\n                offset = e.HorizontalChange / (this.ActualWidth - this.$HorizontalThumb.ActualWidth) * (this.Maximum - this.Minimum);\r\n            } else if (!isHorizontal && this.$VerticalThumb != null) {\r\n                offset = -e.VerticalChange / (this.ActualHeight - this.$VerticalThumb.ActualHeight) * (this.Maximum - this.Minimum);\r\n            }\r\n            if (!isNaN(offset) && isFinite(offset)) {\r\n                this._DragValue += this.IsDirectionReversed ? -offset : offset;\r\n                var newValue = Math.min(this.Maximum, Math.max(this.Minimum, this._DragValue));\r\n                if (newValue != this.Value)\r\n                    this.Value = newValue;\r\n            }\r\n        }\r\n\r\n        OnMouseEnter(e: Input.MouseEventArgs) {\r\n            super.OnMouseEnter(e);\r\n            if ((this.Orientation === Fayde.Orientation.Horizontal && this.$HorizontalThumb != null && this.$HorizontalThumb.IsDragging) ||\r\n                (this.Orientation === Fayde.Orientation.Vertical && this.$VerticalThumb != null && this.$VerticalThumb.IsDragging)) {\r\n                this.UpdateVisualState();\r\n            }\r\n        }\r\n        OnMouseLeave(e: Input.MouseEventArgs) {\r\n            super.OnMouseLeave(e);\r\n            if ((this.Orientation === Fayde.Orientation.Horizontal && this.$HorizontalThumb != null && this.$HorizontalThumb.IsDragging) ||\r\n                (this.Orientation === Fayde.Orientation.Vertical && this.$VerticalThumb != null && this.$VerticalThumb.IsDragging)) {\r\n                this.UpdateVisualState();\r\n            }\r\n        }\r\n        OnMouseLeftButtonDown(e: Input.MouseButtonEventArgs) {\r\n            super.OnMouseLeftButtonDown(e);\r\n            if (e.Handled)\r\n                return;\r\n            e.Handled = true;\r\n            this.Focus();\r\n            this.CaptureMouse();\r\n        }\r\n        OnLostMouseCapture(e: Input.MouseEventArgs) {\r\n            super.OnLostMouseCapture(e);\r\n            this.UpdateVisualState();\r\n        }\r\n\r\n        OnKeyDown(e: Input.KeyEventArgs) {\r\n            super.OnKeyDown(e);\r\n            if (e.Handled)\r\n                return;\r\n            if (!this.IsEnabled)\r\n                return;\r\n\r\n            switch (e.Key) {\r\n                case Input.Key.Left:\r\n                case Input.Key.Down:\r\n                    this.Value += (this.IsDirectionReversed ? this.SmallChange : -this.SmallChange);\r\n                    break;\r\n                case Input.Key.Right:\r\n                case Input.Key.Up:\r\n                    this.Value += (this.IsDirectionReversed ? -this.SmallChange : this.SmallChange);\r\n                    break;\r\n                case Input.Key.Home:\r\n                    this.Value = this.Minimum;\r\n                    break;\r\n                case Input.Key.End:\r\n                    this.Value = this.Maximum;\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        OnGotFocus(e: RoutedEventArgs) {\r\n            super.OnGotFocus(e);\r\n            this.SetValueInternal(Slider.IsFocusedProperty, true);\r\n        }\r\n        OnLostFocus(e: RoutedEventArgs) {\r\n            super.OnLostFocus(e);\r\n            this.SetValueInternal(Slider.IsFocusedProperty, false);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Slider);\r\n    TemplateVisualStates(Slider, \r\n        { GroupName: \"CommonStates\", Name: \"Normal\" },\r\n        { GroupName: \"CommonStates\", Name: \"MouseOver\" },\r\n        { GroupName: \"CommonStates\", Name: \"Disabled\" },\r\n        { GroupName: \"FocusStates\", Name: \"Unfocused\" },\r\n        { GroupName: \"FocusStates\", Name: \"Focused\" });\r\n    TemplateParts(Slider,\r\n        { Name: \"HorizontalTemplate\", Type: FrameworkElement },\r\n        { Name: \"HorizontalThumb\", Type: Primitives.Thumb },\r\n        { Name: \"HorizontalTrackLargeChangeIncreaseRepeatButton\", Type: Primitives.RepeatButton },\r\n        { Name: \"HorizontalTrackLargeChangeDecreaseRepeatButton\", Type: Primitives.RepeatButton },\r\n        { Name: \"VerticalTemplate\", Type: FrameworkElement },\r\n        { Name: \"VerticalThumb\", Type: Primitives.Thumb },\r\n        { Name: \"VerticalTrackLargeChangeIncreaseRepeatButton\", Type: Primitives.RepeatButton },\r\n        { Name: \"VerticalTrackLargeChangeDecreaseRepeatButton\", Type: Primitives.RepeatButton });\r\n}","/// <reference path=\"Panel.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class StackPanel extends Panel {\r\n        CreateLayoutUpdater () {\r\n            return new minerva.controls.stackpanel.StackPanelUpdater();\r\n        }\r\n\r\n        static OrientationProperty: DependencyProperty = DependencyProperty.Register(\"Orientation\", () => new Enum(Orientation), StackPanel, Orientation.Vertical);\r\n        Orientation: Orientation;\r\n    }\r\n    Fayde.CoreLibrary.add(StackPanel);\r\n\r\n    module reactions {\r\n        UIReaction<minerva.Orientation>(StackPanel.OrientationProperty, (upd, ov, nv) => {\r\n            upd.invalidateMeasure();\r\n            upd.invalidateArrange();\r\n        }, false);\r\n    }\r\n}","/// <reference path=\"Enums.ts\" />\r\n/// <reference path=\"../Core/FrameworkElement.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    import TextBlockUpdater = minerva.controls.textblock.TextBlockUpdater;\r\n    export class TextBlockNode extends FENode {\r\n        XObject: TextBlock;\r\n        LayoutUpdater: TextBlockUpdater;\r\n\r\n        private _IsDocAuto = false;\r\n        private _SettingText = false;\r\n        private _SettingInlines = false;\r\n        private _AutoRun = new Documents.Run();\r\n\r\n        constructor (xobj: TextBlock) {\r\n            super(xobj);\r\n        }\r\n\r\n        GetInheritedEnumerator (): nullstone.IEnumerator<DONode> {\r\n            var xobj = this.XObject;\r\n            var inlines = xobj.Inlines;\r\n            if (inlines)\r\n                return <nullstone.IEnumerator<DONode>>inlines.GetNodeEnumerator();\r\n        }\r\n\r\n        TextChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            if (this._SettingInlines)\r\n                return;\r\n\r\n            this._AutoRun.Text = args.NewValue;\r\n            if (!this._IsDocAuto) {\r\n                this._IsDocAuto = true;\r\n                this.LayoutUpdater.tree.clearText();\r\n                this._SettingText = true;\r\n                var inlines = this.XObject.Inlines;\r\n                inlines.Clear();\r\n                inlines.Add(this._AutoRun);\r\n                this.LayoutUpdater.invalidateTextMetrics();\r\n                this._SettingText = false;\r\n            }\r\n        }\r\n\r\n        InlinesChanged (inline: Documents.Inline, index: number, isAdd: boolean) {\r\n            var xobj = this.XObject;\r\n            if (isAdd)\r\n                Providers.InheritedStore.PropagateInheritedOnAdd(xobj, inline.XamlNode);\r\n\r\n            var updater = this.LayoutUpdater;\r\n            if (isAdd)\r\n                updater.tree.onTextAttached(inline.TextUpdater, index);\r\n            else\r\n                updater.tree.onTextDetached(inline.TextUpdater);\r\n\r\n            if (isAdd)\r\n                ReactTo(inline, this, this.InlineChanged);\r\n            else\r\n                UnreactTo(inline, this);\r\n\r\n            if (this._SettingText)\r\n                return;\r\n\r\n            this._SettingInlines = true;\r\n            var inlines = xobj.Inlines;\r\n            var text = \"\";\r\n            for (var en = inlines.getEnumerator(); en.moveNext();) {\r\n                text += en.current._SerializeText();\r\n            }\r\n            xobj.SetCurrentValue(TextBlock.TextProperty, text);\r\n            this._SettingInlines = false;\r\n\r\n            updater.invalidateTextMetrics();\r\n        }\r\n\r\n        InlineChanged(obj?: any) {\r\n            switch (obj.type) {\r\n                case 'font':\r\n                    this.LayoutUpdater.invalidateFont(obj.full);\r\n                    break;\r\n                case 'text':\r\n                    this.LayoutUpdater.invalidateTextMetrics();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    export class TextBlock extends FrameworkElement {\r\n        XamlNode: TextBlockNode;\r\n\r\n        CreateNode (): TextBlockNode {\r\n            return new TextBlockNode(this);\r\n        }\r\n\r\n        CreateLayoutUpdater () {\r\n            return new TextBlockUpdater();\r\n        }\r\n\r\n        static PaddingProperty = DependencyProperty.RegisterCore(\"Padding\", () => Thickness, TextBlock);\r\n        static FontFamilyProperty = InheritableOwner.FontFamilyProperty.ExtendTo(TextBlock);\r\n        static FontSizeProperty = InheritableOwner.FontSizeProperty.ExtendTo(TextBlock);\r\n        static FontStretchProperty = InheritableOwner.FontStretchProperty.ExtendTo(TextBlock);\r\n        static FontStyleProperty = InheritableOwner.FontStyleProperty.ExtendTo(TextBlock);\r\n        static FontWeightProperty = InheritableOwner.FontWeightProperty.ExtendTo(TextBlock);\r\n        static ForegroundProperty = InheritableOwner.ForegroundProperty.ExtendTo(TextBlock);\r\n        static TextDecorationsProperty = InheritableOwner.TextDecorationsProperty.ExtendTo(TextBlock);\r\n        static TextProperty = DependencyProperty.Register(\"Text\", () => String, TextBlock, \"\", (d, args) => (<TextBlock>d).XamlNode.TextChanged(args));\r\n        static InlinesProperty = DependencyProperty.RegisterImmutable<Documents.InlineCollection>(\"Inlines\", () => Documents.InlineCollection, TextBlock);\r\n        static LineStackingStrategyProperty = DependencyProperty.RegisterCore(\"LineStackingStrategy\", () => new Enum(LineStackingStrategy), TextBlock, LineStackingStrategy.MaxHeight);\r\n        static LineHeightProperty = DependencyProperty.RegisterCore(\"LineHeight\", () => Number, TextBlock, NaN);\r\n        static TextAlignmentProperty = DependencyProperty.RegisterCore(\"TextAlignment\", () => new Enum(TextAlignment), TextBlock, TextAlignment.Left);\r\n        static TextTrimmingProperty = DependencyProperty.RegisterCore(\"TextTrimming\", () => new Enum(TextTrimming), TextBlock, TextTrimming.None);\r\n        static TextWrappingProperty = DependencyProperty.RegisterCore(\"TextWrapping\", () => new Enum(TextWrapping), TextBlock, TextWrapping.NoWrap);\r\n        Padding: Thickness;\r\n        Foreground: Media.Brush;\r\n        FontFamily: string;\r\n        FontStretch: string;\r\n        FontStyle: string;\r\n        FontWeight: FontWeight;\r\n        FontSize: number;\r\n        TextDecorations: TextDecorations;\r\n        Text: string;\r\n        Inlines: Documents.InlineCollection;\r\n        LineStackingStrategy: LineStackingStrategy;\r\n        LineHeight: number;\r\n        TextAlignment: TextAlignment;\r\n        TextTrimming: TextTrimming;\r\n        TextWrapping: TextWrapping;\r\n\r\n        constructor () {\r\n            super();\r\n\r\n            var inlines = TextBlock.InlinesProperty.Initialize(this);\r\n            inlines.AttachTo(this);\r\n            ReactTo(inlines, this, (change?) => this.XamlNode.InlinesChanged(change.item, change.index, change.add));\r\n\r\n            UIReaction<Media.Brush>(TextBlock.ForegroundProperty, (upd, ov, nv) => upd.invalidate(), true, true, this);\r\n            UIReaction<Thickness>(TextBlock.PaddingProperty, (upd: TextBlockUpdater, ov, nv) => upd.invalidateTextMetrics(), false, true, this);\r\n            UIReaction<minerva.LineStackingStrategy>(TextBlock.LineStackingStrategyProperty, (upd: TextBlockUpdater, ov, nv) => upd.invalidateTextMetrics(), false, true, this);\r\n            UIReaction<number>(TextBlock.LineHeightProperty, (upd: TextBlockUpdater, ov, nv) => upd.invalidateTextMetrics(), false, true, this);\r\n            UIReaction<minerva.TextAlignment>(TextBlock.TextAlignmentProperty, (upd: TextBlockUpdater, ov, nv) => upd.invalidateTextMetrics(), false, true, this);\r\n            UIReaction<minerva.TextTrimming>(TextBlock.TextTrimmingProperty, (upd: TextBlockUpdater, ov, nv) => upd.invalidateTextMetrics(), false, true, this);\r\n            UIReaction<minerva.TextWrapping>(TextBlock.TextWrappingProperty, (upd: TextBlockUpdater, ov, nv) => upd.invalidateTextMetrics(), false, true, this);\r\n        }\r\n\r\n        IsInheritable (propd: DependencyProperty): boolean {\r\n            if (TextBlockInheritedProps.indexOf(propd) > -1)\r\n                return true;\r\n            return super.IsInheritable(propd);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(TextBlock);\r\n    Markup.Content(TextBlock, TextBlock.InlinesProperty);\r\n    Markup.TextContent(TextBlock, TextBlock.TextProperty);\r\n\r\n    var TextBlockInheritedProps = [\r\n        TextBlock.FontFamilyProperty,\r\n        TextBlock.FontSizeProperty,\r\n        TextBlock.FontStretchProperty,\r\n        TextBlock.FontStyleProperty,\r\n        TextBlock.FontWeightProperty,\r\n        TextBlock.ForegroundProperty\r\n    ];\r\n}","/// <reference path=\"TextBoxBase.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class TextBox extends TextBoxBase {\r\n        static AcceptsReturnProperty = DependencyProperty.Register(\"AcceptsReturn\", () => Boolean, TextBox, false);\r\n        static IsReadOnlyProperty = DependencyProperty.Register(\"IsReadOnly\", () => Boolean, TextBox, false);\r\n        static TextProperty = DependencyProperty.Register(\"Text\", () => String, TextBox);\r\n        static TextAlignmentProperty = DependencyProperty.Register(\"TextAlignment\", () => new Enum(TextAlignment), TextBox, TextAlignment.Left);\r\n        static TextWrappingProperty = DependencyProperty.Register(\"TextWrapping\", () => new Enum(TextWrapping), TextBox, TextWrapping.NoWrap);\r\n        static HorizontalScrollBarVisibilityProperty = DependencyProperty.Register(\"HorizontalScrollBarVisibility\", () => new Enum(ScrollBarVisibility), TextBox, ScrollBarVisibility.Hidden);\r\n        static VerticalScrollBarVisibilityProperty = DependencyProperty.Register(\"VerticalScrollBarVisibility\", () => new Enum(ScrollBarVisibility), TextBox, ScrollBarVisibility.Hidden);\r\n        AcceptsReturn: boolean;\r\n        IsReadOnly: boolean;\r\n        Text: string;\r\n        TextAlignment: TextAlignment;\r\n        TextWrapping: TextWrapping;\r\n        HorizontalScrollBarVisibility: ScrollBarVisibility;\r\n        VerticalScrollBarVisibility: ScrollBarVisibility;\r\n\r\n        constructor () {\r\n            super(Text.EmitChangedType.TEXT | Text.EmitChangedType.SELECTION);\r\n            this.DefaultStyleKey = TextBox;\r\n\r\n            var proxy = this.$Proxy;\r\n            proxy.SyncSelectionStart = (value) => this.SetCurrentValue(TextBox.SelectionStartProperty, value);\r\n            proxy.SyncSelectionLength = (value) => this.SetCurrentValue(TextBox.SelectionLengthProperty, value);\r\n            proxy.SyncText = (value) => this.SetCurrentValue(TextBox.TextProperty, value);\r\n            this.$Advancer = new Internal.TextBoxCursorAdvancer(this.$Proxy);\r\n        }\r\n\r\n        OnApplyTemplate () {\r\n            super.OnApplyTemplate();\r\n            var vis = (this.TextWrapping === TextWrapping.Wrap) ? ScrollBarVisibility.Disabled : this.HorizontalScrollBarVisibility;\r\n            this.$ContentProxy.setHorizontalScrollBar(vis);\r\n            this.$ContentProxy.setVerticalScrollBar(this.VerticalScrollBarVisibility);\r\n        }\r\n\r\n        get DisplayText (): string {\r\n            return this.Text;\r\n        }\r\n\r\n        OnMouseEnter (e: Input.MouseEventArgs) {\r\n            super.OnMouseEnter(e);\r\n            this.UpdateVisualState();\r\n        }\r\n\r\n        OnMouseLeave (e: Input.MouseEventArgs) {\r\n            super.OnMouseLeave(e);\r\n            this.UpdateVisualState();\r\n        }\r\n\r\n        OnGotFocus (e: RoutedEventArgs) {\r\n            super.OnGotFocus(e);\r\n            this.UpdateVisualState();\r\n        }\r\n\r\n        OnLostFocus (e: RoutedEventArgs) {\r\n            super.OnLostFocus(e);\r\n            this.UpdateVisualState();\r\n        }\r\n\r\n        GoToStateCommon (gotoFunc: (state: string) => boolean): boolean {\r\n            if (!this.IsEnabled)\r\n                return gotoFunc(\"Disabled\");\r\n            if (this.IsReadOnly)\r\n                return gotoFunc(\"ReadOnly\");\r\n            if (this.IsMouseOver)\r\n                return gotoFunc(\"MouseOver\");\r\n            return gotoFunc(\"Normal\");\r\n        }\r\n\r\n        SelectAll () {\r\n            this.$Proxy.selectAll();\r\n        }\r\n\r\n        Select (start: number, length: number) {\r\n            this.$Proxy.select(start, length);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(TextBox);\r\n    TemplateVisualStates(TextBox,\r\n        {GroupName: \"CommonStates\", Name: \"Normal\"},\r\n        {GroupName: \"CommonStates\", Name: \"MouseOver\"},\r\n        {GroupName: \"CommonStates\", Name: \"Disabled\"},\r\n        {GroupName: \"CommonStates\", Name: \"ReadOnly\"},\r\n        {GroupName: \"FocusStates\", Name: \"Unfocused\"},\r\n        {GroupName: \"FocusStates\", Name: \"Focused\"},\r\n        {GroupName: \"ValidationStates\", Name: \"Valid\"},\r\n        {GroupName: \"ValidationStates\", Name: \"InvalidUnfocused\"},\r\n        {GroupName: \"ValidationStates\", Name: \"InvalidFocused\"});\r\n    TemplateParts(TextBox,\r\n        {Name: \"ContentElement\", Type: FrameworkElement});\r\n\r\n    module reactions {\r\n        DPReaction<boolean>(TextBox.AcceptsReturnProperty, (tb: TextBox, ov, nv) => {\r\n            tb.$Proxy.acceptsReturn = nv === true;\r\n        }, false);\r\n        DPReaction<boolean>(TextBox.IsReadOnlyProperty, (tb: TextBox, ov, nv) => {\r\n            tb.$View.setIsReadOnly(nv === true);\r\n        }, false);\r\n        DPReaction<TextAlignment>(TextBox.TextAlignmentProperty, (tb: TextBox, ov, nv) => tb.$View.setTextAlignment(nv), false);\r\n        DPReaction<TextWrapping>(TextBox.TextWrappingProperty, (tb: TextBox, ov, nv) => {\r\n            var vis = (nv === TextWrapping.Wrap) ? ScrollBarVisibility.Disabled : tb.HorizontalScrollBarVisibility;\r\n            tb.$ContentProxy.setHorizontalScrollBar(vis);\r\n            tb.$View.setTextWrapping(nv);\r\n        }, false);\r\n        DPReaction<ScrollBarVisibility>(TextBox.HorizontalScrollBarVisibilityProperty, (tb: TextBox, ov, nv) => {\r\n            var vis = (tb.TextWrapping === TextWrapping.Wrap) ? ScrollBarVisibility.Disabled : tb.HorizontalScrollBarVisibility;\r\n            tb.$ContentProxy.setHorizontalScrollBar(vis);\r\n        }, false);\r\n        DPReaction<ScrollBarVisibility>(TextBox.VerticalScrollBarVisibilityProperty, (tb: TextBox, ov, nv) => {\r\n            tb.$ContentProxy.setVerticalScrollBar(nv);\r\n        }, false);\r\n        DPReaction<string>(TextBox.TextProperty, (tb: TextBox, ov, nv) => {\r\n            tb.$Proxy.setText(nv);\r\n            tb.$View.setText(tb.DisplayText);\r\n        }, false);\r\n    }\r\n}","/// <reference path=\"ContentControl.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export class ToolTip extends ContentControl {\r\n        static HorizontalOffsetProperty = DependencyProperty.Register(\"HorizontalOffset\", () => Number, ToolTip, 0, (d, args) => (<ToolTip>d).OnHorizontalOffsetChanged(args));\r\n        static VerticalOffsetProperty = DependencyProperty.Register(\"VerticalOffset\", () => Number, ToolTip, 0, (d, args) => (<ToolTip>d).OnVerticalOffsetChanged(args));\r\n        static IsOpenProperty = DependencyProperty.Register(\"IsOpen\", () => Boolean, ToolTip, false, (d, args) => (<ToolTip>d).OnIsOpenChanged(args));\r\n        static PlacementProperty = DependencyProperty.Register(\"Placement\", () => new Enum(PlacementMode), ToolTip, PlacementMode.Mouse);\r\n        static PlacementTargetProperty = DependencyProperty.Register(\"PlacementTarget\", () => UIElement, ToolTip);\r\n        HorizontalOffset: number;\r\n        VerticalOffset: number;\r\n        IsOpen: boolean;\r\n        Placement: PlacementMode;\r\n        PlacementTarget: UIElement;\r\n\r\n        private _TooltipParent: FrameworkElement = null;\r\n        private _TooltipParentDCListener: Providers.IPropertyChangedListener = null;\r\n        get TooltipParent(): FrameworkElement { return this._TooltipParent; }\r\n        set TooltipParent(value: FrameworkElement) {\r\n            if (this._TooltipParentDCListener)\r\n                this._TooltipParentDCListener.Detach();\r\n            this._TooltipParent = value;\r\n            if (this._TooltipParent)\r\n                this._TooltipParentDCListener = DependencyObject.DataContextProperty.Store.ListenToChanged(this._TooltipParent, DependencyObject.DataContextProperty, this.OnTooltipParentDataContextChanged, this);\r\n        }\r\n        PlacementOverride: PlacementMode = null;\r\n        PlacementTargetOverride: UIElement = null;\r\n\r\n        Opened = new RoutedEvent<RoutedEventArgs>();\r\n        Closed = new RoutedEvent<RoutedEventArgs>();\r\n\r\n        private _ParentPopup: Primitives.Popup = null;\r\n\r\n        constructor() {\r\n            super();\r\n            this.DefaultStyleKey = ToolTip;\r\n        }\r\n\r\n        OnApplyTemplate() {\r\n            super.OnApplyTemplate();\r\n            this.UpdateVisualState(false);\r\n        }\r\n\r\n        private OnHorizontalOffsetChanged(args: DependencyPropertyChangedEventArgs) {\r\n            if (args.NewValue !== args.OldValue)\r\n                this.OnOffsetChanged(args.NewValue, 0);\r\n        }\r\n        private OnVerticalOffsetChanged(args: DependencyPropertyChangedEventArgs) {\r\n            if (args.NewValue !== args.OldValue)\r\n                this.OnOffsetChanged(0, args.NewValue);\r\n        }\r\n        private OnIsOpenChanged(args: DependencyPropertyChangedEventArgs) {\r\n            if (args.NewValue) {\r\n                if (!this._ParentPopup)\r\n                    this.HookupParentPopup();\r\n                this._ParentPopup.IsOpen = true;\r\n                this.PerformPlacement(this.HorizontalOffset, this.VerticalOffset);\r\n            } else {\r\n                this._ParentPopup.IsOpen = false;\r\n            }\r\n            this.UpdateVisualState();\r\n        }\r\n        private OnOffsetChanged(horizontalOffset: number, verticalOffset: number) {\r\n            if (!this._ParentPopup || !this.IsOpen)\r\n                return;\r\n            this.PerformPlacement(horizontalOffset, verticalOffset);\r\n        }\r\n        private OnLayoutUpdated(sender: any, e: nullstone.IEventArgs) {\r\n            if (this._ParentPopup)\r\n                this.PerformPlacement(this.HorizontalOffset, this.VerticalOffset);\r\n        }\r\n        private OnTooltipParentDataContextChanged(sender: any, args: IDependencyPropertyChangedEventArgs) {\r\n            if (this._ParentPopup && this.TooltipParent)\r\n                this._ParentPopup.DataContext = this.TooltipParent.DataContext;\r\n        }\r\n\r\n        private HookupParentPopup() {\r\n            console.assert(!this._ParentPopup, \"this._parentPopup should be null, we want to set visual tree once\");\r\n\r\n            var pp = this._ParentPopup = new Primitives.Popup();\r\n            pp.DataContext = !this.TooltipParent ? null : this.TooltipParent.DataContext;\r\n\r\n            pp.Opened.on(this.OnPopupOpened, this);\r\n            pp.Closed.on(this.OnPopupClosed, this);\r\n            this.IsTabStop = false;\r\n\r\n            pp.XamlNode.RegisterInitiator(this._TooltipParent);\r\n            pp.Child = this;\r\n\r\n            pp.IsHitTestVisible = false;\r\n            this.IsHitTestVisible = false;\r\n        }\r\n        private OnPopupOpened(sender: any, e: nullstone.IEventArgs) {\r\n            var args = new RoutedEventArgs();\r\n            args.OriginalSource = this;\r\n            this.Opened.raise(this, args);\r\n            this.LayoutUpdated.on(this.OnLayoutUpdated, this);\r\n        }\r\n        private OnPopupClosed(sender: any, e: nullstone.IEventArgs) {\r\n            var args = new RoutedEventArgs();\r\n            args.OriginalSource = this;\r\n            this.Closed.raise(this, args);\r\n            this.LayoutUpdated.off(this.OnLayoutUpdated, this);\r\n        }\r\n        private PerformPlacement(horizontalOffset: number, verticalOffset: number) {\r\n            if (!this.IsOpen)\r\n                return;\r\n            var root = <FrameworkElement>Application.Current.RootVisual;\r\n            if (!root)\r\n                return;\r\n\r\n            var mode = this.PlacementOverride != null ? this.PlacementOverride : this.Placement;\r\n            var target = <FrameworkElement>(this.PlacementTargetOverride || this.PlacementTarget);\r\n            var targetBounds = new minerva.Rect();\r\n\r\n            var point: Point = ToolTipService.MousePosition;\r\n            if (mode !== PlacementMode.Mouse) {\r\n                point = new Point();\r\n                try {\r\n                    if (target != null) {\r\n                        targetBounds = new minerva.Rect(0, 0, target.ActualWidth, target.ActualHeight);\r\n                        targetBounds = target.TransformToVisual(null).TransformBounds(targetBounds);\r\n                        point.x = targetBounds.x;\r\n                        point.y = targetBounds.y;\r\n                    }\r\n                } catch (err) {\r\n                    console.warn(\"Could not transform the tooltip point.\");\r\n                    return;\r\n                }\r\n            }\r\n\r\n            //TODO: Handle FlowDirection\r\n\r\n            //Move based on PlacementMode\r\n            switch (mode) {\r\n                case PlacementMode.Top:\r\n                    point.y = targetBounds.y - this.ActualHeight;\r\n                    break;\r\n                case PlacementMode.Bottom:\r\n                    point.y = targetBounds.y + targetBounds.height;\r\n                    break;\r\n                case PlacementMode.Left:\r\n                    point.x = targetBounds.x - this.ActualWidth;\r\n                    break;\r\n                case PlacementMode.Right:\r\n                    point.x = targetBounds.x + targetBounds.width;\r\n                    break;\r\n                case PlacementMode.Mouse:\r\n                    point.y += new TextBox().FontSize; // FIXME: Just a guess, it's about right.\r\n                    break;\r\n                default:\r\n                    throw new NotSupportedException(\"PlacementMode '\" + mode + \"' is not supported.\");\r\n            }\r\n\r\n            //Constrain X\r\n            var rootWidth = root.ActualWidth;\r\n            if ((point.x + this.ActualWidth) > rootWidth) {\r\n                if (mode === PlacementMode.Right)\r\n                    point.x = targetBounds.x - this.ActualWidth;\r\n                else\r\n                    point.x = rootWidth - this.ActualWidth;\r\n            } else if (point.x < 0) {\r\n                if (mode === PlacementMode.Left)\r\n                    point.x = targetBounds.x + targetBounds.width;\r\n                else\r\n                    point.x = 0;\r\n            }\r\n\r\n            //Constrain Y\r\n            var rootHeight = root.ActualHeight;\r\n            if ((point.y + this.ActualHeight) > rootHeight) {\r\n                if (mode === PlacementMode.Bottom)\r\n                    point.y = targetBounds.y - this.ActualHeight;\r\n                else\r\n                    point.y = rootHeight - this.ActualHeight;\r\n            } else if (point.y < 0) {\r\n                if (mode === PlacementMode.Top)\r\n                    point.y = targetBounds.y + targetBounds.height;\r\n                else\r\n                    point.y = 0;\r\n            }\r\n\r\n            this._ParentPopup.VerticalOffset = point.y;\r\n            this._ParentPopup.HorizontalOffset = point.x;\r\n        }\r\n\r\n        GoToStates(gotoFunc: (state: string) => boolean) {\r\n            if (this.IsOpen)\r\n                gotoFunc(\"Open\");\r\n            else\r\n                gotoFunc(\"Closed\");\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ToolTip);\r\n    TemplateVisualStates(ToolTip,\r\n        { GroupName: \"OpenStates\", Name: \"Closed\" },\r\n        { GroupName: \"OpenStates\", Name: \"Open\" });\r\n}","class Point extends minerva.Point {\r\n    Clone (): Point {\r\n        return new Point(this.x, this.y);\r\n    }\r\n\r\n    static LERP (start: Point, end: Point, p: number): Point {\r\n        var x = start.x + (end.x - start.x) * p;\r\n        var y = start.y + (end.y - start.y) * p;\r\n        return new Point(x, y);\r\n    }\r\n}\r\nFayde.CoreLibrary.addPrimitive(Point);\r\n\r\nnullstone.registerTypeConverter(Point, (val: any): Point => {\r\n    if (!val)\r\n        return new Point();\r\n    if (val instanceof Point)\r\n        return <Point>val;\r\n    if (val instanceof minerva.Point)\r\n        return new Point(val.x, val.y);\r\n    var tokens = Fayde.splitCommaList(val.toString());\r\n    if (tokens.length === 2) {\r\n        var x = parseFloat(tokens[0]);\r\n        var y = parseFloat(tokens[1]);\r\n        return new Point(x, y);\r\n    }\r\n    throw new Exception(\"Cannot parse Point value '\" + val + \"'\");\r\n});\r\n","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n/// <reference path=\"../Primitives/Point.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    var AssignedToolTipProperty = DependencyProperty.Register(\"AssignedToolTip\", () => ToolTip, UIElement, null);\r\n    \r\n    var betweenShowDelay = 100;\r\n    var initialShowDelay = 400;\r\n    var showDuration = 5000;\r\n\r\n    function toolTipChanged(dobj: DependencyObject, args: DependencyPropertyChangedEventArgs) {\r\n        var owner = <UIElement>dobj;\r\n        var tooltip = args.NewValue;\r\n\r\n        if (args.OldValue)\r\n            slave.UnregisterTooltip(owner);\r\n\r\n        if (!tooltip)\r\n            return;\r\n\r\n        slave.RegisterTooltip(owner, tooltip);\r\n        slave.SetRootVisual(owner);\r\n    }\r\n    export class ToolTipService {\r\n        static ToolTipProperty = DependencyProperty.RegisterAttached(\"ToolTip\", () => DependencyObject, ToolTipService, undefined, toolTipChanged);\r\n        static GetToolTip(dobj: DependencyObject): ToolTip { return dobj.GetValue(ToolTipService.ToolTipProperty); }\r\n        static SetToolTip(dobj: DependencyObject, value: ToolTip) { dobj.SetValue(ToolTipService.ToolTipProperty, value); }\r\n\r\n        static PlacementProperty = DependencyProperty.RegisterAttached(\"Placement\", () => new Enum(PlacementMode), ToolTipService);\r\n        static GetPlacement(dobj: DependencyObject): PlacementMode { return dobj.GetValue(ToolTipService.PlacementProperty); }\r\n        static SetPlacement(dobj: DependencyObject, value: PlacementMode) { dobj.SetValue(ToolTipService.PlacementProperty, value); }\r\n\r\n        static PlacementTargetProperty = DependencyProperty.RegisterAttached(\"PlacementTarget\", () => UIElement, ToolTipService);\r\n        static GetPlacementTarget(dobj: DependencyObject): UIElement { return dobj.GetValue(ToolTipService.PlacementTargetProperty); }\r\n        static SetPlacementTarget(dobj: DependencyObject, value: UIElement) { dobj.SetValue(ToolTipService.PlacementTargetProperty, value); }\r\n\r\n        static get MousePosition(): Point {\r\n            return slave.MousePosition;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ToolTipService);\r\n\r\n\r\n    class ToolTipServiceSlave {\r\n        MousePosition: Point = new Point();\r\n        private _RootVisual: FrameworkElement = null;\r\n        private _CurrentTooltip: ToolTip = null;\r\n        private _LastEnterSource: any = null;\r\n        private _Owner: UIElement;\r\n        private _LastOpened: number = 0;\r\n        private _OpenInterval: number = null;\r\n        private _CloseInterval: number = null;\r\n\r\n        SetRootVisual(owner: UIElement) {\r\n            if (this._RootVisual)\r\n                return;\r\n            var updater = owner.XamlNode.LayoutUpdater;\r\n            var surface = <Surface>updater.tree.surface;\r\n            if (!surface)\r\n                return;\r\n            var rv = this._RootVisual = <FrameworkElement>surface.App.RootVisual;\r\n            if (!rv)\r\n                return;\r\n            // keep caching mouse position because we can't query it from Silverlight \r\n            rv.MouseMove.on(this.OnRootMouseMove, this);\r\n        }\r\n        private OnRootMouseMove(sender: any, e: Input.MouseEventArgs) {\r\n            this.MousePosition = e.GetPosition(null);\r\n        }\r\n\r\n        RegisterTooltip(owner: UIElement, tooltip: any) {\r\n            console.assert(owner != null, \"ToolTip must have an owner\");\r\n            console.assert(tooltip != null, \"ToolTip can not be null\");\r\n\r\n            owner.MouseEnter.on(this.OnOwnerMouseEnter, this);\r\n            owner.MouseLeave.on(this.OnOwnerMouseLeave, this);\r\n            owner.MouseLeftButtonDown.on(this.OnOwnerMouseLeftButtonDown, this);\r\n            owner.KeyDown.on(this.OnOwnerKeyDown, this);\r\n            var converted = this.ConvertToToolTip(tooltip);\r\n            owner.SetValue(AssignedToolTipProperty, converted);\r\n            if (owner instanceof FrameworkElement)\r\n                converted.TooltipParent = <FrameworkElement>owner;\r\n        }\r\n        UnregisterTooltip(owner: UIElement) {\r\n            console.assert(owner != null, \"owner element is required\");\r\n\r\n            var tooltip: ToolTip = owner.GetValue(AssignedToolTipProperty);\r\n            if (!tooltip || !(tooltip instanceof ToolTip))\r\n                return;\r\n\r\n            owner.MouseEnter.off(this.OnOwnerMouseEnter, this);\r\n            owner.MouseLeave.off(this.OnOwnerMouseLeave, this);\r\n            owner.MouseLeftButtonDown.off(this.OnOwnerMouseLeftButtonDown, this);\r\n            owner.KeyDown.off(this.OnOwnerKeyDown, this);\r\n\r\n            tooltip.TooltipParent = null;\r\n            if (tooltip.IsOpen) {\r\n                if (tooltip === this._CurrentTooltip) {\r\n                    window.clearInterval(this._CloseInterval);\r\n                    this._CurrentTooltip = null;\r\n                    this._Owner = null;\r\n                    this._LastEnterSource = null;\r\n                }\r\n\r\n                tooltip.IsOpen = false;\r\n            }\r\n\r\n            owner.ClearValue(AssignedToolTipProperty);\r\n        }\r\n\r\n        private OnOwnerMouseEnter(sender: any, e: Input.MouseEventArgs) {\r\n            this.MousePosition = e.GetPosition(null);\r\n            this.OnOwnerMouseEnterInternal(sender, e.OriginalSource);\r\n        }\r\n        private OnOwnerMouseLeave(sender: any, e: Input.MouseEventArgs) {\r\n            if (!this._CurrentTooltip) {\r\n                window.clearInterval(this._OpenInterval);\r\n                this._Owner = null;\r\n                this._LastEnterSource = null;\r\n                return;\r\n            }\r\n            this.CloseAutomaticToolTip();\r\n        }\r\n        private OnOwnerMouseLeftButtonDown(sender: any, e: Input.MouseButtonEventArgs) {\r\n            if (this._LastEnterSource && this._LastEnterSource === e.OriginalSource)\r\n                return;\r\n            if (this._Owner !== sender)\r\n                return;\r\n\r\n            if (!this._CurrentTooltip) {\r\n                window.clearInterval(this._OpenInterval);\r\n                this._Owner = null;\r\n                this._LastEnterSource = null;\r\n                return;\r\n            }\r\n\r\n            this.CloseAutomaticToolTip();\r\n        }\r\n        private OnOwnerKeyDown(sender: any, e: Input.KeyEventArgs) {\r\n            if (this._LastEnterSource && this._LastEnterSource === e.OriginalSource)\r\n                return;\r\n            if (this._Owner !== sender)\r\n                return;\r\n\r\n            if (!this._CurrentTooltip) {\r\n                window.clearInterval(this._OpenInterval);\r\n                this._Owner = null;\r\n                this._LastEnterSource = null;\r\n                return;\r\n            }\r\n\r\n            if (isSpecialKey(e.Key))\r\n                return;\r\n\r\n            this.CloseAutomaticToolTip();\r\n        }\r\n        private OnOwnerMouseEnterInternal(sender: any, source: any) {\r\n            if (this._LastEnterSource && this._LastEnterSource === source)\r\n                return;\r\n\r\n            if (this._CurrentTooltip) {\r\n                if (sender.GetValue(AssignedToolTipProperty) === this._CurrentTooltip)\r\n                    return;\r\n                this.CloseAutomaticToolTip();\r\n            }\r\n\r\n            this._Owner = sender;\r\n            this._LastEnterSource = source;\r\n\r\n            console.assert(!this._CurrentTooltip);\r\n\r\n            this.SetRootVisual(sender);\r\n\r\n            var sinceLastOpen = new Date().getTime() - this._LastOpened;\r\n            if (sinceLastOpen <= betweenShowDelay) {\r\n                this.OpenAutomaticToolTip();\r\n            } else {\r\n                this._OpenInterval = window.setInterval(() => this.OpenAutomaticToolTip(), initialShowDelay);\r\n            }\r\n        }\r\n\r\n        private ConvertToToolTip(o: any): ToolTip {\r\n            if (o instanceof ToolTip)\r\n                return o;\r\n\r\n            if (o instanceof FrameworkElement) {\r\n                var parent = (<FrameworkElement> o).Parent;\r\n                if (parent instanceof ToolTip)\r\n                    return <ToolTip>parent;\r\n            }\r\n\r\n            var tooltip = new ToolTip();\r\n            tooltip.Content = o;\r\n            return tooltip;\r\n        }\r\n\r\n        private OpenAutomaticToolTip() {\r\n            window.clearInterval(this._OpenInterval);\r\n\r\n            console.assert(this._Owner != null, \"ToolTip owner was not set prior to starting the open timer\");\r\n\r\n            var cur = this._CurrentTooltip = <ToolTip> this._Owner.GetValue(AssignedToolTipProperty);\r\n\r\n            if (cur != null) {\r\n                cur.PlacementOverride = ToolTipService.GetPlacement(this._Owner);\r\n                cur.PlacementTargetOverride = ToolTipService.GetPlacementTarget(this._Owner) || this._Owner;\r\n                cur.IsOpen = true;\r\n\r\n                this._CloseInterval = window.setInterval(() => this.CloseAutomaticToolTip(), showDuration);\r\n            }\r\n        }\r\n        private CloseAutomaticToolTip() {\r\n                window.clearInterval(this._CloseInterval);\r\n\r\n            var cur = this._CurrentTooltip;\r\n            cur.PlacementOverride = null;\r\n            cur.PlacementTargetOverride = null;\r\n            cur.IsOpen = false;\r\n            this._CurrentTooltip = null;\r\n\r\n            this._Owner = null;\r\n            this._LastEnterSource = null;\r\n\r\n            this._LastOpened = new Date().getTime();\r\n        }\r\n    }\r\n    var slave = new ToolTipServiceSlave();\r\n\r\n    var specialKeys: Input.Key[] =\r\n        [\r\n            Input.Key.Alt,\r\n            Input.Key.Back,\r\n            Input.Key.Delete,\r\n            Input.Key.Down,\r\n            Input.Key.End,\r\n            Input.Key.Home,\r\n            Input.Key.Insert,\r\n            Input.Key.Left,\r\n            Input.Key.PageDown,\r\n            Input.Key.PageUp,\r\n            Input.Key.Right,\r\n            Input.Key.Space,\r\n            Input.Key.Up\r\n        ];\r\n    function isSpecialKey(key: Input.Key): boolean {\r\n        return specialKeys.indexOf(key) > -1;\r\n    }\r\n}","/// <reference path=\"Panel.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    export enum VirtualizationMode {\r\n        Standard = 0,\r\n        Recycling = 1,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(VirtualizationMode, \"VirtualizationMode\");\r\n\r\n    export class VirtualizingPanel extends Panel {\r\n        static VirtualizationModeProperty = DependencyProperty.RegisterAttached(\"VirtualizationMode\", () => new Enum(VirtualizationMode), VirtualizingPanel, VirtualizationMode.Recycling);\r\n        static GetVirtualizationMode(d: DependencyObject): VirtualizationMode { return d.GetValue(VirtualizingPanel.VirtualizationModeProperty); }\r\n        static SetVirtualizationMode(d: DependencyObject, value: VirtualizationMode) { d.SetValue(VirtualizingPanel.VirtualizationModeProperty, value); }\r\n\r\n        static IsVirtualizingProperty = DependencyProperty.RegisterAttached(\"IsVirtualizing\", () => Boolean, VirtualizingPanel, false);\r\n        static GetIsVirtualizing(d: DependencyObject): boolean { return d.GetValue(VirtualizingPanel.IsVirtualizingProperty); }\r\n        static SetIsVirtualizing(d: DependencyObject, value: boolean) { d.SetValue(VirtualizingPanel.IsVirtualizingProperty, value); }\r\n\r\n        get ItemsControl(): ItemsControl {\r\n            var presenter = ItemsPresenter.Get(this);\r\n            return presenter ? presenter.ItemsControl : null;\r\n        }\r\n\r\n        OnItemsAdded(index: number, newItems: any[]) {\r\n            this.XamlNode.LayoutUpdater.invalidateMeasure();\r\n        }\r\n        OnItemsRemoved(index: number, oldItems: any[]) {\r\n            this.XamlNode.LayoutUpdater.invalidateMeasure();\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(VirtualizingPanel);\r\n}","/// <reference path=\"VirtualizingPanel.ts\" />\r\n\r\nmodule Fayde.Controls {\r\n    var LineDelta = 14.7;\r\n    var Wheelitude = 3;\r\n\r\n    import VirtualizingStackPanelUpdater = minerva.controls.virtualizingstackpanel.VirtualizingStackPanelUpdater;\r\n\r\n    export class VirtualizingStackPanel extends VirtualizingPanel implements Primitives.IScrollInfo {\r\n        CreateLayoutUpdater() {\r\n            var updater = new VirtualizingStackPanelUpdater();\r\n            updater.assets.scrollData = this._ScrollData = new Primitives.ScrollData();\r\n            updater.tree.containerOwner = new Internal.VirtualizingPanelContainerOwner(this);\r\n            return updater;\r\n        }\r\n\r\n        private _ScrollData: Primitives.ScrollData;\r\n\r\n        get ScrollOwner(): ScrollViewer {\r\n            return this._ScrollData.scrollOwner;\r\n        }\r\n\r\n        set ScrollOwner(value: ScrollViewer) {\r\n            this._ScrollData.scrollOwner = value;\r\n        }\r\n\r\n        get CanHorizontallyScroll(): boolean {\r\n            return this._ScrollData.canHorizontallyScroll;\r\n            ;\r\n        }\r\n\r\n        set CanHorizontallyScroll(value: boolean) {\r\n            var sd = this._ScrollData;\r\n            if (sd.canHorizontallyScroll !== value) {\r\n                sd.canHorizontallyScroll = value;\r\n                this.XamlNode.LayoutUpdater.invalidateMeasure();\r\n            }\r\n        }\r\n\r\n        get CanVerticallyScroll(): boolean {\r\n            return this._ScrollData.canVerticallyScroll;\r\n        }\r\n\r\n        set CanVerticallyScroll(value: boolean) {\r\n            var sd = this._ScrollData;\r\n            if (sd.canVerticallyScroll !== value) {\r\n                sd.canVerticallyScroll = value;\r\n                this.XamlNode.LayoutUpdater.invalidateMeasure();\r\n            }\r\n        }\r\n\r\n        get ExtentWidth(): number {\r\n            return this._ScrollData.extentWidth;\r\n        }\r\n\r\n        get ExtentHeight(): number {\r\n            return this._ScrollData.extentHeight;\r\n        }\r\n\r\n        get ViewportWidth(): number {\r\n            return this._ScrollData.viewportWidth;\r\n        }\r\n\r\n        get ViewportHeight(): number {\r\n            return this._ScrollData.viewportHeight;\r\n        }\r\n\r\n        get HorizontalOffset(): number {\r\n            return this._ScrollData.offsetX;\r\n        }\r\n\r\n        get VerticalOffset(): number {\r\n            return this._ScrollData.offsetY;\r\n        }\r\n\r\n        LineUp(): boolean {\r\n            var sd = this._ScrollData;\r\n            if (this.Orientation === Fayde.Orientation.Horizontal)\r\n                return this.SetVerticalOffset(sd.offsetY - LineDelta);\r\n            return this.SetVerticalOffset(sd.offsetY - 1);\r\n        }\r\n\r\n        LineDown(): boolean {\r\n            var sd = this._ScrollData;\r\n            if (this.Orientation === Fayde.Orientation.Horizontal)\r\n                return this.SetVerticalOffset(sd.offsetY + LineDelta);\r\n            return this.SetVerticalOffset(sd.offsetY + 1);\r\n        }\r\n\r\n        LineLeft(): boolean {\r\n            var sd = this._ScrollData;\r\n            if (this.Orientation === Fayde.Orientation.Vertical)\r\n                return this.SetHorizontalOffset(sd.offsetX - LineDelta);\r\n            return this.SetHorizontalOffset(sd.offsetX - 1);\r\n        }\r\n\r\n        LineRight(): boolean {\r\n            var sd = this._ScrollData;\r\n            if (this.Orientation === Fayde.Orientation.Vertical)\r\n                return this.SetHorizontalOffset(sd.offsetX + LineDelta);\r\n            return this.SetHorizontalOffset(sd.offsetX + 1);\r\n        }\r\n\r\n        MouseWheelUp(): boolean {\r\n            var sd = this._ScrollData;\r\n            if (this.Orientation === Fayde.Orientation.Horizontal)\r\n                return this.SetVerticalOffset(sd.offsetY - LineDelta * Wheelitude);\r\n            return this.SetVerticalOffset(sd.offsetY - Wheelitude);\r\n        }\r\n\r\n        MouseWheelDown(): boolean {\r\n            var sd = this._ScrollData;\r\n            if (this.Orientation === Fayde.Orientation.Horizontal)\r\n                return this.SetVerticalOffset(sd.offsetY + LineDelta * Wheelitude);\r\n            return this.SetVerticalOffset(sd.offsetY + Wheelitude);\r\n        }\r\n\r\n        MouseWheelLeft(): boolean {\r\n            var sd = this._ScrollData;\r\n            if (this.Orientation === Fayde.Orientation.Vertical)\r\n                return this.SetHorizontalOffset(sd.offsetX - LineDelta * Wheelitude);\r\n            return this.SetHorizontalOffset(sd.offsetX - Wheelitude);\r\n        }\r\n\r\n        MouseWheelRight(): boolean {\r\n            var sd = this._ScrollData;\r\n            if (this.Orientation === Fayde.Orientation.Vertical)\r\n                return this.SetHorizontalOffset(sd.offsetX + LineDelta * Wheelitude);\r\n            return this.SetHorizontalOffset(sd.offsetX + Wheelitude);\r\n        }\r\n\r\n        PageUp(): boolean {\r\n            var sd = this._ScrollData;\r\n            return this.SetVerticalOffset(sd.offsetY - sd.viewportHeight);\r\n        }\r\n\r\n        PageDown(): boolean {\r\n            var sd = this._ScrollData;\r\n            return this.SetVerticalOffset(sd.offsetY + sd.viewportHeight);\r\n        }\r\n\r\n        PageLeft(): boolean {\r\n            var sd = this._ScrollData;\r\n            return this.SetHorizontalOffset(sd.offsetX - sd.viewportWidth);\r\n        }\r\n\r\n        PageRight(): boolean {\r\n            var sd = this._ScrollData;\r\n            return this.SetHorizontalOffset(sd.offsetX + sd.viewportWidth);\r\n        }\r\n\r\n        MakeVisible(uie: UIElement, rectangle: minerva.Rect): minerva.Rect {\r\n            var exposed = new minerva.Rect();\r\n            var sd = this._ScrollData;\r\n\r\n            var uin = uie.XamlNode;\r\n            var isVertical = this.Orientation === Orientation.Vertical;\r\n            var enumerator = this.Children.getEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                var child = enumerator.current;\r\n                var childNode = child.XamlNode;\r\n                var childRenderSize = childNode.LayoutUpdater.assets.renderSize;\r\n                if (uin === childNode) {\r\n                    if (isVertical) {\r\n                        if (rectangle.x !== sd.offsetX)\r\n                            this.SetHorizontalOffset(rectangle.x);\r\n\r\n                        exposed.width = Math.min(childRenderSize.width, sd.viewportWidth);\r\n                        exposed.height = childRenderSize.height;\r\n                        exposed.x = sd.offsetX;\r\n                    } else {\r\n                        if (rectangle.y !== sd.offsetY)\r\n                            this.SetVerticalOffset(rectangle.y);\r\n\r\n                        exposed.height = Math.min(childRenderSize.height, sd.viewportHeight);\r\n                        exposed.width = childRenderSize.width;\r\n                        exposed.y = sd.offsetY;\r\n                    }\r\n                    return exposed;\r\n                }\r\n\r\n                if (isVertical)\r\n                    exposed.y += childRenderSize.height;\r\n                else\r\n                    exposed.x += childRenderSize.width;\r\n            }\r\n\r\n            throw new ArgumentException(\"Visual is not a child of this Panel\");\r\n        }\r\n\r\n        SetHorizontalOffset(offset: number): boolean {\r\n            var sd = this._ScrollData;\r\n            if (offset < 0 || sd.viewportWidth >= sd.extentWidth)\r\n                offset = 0;\r\n            else if ((offset + sd.viewportWidth) >= sd.extentWidth)\r\n                offset = sd.extentWidth - sd.viewportWidth;\r\n\r\n            if (sd.offsetX === offset)\r\n                return false;\r\n            sd.offsetX = offset;\r\n\r\n            if (this.Orientation === Fayde.Orientation.Horizontal)\r\n                this.XamlNode.LayoutUpdater.invalidateMeasure();\r\n            else\r\n                this.XamlNode.LayoutUpdater.invalidateArrange();\r\n\r\n            var scrollOwner = this.ScrollOwner;\r\n            if (scrollOwner)\r\n                scrollOwner.InvalidateScrollInfo();\r\n            return true;\r\n        }\r\n\r\n        SetVerticalOffset(offset: number): boolean {\r\n            var sd = this._ScrollData;\r\n            if (offset < 0 || sd.viewportHeight >= sd.extentHeight)\r\n                offset = 0;\r\n            else if ((offset + sd.viewportHeight) >= sd.extentHeight)\r\n                offset = sd.extentHeight - sd.viewportHeight;\r\n\r\n            if (sd.offsetY === offset)\r\n                return false;\r\n            sd.offsetY = offset;\r\n\r\n            if (this.Orientation === Fayde.Orientation.Vertical)\r\n                this.XamlNode.LayoutUpdater.invalidateMeasure();\r\n            else\r\n                this.XamlNode.LayoutUpdater.invalidateArrange();\r\n\r\n            var scrollOwner = this.ScrollOwner;\r\n            if (scrollOwner)\r\n                scrollOwner.InvalidateScrollInfo();\r\n            return true;\r\n        }\r\n\r\n        static OrientationProperty = DependencyProperty.Register(\"Orientation\", () => new Enum(Orientation), VirtualizingStackPanel, Orientation.Vertical);\r\n        Orientation: Orientation;\r\n\r\n        OnItemsAdded(index: number, newItems: any[]) {\r\n            super.OnItemsAdded(index, newItems);\r\n\r\n            var isHorizontal = this.Orientation === Orientation.Horizontal;\r\n            var offset = isHorizontal ? this.HorizontalOffset : this.VerticalOffset;\r\n            if (index <= offset)\r\n                isHorizontal ? this.SetHorizontalOffset(offset + newItems.length) : this.SetVerticalOffset(offset + newItems.length);\r\n\r\n            var scrollOwner = this.ScrollOwner;\r\n            if (scrollOwner)\r\n                scrollOwner.InvalidateScrollInfo();\r\n        }\r\n\r\n        OnItemsRemoved(index: number, oldItems: any[]) {\r\n            super.OnItemsRemoved(index, oldItems);\r\n\r\n            var ic = this.ItemsControl;\r\n            if (ic) {\r\n                var icm = ic.ItemContainersManager;\r\n                var children = this.Children;\r\n                for (var i = 0, len = oldItems.length; i < len; i++) {\r\n                    var oldItem = oldItems[i];\r\n                    var container = icm.ContainerFromItem(oldItem);\r\n                    if (container)\r\n                        children.Remove(container);\r\n                }\r\n            }\r\n\r\n            var isHorizontal = this.Orientation === Orientation.Horizontal;\r\n            var offset = isHorizontal ? this.HorizontalOffset : this.VerticalOffset;\r\n\r\n            var numBeforeOffset = Math.min(offset, index + oldItems.length) - index;\r\n            if (numBeforeOffset > 0)\r\n                isHorizontal ? this.SetHorizontalOffset(numBeforeOffset) : this.SetVerticalOffset(numBeforeOffset);\r\n\r\n            var scrollOwner = this.ScrollOwner;\r\n            if (scrollOwner)\r\n                scrollOwner.InvalidateScrollInfo();\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(VirtualizingStackPanel);\r\n    nullstone.addTypeInterfaces(VirtualizingStackPanel, Primitives.IScrollInfo_);\r\n\r\n    module reactions {\r\n        UIReaction<minerva.Orientation>(VirtualizingStackPanel.OrientationProperty, (upd, ov, nv) => upd.invalidateMeasure(), false);\r\n    }\r\n}","interface ICloneable {\r\n    Clone(): any;\r\n}\r\n\r\nmodule Fayde {\r\n    export function Clone (value: any): any {\r\n        if (value === undefined)\r\n            return undefined;\r\n        if (value === null)\r\n            return null;\r\n        if (value instanceof Array)\r\n            return (<any[]>value).slice(0);\r\n        if (value !== Object(value)) //primitive\r\n            return value;\r\n        if (value.Clone instanceof Function)\r\n            return (<ICloneable>value).Clone();\r\n        return extend(new value.constructor(), value);\r\n    }\r\n\r\n    function extend (obj: any, ...args: any[]): any {\r\n        var s: any;\r\n        for (var i = 0, len = args.length; i < len; i++) {\r\n            if (s = args[i]) {\r\n                for (var prop in s) {\r\n                    obj[prop] = s[prop];\r\n                }\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n}","/// <reference path=\"../Markup/Loader\" />\r\n\r\nmodule Fayde {\r\n    export class DataTemplate extends Markup.FrameworkTemplate {\r\n        static DataTypeProperty = DependencyProperty.Register(\"DataType\", () => IType_, DataTemplate);\r\n        DataType: Function;\r\n    }\r\n    Fayde.CoreLibrary.add(DataTemplate);\r\n}","interface IDependencyPropertyChangedEventArgs {\r\n    Property: DependencyProperty;\r\n    OldValue: any;\r\n    NewValue: any;\r\n}\r\nclass DependencyPropertyChangedEventArgs implements nullstone.IEventArgs, IDependencyPropertyChangedEventArgs {\r\n    Property: DependencyProperty;\r\n    OldValue: any;\r\n    NewValue: any;\r\n}","/// <reference path=\"DataTemplate.ts\" />\r\n\r\nmodule Fayde {\r\n    export class HierarchicalDataTemplate extends DataTemplate {\r\n        static ItemsSourceProperty = DependencyProperty.Register(\"ItemsSource\", () => nullstone.IEnumerable_, HierarchicalDataTemplate);\r\n        static ItemTemplateProperty = DependencyProperty.Register(\"ItemTemplate\", () => DataTemplate, HierarchicalDataTemplate);\r\n        static ItemContainerStyleProperty = DependencyProperty.Register(\"ItemContainerStyle\", () => Style, HierarchicalDataTemplate);\r\n        ItemsSource: nullstone.IEnumerable<any>;\r\n        ItemTemplate: DataTemplate;\r\n        ItemContainerStyle: Style;\r\n    }\r\n    Fayde.CoreLibrary.add(HierarchicalDataTemplate);\r\n}","module Fayde {\r\n    export class LayoutInformation {\r\n        static GetLayoutClip(uie: UIElement): Media.Geometry {\r\n            var rect = new minerva.Rect();\r\n            minerva.Rect.copyTo(uie.XamlNode.LayoutUpdater.assets.layoutClip, rect);\r\n            var geom = new Media.RectangleGeometry();\r\n            geom.Rect = rect;\r\n            return geom;\r\n        }\r\n\r\n        /*\r\n        static GetLayoutExceptionElement(): UIElement {\r\n            var lu = LayoutUpdater.LayoutExceptionUpdater;\r\n            if (lu)\r\n                return lu.Node.XObject;\r\n        }\r\n        */\r\n\r\n        static GetLayoutSlot(uie: UIElement): minerva.Rect {\r\n            var rect = new minerva.Rect();\r\n            minerva.Rect.copyTo(uie.XamlNode.LayoutUpdater.assets.layoutSlot, rect);\r\n            return rect;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(LayoutInformation);\r\n}","module Fayde {\r\n    export class NameScope {\r\n        IsRoot: boolean = false;\r\n        private XNodes = {};\r\n\r\n        constructor(isRoot?: boolean) {\r\n            if (isRoot)\r\n                this.IsRoot = isRoot;\r\n        }\r\n\r\n        FindName(name: string): XamlNode {\r\n            return this.XNodes[name];\r\n        }\r\n        RegisterName(name: string, xnode: XamlNode) {\r\n            var existing = this.XNodes[name];\r\n            if (existing && existing !== xnode)\r\n                throw new InvalidOperationException(\"Name is already registered.\");\r\n            //TODO: Add Handler - Destroyed Event (xnode)\r\n            this.XNodes[name] = xnode;\r\n        }\r\n        UnregisterName(name: string) {\r\n            //var xnode = this.XNodes[name];\r\n            //TODO: Remove Handler - Destroyed Event (xnode)\r\n            this.XNodes[name] = undefined;\r\n        }\r\n        Absorb(otherNs: NameScope) {\r\n            var on = otherNs.XNodes;\r\n            for (var name in on) {\r\n                this.RegisterName(name, on[name]);\r\n            }\r\n        }\r\n    }\r\n}","/// <reference path=\"DependencyObject.ts\" />\r\n/// <reference path=\"XamlObjectCollection.ts\" />\r\n\r\n// http://msdn.microsoft.com/en-us/library/cc903952(v=vs.95).aspx\r\nmodule Fayde {\r\n    export interface IResourcable {\r\n        Resources: Fayde.ResourceDictionary;\r\n    }\r\n\r\n    export class ResourceDictionaryCollection extends XamlObjectCollection<ResourceDictionary> {\r\n        Get (key: any): any {\r\n            for (var en = this.getEnumerator(); en.moveNext();) {\r\n                var cur = en.current.Get(key);\r\n                if (cur !== undefined)\r\n                    return cur;\r\n            }\r\n            return undefined;\r\n        }\r\n\r\n        AddingToCollection (value: ResourceDictionary, error: BError): boolean {\r\n            if (!super.AddingToCollection(value, error))\r\n                return false;\r\n            return this._AssertNoCycles(value, value.XamlNode.ParentNode, error);\r\n        }\r\n\r\n        private _AssertNoCycles (subtreeRoot: ResourceDictionary, firstAncestorNode: XamlNode, error: BError) {\r\n            var curNode = firstAncestorNode;\r\n            while (curNode) {\r\n                var rd = <ResourceDictionary>curNode.XObject;\r\n                if (rd instanceof ResourceDictionary) {\r\n                    var cycleFound = false;\r\n                    if (rd === subtreeRoot)\r\n                        cycleFound = true;\r\n                    else if (rd.Source && nullstone.equals(rd.Source, subtreeRoot.Source))\r\n                        cycleFound = true;\r\n\r\n                    if (cycleFound) {\r\n                        error.Message = \"Cycle found in resource dictionaries.\";\r\n                        error.Number = BError.InvalidOperation;\r\n                        return false;\r\n                    }\r\n                }\r\n                curNode = curNode.ParentNode;\r\n            }\r\n\r\n            for (var en = subtreeRoot.MergedDictionaries.getEnumerator(); en.moveNext();) {\r\n                if (!this._AssertNoCycles(en.current, firstAncestorNode, error))\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ResourceDictionaryCollection);\r\n\r\n    export class ResourceDictionary extends XamlObject implements nullstone.IEnumerable<any> {\r\n        private _Keys: any[] = [];\r\n        private _Values: any[] = [];\r\n\r\n        private _IsSourceLoaded: boolean = false;\r\n        private _SourceBacking: ResourceDictionary = null;\r\n\r\n        private _MergedDictionaries: ResourceDictionaryCollection;\r\n        get MergedDictionaries (): ResourceDictionaryCollection {\r\n            var md = this._MergedDictionaries;\r\n            if (!md) {\r\n                md = this._MergedDictionaries = new ResourceDictionaryCollection();\r\n                md.AttachTo(this);\r\n            }\r\n            return md;\r\n        }\r\n\r\n        Source: Uri;\r\n        App: Application;\r\n\r\n        get Count (): number {\r\n            return this._Values.length;\r\n        }\r\n\r\n        AttachTo (xobj: XamlObject) {\r\n            var error = new BError();\r\n            if (!this.XamlNode.AttachTo(xobj.XamlNode, error))\r\n                error.ThrowException();\r\n        }\r\n\r\n        Contains (key: any): boolean {\r\n            return this._Keys.indexOf(key) > -1;\r\n        }\r\n\r\n        Get (key: any): any {\r\n            if (!!this.Source) {\r\n                return this._GetFromSource(key);\r\n            }\r\n            var index = this._Keys.indexOf(key);\r\n            if (index > -1)\r\n                return this._Values[index];\r\n            var md = this._MergedDictionaries;\r\n            if (md)\r\n                return md.Get(key);\r\n            return undefined;\r\n        }\r\n\r\n        Set (key: any, value: any): boolean {\r\n            if (key === undefined)\r\n                return false;\r\n            if (value === undefined)\r\n                return this.Remove(key);\r\n\r\n            var index = this._Keys.indexOf(key);\r\n            var error = new BError();\r\n            if (value instanceof XamlObject && !(<XamlObject>value).XamlNode.AttachTo(this.XamlNode, error)) {\r\n                if (error.Message)\r\n                    throw new Exception(error.Message);\r\n                return false;\r\n            }\r\n\r\n            if (index < 0) {\r\n                this._Keys.push(key);\r\n                this._Values.push(value);\r\n            } else {\r\n                var oldValue = this._Values[index];\r\n                this._Keys[index] = key;\r\n                this._Values[index] = value;\r\n                if (oldValue instanceof XamlObject)\r\n                    (<XamlObject>oldValue).XamlNode.Detach();\r\n            }\r\n            return true;\r\n        }\r\n\r\n        Remove (key: any): boolean {\r\n            var index = this._Keys.indexOf(key);\r\n            if (index < 0)\r\n                return false;\r\n            this._Keys.splice(index, 1);\r\n            var oldvalue = this._Values.splice(index, 1)[0];\r\n            if (oldvalue instanceof XamlObject)\r\n                (<XamlObject>oldvalue).XamlNode.Detach();\r\n        }\r\n\r\n        getEnumerator (reverse?: boolean): nullstone.IEnumerator<any> {\r\n            return nullstone.IEnumerator_.fromArray(this._Values, reverse);\r\n        }\r\n\r\n        GetNodeEnumerator<U extends XamlNode>(reverse?: boolean): nullstone.IEnumerator<U> {\r\n            var prev = this.getEnumerator(reverse);\r\n            return {\r\n                current: undefined,\r\n                moveNext: function (): boolean {\r\n                    if (prev.moveNext()) {\r\n                        this.current = undefined;\r\n                        return false;\r\n                    }\r\n                    var xobj = prev.current;\r\n                    this.current = xobj.XamlNode;\r\n                    return true;\r\n                }\r\n            };\r\n        }\r\n\r\n        private _GetFromSource (key: any): any {\r\n            if (!this._IsSourceLoaded) {\r\n                this._SourceBacking = Markup.Load<ResourceDictionary>(this.App, nullstone.markup.xaml.XamlMarkup.create(this.Source));\r\n                this._IsSourceLoaded = true;\r\n            }\r\n            return this._SourceBacking.Get(key);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ResourceDictionary);\r\n}","module Fayde {\r\n    export class RoutedEvent<T extends RoutedEventArgs> extends nullstone.Event<T> {\r\n    }\r\n    Fayde.CoreLibrary.add(RoutedEvent);\r\n}","/// <reference path=\"RoutedEvent.ts\" />\r\n/// <reference path=\"RoutedEventArgs.ts\" />\r\n\r\nmodule Fayde {\r\n    export class RoutedPropertyChangedEvent<T> extends RoutedEvent<RoutedPropertyChangedEventArgs<T>> {\r\n    }\r\n    Fayde.CoreLibrary.add(RoutedPropertyChangedEvent);\r\n\r\n    export class RoutedPropertyChangedEventArgs<T> extends RoutedEventArgs {\r\n        OldValue: T;\r\n        NewValue: T;\r\n        constructor(oldValue: T, newValue: T) {\r\n            super();\r\n            Object.defineProperty(this, \"OldValue\", { value: oldValue, writable: false });\r\n            Object.defineProperty(this, \"NewValue\", { value: newValue, writable: false });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(RoutedPropertyChangedEventArgs);\r\n}","/// <reference path=\"RoutedEvent.ts\" />\r\n/// <reference path=\"RoutedEventArgs.ts\" />\r\n\r\nmodule Fayde {\r\n    export class RoutedPropertyChangingEvent<T> extends RoutedEvent<RoutedPropertyChangingEventArgs<T>> {\r\n    }\r\n    Fayde.CoreLibrary.add(RoutedPropertyChangingEvent);\r\n\r\n    export class RoutedPropertyChangingEventArgs<T> extends RoutedEventArgs {\r\n        Property: DependencyProperty;\r\n        OldValue: T;\r\n        NewValue: T;\r\n        private _IsCancelable: boolean;\r\n        get IsCancellable() { return this._IsCancelable; }\r\n        private _Cancel: boolean = false;\r\n        get Cancel(): boolean { return this._Cancel; }\r\n        set Cancel(value: boolean) {\r\n            if (this._IsCancelable)\r\n                this._Cancel = value;\r\n            else if (value)\r\n                throw new InvalidOperationException(\"Not cancelable.\");\r\n        }\r\n        InCoercion: boolean = false;\r\n        constructor(propd: DependencyProperty, oldValue: T, newValue: T, isCancelable: boolean) {\r\n            super();\r\n            this.Property = propd;\r\n            this.OldValue = oldValue;\r\n            this.NewValue = newValue;\r\n            this._IsCancelable = isCancelable;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(RoutedPropertyChangingEventArgs);\r\n}","/// <reference path=\"DependencyObject.ts\" />\r\n/// <reference path=\"XamlObjectCollection.ts\" />\r\n\r\nmodule Fayde {\r\n    export class SetterCollection extends XamlObjectCollection<Setter> {\r\n        private _IsSealed: boolean = false;\r\n        XamlNode: XamlNode;\r\n\r\n        Seal () {\r\n            if (this._IsSealed)\r\n                return;\r\n            for (var en = this.getEnumerator(); en.moveNext();) {\r\n                en.current.Seal();\r\n            }\r\n            this._IsSealed = true;\r\n        }\r\n\r\n        AddingToCollection (value: Setter, error: BError): boolean {\r\n            if (!value || !this._ValidateSetter(<Setter>value, error))\r\n                return false;\r\n            return super.AddingToCollection(value, error);\r\n        }\r\n\r\n        private _ValidateSetter (setter: Setter, error: BError) {\r\n            if (!(setter.Property instanceof DependencyProperty)) {\r\n                error.Message = \"Setter.Property must be a DependencyProperty.\";\r\n                return false;\r\n            }\r\n            if (setter.Value === undefined) {\r\n                if (!setter._HasDeferredValueExpression(Setter.ValueProperty)) {\r\n                    error.Message = \"Setter must have a Value.\";\r\n                    return false;\r\n                }\r\n            }\r\n            if (this._IsSealed) {\r\n                error.Message = \"Setter is sealed.\";\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(SetterCollection);\r\n\r\n    export class Setter extends DependencyObject {\r\n        private _IsSealed: boolean = false;\r\n        static PropertyProperty = DependencyProperty.Register(\"Property\", () => DependencyProperty, Setter);\r\n        static ValueProperty = DependencyProperty.Register(\"Value\", () => Object, Setter);\r\n        static ConvertedValueProperty = DependencyProperty.RegisterReadOnly(\"ConvertedValue\", () => Object, Setter);\r\n        Property: DependencyProperty;\r\n        Value: any;\r\n        ConvertedValue: any;\r\n\r\n        Seal () {\r\n            var propd = this.Property;\r\n            var val = this.Value;\r\n\r\n            var propTargetType = <Function>propd.GetTargetType();\r\n            this.SetCurrentValue(Setter.ConvertedValueProperty, nullstone.convertAnyToType(val, propTargetType));\r\n            this._IsSealed = true;\r\n        }\r\n\r\n        static Compare (setter1: Setter, setter2: Setter): number {\r\n            var a = setter1.Property;\r\n            var b = setter2.Property;\r\n            return (a === b) ? 0 : ((a._ID > b._ID) ? 1 : -1);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Setter);\r\n}","/// <reference path=\"RoutedEventArgs.ts\" />\r\n\r\nmodule Fayde {\r\n    export class SizeChangedEventArgs extends RoutedEventArgs {\r\n        PreviousSize: minerva.Size;\r\n        NewSize: minerva.Size;\r\n\r\n        constructor(previousSize: minerva.Size, newSize: minerva.Size) {\r\n            super();\r\n\r\n            Object.defineProperty(this, \"PreviousSize\", { value: new minerva.Size(), writable: false });\r\n            Object.defineProperty(this, \"NewSize\", { value: new minerva.Size(), writable: false });\r\n\r\n            minerva.Size.copyTo(previousSize, this.PreviousSize);\r\n            minerva.Size.copyTo(newSize, this.NewSize);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(SizeChangedEventArgs);\r\n}","/// <reference path=\"DependencyObject.ts\" />\r\n\r\nmodule Fayde {\r\n    export class Style extends DependencyObject {\r\n        private _IsSealed: boolean = false;\r\n\r\n        static SettersProperty = DependencyProperty.RegisterImmutable<SetterCollection>(\"Setters\", () => SetterCollection, Style);\r\n        static BasedOnProperty = DependencyProperty.Register(\"BasedOn\", () => Style, Style);\r\n        static TargetTypeProperty = DependencyProperty.Register(\"TargetType\", () => IType_, Style);\r\n        Setters: SetterCollection;\r\n        BasedOn: Style;\r\n        TargetType: Function;\r\n\r\n        constructor () {\r\n            super();\r\n            var coll = Style.SettersProperty.Initialize(this);\r\n            coll.AttachTo(this);\r\n        }\r\n\r\n        Seal () {\r\n            if (this._IsSealed)\r\n                return;\r\n            this.Setters.Seal();\r\n            this._IsSealed = true;\r\n\r\n            var base = this.BasedOn;\r\n            if (base)\r\n                base.Seal();\r\n        }\r\n\r\n        Validate (instance: DependencyObject, error: BError): boolean {\r\n            var targetType = this.TargetType;\r\n            var parentType = <Function>(<any>instance).constructor;\r\n\r\n            if (this._IsSealed) {\r\n                if (!(instance instanceof targetType)) {\r\n                    error.Number = BError.XamlParse;\r\n                    error.Message = \"Style.TargetType (\" + (<any>targetType).name + \") is not a subclass of (\" + (<any>parentType).name + \")\";\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            // 1 Check for circular references in the BasedOn tree\r\n            var cycles = [];\r\n            var root = this;\r\n            while (root) {\r\n                if (cycles.indexOf(root) > -1) {\r\n                    error.Number = BError.InvalidOperation;\r\n                    error.Message = \"Circular reference in Style.BasedOn\";\r\n                    return false;\r\n                }\r\n                cycles.push(root);\r\n                root = root.BasedOn;\r\n            }\r\n            cycles = null;\r\n\r\n            // 2 Check that the instance is a subclass of Style::TargetType and also all the styles TargetTypes are\r\n            //   subclasses of their BasedOn styles TargetType.\r\n            root = this;\r\n            var targetType: Function;\r\n            while (root) {\r\n                targetType = root.TargetType;\r\n                if (root === this) {\r\n                    if (!targetType) {\r\n                        error.Number = BError.InvalidOperation;\r\n                        error.Message = \"TargetType cannot be null\";\r\n                        return false;\r\n                    } else if (!nullstone.doesInheritFrom(parentType, targetType)) {\r\n                        error.Number = BError.XamlParse;\r\n                        error.Message = \"Style.TargetType (\" + (<any>targetType).name + \") is not a subclass of (\" + (<any>parentType).name + \")\";\r\n                        return false;\r\n                    }\r\n                } else if (!targetType || !nullstone.doesInheritFrom(parentType, targetType)) {\r\n                    error.Number = BError.InvalidOperation;\r\n                    error.Message = \"Style.TargetType (\" + (targetType ? (<any>targetType).name : \"<Not Specified>\") + \") is not a subclass of (\" + (<any>parentType).name + \")\";\r\n                    return false;\r\n                }\r\n                parentType = targetType;\r\n                root = root.BasedOn;\r\n            }\r\n\r\n            // 3 This style is now OK and never needs to be checked again.\r\n            this.Seal();\r\n            return true;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Style);\r\n    Markup.Content(Style, Style.SettersProperty);\r\n}","module Fayde {\r\n    export class TemplateBinding implements nullstone.markup.IMarkupExtension {\r\n        SourceProperty: string;\r\n\r\n        init (val: string) {\r\n            this.SourceProperty = val;\r\n        }\r\n\r\n        transmute (os: any[]): any {\r\n            return new TemplateBindingExpression(this.SourceProperty);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(TemplateBinding);\r\n}","/// <reference path=\"DependencyObject.ts\" />\r\n/// <reference path=\"XamlObjectCollection.ts\" />\r\n\r\nmodule Fayde {\r\n    export class TriggerAction extends DependencyObject {\r\n        Fire() { }\r\n    }\r\n    Fayde.CoreLibrary.add(TriggerAction);\r\n    \r\n    export class TriggerActionCollection extends XamlObjectCollection<TriggerAction> {\r\n        Fire() {\r\n            var enumerator = this.getEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                (<TriggerAction>enumerator.current).Fire();\r\n            }\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(TriggerActionCollection);\r\n\r\n    \r\n    export class TriggerBase extends DependencyObject {\r\n        Attach(target: XamlObject) { }\r\n        Detach(target: XamlObject) { }\r\n    }\r\n    Fayde.CoreLibrary.add(TriggerBase);\r\n    \r\n    export class EventTrigger extends TriggerBase {\r\n        static ActionsProperty = DependencyProperty.RegisterImmutable<TriggerActionCollection>(\"Actions\", () => TriggerActionCollection, EventTrigger);\r\n        static RoutedEventProperty = DependencyProperty.Register(\"RoutedEvent\", () => String, EventTrigger);\r\n        Actions: TriggerActionCollection;\r\n        RoutedEvent: string;\r\n        \r\n        private _IsAttached: boolean = false;\r\n        \r\n        constructor() {\r\n            super();\r\n            var coll = EventTrigger.ActionsProperty.Initialize(this);\r\n            coll.AttachTo(this);\r\n        }\r\n\r\n        Attach(target: XamlObject) {\r\n            if (this._IsAttached)\r\n                return;\r\n            var evt = this._ParseEventName(target);\r\n            if (evt) {\r\n                this._IsAttached = true;\r\n                evt.on(this._FireActions, this);\r\n                return;\r\n            }\r\n            console.warn(\"Could not attach to RoutedEvent: \" + this.RoutedEvent);\r\n        }\r\n        Detach(target: XamlObject) {\r\n            var evt = this._ParseEventName(target);\r\n            if (evt) evt.off(this._FireActions, this);\r\n            this._IsAttached = false;\r\n        }\r\n\r\n        private _FireActions(sender, e: RoutedEventArgs) {\r\n            var actions = this.Actions;\r\n            if (actions)\r\n                actions.Fire();\r\n        }\r\n\r\n        private _ParseEventName(target: XamlObject): RoutedEvent<RoutedEventArgs> {\r\n            //Usually comes in \"FrameworkElement.Loaded\"\r\n            var routedEventName = this.RoutedEvent;\r\n            var tokens = routedEventName.split(\".\");\r\n            if (tokens.length === 1)\r\n                routedEventName = tokens[0];\r\n            else if (tokens.length === 2)\r\n                routedEventName = tokens[1];\r\n            else\r\n                return undefined;\r\n\r\n            var evt: RoutedEvent<RoutedEventArgs> = target[routedEventName];\r\n            if (evt instanceof RoutedEvent)\r\n                return evt;\r\n            return undefined;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(EventTrigger);\r\n    Markup.Content(EventTrigger, EventTrigger.ActionsProperty);\r\n\r\n    export class TriggerCollection extends XamlObjectCollection<TriggerBase> {\r\n        XamlNode: XamlNode;\r\n        private get ParentXamlObject(): XamlObject {\r\n            var parentNode = this.XamlNode.ParentNode;\r\n            if (!parentNode)\r\n                return undefined;\r\n            return parentNode.XObject;\r\n        }\r\n\r\n        AddingToCollection(value: TriggerBase, error: BError): boolean {\r\n            if (!super.AddingToCollection(value, error))\r\n                return false;\r\n            var parent = this.ParentXamlObject;\r\n            if (parent) value.Attach(parent);\r\n            return true;\r\n        }\r\n        RemovedFromCollection(value: TriggerBase, isValueSafe: boolean) {\r\n            super.RemovedFromCollection(value, isValueSafe);\r\n            var parent = this.ParentXamlObject;\r\n            if (parent) value.Detach(parent);\r\n        }\r\n\r\n        AttachTarget(target: XamlObject) {\r\n            var enumerator = this.getEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                (<TriggerBase>enumerator.current).Attach(target);\r\n            }\r\n        }\r\n        DetachTarget(target: XamlObject) {\r\n            var enumerator = this.getEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                (<TriggerBase>enumerator.current).Detach(target);\r\n            }\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(TriggerCollection);\r\n}","module Fayde {\r\n    export class VisualTreeEnum {\r\n        static GetAncestors (uie: UIElement): nullstone.IEnumerable<UIElement> {\r\n            return new AncestorsEnumerable(uie);\r\n        }\r\n    }\r\n\r\n    class AncestorsEnumerable implements nullstone.IEnumerable<UIElement> {\r\n        constructor (private uie: UIElement) {\r\n        }\r\n\r\n        getEnumerator (): nullstone.IEnumerator<UIElement> {\r\n            var curNode: UINode = this.uie ? this.uie.XamlNode : null;\r\n            var e = {\r\n                current: undefined,\r\n                moveNext (): boolean {\r\n                    curNode = curNode ? curNode.VisualParentNode : undefined;\r\n                    e.current = curNode ? curNode.XObject : undefined;\r\n                    return e.current !== undefined;\r\n                }\r\n            };\r\n            return e;\r\n        }\r\n    }\r\n}","module Fayde {\r\n    export class VisualTreeHelper {\r\n        static GetParent (d: DependencyObject): DependencyObject {\r\n            if (!(d instanceof FrameworkElement))\r\n                throw new InvalidOperationException(\"Reference is not a valid visual DependencyObject\");\r\n            var parentNode = (<UIElement>d).XamlNode.VisualParentNode;\r\n            if (parentNode)\r\n                return parentNode.XObject;\r\n        }\r\n\r\n        static GetParentOfType<T extends DependencyObject>(d: DependencyObject, type: any): T {\r\n            if (!(d instanceof FrameworkElement))\r\n                throw new InvalidOperationException(\"Reference is not a valid visual DependencyObject\");\r\n            var curNode = (<UIElement>d).XamlNode;\r\n            while ((curNode = curNode.VisualParentNode)) {\r\n                if (curNode.XObject instanceof type)\r\n                    return <T><any>curNode.XObject;\r\n            }\r\n            return undefined;\r\n        }\r\n\r\n        static GetRoot (d: DependencyObject): DependencyObject {\r\n            if (!(d instanceof FrameworkElement))\r\n                throw new InvalidOperationException(\"Reference is not a valid visual DependencyObject\");\r\n            var rootNode = (<UIElement>d).XamlNode.GetVisualRoot();\r\n            if (rootNode)\r\n                return rootNode.XObject;\r\n        }\r\n\r\n        static GetChild (d: DependencyObject, childIndex: number): DependencyObject {\r\n            if (!(d instanceof FrameworkElement))\r\n                throw new InvalidOperationException(\"Reference is not a valid visual DependencyObject\");\r\n\r\n            var feNode = <FENode>d.XamlNode;\r\n            var subtreeNode = feNode.SubtreeNode;\r\n            if (!subtreeNode)\r\n                throw new IndexOutOfRangeException(childIndex);\r\n\r\n            var subtree = subtreeNode.XObject;\r\n            if (subtree instanceof XamlObjectCollection)\r\n                return <DependencyObject>(<XamlObjectCollection<DependencyObject>>subtree).GetValueAt(childIndex);\r\n\r\n            if ((subtree instanceof UIElement) && childIndex === 0)\r\n                return <UIElement>subtree;\r\n\r\n            throw new IndexOutOfRangeException(childIndex);\r\n        }\r\n\r\n        static GetChildrenCount (d: DependencyObject): number {\r\n            if (!(d instanceof FrameworkElement))\r\n                throw new InvalidOperationException(\"Reference is not a valid visual DependencyObject\");\r\n\r\n            var feNode = <FENode>d.XamlNode;\r\n            var subtreeNode = feNode.SubtreeNode;\r\n            if (!subtreeNode)\r\n                return 0;\r\n\r\n            var subtree = subtreeNode.XObject;\r\n            if (subtreeNode.XObject instanceof XamlObjectCollection)\r\n                return (<XamlObjectCollection<DependencyObject>>subtree).Count;\r\n\r\n            if (subtree instanceof UIElement)\r\n                return 1;\r\n\r\n            return 0;\r\n        }\r\n\r\n        static FindElementsInHostCoordinates (pos: Point, uie: UIElement): UIElement[] {\r\n            return minerva.findElementsInHostSpace(pos, uie.XamlNode.LayoutUpdater)\r\n                .map(upd => upd.getAttachedValue(\"$node\").XObject);\r\n        }\r\n\r\n        static __Debug (ui: any, func?: (uin: UINode, tabIndex: number) => string): string {\r\n            var uin: UINode;\r\n            if (ui instanceof UIElement) {\r\n                uin = (<UIElement>ui).XamlNode;\r\n            } else if (ui instanceof UINode) {\r\n                uin = <UINode>ui;\r\n            } else if (ui instanceof minerva.core.Updater) {\r\n                uin = (<minerva.core.Updater>ui).getAttachedValue(\"$node\");\r\n            }\r\n\r\n            //Find top level\r\n            var topNode: UINode;\r\n            if (!uin) {\r\n                var rv = Application.Current.RootVisual;\r\n                topNode = (rv) ? rv.XamlNode : null;\r\n            } else {\r\n                topNode = uin.GetVisualRoot();\r\n            }\r\n            if (!topNode)\r\n                return \"[No top node.]\";\r\n\r\n            if (!func)\r\n                func = VisualTreeHelper.__DebugUIElement;\r\n            return VisualTreeHelper.__DebugTree(topNode, uin, 1, func);\r\n        }\r\n\r\n        private static __DebugTree (curNode: UINode, matchNode: UINode, tabIndex: number, func: (uin: UINode, tabIndex: number) => string) {\r\n            var str = \"\";\r\n            if (curNode === matchNode) {\r\n                for (var i = 0; i < tabIndex; i++) {\r\n                    str += \">>>>>>>>\";\r\n                }\r\n            } else {\r\n                for (var i = 0; i < tabIndex; i++) {\r\n                    str += \"\\t\";\r\n                }\r\n            }\r\n\r\n            var cur = curNode.XObject;\r\n            str += (<any>cur).constructor.name;\r\n            var id = (<any>cur)._ID;\r\n            if (id) str += \"[\" + id + \"]\";\r\n            var name = curNode.Name;\r\n            str += \" [\";\r\n            var ns = curNode.NameScope;\r\n            if (!ns)\r\n                str += \"^\";\r\n            else if (ns.IsRoot)\r\n                str += \"+\";\r\n            else\r\n                str += \"-\";\r\n            str += name + \"]\";\r\n            if (func)\r\n                str += func(curNode, tabIndex);\r\n            str += \"\\n\";\r\n\r\n            var enumerator = (<FENode>curNode).GetVisualTreeEnumerator();\r\n            if (!enumerator)\r\n                return str;\r\n\r\n            var childNode: UINode;\r\n            while (enumerator.moveNext()) {\r\n                childNode = enumerator.current;\r\n                str += VisualTreeHelper.__DebugTree(childNode, matchNode, tabIndex + 1, func);\r\n            }\r\n\r\n            return str;\r\n        }\r\n\r\n        private static __DebugUIElement (uin: UINode, tabIndex: number): string {\r\n            if (!uin)\r\n                return \"\";\r\n            var uie = uin.XObject;\r\n            var str = \"(\";\r\n            if (uie.Visibility === Fayde.Visibility.Visible)\r\n                str += \"Visible\";\r\n            else\r\n                str += \"Collapsed\";\r\n\r\n            var lu = uin.LayoutUpdater;\r\n            if (lu) {\r\n                str += \" \";\r\n                var ls = lu.assets.layoutSlot;\r\n                str += \"(\" + ls.x + \",\" + ls.y + \")(\" + ls.width + \",\" + ls.height + \")\";\r\n            }\r\n            str += \")\";\r\n\r\n            var t = uie.TemplateOwner;\r\n            str += \"$TO=\" + (t ? (<any>t).constructor.name : \"(null)\");\r\n\r\n            var gridStr = VisualTreeHelper.__DebugGrid(uin, tabIndex);\r\n            if (gridStr)\r\n                str += \"\\n\" + gridStr;\r\n            return str;\r\n        }\r\n\r\n        private static __DebugGrid (uin: UINode, tabIndex: number): string {\r\n            var grid: Controls.Grid;\r\n            if (uin.XObject instanceof Controls.Grid)\r\n                grid = <Controls.Grid>uin.XObject;\r\n            if (!grid)\r\n                return \"\";\r\n            var rds = grid.RowDefinitions;\r\n            var rcount = rds.Count;\r\n            var cds = grid.ColumnDefinitions;\r\n            var ccount = cds.Count;\r\n\r\n            var tabs = \"\";\r\n            for (var i = 0; i < tabIndex; i++) {\r\n                tabs += \"\\t\";\r\n            }\r\n\r\n            var str = \"\";\r\n            if (rcount > 0) {\r\n                str += tabs;\r\n                str += \"  Rows (\" + rcount + \"):\\n\";\r\n                var rowdef: Controls.RowDefinition;\r\n                for (var en = rds.getEnumerator(), i = 0; en.moveNext(); i++) {\r\n                    rowdef = en.current;\r\n                    str += tabs;\r\n                    str += \"\\t[\" + i + \"] -> \" + rowdef.ActualHeight + \"\\n\";\r\n                }\r\n            }\r\n            var enumerator2: nullstone.IEnumerator<Controls.ColumnDefinition>;\r\n            if (ccount > 0) {\r\n                str += tabs;\r\n                str += \"  Columns (\" + ccount + \"):\\n\";\r\n                var coldef: Controls.ColumnDefinition;\r\n                for (var en2 = cds.getEnumerator(), i = 0; en2.moveNext(); i++) {\r\n                    coldef = en2.current;\r\n                    str += tabs;\r\n                    str += \"\\t[\" + i + \"] -> \" + coldef.ActualWidth + \"\\n\";\r\n                }\r\n            }\r\n            return str;\r\n        }\r\n\r\n        private static __DebugUIElementLayout (uin: UINode, tabIndex: number): string {\r\n            if (!uin)\r\n                return \"\";\r\n            return (<any>uin.LayoutUpdater)._DebugLayout();\r\n        }\r\n\r\n        static __DebugLayout (ui: any): string {\r\n            return VisualTreeHelper.__Debug(ui, VisualTreeHelper.__DebugUIElementLayout);\r\n        }\r\n\r\n        private static __GetById (id: number): UIElement {\r\n            //Find top level\r\n            var rv = Application.Current.RootVisual;\r\n            var topNode = (rv) ? rv.XamlNode : null;\r\n            if (!topNode)\r\n                return;\r\n\r\n            var walker = DeepTreeWalker(topNode);\r\n            var curNode: UINode;\r\n            while (curNode = walker.Step()) {\r\n                if ((<any>curNode.XObject)._ID === id)\r\n                    return curNode.XObject;\r\n            }\r\n        }\r\n    }\r\n}","\r\nmodule Fayde {\r\n    export enum VisualTreeDirection {\r\n        Logical,\r\n        Reverse,\r\n        ZForward,\r\n        ZReverse\r\n    }\r\n\r\n    export interface IWalker {\r\n        Step(): any;\r\n    }\r\n    export interface IStyleWalker extends IWalker {\r\n        Step(): Setter;\r\n    }\r\n    export interface IDeepTreeWalker extends IWalker {\r\n        Step(): UINode;\r\n        SkipBranch();\r\n    }\r\n    export interface ITabNavigationWalker {\r\n        FocusChild(): boolean;\r\n    }\r\n\r\n    function mergeSetters(arr: any[], dps: any[], style: Style) {\r\n        var enumerator = style.Setters.getEnumerator(true);\r\n        var setter: Setter;\r\n        while (enumerator.moveNext()) {\r\n            setter = <Setter>enumerator.current;\r\n            if (!(setter instanceof Fayde.Setter))\r\n                continue;\r\n            var propd = setter.Property;\r\n            if (!propd)\r\n                continue;\r\n            if (dps[propd._ID])\r\n                continue;\r\n            dps[propd._ID] = setter;\r\n            arr.push(setter);\r\n        }\r\n    }\r\n    export function SingleStyleWalker(style: Style): IStyleWalker {\r\n        var dps = [];\r\n        var flattenedSetters = [];\r\n        var cur = style;\r\n        while (cur) {\r\n            mergeSetters(flattenedSetters, dps, cur);\r\n            cur = cur.BasedOn;\r\n        }\r\n        flattenedSetters.sort(Setter.Compare);\r\n\r\n        return {\r\n            Step: function () {\r\n                return flattenedSetters.shift();\r\n            }\r\n        };\r\n    }\r\n    export function MultipleStylesWalker(styles: Style[]): IStyleWalker {\r\n        var flattenedSetters = [];\r\n        if (styles) {\r\n            var dps = [];\r\n            var stylesSeen = [];\r\n            var len = styles.length;\r\n            for (var i = 0; i < len; i++) {\r\n                var style = styles[i];\r\n                while (style) {\r\n                    if (stylesSeen.indexOf(style) > -1)\r\n                        continue;\r\n                    mergeSetters(flattenedSetters, dps, style);\r\n                    stylesSeen.push(style);\r\n                    style = style.BasedOn;\r\n                }\r\n            }\r\n            flattenedSetters.sort(Setter.Compare);\r\n        }\r\n\r\n        return {\r\n            Step: function () {\r\n                return flattenedSetters.shift();\r\n            }\r\n        };\r\n    }\r\n\r\n    //TODO: Remove this after adjusting TabNavigationWalker\r\n    export function DeepTreeWalker(topNode: UINode, direction?: VisualTreeDirection): IDeepTreeWalker {\r\n        var last: UINode = undefined;\r\n        var dir = VisualTreeDirection.Logical;\r\n        var walkList: UINode[] = [topNode];\r\n        if (direction)\r\n            dir = direction;\r\n\r\n        return {\r\n            Step: function () {\r\n                if (last) {\r\n                    var enumerator = (<FENode>last).GetVisualTreeEnumerator();\r\n                    var insertIndex = 0;\r\n                    while (enumerator.moveNext()) {\r\n                        walkList.splice(insertIndex, 0, enumerator.current);\r\n                        insertIndex++;\r\n                    }\r\n                }\r\n\r\n                var next = walkList.shift();\r\n                if (!next) {\r\n                    last = undefined;\r\n                    return;\r\n                }\r\n                return (last = next);\r\n            },\r\n            SkipBranch: function () {\r\n                last = undefined;\r\n            }\r\n        };\r\n    }\r\n    \r\n    function compare(left: Controls.ControlNode, right: Controls.ControlNode) {\r\n        if (!left)\r\n            return !right ? 0 : -1;\r\n        if (!right)\r\n            return 1;\r\n\r\n        var v1 = left.XObject.TabIndex;\r\n        var v2 = right.XObject.TabIndex;\r\n\r\n        if (v1 == null) {\r\n            return v2 != null ? -1 : 0;\r\n        } else if (v2 == null) {\r\n            return 1;\r\n        }\r\n        if (v1 > v2)\r\n            return 1;\r\n        return v1 === v2 ? 0 : -1;\r\n    }\r\n    function getParentNavigationMode(uin: UINode): Input.KeyboardNavigationMode {\r\n        while (uin) {\r\n            if (uin instanceof Controls.ControlNode)\r\n                return (<Controls.ControlNode>uin).XObject.TabNavigation;\r\n            return Input.KeyboardNavigationMode.Local;\r\n        }\r\n        return Input.KeyboardNavigationMode.Local;\r\n    }\r\n    function getActiveNavigationMode(uin: UINode): Input.KeyboardNavigationMode {\r\n        while (uin) {\r\n            if (uin instanceof Controls.ControlNode)\r\n                return (<Controls.ControlNode>uin).XObject.TabNavigation;\r\n            uin = uin.VisualParentNode;\r\n        }\r\n        return Input.KeyboardNavigationMode.Local;\r\n    }\r\n    function walkChildren(root: UINode, cur?: UINode, forwards?: boolean) {\r\n        var walker = new TabNavigationWalker(root, cur, forwards);\r\n        return walker.FocusChild();\r\n    }\r\n    export class TabNavigationWalker implements ITabNavigationWalker {\r\n        private _Root: UINode;\r\n        private _Current: UINode;\r\n        private _Forwards: boolean;\r\n        private _TabSorted: UINode[];\r\n\r\n        constructor(root: UINode, cur: UINode, forwards: boolean) {\r\n            this._Root = root;\r\n            this._Current = cur;\r\n            this._Forwards = forwards;\r\n            this._TabSorted = [];\r\n        }\r\n        \r\n        FocusChild(): boolean {\r\n            var childNode: UINode;\r\n            var childIsControl;\r\n            var curIndex = -1;\r\n\r\n            var childWalker = DeepTreeWalker(this._Root);\r\n            while (childNode = childWalker.Step()) {\r\n                if (childNode === this._Root || !(childNode instanceof Controls.ControlNode))\r\n                    continue;\r\n                this._TabSorted.push(childNode);\r\n                childWalker.SkipBranch();\r\n            }\r\n\r\n            if (this._TabSorted.length > 1) {\r\n                this._TabSorted.sort(compare);\r\n                if (!this._Forwards)\r\n                    this._TabSorted = this._TabSorted.reverse();\r\n            }\r\n\r\n            var len = this._TabSorted.length;\r\n            for (var i = 0; i < len; i++) {\r\n                if (this._TabSorted[i] === this._Current)\r\n                    curIndex = i;\r\n            }\r\n\r\n            if (curIndex !== -1 && getActiveNavigationMode(this._Root) === Input.KeyboardNavigationMode.Once) {\r\n                if (!this._Forwards && this._Root instanceof Controls.ControlNode)\r\n                    return (<Controls.ControlNode>this._Root).TabTo();\r\n                return false;\r\n            }\r\n\r\n            var len = this._TabSorted.length;\r\n            if (len > 0) {\r\n                for (var j = 0; j < len; j++) {\r\n                    if ((j + curIndex + 1) === len && getActiveNavigationMode(this._Root) !== Input.KeyboardNavigationMode.Cycle)\r\n                        break;\r\n                    childNode = this._TabSorted[(j + curIndex + 1) % len];\r\n                    childIsControl = childNode instanceof Controls.ControlNode;\r\n\r\n                    if (childIsControl && !(<Controls.ControlNode>childNode).XObject.IsEnabled)\r\n                        continue;\r\n\r\n                    if (!this._Forwards && walkChildren(childNode))\r\n                        return true;\r\n\r\n                    if (childIsControl && (<Controls.ControlNode>childNode).TabTo())\r\n                        return true;\r\n\r\n                    if (this._Forwards && walkChildren(childNode))\r\n                        return true;\r\n                }\r\n            }\r\n\r\n            if (curIndex !== -1 && !this._Forwards) {\r\n                if (this._Root instanceof Controls.ControlNode)\r\n                    return (<Controls.ControlNode>this._Root).TabTo();\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        static Focus(uin: UINode, forwards?: boolean): boolean {\r\n            var focused = false;\r\n            var cur = uin;\r\n            var root = uin;\r\n\r\n            if ((root.VisualParentNode && getParentNavigationMode(root.VisualParentNode) === Input.KeyboardNavigationMode.Once)\r\n                || (!forwards && root && root.VisualParentNode)) {\r\n                while (root = root.VisualParentNode)\r\n                    if (root instanceof Controls.ControlNode || !root.VisualParentNode)\r\n                        break;\r\n            }\r\n\r\n            do {\r\n                focused = focused || walkChildren(root, cur, forwards);\r\n\r\n                if (!focused && getActiveNavigationMode(root) === Input.KeyboardNavigationMode.Cycle)\r\n                    return true;\r\n\r\n                cur = root;\r\n                root = root.VisualParentNode;\r\n                while (root && !(root instanceof Controls.ControlNode) && root.VisualParentNode)\r\n                    root = root.VisualParentNode\r\n            } while (!focused && root);\r\n\r\n            if (!focused)\r\n                focused = focused || walkChildren(cur, null, forwards);\r\n            return focused;\r\n        }\r\n    }\r\n}","module Fayde.Data {\r\n    import convert = nullstone.convertAnyToType;\r\n\r\n    export var WarnBrokenPath = false;\r\n\r\n    export class Binding implements nullstone.markup.IMarkupExtension, ICloneable {\r\n        StringFormat: string;\r\n        FallbackValue: any;\r\n        TargetNullValue: any;\r\n        BindsDirectlyToSource: boolean = false;\r\n        Converter: IValueConverter;\r\n        ConverterParameter: any;\r\n        ConverterCulture: any;\r\n        ElementName: string;\r\n        Mode: BindingMode;\r\n        NotifyOnValidationError: boolean = false;\r\n        RelativeSource: RelativeSource;\r\n        Path: Data.PropertyPath;\r\n        Source: any;\r\n        UpdateSourceTrigger: UpdateSourceTrigger;\r\n        ValidatesOnExceptions: boolean = false;\r\n        ValidatesOnDataErrors: boolean = false;\r\n        ValidatesOnNotifyDataErrors: boolean = true;\r\n\r\n        constructor ();\r\n        constructor (path: string|Data.PropertyPath);\r\n        constructor (binding: Binding);\r\n        constructor (obj?: any) {\r\n            if (obj instanceof Binding) {\r\n                var binding = <Binding>obj;\r\n                this.StringFormat = binding.StringFormat;\r\n                this.FallbackValue = binding.FallbackValue;\r\n                this.TargetNullValue = binding.TargetNullValue;\r\n                this.BindsDirectlyToSource = binding.BindsDirectlyToSource;\r\n                this.Converter = binding.Converter;\r\n                this.ConverterParameter = binding.ConverterParameter;\r\n                this.ConverterCulture = binding.ConverterCulture;\r\n                this.ElementName = binding.ElementName;\r\n                this.Mode = binding.Mode;\r\n                this.NotifyOnValidationError = binding.NotifyOnValidationError;\r\n                this.RelativeSource = binding.RelativeSource ? binding.RelativeSource.Clone() : null;\r\n                this.Path = binding.Path;\r\n                this.Source = binding.Source;\r\n                this.UpdateSourceTrigger = binding.UpdateSourceTrigger;\r\n                this.ValidatesOnExceptions = binding.ValidatesOnExceptions;\r\n                this.ValidatesOnDataErrors = binding.ValidatesOnDataErrors;\r\n                this.ValidatesOnNotifyDataErrors = binding.ValidatesOnNotifyDataErrors;\r\n            } else if (typeof obj === \"string\") {\r\n                this.Path = new Data.PropertyPath(<string>obj);\r\n            } else if (obj instanceof Data.PropertyPath) {\r\n                this.Path = obj;\r\n            } else {\r\n                this.Path = new Data.PropertyPath(\"\");\r\n            }\r\n        }\r\n\r\n        init (val: string) {\r\n            this.Path = new Data.PropertyPath(val);\r\n        }\r\n\r\n        transmute (os: any[]): any {\r\n            this.$$coerce();\r\n            Object.freeze(this);\r\n            return new Data.BindingExpression(this);\r\n        }\r\n\r\n        private $$coerce () {\r\n            this.StringFormat = this.StringFormat ? this.StringFormat.toString() : undefined;\r\n            this.BindsDirectlyToSource = convert(this.BindsDirectlyToSource, Boolean) || false;\r\n            this.Mode = Enum.fromAny(BindingMode, this.Mode);\r\n            this.NotifyOnValidationError = convert(this.NotifyOnValidationError, Boolean) || false;\r\n            this.Path = convert(this.Path, Data.PropertyPath);\r\n            this.UpdateSourceTrigger = Enum.fromAny(UpdateSourceTrigger, this.UpdateSourceTrigger);\r\n            this.ValidatesOnExceptions = convert(this.ValidatesOnExceptions, Boolean) || false;\r\n            this.ValidatesOnDataErrors = convert(this.ValidatesOnDataErrors, Boolean) || false;\r\n            this.ValidatesOnNotifyDataErrors = convert(this.ValidatesOnNotifyDataErrors, Boolean) !== false; //default: true\r\n        }\r\n\r\n        Clone () {\r\n            return new Binding(this);\r\n        }\r\n\r\n        static fromData (data: IBindingData): Binding {\r\n            var binding = new Binding(data.Path);\r\n            binding.StringFormat = data.StringFormat;\r\n            binding.FallbackValue = data.FallbackValue;\r\n            binding.TargetNullValue = data.TargetNullValue;\r\n            binding.BindsDirectlyToSource = data.BindsDirectlyToSource;\r\n            binding.Converter = data.Converter;\r\n            binding.ConverterParameter = data.ConverterParameter;\r\n            binding.ConverterCulture = data.ConverterCulture;\r\n            binding.ElementName = data.ElementName;\r\n            binding.Mode = data.Mode;\r\n            binding.NotifyOnValidationError = data.NotifyOnValidationError;\r\n            binding.RelativeSource = data.RelativeSource;\r\n            binding.Source = data.Source;\r\n            binding.UpdateSourceTrigger = data.UpdateSourceTrigger;\r\n            binding.ValidatesOnExceptions = data.ValidatesOnExceptions;\r\n            binding.ValidatesOnDataErrors = data.ValidatesOnDataErrors;\r\n            binding.ValidatesOnNotifyDataErrors = data.ValidatesOnNotifyDataErrors;\r\n            return binding;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Binding);\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n\r\nmodule Fayde.Data {\r\n    export class CollectionViewSource extends DependencyObject {\r\n        static SourceProperty: DependencyProperty = DependencyProperty.Register(\"Source\", () => Object, CollectionViewSource);\r\n        static ViewProperty: DependencyProperty = DependencyProperty.Register(\"View\", () => ICollectionView_, CollectionViewSource);\r\n        Source: any;\r\n        View: ICollectionView;\r\n    }\r\n}","module Fayde.Data {\r\n    export class DataErrorsChangedEventArgs implements nullstone.IEventArgs {\r\n        PropertyName: string;\r\n\r\n        constructor (propertyName: string) {\r\n            this.PropertyName = propertyName;\r\n            Object.freeze(this);\r\n        }\r\n    }\r\n}","module Fayde.Data {\r\n    export enum RelativeSourceMode {\r\n        TemplatedParent = 0,\r\n        Self = 1,\r\n        FindAncestor = 2,\r\n        ItemsControlParent = 3,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(RelativeSourceMode, \"RelativeSourceMode\");\r\n\r\n    export enum BindingMode {\r\n        OneWay = 0,\r\n        TwoWay = 1,\r\n        OneTime = 2,\r\n        OneWayToSource = 3,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(BindingMode, \"BindingMode\");\r\n\r\n    export enum UpdateSourceTrigger {\r\n        Default = 0,\r\n        PropertyChanged = 1,\r\n        Explicit = 3,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(UpdateSourceTrigger, \"UpdateSourceTrigger\");\r\n}","module Fayde.Data {\r\n    export interface ICollectionView extends nullstone.IEnumerable<any> {\r\n        CurrentChanged: nullstone.Event<nullstone.IEventArgs>;\r\n        CurrentItem: any;\r\n        MoveCurrentTo(item: any): boolean;\r\n    }\r\n    export var ICollectionView_ = new nullstone.Interface<ICollectionView>(\"ICollectionView\");\r\n}","module Fayde.Data {\r\n    export interface IDataErrorInfo {\r\n        Error: string;\r\n        GetError(propertyName: string): string;\r\n    }\r\n    export var IDataErrorInfo_ = new nullstone.Interface<IDataErrorInfo>(\"IDataErrorInfo\");\r\n}","module Fayde.Data {\r\n    export interface INotifyDataErrorInfo {\r\n        ErrorsChanged: nullstone.Event<DataErrorsChangedEventArgs>;\r\n        GetErrors(propertyName: string): nullstone.IEnumerable<any>;\r\n        HasErrors: boolean;\r\n    }\r\n    export var INotifyDataErrorInfo_ = new nullstone.Interface<INotifyDataErrorInfo>(\"INotifyDataErrorInfo\");\r\n}","module Fayde.Data {\r\n    export interface IValueConverter {\r\n        Convert(value: any, targetType: IType, parameter: any, culture: any): any;\r\n        ConvertBack(value: any, targetType: IType, parameter: any, culture: any): any;\r\n    }\r\n    export var IValueConverter_ = new nullstone.Interface<IValueConverter>(\"IValueConverter\");\r\n}","module Fayde.Data {\r\n    export class RelativeSource implements nullstone.markup.IMarkupExtension, ICloneable {\r\n        Mode: RelativeSourceMode;\r\n        AncestorLevel: number;\r\n        AncestorType: Function = null;\r\n\r\n        constructor ();\r\n        constructor (rs: RelativeSource);\r\n        constructor (obj?: any) {\r\n            if (obj instanceof RelativeSource) {\r\n                var rs = <RelativeSource>obj;\r\n                this.Mode = rs.Mode;\r\n                this.AncestorLevel = rs.AncestorLevel;\r\n                this.AncestorType = rs.AncestorType;\r\n            }\r\n        }\r\n\r\n        init (val: string) {\r\n            this.Mode = RelativeSourceMode[val];\r\n        }\r\n\r\n        resolveTypeFields (resolver: (full: string) => any) {\r\n            if (typeof this.AncestorType === \"string\")\r\n                this.AncestorType = resolver(<any>this.AncestorType);\r\n        }\r\n\r\n        transmute (os: any[]): any {\r\n            if (this.Mode == null && typeof this.AncestorType === \"function\") {\r\n                this.Mode = RelativeSourceMode.FindAncestor;\r\n            } else {\r\n                this.Mode = Enum.fromAny(RelativeSourceMode, this.Mode);\r\n            }\r\n            this.AncestorLevel = parseInt(<any>this.AncestorLevel) || 1;\r\n            Object.freeze(this);\r\n            return this;\r\n        }\r\n\r\n        Clone () {\r\n            return new RelativeSource(this);\r\n        }\r\n\r\n        Find (target: XamlObject) {\r\n            switch (this.Mode) {\r\n                case RelativeSourceMode.Self:\r\n                    return target;\r\n                case RelativeSourceMode.TemplatedParent:\r\n                    return target.TemplateOwner;\r\n                case RelativeSourceMode.FindAncestor:\r\n                    return findAncestor(target, this);\r\n                case RelativeSourceMode.ItemsControlParent:\r\n                    return findItemsControlAncestor(target, this);\r\n            }\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(RelativeSource);\r\n\r\n    function findAncestor (target: XamlObject, relSource: Data.RelativeSource): XamlObject {\r\n        if (!(target instanceof DependencyObject))\r\n            return;\r\n        var ancestorType = relSource.AncestorType;\r\n        if (typeof ancestorType !== \"function\") {\r\n            console.warn(\"RelativeSourceMode.FindAncestor with no AncestorType specified.\");\r\n            return;\r\n        }\r\n        var ancestorLevel = relSource.AncestorLevel;\r\n        if (isNaN(ancestorLevel)) {\r\n            console.warn(\"RelativeSourceMode.FindAncestor with no AncestorLevel specified.\");\r\n            return;\r\n        }\r\n        for (var parent = VisualTreeHelper.GetParent(<DependencyObject>target); parent != null; parent = VisualTreeHelper.GetParent(parent)) {\r\n            if (parent instanceof ancestorType && --ancestorLevel < 1)\r\n                return parent;\r\n        }\r\n    }\r\n\r\n    function findItemsControlAncestor (target: XamlObject, relSource: Data.RelativeSource): XamlObject {\r\n        if (!(target instanceof DependencyObject))\r\n            return;\r\n        var ancestorLevel = relSource.AncestorLevel;\r\n        ancestorLevel = ancestorLevel || 1; //NOTE: Will coerce 0 to 1 also\r\n        for (var parent = VisualTreeHelper.GetParent(<DependencyObject>target); parent != null; parent = VisualTreeHelper.GetParent(parent)) {\r\n            if (!!(<UIElement>parent).IsItemsControl && --ancestorLevel < 1)\r\n                return parent;\r\n        }\r\n    }\r\n}","module Fayde.Documents {\r\n    export interface ITextReactionCallback<T> {\r\n        (updater: minerva.text.TextUpdater, ov: T, nv: T, te?: TextElement): void;\r\n    }\r\n\r\n    export function TextReaction<TValue>(propd: DependencyProperty, callback?: ITextReactionCallback<TValue>, listen?: boolean, sync?: any, instance?: any) {\r\n        var changed: Function;\r\n        if (sync === false) {\r\n            changed = (listen === false) ? reaction<TValue>(callback) : lReaction<TValue>(callback);\r\n        } else {\r\n            var name = propd.Name;\r\n            name = name.charAt(0).toLowerCase() + name.substr(1);\r\n            if (typeof sync !== \"function\")\r\n                changed = (listen === false) ? sReaction<TValue>(callback, name) : slReaction<TValue>(callback, name);\r\n            else\r\n                changed = (listen === false) ? sReaction<TValue>(callback, name, sync) : slReaction<TValue>(callback, name, sync);\r\n        }\r\n        if (instance)\r\n            propd.Store.ListenToChanged(instance, propd, <any>changed, instance);\r\n        else\r\n            propd.ChangedCallback = <any>changed;\r\n    }\r\n\r\n    function reaction<T>(callback: ITextReactionCallback<T>) {\r\n        return (te: TextElement, args: DependencyPropertyChangedEventArgs) => {\r\n            callback && callback(te.TextUpdater, args.OldValue, args.NewValue, te);\r\n        };\r\n    }\r\n\r\n    function sReaction<T>(callback: ITextReactionCallback<T>, name: string, syncer?: (src: T, dest: T) => void) {\r\n        return (te: TextElement, args: DependencyPropertyChangedEventArgs) => {\r\n            var ov = args.OldValue;\r\n            var nv = args.NewValue;\r\n            var upd = te.TextUpdater;\r\n            if (!syncer)\r\n                upd.assets[name] = nv;\r\n            else\r\n                syncer(nv, upd.assets[name]);\r\n            callback && callback(upd, ov, nv, te);\r\n        };\r\n    }\r\n\r\n    function lReaction<T>(callback: ITextReactionCallback<T>) {\r\n        return (te: TextElement, args: DependencyPropertyChangedEventArgs) => {\r\n            var ov = args.OldValue;\r\n            var nv = args.NewValue;\r\n            var upd = te.TextUpdater;\r\n            UnreactTo(ov, te);\r\n            callback && callback(upd, ov, nv, te);\r\n            ReactTo(nv, te, () => callback(upd, nv, nv, te));\r\n        };\r\n    }\r\n\r\n    function slReaction<T>(callback: ITextReactionCallback<T>, name: string, syncer?: (src: T, dest: T) => void) {\r\n        return (te: TextElement, args: DependencyPropertyChangedEventArgs) => {\r\n            var ov = args.OldValue;\r\n            var nv = args.NewValue;\r\n            var upd = te.TextUpdater;\r\n            UnreactTo(ov, te);\r\n            if (!syncer)\r\n                upd.assets[name] = nv;\r\n            else\r\n                syncer(nv, upd.assets[name]);\r\n            callback && callback(upd, ov, nv, te);\r\n            ReactTo(nv, te, () => callback && callback(upd, nv, nv, te));\r\n        };\r\n    }\r\n}","/// <reference path=\"../Core/DependencyObject.ts\"/>\r\n/// <reference path=\"../Core/InheritableOwner.ts\"/>\r\n/// <reference path=\"TextReaction.ts\"/>\r\n\r\nmodule Fayde.Documents {\r\n    export class TextElementNode extends DONode {\r\n        XObject: TextElement;\r\n\r\n        constructor (xobj: TextElement, inheritedWalkProperty: string) {\r\n            super(xobj);\r\n            this.InheritedWalkProperty = inheritedWalkProperty;\r\n        }\r\n\r\n        InheritedWalkProperty: string;\r\n\r\n        GetInheritedEnumerator (): nullstone.IEnumerator<DONode> {\r\n            if (!this.InheritedWalkProperty)\r\n                return nullstone.IEnumerator_.empty;\r\n            var coll: XamlObjectCollection<DependencyObject> = this.XObject[this.InheritedWalkProperty];\r\n            if (coll)\r\n                return coll.GetNodeEnumerator<DONode>();\r\n        }\r\n    }\r\n\r\n    function invalidateFont (upd: minerva.text.TextUpdater, ov, nv, te?: TextElement) {\r\n        Incite(te, {\r\n            type: 'font',\r\n            full: upd.invalidateFont()\r\n        });\r\n    }\r\n\r\n    export class TextElement extends DependencyObject implements Providers.IIsPropertyInheritable {\r\n        XamlNode: TextElementNode;\r\n        TextUpdater = new minerva.text.TextUpdater();\r\n\r\n        CreateNode (): TextElementNode {\r\n            return new TextElementNode(this, null);\r\n        }\r\n\r\n        constructor () {\r\n            super();\r\n            TextReaction<Media.Brush>(TextElement.ForegroundProperty, (upd, ov, nv, te?: TextElement) => {\r\n                Incite(te, {\r\n                    type: 'font',\r\n                    full: upd.invalidateFont()\r\n                });\r\n            }, true, true, this);\r\n            TextReaction<string>(TextElement.FontFamilyProperty, invalidateFont, false, true, this);\r\n            TextReaction<number>(TextElement.FontSizeProperty, invalidateFont, false, true, this);\r\n            TextReaction<string>(TextElement.FontStretchProperty, invalidateFont, false, true, this);\r\n            TextReaction<string>(TextElement.FontStyleProperty, invalidateFont, false, true, this);\r\n            TextReaction<FontWeight>(TextElement.FontWeightProperty, invalidateFont, false, true, this);\r\n        }\r\n\r\n        static FontFamilyProperty = InheritableOwner.FontFamilyProperty.ExtendTo(TextElement);\r\n        static FontSizeProperty = InheritableOwner.FontSizeProperty.ExtendTo(TextElement);\r\n        static FontStretchProperty = InheritableOwner.FontStretchProperty.ExtendTo(TextElement);\r\n        static FontStyleProperty = InheritableOwner.FontStyleProperty.ExtendTo(TextElement);\r\n        static FontWeightProperty = InheritableOwner.FontWeightProperty.ExtendTo(TextElement);\r\n        static ForegroundProperty = InheritableOwner.ForegroundProperty.ExtendTo(TextElement);\r\n        static LanguageProperty = InheritableOwner.LanguageProperty.ExtendTo(TextElement);\r\n        Foreground: Media.Brush;\r\n        FontFamily: string;\r\n        FontStretch: string;\r\n        FontStyle: string;\r\n        FontWeight: FontWeight;\r\n        FontSize: number;\r\n        Language: string;\r\n\r\n        IsInheritable (propd: DependencyProperty): boolean {\r\n            return TextElementInheritedProps.indexOf(propd) > -1;\r\n        }\r\n\r\n        _SerializeText (): string {\r\n            return undefined;\r\n        }\r\n\r\n        Start: number;\r\n\r\n        Equals (te: TextElement): boolean {\r\n            if (this.FontFamily !== te.FontFamily)\r\n                return false;\r\n            if (this.FontSize !== te.FontSize)\r\n                return false;\r\n            if (this.FontStyle !== te.FontStyle)\r\n                return false;\r\n            if (this.FontWeight !== te.FontWeight)\r\n                return false;\r\n            if (this.FontStretch !== te.FontStretch)\r\n                return false;\r\n            if (!nullstone.equals(this.Foreground, te.Foreground))\r\n                return false;\r\n            return true;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(TextElement);\r\n\r\n    var TextElementInheritedProps = [\r\n        TextElement.FontFamilyProperty,\r\n        TextElement.FontSizeProperty,\r\n        TextElement.FontStretchProperty,\r\n        TextElement.FontStyleProperty,\r\n        TextElement.FontWeightProperty,\r\n        TextElement.ForegroundProperty,\r\n        TextElement.LanguageProperty\r\n    ];\r\n}","/// <reference path=\"TextElement.ts\" />\r\n\r\nmodule Fayde.Documents {\r\n    export class Block extends TextElement {\r\n    }\r\n    Fayde.CoreLibrary.add(Block);\r\n}","module Fayde.Documents {\r\n    export class BlockCollection extends XamlObjectCollection<Block> {\r\n        _RaiseItemAdded (value: Block, index: number) {\r\n            Incite(this, {\r\n                item: value,\r\n                index: index,\r\n                add: true\r\n            });\r\n        }\r\n\r\n        _RaiseItemRemoved (value: Block, index: number) {\r\n            Incite(this, {\r\n                item: value,\r\n                index: index,\r\n                add: false\r\n            });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(BlockCollection);\r\n}","/// <reference path=\"TextElement.ts\" />\r\n\r\nmodule Fayde.Documents {\r\n    export class Inline extends TextElement {\r\n        static TextDecorationsProperty = InheritableOwner.TextDecorationsProperty.ExtendTo(Inline);\r\n        TextDecorations: TextDecorations;\r\n\r\n        constructor () {\r\n            super();\r\n            TextReaction<TextDecorations>(Inline.TextDecorationsProperty, (upd, ov, nv, te?: TextElement) => {\r\n                Incite(te, {\r\n                    type: 'font',\r\n                    full: upd.invalidateFont()\r\n                });\r\n            }, false, true, this);\r\n        }\r\n\r\n        Equals (inline: Inline): boolean {\r\n            if (this.TextDecorations !== inline.TextDecorations)\r\n                return false;\r\n            return super.Equals(inline);\r\n        }\r\n\r\n        IsInheritable (propd: DependencyProperty): boolean {\r\n            if (propd === Inline.TextDecorationsProperty)\r\n                return true;\r\n            return super.IsInheritable(propd);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Inline);\r\n}","module Fayde.Documents {\r\n    export class InlineCollection extends XamlObjectCollection<Inline> {\r\n        _RaiseItemAdded (value: Inline, index: number) {\r\n            Incite(this, {\r\n                item: value,\r\n                index: index,\r\n                add: true\r\n            });\r\n        }\r\n\r\n        _RaiseItemRemoved (value: Inline, index: number) {\r\n            Incite(this, {\r\n                item: value,\r\n                index: index,\r\n                add: false\r\n            });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(InlineCollection);\r\n}","/// <reference path=\"Inline.ts\" />\r\n\r\nmodule Fayde.Documents {\r\n    export class LineBreak extends Inline {\r\n    }\r\n    Fayde.CoreLibrary.add(LineBreak);\r\n}","/// <reference path=\"Block.ts\" />\r\n\r\nmodule Fayde.Documents {\r\n    export class Paragraph extends Block {\r\n        CreateNode(): TextElementNode {\r\n            return new TextElementNode(this, \"Inlines\");\r\n        }\r\n\r\n        static InlinesProperty = DependencyProperty.RegisterImmutable<InlineCollection>(\"Inlines\", () => InlineCollection, Paragraph);\r\n        Inlines: InlineCollection;\r\n\r\n        constructor() {\r\n            super();\r\n            var coll = Paragraph.InlinesProperty.Initialize(this);\r\n            coll.AttachTo(this);\r\n            ReactTo(coll, this, (obj?) => this.InlinesChanged(obj.item, obj.add));\r\n        }\r\n\r\n        InlinesChanged (inline: Inline, isAdd: boolean) {\r\n            if (isAdd)\r\n                Providers.InheritedStore.PropagateInheritedOnAdd(this, inline.XamlNode);\r\n\r\n            if (isAdd)\r\n                ReactTo(inline, this, (obj?) => Incite(this, obj));\r\n            else\r\n                UnreactTo(inline, this);\r\n\r\n            Incite(this, {\r\n                type: 'text',\r\n                full: true\r\n            });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Paragraph);\r\n    Markup.Content(Paragraph, Paragraph.InlinesProperty);\r\n}","/// <reference path=\"Inline.ts\" />\r\n\r\nmodule Fayde.Documents {\r\n    export class Run extends Inline implements Providers.IIsPropertyInheritable {\r\n        static FlowDirectionProperty = InheritableOwner.FlowDirectionProperty.ExtendTo(Run);\r\n        static TextProperty = DependencyProperty.Register(\"Text\", () => String, Run);\r\n        FlowDirection: FlowDirection;\r\n        Text: string;\r\n\r\n        _SerializeText(): string { return this.Text; }\r\n\r\n        IsInheritable(propd: DependencyProperty): boolean {\r\n            if (propd === Run.FlowDirectionProperty)\r\n                return true;\r\n            return super.IsInheritable(propd);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Run);\r\n\r\n    module reactions {\r\n        TextReaction<string>(Run.TextProperty, (upd, ov, nv, run?: Run) => {\r\n            Incite(run, {\r\n                type: 'text',\r\n                full: true\r\n            });\r\n        }, false);\r\n    }\r\n}","/// <reference path=\"TextElement.ts\"/>\r\n\r\nmodule Fayde.Documents {\r\n    export class Section extends TextElement {\r\n        CreateNode (): TextElementNode {\r\n            return new TextElementNode(this, \"Blocks\");\r\n        }\r\n\r\n        static BlocksProperty = DependencyProperty.RegisterImmutable<BlockCollection>(\"Blocks\", () => BlockCollection, Section);\r\n        Blocks: BlockCollection;\r\n\r\n        constructor () {\r\n            super();\r\n            var coll = Section.BlocksProperty.Initialize(this);\r\n            coll.AttachTo(this);\r\n            ReactTo(coll, this, (obj?) => this.BlocksChanged(obj.item, obj.add));\r\n        }\r\n\r\n        BlocksChanged (block: Block, isAdd: boolean) {\r\n            if (isAdd)\r\n                Providers.InheritedStore.PropagateInheritedOnAdd(this, block.XamlNode);\r\n\r\n            if (isAdd)\r\n                ReactTo(block, this, (obj?) => Incite(this, obj));\r\n            else\r\n                UnreactTo(block, this);\r\n\r\n            Incite(this, {\r\n                type: 'text',\r\n                full: true\r\n            });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Section);\r\n    Markup.Content(Section, Section.BlocksProperty);\r\n}","/// <reference path=\"Inline.ts\" />\r\n\r\nmodule Fayde.Documents {\r\n    export class Span extends Inline {\r\n        CreateNode (): TextElementNode {\r\n            return new TextElementNode(this, \"Inlines\");\r\n        }\r\n\r\n        static InlinesProperty = DependencyProperty.RegisterImmutable<InlineCollection>(\"Inlines\", () => InlineCollection, Span);\r\n        Inlines: InlineCollection;\r\n\r\n        constructor () {\r\n            super();\r\n            var coll = Span.InlinesProperty.Initialize(this);\r\n            coll.AttachTo(this);\r\n            ReactTo(coll, this, (obj?) => this.InlinesChanged(obj.item, obj.add));\r\n        }\r\n\r\n        _SerializeText (): string {\r\n            var str = \"\";\r\n            var enumerator = this.Inlines.getEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                str += (<TextElement>enumerator.current)._SerializeText();\r\n            }\r\n            return str;\r\n        }\r\n\r\n        InlinesChanged (inline: Inline, isAdd: boolean) {\r\n            if (isAdd)\r\n                Providers.InheritedStore.PropagateInheritedOnAdd(this, inline.XamlNode);\r\n\r\n            if (isAdd)\r\n                ReactTo(inline, this, (obj?) => Incite(this, obj));\r\n            else\r\n                UnreactTo(inline, this);\r\n\r\n            Incite(this, {\r\n                type: 'text',\r\n                full: true\r\n            });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Span);\r\n    Markup.Content(Span, Span.InlinesProperty);\r\n}","/// <reference path=\"Span.ts\" />\r\n\r\nmodule Fayde.Documents {\r\n    export class Underline extends Span {\r\n    }\r\n    Fayde.CoreLibrary.add(Underline);\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n\r\ninterface ITimeline {\r\n    Update(nowTime: number);\r\n}\r\n\r\nmodule Fayde {\r\n    export class Application extends DependencyObject implements IResourcable, ITimerListener {\r\n        static Current: Application;\r\n        MainSurface: Surface;\r\n        Loaded = new nullstone.Event();\r\n        Address: Uri = null;\r\n        AllowNavigation = true;\r\n        private _IsRunning: boolean = false;\r\n        private _IsLoaded = false;\r\n        private _Storyboards: ITimeline[] = [];\r\n        private _ClockTimer: ClockTimer = new ClockTimer();\r\n        private _RootVisual: UIElement = null;\r\n\r\n        static ResourcesProperty = DependencyProperty.RegisterImmutable<ResourceDictionary>(\"Resources\", () => ResourceDictionary, Application);\r\n        static ThemeNameProperty = DependencyProperty.Register(\"ThemeName\", () => String, Application, \"Default\", (d: Application, args) => d.OnThemeNameChanged(args));\r\n        Resources: ResourceDictionary;\r\n        ThemeName: string;\r\n\r\n        private OnThemeNameChanged (args: DependencyPropertyChangedEventArgs) {\r\n            if (!this._IsLoaded)\r\n                return;\r\n            ThemeManager.LoadAsync(args.NewValue)\r\n                .then(() => this._ApplyTheme(),\r\n                    err => console.error(\"Could not load theme.\", err));\r\n        }\r\n\r\n        private _ApplyTheme () {\r\n            for (var walker = this.MainSurface.walkLayers(); walker.step();) {\r\n                for (var subwalker = walker.current.walkDeep(); subwalker.step();) {\r\n                    var node = subwalker.current.getAttachedValue(\"$node\");\r\n                    Providers.ImplicitStyleBroker.Set(<FrameworkElement>node.XObject, Providers.StyleMask.Theme);\r\n                }\r\n            }\r\n        }\r\n\r\n        Resized = new RoutedEvent<SizeChangedEventArgs>();\r\n\r\n        OnResized (oldSize: minerva.Size, newSize: minerva.Size) {\r\n            this.Resized.raise(this, new SizeChangedEventArgs(oldSize, newSize));\r\n        }\r\n\r\n        constructor () {\r\n            super();\r\n            this.XamlNode.NameScope = new NameScope(true);\r\n            var rd = Application.ResourcesProperty.Initialize(this);\r\n            this.MainSurface = new Surface(this);\r\n            this.Address = new Uri(document.URL);\r\n        }\r\n\r\n        get RootVisual (): UIElement {\r\n            for (var walker = this.MainSurface.walkLayers(); walker.step();) {\r\n                var node = walker.current.getAttachedValue(\"$node\");\r\n                return node.XObject;\r\n            }\r\n        }\r\n\r\n        $$SetRootVisual (value: UIElement) {\r\n            this._RootVisual = value;\r\n        }\r\n\r\n        Attach (canvas: HTMLCanvasElement) {\r\n            this.MainSurface.init(canvas);\r\n            this.MainSurface.Attach(this._RootVisual, true);\r\n        }\r\n\r\n        Start () {\r\n            this.Update();\r\n            this.Render();\r\n            this._ClockTimer.RegisterTimer(this);\r\n            this._IsLoaded = true;\r\n            this.Loaded.raiseAsync(this, null);\r\n        }\r\n\r\n        OnTicked (lastTime: number, nowTime: number) {\r\n            this.ProcessStoryboards(lastTime, nowTime);\r\n            this.Update();\r\n            this.Render();\r\n        }\r\n\r\n        private StopEngine () {\r\n            this._ClockTimer.UnregisterTimer(this);\r\n        }\r\n\r\n        private ProcessStoryboards (lastTime: number, nowTime: number) {\r\n            perfex.timer.start('StoryboardsProcess', this);\r\n            for (var i = 0, sbs = this._Storyboards; i < sbs.length; i++) {\r\n                sbs[i].Update(nowTime);\r\n            }\r\n            perfex.timer.stop();\r\n        }\r\n\r\n        private Update () {\r\n            if (this._IsRunning)\r\n                return;\r\n            this._IsRunning = true;\r\n            perfex.timer.start('UpdateLayout', this);\r\n            var updated = this.MainSurface.updateLayout();\r\n            perfex.timer.stop();\r\n            this._IsRunning = false;\r\n        }\r\n\r\n        private Render () {\r\n            perfex.timer.start('Render', this);\r\n            this.MainSurface.render();\r\n            perfex.timer.stop();\r\n        }\r\n\r\n        RegisterStoryboard (storyboard: ITimeline) {\r\n            var sbs = this._Storyboards;\r\n            var index = sbs.indexOf(storyboard);\r\n            if (index === -1)\r\n                sbs.push(storyboard);\r\n        }\r\n\r\n        UnregisterStoryboard (storyboard: ITimeline) {\r\n            var sbs = this._Storyboards;\r\n            var index = sbs.indexOf(storyboard);\r\n            if (index !== -1)\r\n                sbs.splice(index, 1);\r\n        }\r\n\r\n        static GetAsync (url: string): nullstone.async.IAsyncRequest<Application> {\r\n            return nullstone.async.create((resolve, reject) => {\r\n                Markup.Resolve(url)\r\n                    .then(appm => {\r\n                        TimelineProfile.Parse(true, \"App\");\r\n                        var app = Markup.Load<Application>(null, appm);\r\n                        TimelineProfile.Parse(false, \"App\");\r\n                        if (!(app instanceof Application))\r\n                            reject(\"Markup must be an Application.\");\r\n                        else\r\n                            resolve(app);\r\n                    }, reject);\r\n            });\r\n        }\r\n\r\n        Resolve (): nullstone.async.IAsyncRequest<Application> {\r\n            return nullstone.async.create((resolve, reject) => {\r\n                //TODO: Resolve theme\r\n                resolve(this);\r\n            });\r\n\r\n            /*\r\n             var d = defer<Application>();\r\n\r\n             var lib = Library.Get(\"lib:Fayde\");\r\n             lib.Resolve({ThemeName: this.ThemeName || \"Default\", Resolving: []})\r\n             .success(lib => {\r\n             this._CoreLibrary = lib;\r\n             d.resolve(this);\r\n             })\r\n             .error(d.reject);\r\n\r\n             return d.request;\r\n             */\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Application);\r\n}","\r\nmodule Fayde {\r\n    export interface ITimerListener {\r\n        OnTicked(lastTime: number, nowTime: number);\r\n    }\r\n\r\n    var requestAnimFrame = (function () {\r\n        return window.requestAnimationFrame ||\r\n            (<any>window).webkitRequestAnimationFrame ||\r\n            (<any>window).mozRequestAnimationFrame ||\r\n            (<any>window).oRequestAnimationFrame ||\r\n            window.msRequestAnimationFrame ||\r\n            function (callback) {\r\n                window.setTimeout(callback, 1000 / 200);\r\n            };\r\n    })();\r\n\r\n    export class ClockTimer {\r\n        private _Listeners: Fayde.ITimerListener[] = [];\r\n        private _LastTime: number = 0;\r\n\r\n        RegisterTimer(listener: Fayde.ITimerListener) {\r\n            var ls = this._Listeners;\r\n            var index = ls.indexOf(listener);\r\n            if (index > -1)\r\n                return;\r\n            ls.push(listener);\r\n            if (ls.length === 1)\r\n                this._RequestAnimationTick();\r\n        }\r\n        UnregisterTimer(listener: Fayde.ITimerListener) {\r\n            var ls = this._Listeners;\r\n            var index = ls.indexOf(listener);\r\n            if (index > -1)\r\n                ls.splice(index, 1);\r\n        }\r\n        private _DoTick() {\r\n            var nowTime = new Date().getTime();\r\n            var lastTime = this._LastTime;\r\n            this._LastTime = nowTime;\r\n\r\n            var ls = this._Listeners;\r\n            var len = ls.length;\r\n            if (len === 0)\r\n                return;\r\n            for (var i = 0; i < len; i++) {\r\n                ls[i].OnTicked(lastTime, nowTime);\r\n            }\r\n            this._RequestAnimationTick();\r\n        }\r\n        private _RequestAnimationTick() {\r\n            requestAnimFrame(() => this._DoTick());\r\n        }\r\n    }\r\n}","class Exception {\r\n    Message: string;\r\n    constructor(message: string) {\r\n        this.Message = message;\r\n    }\r\n    toString(): string {\r\n        var typeName = (<any>this).constructor.name;\r\n        if (typeName)\r\n            return typeName + \": \" + this.Message;\r\n        return this.Message;\r\n    }\r\n}\r\n\r\nclass ArgumentException extends Exception {\r\n    constructor(message: string) {\r\n        super(message);\r\n    }\r\n}\r\n\r\nclass ArgumentNullException extends Exception {\r\n    constructor(message: string) {\r\n        super(message);\r\n    }\r\n}\r\n\r\nclass InvalidOperationException extends Exception {\r\n    constructor(message: string) {\r\n        super(message);\r\n    }\r\n}\r\n\r\nclass XamlParseException extends Exception {\r\n    constructor(message: string) {\r\n        super(message);\r\n    }\r\n}\r\n\r\nclass XamlMarkupParseException extends Exception {\r\n    constructor(message: string) {\r\n        super(message);\r\n    }\r\n}\r\n\r\nclass NotSupportedException extends Exception {\r\n    constructor(message: string) {\r\n        super(message);\r\n    }\r\n}\r\n\r\nclass IndexOutOfRangeException extends Exception {\r\n    constructor(index: number) {\r\n        super(index.toString());\r\n    }\r\n}\r\n\r\nclass ArgumentOutOfRangeException extends Exception {\r\n    constructor(msg: string) {\r\n        super(msg);\r\n    }\r\n}\r\n\r\nclass AttachException extends Exception {\r\n    Data: any;\r\n    constructor(message: string, data: any) {\r\n        super(message);\r\n        this.Data = data;\r\n    }\r\n}\r\n\r\nclass InvalidJsonException extends Exception {\r\n    JsonText: string;\r\n    InnerException: Error;\r\n    constructor(jsonText: string, innerException: Error) {\r\n        super(\"Invalid json.\");\r\n        this.JsonText = jsonText;\r\n        this.InnerException = innerException;\r\n    }\r\n}\r\n\r\nclass TargetInvocationException extends Exception {\r\n    InnerException: Exception;\r\n    constructor(message: string, innerException: Exception) {\r\n        super(message);\r\n        this.InnerException = innerException;\r\n    }\r\n}\r\n\r\nclass UnknownTypeException extends Exception {\r\n    FullTypeName: string;\r\n    constructor(fullTypeName: string) {\r\n        super(fullTypeName);\r\n        this.FullTypeName = fullTypeName;\r\n    }\r\n}\r\n\r\nclass FormatException extends Exception {\r\n    constructor(message: string) {\r\n        super(message);\r\n    }\r\n}","\r\nmodule Fayde.Engine {\r\n    interface IFocusChangedEvents {\r\n        GotFocus: Fayde.UINode[];\r\n        LostFocus: Fayde.UINode[];\r\n    }\r\n\r\n    export class FocusManager {\r\n        private _State: IInputState;\r\n        private _ChangedEvents: IFocusChangedEvents[] = [];\r\n        Node: UINode;\r\n\r\n        constructor(state: IInputState) {\r\n            this._State = state;\r\n        }\r\n        \r\n        GetFocusToRoot():UINode[] {\r\n            if (!this.Node)\r\n                return null;\r\n            return elementPathToRoot(this.Node);\r\n        }\r\n\r\n        OnNodeDetached(node: UINode) {\r\n            var f = this.Node;\r\n            while (f) {\r\n                if (f === node) {\r\n                    this._FocusNode();\r\n                    return;\r\n                }\r\n                f = f.VisualParentNode;\r\n            }\r\n        }\r\n\r\n        TabFocus(isShift: boolean) {\r\n            if (!this.Node)\r\n                return false;\r\n            Fayde.TabNavigationWalker.Focus(this.Node, !isShift);\r\n            return true;\r\n        }\r\n        Focus(ctrlNode: Fayde.Controls.ControlNode, recurse?: boolean): boolean {\r\n            recurse = recurse === undefined || recurse === true;\r\n            if (!ctrlNode.IsAttached)\r\n                return false;\r\n\r\n            var walker = Fayde.DeepTreeWalker(ctrlNode);\r\n            var uin: Fayde.UINode;\r\n            while (uin = walker.Step()) {\r\n                if (uin.XObject.Visibility !== Fayde.Visibility.Visible) {\r\n                    walker.SkipBranch();\r\n                    continue;\r\n                }\r\n\r\n                if (!(uin instanceof Fayde.Controls.ControlNode))\r\n                    continue;\r\n\r\n                var cn = <Fayde.Controls.ControlNode>uin;\r\n                var c = cn.XObject;\r\n                if (!c.IsEnabled) {\r\n                    if (!recurse)\r\n                        return false;\r\n                    walker.SkipBranch();\r\n                    continue;\r\n                }\r\n\r\n                var loaded = ctrlNode.IsLoaded;\r\n                var check: Fayde.UINode = ctrlNode;\r\n                while (!loaded && (check = check.VisualParentNode)) {\r\n                    loaded = loaded || check.IsLoaded;\r\n                }\r\n\r\n                if (loaded && cn.LayoutUpdater.assets.totalIsRenderVisible && c.IsTabStop)\r\n                    return this._FocusNode(cn);\r\n\r\n                if (!recurse)\r\n                    return false;\r\n            }\r\n            return false;\r\n        }\r\n        private _FocusNode(uin?: Fayde.UINode) {\r\n            if (uin === this.Node)\r\n                return true;\r\n            var fn = this.Node;\r\n            if (fn) {\r\n                this._ChangedEvents.push({\r\n                    LostFocus: elementPathToRoot(fn),\r\n                    GotFocus: null\r\n                });\r\n            }\r\n            this.Node = uin;\r\n            if (uin) {\r\n                this._ChangedEvents.push({\r\n                    LostFocus: null,\r\n                    GotFocus: elementPathToRoot(uin)\r\n                });\r\n            }\r\n\r\n            if (this._State.IsFirstUserInitiated)\r\n                this.EmitChangesAsync();\r\n\r\n            return true;\r\n        }\r\n\r\n        EmitChanges() {\r\n            var evts = this._ChangedEvents;\r\n            var cur;\r\n            while (cur = evts.shift()) {\r\n                this._EmitFocusList(\"lost\", cur.LostFocus);\r\n                this._EmitFocusList(\"got\", cur.GotFocus);\r\n            }\r\n        }\r\n        EmitChangesAsync() {\r\n            setTimeout(() => this.EmitChanges(), 1);\r\n        }\r\n        private _EmitFocusList(type: string, list: UINode[]) {\r\n            if (!list)\r\n                return;\r\n            var cur;\r\n            while (cur = list.shift()) {\r\n                cur._EmitFocusChange(type);\r\n            }\r\n        }\r\n        \r\n        FocusAnyLayer(walker: minerva.IWalker<minerva.core.Updater>) {\r\n            if (!this.Node) {\r\n                var top: UINode;\r\n                for (var node;walker.step();) {\r\n                    node = walker.current.getAttachedValue(\"$node\");\r\n                    if (!top)\r\n                        top = node;\r\n                    if (Fayde.TabNavigationWalker.Focus(node))\r\n                        break;\r\n                }\r\n                if (!this.Node && top)\r\n                    this._FocusNode(top);\r\n            }\r\n            if (this._State.IsFirstUserInitiated)\r\n                this.EmitChangesAsync();\r\n        }\r\n    }\r\n\r\n    function elementPathToRoot(source: UINode): UINode[] {\r\n        var list: UINode[] = [];\r\n        while (source) {\r\n            list.push(source);\r\n            source = source.VisualParentNode;\r\n        }\r\n        return list;\r\n    }\r\n}","\r\nmodule Fayde.Engine {\r\n    interface IFocusData {\r\n        Node: UINode;\r\n    }\r\n\r\n    export interface IInputState {\r\n        IsUserInitiated: boolean;\r\n        IsFirstUserInitiated: boolean;\r\n    }\r\n\r\n    export class InputManager {\r\n        private _Surface: Surface;\r\n        private _KeyInterop: Fayde.Input.IKeyInterop;\r\n        private _MouseInterop: Fayde.Input.IMouseInterop;\r\n        private _TouchInterop: Fayde.Input.ITouchInterop;\r\n        private _Focus: FocusManager;\r\n        private _State: IInputState;\r\n        private _Cursor: CursorType = Fayde.CursorType.Default;\r\n        SetCursor: (cursor: CursorType) => void = (cursor) => { };\r\n\r\n        private _CurrentPos: Point = null;\r\n        private _EmittingMouseEvent: boolean = false;\r\n        private _InputList: Fayde.UINode[] = [];\r\n        private _Captured: Fayde.UINode = null;\r\n        private _PendingCapture: Fayde.UINode = null;\r\n        private _PendingReleaseCapture: boolean = false;\r\n        private _CapturedInputList: Fayde.UINode[] = [];\r\n\r\n        get FocusedNode(): UINode { return this._Focus.Node; }\r\n        Focus(node: Controls.ControlNode, recurse?: boolean) { return this._Focus.Focus(node, recurse); }\r\n\r\n        constructor(surface: Surface) {\r\n            this._Surface = surface;\r\n            this._KeyInterop = Fayde.Input.CreateKeyInterop();\r\n            this._MouseInterop = Fayde.Input.CreateMouseInterop();\r\n            this._TouchInterop = Fayde.Input.CreateTouchInterop();\r\n\r\n            this._Focus = new FocusManager(this._State = {\r\n                IsUserInitiated: false,\r\n                IsFirstUserInitiated: false\r\n            });\r\n        }\r\n\r\n        Register(canvas: HTMLCanvasElement) {\r\n            this.SetCursor = (cursor) => canvas.style.cursor = CursorTypeMappings[CursorType[this._Cursor = cursor]];\r\n\r\n            this._KeyInterop.RegisterEvents(this);\r\n            this._MouseInterop.RegisterEvents(this, canvas);\r\n            this._TouchInterop.Register(this, canvas);\r\n        }\r\n\r\n        OnNodeDetached(node: UINode) {\r\n            var il = this._InputList;\r\n            if (il[il.length - 1] === node)\r\n                this._InputList = [];\r\n            this._Focus.OnNodeDetached(node);\r\n        }\r\n\r\n        SetIsUserInitiatedEvent(value: boolean) {\r\n            this._Focus.EmitChanges()\r\n            this._State.IsFirstUserInitiated = this._State.IsFirstUserInitiated || value;\r\n            this._State.IsUserInitiated = value;\r\n        }\r\n\r\n        HandleKeyDown(args: Input.KeyEventArgs) {\r\n            this.SetIsUserInitiatedEvent(true);\r\n            Input.Keyboard.RefreshModifiers(args.Modifiers);\r\n            var focusToRoot = this._Focus.GetFocusToRoot();\r\n            if (focusToRoot)\r\n                this._EmitKeyDown(focusToRoot, args);\r\n            if (!args.Handled && args.Key === Input.Key.Tab) {\r\n                if (!this._Focus.TabFocus(args.Modifiers.Shift))\r\n                    this._Focus.FocusAnyLayer(this._Surface.walkLayers(true));\r\n                args.Handled = true;\r\n            }\r\n            this.SetIsUserInitiatedEvent(false);\r\n        }\r\n        private _EmitKeyDown(list: UINode[], args: Input.KeyEventArgs, endIndex?: number) {\r\n            if (endIndex === 0)\r\n                return;\r\n            if (!endIndex || endIndex === -1)\r\n                endIndex = list.length;\r\n\r\n            var i = 0;\r\n            var cur = list.shift();\r\n            while (cur && i < endIndex) {\r\n                cur._EmitKeyDown(args);\r\n                cur = list.shift();\r\n                i++;\r\n            }\r\n        }\r\n\r\n        HandleMousePress(button: number, pos: Point): boolean {\r\n            this.SetIsUserInitiatedEvent(true);\r\n            var handled = this.HandleMouseEvent(Input.MouseInputType.MouseDown, button, pos);\r\n            this.UpdateCursorFromInputList();\r\n            this.SetIsUserInitiatedEvent(false);\r\n            return handled;\r\n        }\r\n        HandleMouseRelease(button: number, pos: Point) {\r\n            this.SetIsUserInitiatedEvent(true);\r\n            this.HandleMouseEvent(Input.MouseInputType.MouseUp, button, pos);\r\n            this.UpdateCursorFromInputList();\r\n            this.SetIsUserInitiatedEvent(false);\r\n            if (this._Captured)\r\n                this._PerformReleaseCapture();\r\n        }\r\n        HandleMouseEvent(type: Input.MouseInputType, button: number, pos: Point, delta?: number, emitLeave?: boolean, emitEnter?: boolean): boolean {\r\n            this._CurrentPos = pos;\r\n            if (this._EmittingMouseEvent)\r\n                return false;\r\n\r\n            var newInputList = this.HitTestPoint(pos);\r\n            if (!newInputList)\r\n                return false;\r\n\r\n            this._EmittingMouseEvent = true;\r\n\r\n            var indices = { Index1: -1, Index2: -1 };\r\n            findFirstCommonElement(this._InputList, newInputList, indices);\r\n            if (emitLeave === undefined || emitLeave === true)\r\n                this._EmitMouseList(Input.MouseInputType.MouseLeave, button, pos, delta, this._InputList, indices.Index1);\r\n            if (emitEnter === undefined || emitEnter === true)\r\n                this._EmitMouseList(Input.MouseInputType.MouseEnter, button, pos, delta, newInputList, indices.Index2);\r\n\r\n            var handled = false;\r\n            if (type !== Input.MouseInputType.NoOp)\r\n                handled = this._EmitMouseList(type, button, pos, delta, this._Captured ? this._CapturedInputList : newInputList);\r\n            this._InputList = newInputList;\r\n\r\n            if (this._Surface.HitTestCallback)\r\n                this._Surface.HitTestCallback(newInputList);\r\n\r\n            if (this._PendingCapture)\r\n                this._PerformCapture(this._PendingCapture);\r\n            if (this._PendingReleaseCapture || (this._Captured && !this._Captured.CanCaptureMouse()))\r\n                this._PerformReleaseCapture();\r\n            this._EmittingMouseEvent = false;\r\n            return handled;\r\n        }\r\n        private _EmitMouseList(type: Input.MouseInputType, button: number, pos: Point, delta: number, list: Fayde.UINode[], endIndex?: number): boolean {\r\n            var handled = false;\r\n            if (endIndex === 0)\r\n                return handled;\r\n            if (!endIndex || endIndex === -1)\r\n                endIndex = list.length;\r\n            var args = this._MouseInterop.CreateEventArgs(type, pos, delta);\r\n            var node = list[0];\r\n            if (node && args instanceof Fayde.RoutedEventArgs)\r\n                args.Source = node.XObject;\r\n            var isL = this._MouseInterop.IsLeftButton(button);\r\n            var isR = this._MouseInterop.IsRightButton(button);\r\n            if (Fayde.Engine.Inspection.TryHandle(type, isL, isR, args, list))\r\n                return true;\r\n            for (var i = 0; i < endIndex; i++) {\r\n                node = list[i];\r\n                if (type === Input.MouseInputType.MouseLeave)\r\n                    args.Source = node.XObject;\r\n                if (node._EmitMouseEvent(type, isL, isR, args))\r\n                    handled = true;\r\n                if (type === Input.MouseInputType.MouseLeave) //MouseLeave gets new event args on each emit\r\n                    args = this._MouseInterop.CreateEventArgs(type, pos, delta);\r\n            }\r\n            return handled;\r\n        }\r\n\r\n        HitTestPoint(pos: Point): UINode[] {\r\n            return this._Surface.hitTest(pos).map(upd => upd.getAttachedValue(\"$node\"));\r\n        }\r\n\r\n        UpdateCursorFromInputList() {\r\n            var newCursor = Fayde.CursorType.Default;\r\n            var list = this._Captured ? this._CapturedInputList : this._InputList;\r\n            var len = list.length;\r\n            for (var i = 0; i < len; i++) {\r\n                newCursor = list[i].XObject.Cursor;\r\n                if (newCursor !== Fayde.CursorType.Default)\r\n                    break;\r\n            }\r\n            this.SetCursor(newCursor);\r\n        }\r\n        SetMouseCapture(uin: Fayde.UINode): boolean {\r\n            if (this._Captured || this._PendingCapture)\r\n                return uin === this._Captured || uin === this._PendingCapture;\r\n            if (!this._EmittingMouseEvent)\r\n                return false;\r\n            this._PendingCapture = uin;\r\n            return true;\r\n        }\r\n        ReleaseMouseCapture(uin: Fayde.UINode) {\r\n            if (uin !== this._Captured && uin !== this._PendingCapture)\r\n                return;\r\n            if (this._EmittingMouseEvent)\r\n                this._PendingReleaseCapture = true;\r\n            else\r\n                this._PerformReleaseCapture();\r\n        }\r\n        private _PerformCapture(uin: Fayde.UINode) {\r\n            this._Captured = uin;\r\n            var newInputList = [];\r\n            while (uin != null) {\r\n                newInputList.push(uin);\r\n                uin = uin.VisualParentNode;\r\n            }\r\n            this._CapturedInputList = newInputList;\r\n            this._PendingCapture = null;\r\n        }\r\n        private _PerformReleaseCapture() {\r\n            var oldCaptured = this._Captured;\r\n            this._Captured = null;\r\n            this._PendingReleaseCapture = false;\r\n            oldCaptured._EmitLostMouseCapture(this._CurrentPos);\r\n            //force \"MouseEnter\" on any new elements\r\n            this.HandleMouseEvent(Input.MouseInputType.NoOp, null, this._CurrentPos, undefined, false, true);\r\n        }\r\n    }\r\n\r\n    interface ICommonElementIndices {\r\n        Index1: number;\r\n        Index2: number;\r\n    }\r\n    function findFirstCommonElement(list1: Fayde.UINode[], list2: Fayde.UINode[], outObj: ICommonElementIndices) {\r\n        var i = list1.length - 1;\r\n        var j = list2.length - 1;\r\n        outObj.Index1 = -1;\r\n        outObj.Index2 = -1;\r\n        while (i >= 0 && j >= 0) {\r\n            if (list1[i] !== list2[j])\r\n                return;\r\n            outObj.Index1 = i--;\r\n            outObj.Index2 = j--;\r\n        }\r\n    }\r\n}","module Fayde.Engine {\r\n    export class Inspection {\r\n        //Ctrl+Right Click to show context menu\r\n        static TryHandle(type: Input.MouseInputType, isLeftButton: boolean, isRightButton: boolean, args: Input.MouseEventArgs, htlist: UINode[]): boolean {\r\n            if (!Fayde.IsInspectionOn)\r\n                return false;\r\n            if (type !== Input.MouseInputType.MouseDown)\r\n                return false;\r\n            if (!isRightButton)\r\n                return false;\r\n            if (!Input.Keyboard.HasControl())\r\n                return false;\r\n            var pos = args.AbsolutePos;\r\n            showMenu(pos, htlist);\r\n            return true;\r\n        }\r\n        static Kill() {\r\n            if (menu)\r\n                menu.style.display = \"none\";\r\n        }\r\n    }\r\n    \r\n    var menu: HTMLDivElement = null;\r\n    function showMenu(pos: Point, htlist: UINode[]) {\r\n        menu = menu || createMenu();\r\n        fillMenu(htlist);\r\n        menu.style.left = pos.x.toString() + \"px\";\r\n        menu.style.top = pos.y.toString() + \"px\";\r\n        menu.style.display = \"\";\r\n    }\r\n    function createMenu(): HTMLDivElement {\r\n        var m = document.createElement(\"div\");\r\n        m.style.position = \"absolute\";\r\n        m.style.display = \"none\";\r\n        m.style.backgroundColor = \"rgba(128,128,128,1.0)\";\r\n        m.style.padding = \"5px\";\r\n        m.style.fontFamily = \"Tahoma\";\r\n        m.oncontextmenu = () => false;\r\n        document.body.appendChild(m);\r\n        return m;\r\n    }\r\n    function fillMenu(htlist: UINode[]) {\r\n        menu.innerHTML = \"\";\r\n        var len = htlist.length;\r\n        for (var i = 0; i < len; i++) {\r\n            menu.appendChild(createMenuItem(htlist[i]));\r\n        }\r\n    }\r\n    function createMenuItem(cur: UINode) {\r\n        var miDiv = document.createElement(\"div\");\r\n        miDiv.style.cursor = \"pointer\";\r\n        miDiv.innerHTML = serializeUINode(cur);\r\n        miDiv.onclick = () => handleMenuItemClick(cur);\r\n        miDiv.onmouseenter = () => handleMenuItemEnter(miDiv);\r\n        miDiv.onmouseleave = () => handleMenuItemLeave(miDiv);\r\n        return miDiv;\r\n    }\r\n    function serializeUINode(uin: UINode): string {\r\n        var cur = uin.XObject;\r\n\r\n        var str = \"\";\r\n\r\n        var id = (<any>cur)._ID;\r\n        if (id) str += \"[\" + id + \"] \";\r\n        str += (<any>cur).constructor.name;\r\n        \r\n        var name = uin.Name;\r\n        if (name) {\r\n            str += \" [\";\r\n            var ns = uin.NameScope;\r\n            if (!ns)\r\n                str += \"^\";\r\n            else if (ns.IsRoot)\r\n                str += \"+\";\r\n            else\r\n                str += \"-\";\r\n            str += name + \"]\";\r\n        }\r\n\r\n        return str;\r\n    }\r\n    function handleMenuItemClick(uin: UINode) {\r\n        menu.style.display = \"none\";\r\n    }\r\n    function handleMenuItemEnter(mi: HTMLDivElement) {\r\n        mi.style.textDecoration = \"underline\";\r\n    }\r\n    function handleMenuItemLeave(mi: HTMLDivElement) {\r\n        mi.style.textDecoration = \"none\";\r\n    }\r\n}","var resizeTimeout: number;\r\n\r\nmodule Fayde {\r\n    export class Surface extends minerva.engine.Surface {\r\n        App: Application;\r\n        private $$root: UIElement = null;\r\n        private $$inputMgr: Engine.InputManager;\r\n\r\n        HitTestCallback: (inputList: Fayde.UINode[]) => void;\r\n\r\n        constructor (app: Application) {\r\n            super();\r\n            Object.defineProperty(this, \"App\", {value: app, writable: false});\r\n            this.$$inputMgr = new Engine.InputManager(this);\r\n        }\r\n\r\n        init (canvas: HTMLCanvasElement) {\r\n            super.init(canvas);\r\n\r\n            this.$$stretchCanvas();\r\n            (<any>document.body).onresize = (e) => this.$$handleResize(window.event ? <any>window.event : e);\r\n            window.onresize = (e) => this.$$handleResize(window.event ? <any>window.event : e);\r\n\r\n            this.$$inputMgr.Register(canvas);\r\n        }\r\n\r\n        Attach (uie: UIElement, root?: boolean) {\r\n            if (root === true) {\r\n                if (!(uie instanceof UIElement))\r\n                    throw new Exception(\"Unsupported top level element.\");\r\n                if (this.$$root)\r\n                    this.detachLayer(this.$$root.XamlNode.LayoutUpdater);\r\n                this.$$root = uie;\r\n            }\r\n            this.attachLayer(uie.XamlNode.LayoutUpdater, root);\r\n        }\r\n\r\n        attachLayer (layer: minerva.core.Updater, root?: boolean) {\r\n            super.attachLayer(layer, root);\r\n            var node = <UINode>layer.getAttachedValue(\"$node\");\r\n            node.SetIsLoaded(true);\r\n            node.SetIsAttached(true);\r\n        }\r\n\r\n        Detach (uie: UIElement) {\r\n            this.detachLayer(uie.XamlNode.LayoutUpdater);\r\n        }\r\n\r\n        detachLayer (layer: minerva.core.Updater) {\r\n            var node = <UINode>layer.getAttachedValue(\"$node\");\r\n            node.SetIsLoaded(false);\r\n            node.SetIsAttached(false);\r\n            super.detachLayer(layer);\r\n        }\r\n\r\n        updateLayout (): boolean {\r\n            var updated = super.updateLayout();\r\n            if (updated)\r\n                this.$$onLayoutUpdated();\r\n            return updated;\r\n        }\r\n\r\n        private $$onLayoutUpdated () {\r\n            for (var walker = this.walkLayers(); walker.step();) {\r\n                for (var subwalker = walker.current.walkDeep(); subwalker.step();) {\r\n                    var upd = subwalker.current;\r\n                    var node = upd.getAttachedValue(\"$node\");\r\n                    var xobj = node.XObject;\r\n                    xobj.LayoutUpdated.raise(xobj, null);\r\n                }\r\n            }\r\n        }\r\n\r\n        Focus (node: Controls.ControlNode, recurse?: boolean): boolean {\r\n            return this.$$inputMgr.Focus(node, recurse);\r\n        }\r\n\r\n        static HasFocus (uie: UIElement): boolean {\r\n            var uin = uie.XamlNode;\r\n            var surface = <Surface>uin.LayoutUpdater.tree.surface;\r\n            if (!surface)\r\n                return false;\r\n            var curNode = surface.$$inputMgr.FocusedNode;\r\n            while (curNode) {\r\n                if (curNode === uin)\r\n                    return true;\r\n                curNode = curNode.VisualParentNode;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        static Focus (uie: Controls.Control, recurse?: boolean): boolean {\r\n            var uin = uie.XamlNode;\r\n            var surface = <Surface>uin.LayoutUpdater.tree.surface;\r\n            if (!surface)\r\n                return false;\r\n            return surface.$$inputMgr.Focus(uin, recurse);\r\n        }\r\n\r\n        static GetFocusedElement (uie: UIElement): UIElement {\r\n            var uin = uie.XamlNode;\r\n            var surface = <Surface>uin.LayoutUpdater.tree.surface;\r\n            if (!surface)\r\n                return null;\r\n            var curNode = surface.$$inputMgr.FocusedNode;\r\n            return curNode.XObject;\r\n        }\r\n\r\n        static RemoveFocusFrom (uie: UIElement): boolean {\r\n            var node = uie.XamlNode;\r\n            var surface = <Surface>node.LayoutUpdater.tree.surface;\r\n            if (!surface)\r\n                return false;\r\n            surface.$$inputMgr.OnNodeDetached(node);\r\n            return true;\r\n        }\r\n\r\n        static SetMouseCapture (uin: Fayde.UINode): boolean {\r\n            var surface = <Surface>uin.LayoutUpdater.tree.surface;\r\n            if (!surface)\r\n                return false;\r\n            return surface.$$inputMgr.SetMouseCapture(uin);\r\n        }\r\n\r\n        static ReleaseMouseCapture (uin: Fayde.UINode) {\r\n            var surface = <Surface>uin.LayoutUpdater.tree.surface;\r\n            if (!surface)\r\n                return;\r\n            surface.$$inputMgr.ReleaseMouseCapture(uin);\r\n        }\r\n\r\n        private $$handleResize (evt) {\r\n            if (resizeTimeout)\r\n                clearTimeout(resizeTimeout);\r\n            resizeTimeout = setTimeout(() => {\r\n                this.$$stretchCanvas();\r\n                resizeTimeout = null;\r\n            }, 15);\r\n        }\r\n\r\n        private $$stretchCanvas () {\r\n            this.resize(window.innerWidth, window.innerHeight);\r\n        }\r\n    }\r\n}","module Fayde {\r\n    export class Theme {\r\n        Name: string;\r\n        LibraryUri: Uri;\r\n        Resources: ResourceDictionary = null;\r\n\r\n        static WarnMissing = false;\r\n\r\n        constructor (name: string, libUri: Uri) {\r\n            this.Name = name;\r\n            this.LibraryUri = libUri;\r\n        }\r\n\r\n        LoadAsync (): nullstone.async.IAsyncRequest<Theme> {\r\n            var reqUri = ThemeConfig.GetRequestUri(this.LibraryUri, this.Name);\r\n            if (!reqUri)\r\n                return nullstone.async.resolve(this);\r\n            return nullstone.async.create((resolve, reject) => {\r\n                Markup.Resolve(reqUri)\r\n                    .then(md => {\r\n                        var rd = Markup.Load<ResourceDictionary>(null, md);\r\n                        if (!(rd instanceof ResourceDictionary))\r\n                            reject(new Error(\"Theme root must be a ResourceDictionary.\"));\r\n                        Object.defineProperty(this, \"Resources\", {value: rd, writable: false});\r\n                        resolve(this);\r\n                    }, () => {\r\n                        if (Theme.WarnMissing)\r\n                            console.warn(\"Failed to load Theme. [\" + this.LibraryUri + \"][\" + this.Name + \"]\");\r\n                        resolve(this);\r\n                    });\r\n            });\r\n        }\r\n\r\n        GetImplicitStyle (type: any): Style {\r\n            var rd = this.Resources;\r\n            if (!rd)\r\n                return undefined;\r\n            var style = <Style>rd.Get(type);\r\n            if (style instanceof Style)\r\n                return style;\r\n            return undefined;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Theme);\r\n}","module Fayde {\r\n    export module ThemeConfig {\r\n        var configs = {};\r\n\r\n        var DEFAULT_TEMPLATE_URI = \"lib/<libname>/themes/<themename>.Theme.xml\";\r\n\r\n        export function GetRequestUri (uri: Uri, name: string): string {\r\n            if (Uri.isNullOrEmpty(uri))\r\n                return null;\r\n            var config = configs[uri.toString()];\r\n            if (config && config.none)\r\n                return null;\r\n            var templateUri = ((config) ? config.requestTemplateUri : null) || DEFAULT_TEMPLATE_URI;\r\n            return processTemplate(uri, name, templateUri);\r\n        }\r\n\r\n        export function OverrideRequestUri (uri: Uri, templateUri: string) {\r\n            configs[uri.toString()] = {\r\n                requestTemplateUri: templateUri\r\n            };\r\n        }\r\n\r\n        export function Set (libName: string, path: string) {\r\n            //NOTE:\r\n            //  path === undefined  --> use default\r\n            //  path === null       --> don't load theme\r\n            //  other               --> use path as template\r\n            if (!libName) {\r\n                console.warn(\"Could not configure theme. No library specified.\");\r\n                return;\r\n            }\r\n            var uri = new Uri(libName);\r\n            if (uri.scheme !== \"http\")\r\n                uri = new Uri(\"lib://\" + libName);\r\n\r\n            if (path === undefined)\r\n                configs[uri.toString()] = null;\r\n            else if (path === null)\r\n                configs[uri.toString()] = {\r\n                    none: true\r\n                };\r\n            else\r\n                configs[uri.toString()] = {\r\n                    requestTemplateUri: path\r\n                };\r\n        }\r\n\r\n        function processTemplate (uri: Uri, name: string, template: string): string {\r\n            var libName = uri.host;\r\n            var rv = template;\r\n            rv = rv.replace(\"<libname>\", libName);\r\n            rv = rv.replace(\"<themename>\", name);\r\n            return rv;\r\n        }\r\n\r\n        OverrideRequestUri(new Uri(Fayde.XMLNS), \"lib/fayde/themes/<themename>.theme.xml\");\r\n    }\r\n}","module Fayde {\r\n    export interface IThemeManager {\r\n        LoadAsync (themeName: string): nullstone.async.IAsyncRequest<any>;\r\n        FindStyle(defaultStyleKey: any): Style;\r\n    }\r\n    class ThemeManagerImpl implements IThemeManager {\r\n        private $$libthemerepos: LibraryThemeRepo[] = [];\r\n\r\n        constructor () {\r\n            Fayde.TypeManager.libResolver.libraryCreated.on(this.$$onLibraryCreated, this);\r\n            this.$$libthemerepos.push(new LibraryThemeRepo(new Uri(Fayde.XMLNS)));\r\n        }\r\n\r\n        private $$onLibraryCreated (sender: any, args: nullstone.ILibraryCreatedEventArgs) {\r\n            this.$$libthemerepos.push(new LibraryThemeRepo(args.library.uri));\r\n        }\r\n\r\n        LoadAsync (themeName: string): nullstone.async.IAsyncRequest<any> {\r\n            return nullstone.async.many(this.$$libthemerepos.map(repo => repo.ChangeActive(themeName)));\r\n        }\r\n\r\n        FindStyle (defaultStyleKey: any): Style {\r\n            if (!defaultStyleKey)\r\n                return null;\r\n            var uri = defaultStyleKey.$$uri;\r\n            if (uri) {\r\n                var repo = this.$$findRepo(uri);\r\n                if (repo)\r\n                    return repo.Active.GetImplicitStyle(defaultStyleKey);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        private $$findRepo (uri: string): LibraryThemeRepo {\r\n            for (var i = 0, repos = this.$$libthemerepos; i < repos.length; i++) {\r\n                var repo = repos[i];\r\n                if (repo.Uri.toString() === uri)\r\n                    return repo;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    class LibraryThemeRepo {\r\n        private $$themes = {};\r\n        private $$active: Theme;\r\n\r\n        Uri: Uri;\r\n\r\n        get Active (): Theme {\r\n            return this.$$active;\r\n        }\r\n\r\n        constructor (uri: Uri) {\r\n            Object.defineProperty(this, \"Uri\", {value: uri, writable: false});\r\n        }\r\n\r\n        Get (name: string): Theme {\r\n            var theme = this.$$themes[name];\r\n            if (!theme)\r\n                theme = this.$$themes[name] = new Theme(name, this.Uri);\r\n            return theme;\r\n        }\r\n\r\n        ChangeActive (name: string): nullstone.async.IAsyncRequest<Theme> {\r\n            var theme = this.Get(name);\r\n            return nullstone.async.create((resolve, reject) => {\r\n                theme.LoadAsync()\r\n                    .then(() => {\r\n                        this.$$active = theme;\r\n                        resolve(theme);\r\n                    }, reject);\r\n            });\r\n        }\r\n    }\r\n\r\n    export var ThemeManager: IThemeManager = new ThemeManagerImpl();\r\n}","module Fayde {\r\n    export class Expression {\r\n        IsUpdating: boolean = false;\r\n        IsAttached: boolean = false;\r\n\r\n        Seal (owner: DependencyObject, prop: any) {\r\n        }\r\n\r\n        OnAttached (target: XamlObject) {\r\n            this.IsAttached = true;\r\n            this.OnDataContextChanged(target.XamlNode.DataContext);\r\n        }\r\n\r\n        OnDetached (target: XamlObject) {\r\n            this.IsAttached = false;\r\n            this.OnDataContextChanged(undefined);\r\n        }\r\n\r\n        GetValue (propd: DependencyProperty): any {\r\n        }\r\n\r\n        OnDataContextChanged (newDataContext: any) {\r\n        }\r\n    }\r\n}","/// <reference path=\"Expression.ts\" />\r\n\r\nmodule Fayde.Data {\r\n    export class BindingExpressionBase extends Expression implements IPropertyPathWalkerListener {\r\n        //read-only properties\r\n        ParentBinding: Data.Binding;\r\n        Target: DependencyObject;\r\n        Property: DependencyProperty;\r\n\r\n        private PropertyPathWalker: PropertyPathWalker;\r\n        private _PropertyListener: Providers.IPropertyChangedListener;\r\n        private _SourceAvailableMonitor: IIsAttachedMonitor;\r\n\r\n        private _IsDataContextBound: boolean;\r\n        private _DataContext: any;\r\n        private _TwoWayLostFocusElement: UIElement = null;\r\n\r\n        private _CurrentNotifyError: Data.INotifyDataErrorInfo = null;\r\n        private _CurrentError: Validation.ValidationError = null;\r\n\r\n        get DataItem (): any {\r\n            return this.PropertyPathWalker.Source;\r\n        }\r\n\r\n        private _Cached: boolean = false;\r\n        private _CachedValue: any = undefined;\r\n\r\n        constructor (binding: Data.Binding) {\r\n            super();\r\n            if (!Object.isFrozen(binding))\r\n                Object.freeze(binding);\r\n            Object.defineProperty(this, \"ParentBinding\", {\r\n                value: binding,\r\n                writable: false\r\n            });\r\n        }\r\n\r\n        private _IsSealed = false;\r\n\r\n        Seal (owner: DependencyObject, prop: any) {\r\n            if (this._IsSealed)\r\n                return;\r\n            this._IsSealed = true;\r\n\r\n            Object.defineProperty(this, \"Target\", {\r\n                value: owner,\r\n                writable: false\r\n            });\r\n            var propd = <DependencyProperty>prop;\r\n            Object.defineProperty(this, \"Property\", {\r\n                value: propd,\r\n                writable: false\r\n            });\r\n\r\n            var binding = this.ParentBinding;\r\n            var path = binding.Path.Path;\r\n            if ((!path || path === \".\") && binding.Mode === Data.BindingMode.TwoWay)\r\n                throw new ArgumentException(\"TwoWay bindings require a non-empty Path.\");\r\n\r\n            if (binding.Mode === BindingMode.TwoWay && (owner instanceof Controls.TextBox || owner instanceof Controls.PasswordBox))\r\n                this._TwoWayLostFocusElement = <UIElement>owner;\r\n\r\n            this._IsDataContextBound = !binding.ElementName && !binding.Source && !binding.RelativeSource;\r\n\r\n            var bindsToView = propd === DependencyObject.DataContextProperty || propd.GetTargetType() === <any>nullstone.IEnumerable_ || propd.GetTargetType() === <any>Data.ICollectionView_;\r\n            var walker = this.PropertyPathWalker = new PropertyPathWalker(binding.Path.ParsePath, binding.BindsDirectlyToSource, bindsToView, this._IsDataContextBound);\r\n            if (binding.Mode !== BindingMode.OneTime)\r\n                walker.Listen(this);\r\n        }\r\n\r\n        OnAttached (element: DependencyObject) {\r\n            if (this.IsAttached)\r\n                return;\r\n            if (this.Target && this.Target !== element)\r\n                throw new Error(\"Cannot attach BindingExpression to another DependencyObject.\");\r\n            if (Fayde.Data.Debug && window.console)\r\n                console.log(\"[BINDING] OnAttached: [\" + (<any>element).constructor.name + \"] {Path=\" + this.ParentBinding.Path.Path + \"}\");\r\n\r\n            super.OnAttached(element);\r\n\r\n            this._SourceAvailableMonitor = this.Target.XamlNode.MonitorIsAttached((newIsAttached) => this._OnSourceAvailable());\r\n            var source = this._FindSource();\r\n            this.PropertyPathWalker.Update(source);\r\n\r\n            if (this._TwoWayLostFocusElement)\r\n                this._TwoWayLostFocusElement.LostFocus.on(this._TargetLostFocus, this);\r\n\r\n            if (this.ParentBinding.Mode === BindingMode.TwoWay && this.Property.IsCustom) {\r\n                this._PropertyListener = this.Property.Store.ListenToChanged(this.Target, this.Property, this._UpdateSourceCallback, this);\r\n            }\r\n        }\r\n\r\n        GetValue (propd: DependencyProperty): any {\r\n            if (this._Cached)\r\n                return this._CachedValue;\r\n\r\n            if (this.PropertyPathWalker.IsPathBroken) {\r\n                var target = this.Target;\r\n                if (Data.WarnBrokenPath && target && target.XamlNode.IsAttached) {\r\n                    var fe: FrameworkElement = target instanceof FrameworkElement ? <FrameworkElement>target : null;\r\n                    if (!fe || fe.XamlNode.IsLoaded)\r\n                        console.warn(\"[BINDING] Path Broken --> Path='\" + this.PropertyPathWalker.Path + \"'\");\r\n                }\r\n                this._CachedValue = null;\r\n            } else {\r\n                this._CachedValue = this.PropertyPathWalker.ValueInternal;\r\n            }\r\n\r\n            this._CachedValue = this._ConvertToType(propd, this._CachedValue);\r\n            this._Cached = true;\r\n            return this._CachedValue;\r\n        }\r\n\r\n        private _OnSourceAvailable () {\r\n            this._SourceAvailableMonitor.Detach();\r\n            var source = this._FindSource();\r\n            if (source) this.PropertyPathWalker.Update(source);\r\n            this._Invalidate();\r\n            this.Target.SetValue(this.Property, this);\r\n        }\r\n\r\n        private _FindSource (): any {\r\n            if (this.ParentBinding.Source) {\r\n                return this.ParentBinding.Source;\r\n            } else if (this.ParentBinding.ElementName != null) {\r\n                return this._FindSourceByElementName();\r\n            } else if (this.ParentBinding.RelativeSource) {\r\n                return this.ParentBinding.RelativeSource.Find(this.Target);\r\n            }\r\n            return this._DataContext;\r\n        }\r\n\r\n        private _FindSourceByElementName (): XamlObject {\r\n            var name = this.ParentBinding.ElementName;\r\n            var xobj: XamlObject = this.Target;\r\n            if (!xobj)\r\n                return undefined;\r\n            var source = xobj.FindName(name, true);\r\n            if (source)\r\n                return source;\r\n            //TODO: Crawl out of ListBoxItem?\r\n            return undefined;\r\n        }\r\n\r\n        OnDetached (element: DependencyObject) {\r\n            if (!this.IsAttached)\r\n                return;\r\n            if (Fayde.Data.Debug && window.console)\r\n                console.log(\"[BINDING] OnDetached: [\" + (<any>element).constructor.name + \"] {Path=\" + this.ParentBinding.Path.Path + \"}\");\r\n\r\n            super.OnDetached(element);\r\n\r\n            if (this._TwoWayLostFocusElement)\r\n                this._TwoWayLostFocusElement.LostFocus.off(this._TargetLostFocus, this);\r\n\r\n            if (this._CurrentError != null) {\r\n                var fe = getMentor(element);\r\n                if (fe)\r\n                    Validation.RemoveError(fe, this._CurrentError);\r\n                this._CurrentError = null;\r\n            }\r\n\r\n            if (this._PropertyListener) {\r\n                this._PropertyListener.Detach();\r\n                this._PropertyListener = null;\r\n            }\r\n\r\n            this.PropertyPathWalker.Update(null);\r\n\r\n            this.Target = undefined;\r\n        }\r\n\r\n        IsBrokenChanged () {\r\n            this.Refresh();\r\n        }\r\n\r\n        ValueChanged () {\r\n            this.Refresh();\r\n        }\r\n\r\n        UpdateSource () {\r\n            return this._UpdateSourceObject();\r\n        }\r\n\r\n        _TryUpdateSourceObject (value: any) {\r\n            if (this._ShouldUpdateSource())\r\n                this._UpdateSourceObject(value);\r\n        }\r\n\r\n        private _UpdateSourceCallback (sender, args: IDependencyPropertyChangedEventArgs) {\r\n            try {\r\n                if (this._ShouldUpdateSource())\r\n                    this._UpdateSourceObject(this.Target.GetValue(this.Property));\r\n            } catch (err) {\r\n                console.warn(\"[BINDING] UpdateSource: \" + err.toString());\r\n            }\r\n        }\r\n\r\n        private _TargetLostFocus (sender: any, e: nullstone.IEventArgs) {\r\n            if (this.ParentBinding.UpdateSourceTrigger === UpdateSourceTrigger.Explicit)\r\n                return;\r\n            this._UpdateSourceObject();\r\n        }\r\n\r\n        private _ShouldUpdateSource () {\r\n            if (this.IsUpdating)\r\n                return false;\r\n            if (!this._TwoWayLostFocusElement)\r\n                return this.ParentBinding.UpdateSourceTrigger !== UpdateSourceTrigger.Explicit;\r\n            return this.ParentBinding.UpdateSourceTrigger === UpdateSourceTrigger.PropertyChanged;\r\n        }\r\n\r\n        private _UpdateSourceObject (value?: any) {\r\n            if (value === undefined)\r\n                value = this.Target.GetValue(this.Property);\r\n            var binding = this.ParentBinding;\r\n            if (binding.Mode !== BindingMode.TwoWay)\r\n                return;\r\n\r\n            var dataError: string = null;\r\n            var exception: Exception;\r\n            var oldUpdating = this.IsUpdating;\r\n            var walker = this.PropertyPathWalker;\r\n            var node = this.PropertyPathWalker.FinalNode;\r\n\r\n            try {\r\n                if (this.PropertyPathWalker.IsPathBroken)\r\n                    return;\r\n                value = this._ConvertFromTargetToSource(binding, node, value);\r\n                if (this._CachedValue === undefined && value === undefined)\r\n                    return;\r\n\r\n                this.IsUpdating = true;\r\n                node.SetValue(value);\r\n                this._CachedValue = value;\r\n            } catch (err) {\r\n                if (binding.ValidatesOnExceptions) {\r\n                    if (err instanceof TargetInvocationException)\r\n                        exception = err.InnerException;\r\n                    exception = err;\r\n                }\r\n            } finally {\r\n                this.IsUpdating = oldUpdating;\r\n                if (binding.ValidatesOnDataErrors && !exception) {\r\n                    dataError = getDataError(walker);\r\n                }\r\n            }\r\n\r\n            if (binding.ValidatesOnExceptions)\r\n                this._MaybeEmitError(null, exception);\r\n            else if (binding.ValidatesOnDataErrors)\r\n                this._MaybeEmitError(dataError, exception);\r\n        }\r\n\r\n        OnDataContextChanged (newDataContext: any) {\r\n            if (Fayde.Data.Debug && window.console)\r\n                console.log(\"[BINDING] DataContextChanged: [\" + (<any>this.Target)._ID + \":\" + (<any>this.Target).constructor.name + \"] {Path=\" + this.ParentBinding.Path.Path + \"}\");\r\n\r\n            if (this._DataContext === newDataContext)\r\n                return;\r\n            this._DataContext = newDataContext;\r\n            if (!this._IsDataContextBound)\r\n                return;\r\n\r\n            if (Fayde.Data.IsCounterEnabled)\r\n                Fayde.Data.DataContextCounter++;\r\n            try {\r\n                this.PropertyPathWalker.Update(newDataContext);\r\n                if (this.ParentBinding.Mode === BindingMode.OneTime)\r\n                    this.Refresh();\r\n            } catch (err) {\r\n                console.warn(\"[BINDING] DataContextChanged Error: \" + err.message);\r\n            }\r\n        }\r\n\r\n        private _Invalidate () {\r\n            this._Cached = false;\r\n            this._CachedValue = undefined;\r\n        }\r\n\r\n        Refresh () {\r\n            var dataError: string = null;\r\n            var exception: Exception;\r\n\r\n            if (!this.IsAttached)\r\n                return;\r\n\r\n            var walker = this.PropertyPathWalker;\r\n            this._AttachToNotifyError(walker.FinalNode.GetSource());\r\n\r\n            var binding = this.ParentBinding;\r\n            if (!this.IsUpdating && binding.ValidatesOnDataErrors)\r\n                dataError = getDataError(walker);\r\n\r\n            var oldUpdating = this.IsUpdating;\r\n            try {\r\n                this.IsUpdating = true;\r\n                this._Invalidate();\r\n                this.Target.SetValue(this.Property, this);\r\n            } catch (err) {\r\n                if (binding.ValidatesOnExceptions) {\r\n                    exception = err;\r\n                    if (exception instanceof TargetInvocationException)\r\n                        exception = (<TargetInvocationException>exception).InnerException;\r\n                } else {\r\n                    console.warn(err);\r\n                }\r\n            } finally {\r\n                this.IsUpdating = oldUpdating;\r\n            }\r\n\r\n            if (binding.ValidatesOnExceptions)\r\n                this._MaybeEmitError(null, exception);\r\n            else if (binding.ValidatesOnDataErrors)\r\n                this._MaybeEmitError(dataError, exception);\r\n        }\r\n\r\n        private _ConvertFromTargetToSource (binding: Data.Binding, node: IPropertyPathNode, value: any): any {\r\n            if (binding.TargetNullValue && binding.TargetNullValue === value)\r\n                value = null;\r\n\r\n            var converter = binding.Converter;\r\n            if (converter) {\r\n                value = converter.ConvertBack(value, node.ValueType, binding.ConverterParameter, binding.ConverterCulture);\r\n            }\r\n\r\n            //TODO: attempt to parse string for target type\r\n            // We don't have a target type for plain objects\r\n            //if (value instanceof String) { }\r\n\r\n            return value;\r\n        }\r\n\r\n        private _ConvertToType (propd: DependencyProperty, value: any): any {\r\n            var targetType = this.Property.GetTargetType();\r\n            try {\r\n                var binding = this.ParentBinding;\r\n                if (!this.PropertyPathWalker.IsPathBroken && binding.Converter) {\r\n                    value = binding.Converter.Convert(value, targetType, binding.ConverterParameter, binding.ConverterCulture);\r\n                }\r\n                if (value === DependencyProperty.UnsetValue || this.PropertyPathWalker.IsPathBroken) {\r\n                    value = binding.FallbackValue;\r\n                    if (value === undefined)\r\n                        value = propd.DefaultValue;\r\n                } else if (value == null) {\r\n                    value = binding.TargetNullValue;\r\n                    if (value == null && this._IsDataContextBound && !binding.Path.Path)\r\n                        value = propd.DefaultValue;\r\n                } else {\r\n                    var format = binding.StringFormat;\r\n                    if (format) {\r\n                        if (format.indexOf(\"{0\") < 0)\r\n                            format = \"{0:\" + format + \"}\";\r\n                        value = Localization.Format(format, value);\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                console.warn(\"[BINDING]\" + err.toString());\r\n                value = binding.FallbackValue;\r\n            }\r\n            return nullstone.convertAnyToType(value, <Function>targetType);\r\n        }\r\n\r\n        private _MaybeEmitError (message: string, exception: Exception) {\r\n            var fe = getMentor(this.Target);\r\n            if (!fe)\r\n                return;\r\n\r\n            var error = (exception instanceof Exception || exception instanceof Error) ? exception : null;\r\n            if (message === \"\")\r\n                message = null;\r\n\r\n            var oldError = this._CurrentError;\r\n            if (message != null)\r\n                this._CurrentError = new Validation.ValidationError(message, null, this.PropertyPathWalker.FinalPropertyName);\r\n            else if (error)\r\n                this._CurrentError = new Validation.ValidationError(null, error, this.PropertyPathWalker.FinalPropertyName);\r\n            else\r\n                this._CurrentError = null;\r\n\r\n            Validation.Emit(fe, this.ParentBinding, oldError, this._CurrentError);\r\n        }\r\n\r\n        private _AttachToNotifyError (element: Data.INotifyDataErrorInfo) {\r\n            if (!Data.INotifyDataErrorInfo_.is(element))\r\n                return;\r\n            if (element === this._CurrentNotifyError || !this.ParentBinding.ValidatesOnNotifyDataErrors)\r\n                return;\r\n\r\n            var property = this.PropertyPathWalker.FinalPropertyName;\r\n            if (this._CurrentNotifyError) {\r\n                this._CurrentNotifyError.ErrorsChanged.off(this._NotifyErrorsChanged, this);\r\n                this._MaybeEmitError(null, null);\r\n            }\r\n\r\n            this._CurrentNotifyError = element;\r\n\r\n            if (element) {\r\n                element.ErrorsChanged.on(this._NotifyErrorsChanged, this);\r\n                if (element.HasErrors) {\r\n                    var enu = element.GetErrors(property);\r\n                    if (enu) {\r\n                        for (var en = enu.getEnumerator(); en.moveNext();) {\r\n                            this._MaybeEmitError(en.current, en.current);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this._MaybeEmitError(null, null);\r\n                }\r\n            }\r\n        }\r\n\r\n        private _NotifyErrorsChanged (sender: any, e: Data.DataErrorsChangedEventArgs) {\r\n            var property = this.PropertyPathWalker.FinalPropertyName;\r\n            if (e.PropertyName !== property)\r\n                return;\r\n            var errors = this._CurrentNotifyError ? this._CurrentNotifyError.GetErrors(property) : null;\r\n            if (!errors) {\r\n                this._MaybeEmitError(null, null);\r\n                return;\r\n            }\r\n\r\n            var arr = nullstone.IEnumerable_.toArray(errors);\r\n            if (arr.length <= 0) {\r\n                this._MaybeEmitError(null, null);\r\n                return;\r\n            }\r\n\r\n            for (var i = 0; i < arr.length; i++) {\r\n                var cur = arr[i];\r\n                this._MaybeEmitError(cur, cur);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function getMentor (dobj: DependencyObject): FrameworkElement {\r\n        for (var cur = <XamlObject>dobj; cur; cur = cur.Parent) {\r\n            if (cur instanceof FrameworkElement)\r\n                return <FrameworkElement>cur;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function getDataError (walker: PropertyPathWalker): string {\r\n        var info = IDataErrorInfo_.as(walker.FinalNode.GetSource());\r\n        var name = walker.FinalPropertyName;\r\n        return (info && name) ? info.GetError(name) : null;\r\n    }\r\n}","/// <reference path=\"BindingExpressionBase.ts\" />\r\n\r\nmodule Fayde.Data {\r\n    export class BindingExpression extends BindingExpressionBase {\r\n        constructor(binding: Data.Binding) {\r\n            super(binding);\r\n        }\r\n    }\r\n}","/// <reference path=\"Expression.ts\" />\r\n\r\nmodule Fayde {\r\n    export class DeferredValueExpression extends Expression {\r\n        GetValue(propd: DependencyProperty): any {\r\n            return undefined;\r\n        }\r\n        toString(): string { return \"DeferredValueExpression\"; }\r\n    }\r\n}","/// <reference path=\"Expression.ts\" />\r\n\r\nmodule Fayde {\r\n    export interface IEventBindingArgs<T extends nullstone.IEventArgs> {\r\n        sender: any;\r\n        args: T;\r\n        parameter: any;\r\n    }\r\n\r\n    export class EventBindingExpression extends Expression {\r\n        IsUpdating: boolean = false;\r\n        IsAttached: boolean = false;\r\n\r\n        private _EventBinding: Markup.EventBinding;\r\n        private _CommandWalker: Data.PropertyPathWalker = null;\r\n        private _CommandParameterWalker: Data.PropertyPathWalker = null;\r\n\r\n        private _Target: XamlObject = null;\r\n        private _Event: nullstone.Event<nullstone.IEventArgs> = null;\r\n        private _EventName: string = null;\r\n\r\n        constructor (eventBinding: Markup.EventBinding) {\r\n            super();\r\n            this._EventBinding = eventBinding;\r\n\r\n            var cb = this._EventBinding.CommandBinding;\r\n            if (cb)\r\n                this._CommandWalker = new Data.PropertyPathWalker(cb.Path.ParsePath, cb.BindsDirectlyToSource, false, !cb.ElementName && !cb.Source && !cb.RelativeSource);\r\n\r\n            var cpb = this._EventBinding.CommandParameterBinding;\r\n            if (cpb)\r\n                this._CommandParameterWalker = new Data.PropertyPathWalker(cpb.Path.ParsePath, cpb.BindsDirectlyToSource, false, !cpb.ElementName && !cpb.Source && !cpb.RelativeSource);\r\n        }\r\n\r\n        Seal (owner: DependencyObject, prop: any) {\r\n        }\r\n\r\n        Init (eventName: string) {\r\n            this._EventName = eventName;\r\n        }\r\n\r\n        GetValue (propd: DependencyProperty): any {\r\n        }\r\n\r\n        OnAttached (target: XamlObject) {\r\n            if (this.IsAttached)\r\n                return;\r\n            this.IsAttached = true;\r\n            this._Target = target;\r\n            this._Event = target[this._EventName];\r\n            if (this._Event)\r\n                this._Event.on(this._Callback, this);\r\n        }\r\n\r\n        OnDetached (target: XamlObject) {\r\n            if (!this.IsAttached)\r\n                return;\r\n            if (this._Event)\r\n                this._Event.off(this._Callback, this);\r\n            this._Event = null;\r\n            this.IsAttached = false;\r\n        }\r\n\r\n        OnDataContextChanged (newDataContext: any) {\r\n        }\r\n\r\n        private _Callback (sender: any, e: nullstone.IEventArgs) {\r\n            var target = this._Target;\r\n\r\n            var csource = findSource(target, this._EventBinding.CommandBinding);\r\n            var context = csource;\r\n            var etarget = context;\r\n            var cw = this._CommandWalker;\r\n            if (cw) {\r\n                etarget = cw.GetValue(etarget);\r\n                context = cw.GetContext();\r\n                if (context == null) context = csource;\r\n            }\r\n            if (!etarget) {\r\n                console.warn(\"[EVENTBINDING]: Could not find command target for event '\" + this._EventName + \"'.\");\r\n                return;\r\n            }\r\n\r\n            var cargs = {\r\n                sender: sender,\r\n                args: e,\r\n                parameter: null\r\n            };\r\n\r\n            var cpb = this._EventBinding.CommandParameterBinding;\r\n            if (cpb) {\r\n                var cpw = this._CommandParameterWalker;\r\n                var cpsource = findSource(target, cpb);\r\n                cargs.parameter = cpw.GetValue(cpsource);\r\n            }\r\n\r\n\r\n            if (typeof etarget === \"function\") {\r\n                (<Function>etarget).call(context, cargs);\r\n            } else {\r\n                var ecmd = Fayde.Input.ICommand_.as(etarget);\r\n                if (!ecmd) {\r\n                    console.warn(\"[EVENTBINDING]: Could not find command target for event '\" + this._EventName + \"'.\");\r\n                    return;\r\n                }\r\n                ecmd = <Fayde.Input.ICommand>etarget;\r\n                if (ecmd.CanExecute.call(context, cargs))\r\n                    ecmd.Execute.call(context, cargs);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findSource (target: XamlObject, binding: Data.Binding): any {\r\n        if (binding) {\r\n            if (binding.Source)\r\n                return binding.Source;\r\n\r\n            if (binding.ElementName != null)\r\n                return findSourceByElementName(target, binding.ElementName);\r\n\r\n            if (binding.RelativeSource) {\r\n                return binding.RelativeSource.Find(target);\r\n            }\r\n        }\r\n        return target.XamlNode.DataContext;\r\n    }\r\n\r\n    function findSourceByElementName (target: XamlObject, name: string): XamlObject {\r\n        var xobj: XamlObject = target;\r\n        if (!xobj)\r\n            return undefined;\r\n        var source = xobj.FindName(name, true);\r\n        if (source)\r\n            return source;\r\n        //TODO: Crawl out of ListBoxItem?\r\n        return undefined;\r\n    }\r\n}","/// <reference path=\"Expression.ts\" />\r\n\r\nmodule Fayde {\r\n    export class TemplateBindingExpression extends Expression {\r\n        private _Target: DependencyObject;\r\n        private _Listener: Providers.IPropertyChangedListener;\r\n        private _SourcePropertyName: string;\r\n        private _IsSealed = false;\r\n        SourceProperty: DependencyProperty;\r\n        TargetProperty: DependencyProperty;\r\n\r\n        constructor (sourceProperty: string) {\r\n            super();\r\n            this._SourcePropertyName = sourceProperty;\r\n        }\r\n\r\n        Seal (owner: DependencyObject, prop: any) {\r\n            if (this._IsSealed)\r\n                return;\r\n            this._IsSealed = true;\r\n            var to = owner.TemplateOwner;\r\n            if (!(to instanceof DependencyObject))\r\n                throw new Error(\"TemplateBinding must be applied to a DependencyObject within a template.\");\r\n            this.SourceProperty = DependencyProperty.GetDependencyProperty((<any>to).constructor, this._SourcePropertyName);\r\n            this.TargetProperty = <DependencyProperty>prop;\r\n        }\r\n\r\n        GetValue (propd: DependencyProperty) {\r\n            var target = this._Target;\r\n            var source = target.TemplateOwner;\r\n            var value;\r\n            if (source)\r\n                value = source.GetValue(this.SourceProperty);\r\n            //NOTE: Do we need to handle string conversion?\r\n            value = nullstone.convertAnyToType(value, <Function>this.TargetProperty.GetTargetType());\r\n            return value;\r\n        }\r\n\r\n        OnAttached (dobj: DependencyObject) {\r\n            super.OnAttached(dobj);\r\n\r\n            this._Target = dobj;\r\n            this._DetachListener();\r\n\r\n            var cc: Controls.ContentControl;\r\n            if (this._Target instanceof Controls.ContentControl)\r\n                cc = <Controls.ContentControl>this._Target;\r\n\r\n            this._AttachListener();\r\n        }\r\n\r\n        OnDetached (dobj: DependencyObject) {\r\n            super.OnDetached(dobj);\r\n\r\n            var listener = this._Listener;\r\n            if (!listener)\r\n                return;\r\n\r\n            var cc: Controls.ContentControl;\r\n            if (this._Target instanceof Controls.ContentControl)\r\n                cc = <Controls.ContentControl>this._Target;\r\n\r\n            this._DetachListener();\r\n            this._Target = null;\r\n        }\r\n\r\n        OnSourcePropertyChanged (sender: DependencyObject, args: IDependencyPropertyChangedEventArgs) {\r\n            if (this.SourceProperty._ID !== args.Property._ID)\r\n                return;\r\n            try {\r\n                // Type converting doesn't happen for TemplateBindings\r\n                this.IsUpdating = true;\r\n                var targetProp = this.TargetProperty;\r\n                try {\r\n                    this._Target.SetCurrentValue(targetProp, this.GetValue(null));\r\n                } catch (err2) {\r\n                    var val = targetProp.DefaultValue;\r\n                    this._Target.SetCurrentValue(targetProp, val);\r\n                }\r\n            } catch (err) {\r\n\r\n            } finally {\r\n                this.IsUpdating = false;\r\n            }\r\n        }\r\n\r\n        private _AttachListener () {\r\n            var source = this._Target.TemplateOwner;\r\n            if (!source)\r\n                return;\r\n            this._Listener = this.SourceProperty.Store.ListenToChanged(source, this.SourceProperty, (sender, args) => this.OnSourcePropertyChanged(sender, args), this);\r\n        }\r\n\r\n        private _DetachListener () {\r\n            var listener = this._Listener;\r\n            if (listener) {\r\n                this._Listener.Detach();\r\n                this._Listener = null;\r\n            }\r\n        }\r\n    }\r\n}","module Fayde.Input {\r\n    export interface ICommand {\r\n        Execute(parameter: any);\r\n        CanExecute(parameter: any): boolean;\r\n        CanExecuteChanged: nullstone.Event<nullstone.IEventArgs>;\r\n    }\r\n    export var ICommand_ = new nullstone.Interface<ICommand>(\"ICommand\");\r\n}","\r\nmodule Fayde.Input {\r\n    export module InteractionHelper {\r\n        export function GetLogicalKey(flowDirection: FlowDirection, key: Key): Key {\r\n            if (flowDirection !== FlowDirection.RightToLeft)\r\n                return key;\r\n            switch (key) {\r\n                case Key.Left:\r\n                    return Key.Right;\r\n                case Key.Right:\r\n                    return Key.Left;\r\n                default:\r\n                    return key;\r\n            }\r\n        }\r\n    }\r\n}","/// <reference path=\"KeyEventArgs.ts\" />\r\n\r\n\r\n// Good Resource: http://unixpapa.com/js/key.html\r\n\r\nmodule Fayde.Input {\r\n    export interface IKeyInterop {\r\n        RegisterEvents(inputHandler: Engine.InputManager);\r\n    }\r\n    export function CreateKeyInterop(): IKeyInterop {\r\n        //Figure out which KeyInterop\r\n        if (navigator.appName === \"Microsoft Internet Explorer\")\r\n            return new IEKeyInterop();\r\n        if (navigator.appName === \"Netscape\") {\r\n            if (!!navigator.userAgent.match(/Trident\\//)) //IE11 masquerading as Netscape\r\n                return new IEKeyInterop();\r\n            return new NetscapeKeyInterop();\r\n        }\r\n        return new KeyInterop();\r\n    }\r\n\r\n    var keyFromKeyCode: Key[] = [];\r\n    keyFromKeyCode[8] = Key.Back;\r\n    keyFromKeyCode[9] = Key.Tab;\r\n    keyFromKeyCode[13] = Key.Enter;\r\n    keyFromKeyCode[16] = Key.Shift;\r\n    keyFromKeyCode[17] = Key.Ctrl;\r\n    keyFromKeyCode[18] = Key.Alt;\r\n    //keyFromKeyCode[19] = Key.Pause/Break;\r\n    keyFromKeyCode[20] = Key.CapsLock;\r\n    keyFromKeyCode[27] = Key.Escape;\r\n    keyFromKeyCode[32] = Key.Space;\r\n    keyFromKeyCode[33] = Key.PageUp;\r\n    keyFromKeyCode[34] = Key.PageDown;\r\n    keyFromKeyCode[35] = Key.End;\r\n    keyFromKeyCode[36] = Key.Home;\r\n    keyFromKeyCode[37] = Key.Left;\r\n    keyFromKeyCode[38] = Key.Up;\r\n    keyFromKeyCode[39] = Key.Right;\r\n    keyFromKeyCode[40] = Key.Down;\r\n    keyFromKeyCode[45] = Key.Insert;\r\n    keyFromKeyCode[46] = Key.Delete;\r\n    keyFromKeyCode[48] = Key.D0;\r\n    keyFromKeyCode[49] = Key.D1;\r\n    keyFromKeyCode[50] = Key.D2;\r\n    keyFromKeyCode[51] = Key.D3;\r\n    keyFromKeyCode[52] = Key.D4;\r\n    keyFromKeyCode[53] = Key.D5;\r\n    keyFromKeyCode[54] = Key.D6;\r\n    keyFromKeyCode[55] = Key.D7;\r\n    keyFromKeyCode[56] = Key.D8;\r\n    keyFromKeyCode[57] = Key.D9;\r\n    //keyFromKeyCode[59] = Key.Semicolon/Colon;\r\n    //keyFromKeyCode[61] = Key.Equals/Plus;\r\n    keyFromKeyCode[65] = Key.A;\r\n    keyFromKeyCode[66] = Key.B;\r\n    keyFromKeyCode[67] = Key.C;\r\n    keyFromKeyCode[68] = Key.D;\r\n    keyFromKeyCode[69] = Key.E;\r\n    keyFromKeyCode[70] = Key.F;\r\n    keyFromKeyCode[71] = Key.G;\r\n    keyFromKeyCode[72] = Key.H;\r\n    keyFromKeyCode[73] = Key.I;\r\n    keyFromKeyCode[74] = Key.J;\r\n    keyFromKeyCode[75] = Key.K;\r\n    keyFromKeyCode[76] = Key.L;\r\n    keyFromKeyCode[77] = Key.M;\r\n    keyFromKeyCode[78] = Key.N;\r\n    keyFromKeyCode[79] = Key.O;\r\n    keyFromKeyCode[80] = Key.P;\r\n    keyFromKeyCode[81] = Key.Q;\r\n    keyFromKeyCode[82] = Key.R;\r\n    keyFromKeyCode[83] = Key.S;\r\n    keyFromKeyCode[84] = Key.T;\r\n    keyFromKeyCode[85] = Key.U;\r\n    keyFromKeyCode[86] = Key.V;\r\n    keyFromKeyCode[87] = Key.W;\r\n    keyFromKeyCode[88] = Key.X;\r\n    keyFromKeyCode[89] = Key.Y;\r\n    keyFromKeyCode[90] = Key.Z;\r\n    //keyFromKeyCode[91] = Key.Window;\r\n    keyFromKeyCode[96] = Key.NumPad0;\r\n    keyFromKeyCode[97] = Key.NumPad1;\r\n    keyFromKeyCode[98] = Key.NumPad2;\r\n    keyFromKeyCode[99] = Key.NumPad3;\r\n    keyFromKeyCode[100] = Key.NumPad4;\r\n    keyFromKeyCode[101] = Key.NumPad5;\r\n    keyFromKeyCode[102] = Key.NumPad6;\r\n    keyFromKeyCode[103] = Key.NumPad7;\r\n    keyFromKeyCode[104] = Key.NumPad8;\r\n    keyFromKeyCode[105] = Key.NumPad9;\r\n    keyFromKeyCode[106] = Key.Multiply;\r\n    keyFromKeyCode[107] = Key.Add;\r\n    keyFromKeyCode[109] = Key.Subtract;\r\n    keyFromKeyCode[110] = Key.Decimal;\r\n    keyFromKeyCode[111] = Key.Divide;\r\n    keyFromKeyCode[112] = Key.F1;\r\n    keyFromKeyCode[113] = Key.F2;\r\n    keyFromKeyCode[114] = Key.F3;\r\n    keyFromKeyCode[115] = Key.F4;\r\n    keyFromKeyCode[116] = Key.F5;\r\n    keyFromKeyCode[117] = Key.F6;\r\n    keyFromKeyCode[118] = Key.F7;\r\n    keyFromKeyCode[119] = Key.F8;\r\n    keyFromKeyCode[120] = Key.F9;\r\n    keyFromKeyCode[121] = Key.F10;\r\n    keyFromKeyCode[122] = Key.F11;\r\n    keyFromKeyCode[123] = Key.F12;\r\n\r\n    class KeyInterop implements IKeyInterop {\r\n        RegisterEvents(input: Engine.InputManager) {\r\n            document.onkeypress = (e) => {\r\n                var args = this.CreateArgsPress(e);\r\n                if (args) {\r\n                    input.HandleKeyDown(args);\r\n                    if (args.Handled) {\r\n                        e.preventDefault();\r\n                        return false;\r\n                    }\r\n                }\r\n            };\r\n            document.onkeydown = (e) => {\r\n                var args = this.CreateArgsDown(e);\r\n                if (args) {\r\n                    input.HandleKeyDown(args);\r\n                    if (args.Handled) {\r\n                        e.preventDefault();\r\n                        return false;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        CreateArgsPress(e): Fayde.Input.KeyEventArgs { return undefined; }\r\n        CreateArgsDown(e): Fayde.Input.KeyEventArgs { return undefined; }\r\n    }\r\n    \r\n    var udkie = [];\r\n    udkie[41] = 48;\r\n    udkie[33] = 49;\r\n    udkie[64] = 50;\r\n    udkie[35] = 51;\r\n    udkie[36] = 52;\r\n    udkie[37] = 53;\r\n    udkie[94] = 54;\r\n    udkie[38] = 55;\r\n    udkie[42] = 56;\r\n    udkie[34] = Key.Unknown;\r\n    class IEKeyInterop extends KeyInterop {\r\n        CreateArgsPress(e): Fayde.Input.KeyEventArgs {\r\n            if (!e[\"char\"])\r\n                return;\r\n\r\n            var modifiers = {\r\n                Shift: e.shiftKey,\r\n                Ctrl: e.ctrlKey,\r\n                Alt: e.altKey\r\n            };\r\n\r\n            var keyCode = e.keyCode;\r\n            var unshifted = udkie[keyCode];\r\n            if (unshifted)\r\n                keyCode = unshifted;\r\n\r\n            var args = new Fayde.Input.KeyEventArgs(modifiers, keyCode, keyFromKeyCode[keyCode], e[\"char\"]);\r\n            if (args.Key === Key.Unknown && e.key) {\r\n                args.Char = e.key;\r\n                var code = args.Char.toUpperCase().charCodeAt(0);\r\n                args.Key = keyFromKeyCode[code];\r\n                if (args.Key == null) args.Key = Key.Unknown;\r\n            }\r\n            return args;\r\n        }\r\n        CreateArgsDown(e): Fayde.Input.KeyEventArgs {\r\n            if (e[\"char\"] && e.keyCode !== 8 && e.keyCode !== 9)\r\n                return;\r\n            var modifiers = {\r\n                Shift: e.shiftKey,\r\n                Ctrl: e.ctrlKey,\r\n                Alt: e.altKey\r\n            };\r\n            return new Fayde.Input.KeyEventArgs(modifiers, e.keyCode, keyFromKeyCode[e.keyCode]);\r\n        }\r\n    }\r\n    \r\n    var sknet = [];\r\n    sknet[8] = Key.Back;\r\n    sknet[9] = Key.Tab;\r\n    sknet[20] = Key.CapsLock;\r\n    sknet[27] = Key.Escape;\r\n    sknet[33] = Key.PageUp;\r\n    sknet[34] = Key.PageDown;\r\n    sknet[35] = Key.End;\r\n    sknet[36] = Key.Home;\r\n    sknet[37] = Key.Left;\r\n    sknet[38] = Key.Up;\r\n    sknet[39] = Key.Right;\r\n    sknet[40] = Key.Down;\r\n    sknet[45] = Key.Insert;\r\n    sknet[46] = Key.Delete;\r\n    \r\n    var udknet = [];\r\n    udknet[41] = 48;\r\n    udknet[33] = 49;\r\n    udknet[64] = 50;\r\n    udknet[35] = 51;\r\n    udknet[36] = 52;\r\n    udknet[37] = 53;\r\n    udknet[94] = 54;\r\n    udknet[38] = 55;\r\n    udknet[42] = 56;\r\n    udknet[34] = Key.Unknown;\r\n    class NetscapeKeyInterop extends KeyInterop {\r\n        CreateArgsPress(e): Fayde.Input.KeyEventArgs {\r\n            var modifiers = {\r\n                Shift: e.shiftKey,\r\n                Ctrl: e.ctrlKey,\r\n                Alt: e.altKey\r\n            };\r\n\r\n            var keyCode = e.keyCode;\r\n            var unshifted = udknet[keyCode];\r\n            if (unshifted)\r\n                keyCode = unshifted;\r\n\r\n            var args = new Fayde.Input.KeyEventArgs(modifiers, keyCode, keyFromKeyCode[keyCode], String.fromCharCode(e.which || e.keyCode));\r\n            if (args.Char === \"'\")\r\n                args.Key = Key.Unknown;\r\n            return args;\r\n        }\r\n        CreateArgsDown(e): Fayde.Input.KeyEventArgs {\r\n            //only do for special keys\r\n            if (sknet[e.keyCode] === undefined)\r\n                return null;\r\n\r\n            var modifiers = {\r\n                Shift: e.shiftKey,\r\n                Ctrl: e.ctrlKey,\r\n                Alt: e.altKey\r\n            };\r\n            return new Fayde.Input.KeyEventArgs(modifiers, e.keyCode, keyFromKeyCode[e.keyCode]);\r\n        }\r\n    }\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n\r\nmodule Fayde.Input {\r\n    export class KeyboardNavigation {\r\n        static AcceptsReturnProperty: DependencyProperty = DependencyProperty.RegisterAttached(\"AcceptsReturn\", () => Boolean, KeyboardNavigation);\r\n        static GetAcceptsReturn(d: DependencyObject): boolean { return d.GetValue(KeyboardNavigation.AcceptsReturnProperty); }\r\n        static SetAcceptsReturn(d: DependencyObject, value: boolean) { d.SetValue(KeyboardNavigation.AcceptsReturnProperty, value); }\r\n\r\n        static ControlTabNavigationProperty: DependencyProperty = DependencyProperty.RegisterAttached(\"ControlTabNavigation\", () => new Enum(KeyboardNavigationMode), KeyboardNavigation);\r\n        static GetControlTabNavigation(d: DependencyObject): KeyboardNavigationMode { return d.GetValue(KeyboardNavigation.ControlTabNavigationProperty); }\r\n        static SetControlTabNavigation(d: DependencyObject, value: KeyboardNavigationMode) { d.SetValue(KeyboardNavigation.ControlTabNavigationProperty, value); }\r\n\r\n        static DirectionalNavigationProperty: DependencyProperty = DependencyProperty.RegisterAttached(\"DirectionalNavigation\", () => new Enum(KeyboardNavigationMode), KeyboardNavigation);\r\n        static GetDirectionalNavigation(d: DependencyObject): KeyboardNavigationMode { return d.GetValue(KeyboardNavigation.DirectionalNavigationProperty); }\r\n        static SetDirectionalNavigation(d: DependencyObject, value: KeyboardNavigationMode) { d.SetValue(KeyboardNavigation.DirectionalNavigationProperty, value); }\r\n\r\n        static IsTabStopProperty: DependencyProperty = DependencyProperty.RegisterAttached(\"IsTabStop\", () => Boolean, KeyboardNavigation);\r\n        static GetIsTabStop(d: DependencyObject): boolean { return d.GetValue(KeyboardNavigation.IsTabStopProperty); }\r\n        static SetIsTabStop(d: DependencyObject, value: boolean) { d.SetValue(KeyboardNavigation.IsTabStopProperty, value); }\r\n\r\n        static TabIndexProperty: DependencyProperty = DependencyProperty.RegisterAttached(\"TabIndex\", () => Number, KeyboardNavigation);\r\n        static GetTabIndex(d: DependencyObject): number { return d.GetValue(KeyboardNavigation.TabIndexProperty); }\r\n        static SetTabIndex(d: DependencyObject, value: number) { d.SetValue(KeyboardNavigation.TabIndexProperty, value); }\r\n\r\n        static TabNavigationProperty: DependencyProperty = DependencyProperty.RegisterAttached(\"TabNavigation\", () => new Enum(KeyboardNavigationMode), KeyboardNavigation);\r\n        static GetTabNavigation(d: DependencyObject): KeyboardNavigationMode { return d.GetValue(KeyboardNavigation.TabNavigationProperty); }\r\n        static SetTabNavigation(d: DependencyObject, value: KeyboardNavigationMode) { d.SetValue(KeyboardNavigation.TabNavigationProperty, value); }\r\n    }\r\n    Fayde.CoreLibrary.add(KeyboardNavigation);\r\n}","/// <reference path=\"../Core/RoutedEventArgs.ts\" />\r\n\r\nmodule Fayde.Input {\r\n    export class MouseEventArgs extends RoutedEventArgs {\r\n        AbsolutePos: Point;\r\n        constructor(absolutePos: Point) {\r\n            super();\r\n            Object.defineProperty(this, \"AbsolutePos\", { value: absolutePos, writable: false });\r\n        }\r\n        GetPosition(relativeTo: UIElement): Point {\r\n            var p = this.AbsolutePos.Clone();\r\n            if (!relativeTo)\r\n                return p;\r\n            if (!(relativeTo instanceof UIElement))\r\n                throw new ArgumentException(\"Specified relative object must be a UIElement.\");\r\n            //TODO: If attached, should we run ProcessDirtyElements\r\n            minerva.core.Updater.transformPoint(relativeTo.XamlNode.LayoutUpdater, p);\r\n            return p;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(MouseEventArgs);\r\n\r\n    export class MouseButtonEventArgs extends MouseEventArgs {\r\n        constructor(absolutePos: Point) {\r\n            super(absolutePos);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(MouseButtonEventArgs);\r\n\r\n    export class MouseWheelEventArgs extends MouseEventArgs {\r\n        Delta: number;\r\n        constructor(absolutePos: Point, delta: number) {\r\n            super(absolutePos);\r\n            Object.defineProperty(this, \"Delta\", { value: delta, writable: false });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(MouseWheelEventArgs);\r\n}","module Fayde.Input {\r\n    export enum MouseInputType {\r\n        NoOp = 0,\r\n        MouseUp = 1,\r\n        MouseDown = 2,\r\n        MouseLeave = 3,\r\n        MouseEnter = 4,\r\n        MouseMove = 5,\r\n        MouseWheel = 6,\r\n    }\r\n    export interface IMouseInterop {\r\n        RegisterEvents(input: Engine.InputManager, canvas: HTMLCanvasElement);\r\n        CreateEventArgs(type: MouseInputType, pos: Point, delta: number): Fayde.Input.MouseEventArgs;\r\n        IsLeftButton(button: number): boolean;\r\n        IsRightButton(button: number): boolean;\r\n    }\r\n    export function CreateMouseInterop (): IMouseInterop {\r\n        if (navigator.appName === \"Microsoft Internet Explorer\")\r\n            return new IEMouseInterop();\r\n        if (navigator.appName === \"Netscape\") {\r\n            if (!!navigator.userAgent.match(/Trident\\//)) //IE11 masquerading as Netscape\r\n                return new IEMouseInterop();\r\n            return new NetscapeMouseInterop();\r\n        }\r\n        return new MouseInterop();\r\n    }\r\n\r\n    interface IOffset {\r\n        left: number;\r\n        top: number;\r\n    }\r\n\r\n    class MouseInterop implements IMouseInterop {\r\n        private _Input: Engine.InputManager;\r\n        private _CanvasOffset: IOffset = null;\r\n        private _IsContextMenuDisabled: boolean = false;\r\n\r\n        RegisterEvents (input: Engine.InputManager, canvas: HTMLCanvasElement) {\r\n            this._Input = input;\r\n            this._CanvasOffset = this._CalcOffset(canvas);\r\n\r\n            canvas.addEventListener(\"contextmenu\", (e) => this._HandleContextMenu(window.event ? <any>window.event : e));\r\n            canvas.addEventListener(\"mousedown\", (e) => this._HandleButtonPress(window.event ? <any>window.event : e));\r\n            canvas.addEventListener(\"mouseup\", (e) => this._HandleButtonRelease(window.event ? <any>window.event : e));\r\n            canvas.addEventListener(\"mouseout\", (e) => this._HandleOut(window.event ? <any>window.event : e));\r\n            canvas.addEventListener(\"mousemove\", (e) => this._HandleMove(window.event ? <any>window.event : e));\r\n\r\n            //IE9, Chrome, Safari, Opera\r\n            canvas.addEventListener(\"mousewheel\", (e) => this._HandleWheel(window.event ? <any>window.event : e));\r\n            //Firefox\r\n            canvas.addEventListener(\"DOMMouseScroll\", (e) => this._HandleWheel(window.event ? <any>window.event : e));\r\n        }\r\n\r\n        private _CalcOffset (canvas: HTMLCanvasElement): IOffset {\r\n            var left = 0;\r\n            var top = 0;\r\n            var cur: HTMLElement = canvas;\r\n            if (cur.offsetParent) {\r\n                do {\r\n                    left += cur.offsetLeft;\r\n                    top += cur.offsetTop;\r\n                } while (cur = <HTMLElement>cur.offsetParent);\r\n            }\r\n            return {left: left, top: top};\r\n        }\r\n\r\n        private _GetMousePosition (evt): Point {\r\n            return new Point(\r\n                evt.clientX + window.pageXOffset + this._CanvasOffset.left,\r\n                evt.clientY + window.pageYOffset + this._CanvasOffset.top);\r\n        }\r\n\r\n        IsLeftButton (button: number): boolean {\r\n            return button === 1;\r\n        }\r\n\r\n        IsRightButton (button: number): boolean {\r\n            return button === 2;\r\n        }\r\n\r\n        private _HandleContextMenu (evt) {\r\n            if (!this._IsContextMenuDisabled)\r\n                return;\r\n            this._IsContextMenuDisabled = false;\r\n            evt.stopPropagation && evt.stopPropagation();\r\n            evt.preventDefault && evt.preventDefault();\r\n            evt.cancelBubble = true;\r\n            return false;\r\n        }\r\n\r\n        private _HandleButtonPress (evt) {\r\n            Engine.Inspection.Kill();\r\n            Input.Keyboard.RefreshModifiers(createModifiers(evt));\r\n            var button = evt.which ? evt.which : evt.button;\r\n            var pos = this._GetMousePosition(evt);\r\n            if (this._Input.HandleMousePress(button, pos))\r\n                this.DisableNextContextMenu();\r\n        }\r\n\r\n        private _HandleButtonRelease (evt) {\r\n            Input.Keyboard.RefreshModifiers(createModifiers(evt));\r\n            var button = evt.which ? evt.which : evt.button;\r\n            var pos = this._GetMousePosition(evt);\r\n            this._Input.HandleMouseRelease(button, pos);\r\n        }\r\n\r\n        private _HandleOut (evt) {\r\n            Input.Keyboard.RefreshModifiers(createModifiers(evt));\r\n            var pos = this._GetMousePosition(evt);\r\n            this._Input.HandleMouseEvent(MouseInputType.MouseLeave, null, pos);\r\n        }\r\n\r\n        private _HandleMove (evt) {\r\n            Input.Keyboard.RefreshModifiers(createModifiers(evt));\r\n            var pos = this._GetMousePosition(evt);\r\n            this._Input.HandleMouseEvent(MouseInputType.MouseMove, null, pos);\r\n            this._Input.UpdateCursorFromInputList();\r\n        }\r\n\r\n        private _HandleWheel (evt) {\r\n            Input.Keyboard.RefreshModifiers(createModifiers(evt));\r\n            var delta = 0;\r\n            if (evt.wheelDelta)\r\n                delta = evt.wheelDelta / 120;\r\n            else if (evt.detail)\r\n                delta = -evt.detail / 3;\r\n            if (evt.preventDefault)\r\n                evt.preventDefault();\r\n            evt.returnValue = false;\r\n            this._Input.HandleMouseEvent(MouseInputType.MouseWheel, null, this._GetMousePosition(evt), delta);\r\n            this._Input.UpdateCursorFromInputList();\r\n        }\r\n\r\n        CreateEventArgs (type: MouseInputType, pos: Point, delta: number): Fayde.Input.MouseEventArgs {\r\n            switch (type) {\r\n                case MouseInputType.MouseUp:\r\n                    return new Fayde.Input.MouseButtonEventArgs(pos);\r\n                case MouseInputType.MouseDown:\r\n                    return new Fayde.Input.MouseButtonEventArgs(pos);\r\n                case MouseInputType.MouseLeave:\r\n                    return new Fayde.Input.MouseEventArgs(pos);\r\n                case MouseInputType.MouseEnter:\r\n                    return new Fayde.Input.MouseEventArgs(pos);\r\n                case MouseInputType.MouseMove:\r\n                    return new Fayde.Input.MouseEventArgs(pos);\r\n                case MouseInputType.MouseWheel:\r\n                    return new Fayde.Input.MouseWheelEventArgs(pos, delta);\r\n            }\r\n        }\r\n\r\n        DisableNextContextMenu () {\r\n            this._IsContextMenuDisabled = true;\r\n        }\r\n    }\r\n\r\n    class IEMouseInterop extends MouseInterop {\r\n        StopIEContextMenu: boolean = false;\r\n\r\n        DisableNextContextMenu () {\r\n            super.DisableNextContextMenu();\r\n            this.StopIEContextMenu = true;\r\n        }\r\n\r\n        RegisterEvents (input: Engine.InputManager, canvas: HTMLCanvasElement) {\r\n            super.RegisterEvents(input, canvas);\r\n            canvas.oncontextmenu = (e) => this._HandleIEContextMenu(e);\r\n        }\r\n\r\n        private _HandleIEContextMenu (evt) {\r\n            if (this.StopIEContextMenu) {\r\n                this.StopIEContextMenu = false;\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    class NetscapeMouseInterop extends MouseInterop {\r\n        IsRightButton (button: number): boolean {\r\n            return button === 3;\r\n        }\r\n    }\r\n    function createModifiers (e): IModifiersOn {\r\n        return {\r\n            Shift: e.shiftKey,\r\n            Ctrl: e.ctrlKey,\r\n            Alt: e.altKey\r\n        };\r\n    }\r\n}","/// <reference path=\"../Core/RoutedEventArgs.ts\" />\r\n\r\nmodule Fayde.Input {\r\n    export class TouchEventArgs extends RoutedEventArgs {\r\n        Device: ITouchDevice;\r\n        constructor(device: ITouchDevice) {\r\n            super();\r\n            this.Device = device;\r\n        }\r\n\r\n        GetTouchPoint(relativeTo: UIElement): TouchPoint {\r\n            return this.Device.GetTouchPoint(relativeTo);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(TouchEventArgs);\r\n}","module Fayde.Input {\r\n    export interface ITouchDevice {\r\n        Identifier: number;\r\n        Captured: UIElement;\r\n        Capture(uie: UIElement): boolean;\r\n        ReleaseCapture(uie: UIElement);\r\n        GetTouchPoint(relativeTo: UIElement): TouchPoint;\r\n    }\r\n    export enum TouchInputType {\r\n        NoOp = 0,\r\n        TouchDown = 1,\r\n        TouchUp = 2,\r\n        TouchMove = 3,\r\n        TouchEnter = 4,\r\n        TouchLeave = 5\r\n    }\r\n    export interface ITouchInterop {\r\n        Register(input: Engine.InputManager, canvas: HTMLCanvasElement);\r\n    }\r\n    export function CreateTouchInterop(): ITouchInterop {\r\n        if (navigator.msPointerEnabled || (<any>navigator).pointerEnabled)\r\n            return new TouchInternal.PointerTouchInterop();\r\n        if (\"ontouchstart\" in window)\r\n            return new TouchInternal.NonPointerTouchInterop();\r\n        return new DummyTouchInterop();\r\n    }\r\n\r\n    class DummyTouchInterop implements ITouchInterop {\r\n        Register(input: Engine.InputManager, canvas: HTMLCanvasElement) { }\r\n    }\r\n}","module Fayde.Input {\r\n    export class TouchPoint {\r\n        Position: Point;\r\n        //RadiusX: number;\r\n        //RadiusY: number;\r\n        //RotationAngle: number;\r\n        Force: number;\r\n        constructor(position: Point, force: number) {\r\n            Object.defineProperty(this, \"Position\", { value: position, writable: false });\r\n            //Object.defineProperty(this, \"RadiusX\", { value: radiusX, writable: false });\r\n            //Object.defineProperty(this, \"RadiusY\", { value: radiusY, writable: false });\r\n            //Object.defineProperty(this, \"RotationAngle\", { value: rotationAngle, writable: false });\r\n            Object.defineProperty(this, \"Force\", { value: force, writable: false });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(TouchPoint);\r\n}","module Fayde.Input {\r\n    var keyboardInput: HTMLInputElement;\r\n\r\n    export class VirtualKeyboard {\r\n        static Init () {\r\n            keyboardInput = document.createElement('input');\r\n            keyboardInput.type = \"text\";\r\n            var style = keyboardInput.style;\r\n            style.opacity = \"0\";\r\n            style.cssFloat = \"left\";\r\n            style.width = \"0\";\r\n            style.height = \"0\";\r\n            style.borderWidth = \"0\";\r\n            document.body.insertBefore(keyboardInput, document.body.firstElementChild);\r\n        }\r\n\r\n        static Launch () {\r\n            console.log(\"Launch\");\r\n            keyboardInput.focus();\r\n        }\r\n    }\r\n}","class TimeSpan {\r\n    static _TicksPerMillisecond = 1;\r\n    static _TicksPerSecond = 1000;\r\n    static _TicksPerMinute = TimeSpan._TicksPerSecond * 60;\r\n    static _TicksPerHour = TimeSpan._TicksPerMinute * 60;\r\n    static _TicksPerDay = TimeSpan._TicksPerHour * 24;\r\n\r\n    private _Ticks: number = 0;\r\n\r\n    static get Zero(): TimeSpan { return new TimeSpan(); }\r\n    static get MinValue(): TimeSpan { return new TimeSpan(Number.MIN_VALUE); }\r\n    static get MaxValue(): TimeSpan { return new TimeSpan(Number.MAX_VALUE); }\r\n\r\n    static FromDays(value: number): TimeSpan {\r\n        return new TimeSpan(value * this._TicksPerDay);\r\n    }\r\n    static FromHours(value: number): TimeSpan {\r\n        return new TimeSpan(value * this._TicksPerHour);\r\n    }\r\n    static FromMinutes(value: number): TimeSpan {\r\n        return new TimeSpan(value * this._TicksPerMinute);\r\n    }\r\n    static FromSeconds(value: number): TimeSpan {\r\n        return new TimeSpan(value * this._TicksPerSecond);\r\n    }\r\n    static FromMilliseconds(value: number): TimeSpan {\r\n        return new TimeSpan(value * this._TicksPerMillisecond);\r\n    }\r\n\r\n    constructor();\r\n    constructor(ticks: number);\r\n    constructor(hours: number, minutes: number, seconds: number);\r\n    constructor(days: number, hours: number, minutes: number, seconds: number, milliseconds?: number);\r\n    constructor(...args: any[]) {\r\n        if (args.length === 0)\r\n            return;\r\n        if (args.length === 1) {\r\n            this._Ticks = args[0] || 0;\r\n            return;\r\n        }\r\n        var days = 0;\r\n        var hours = 0;\r\n        var minutes = 0;\r\n        var seconds = 0;\r\n        var milliseconds = 0;\r\n\r\n        if (args.length === 3) {\r\n            hours = args[0] || 0;\r\n            minutes = args[1] || 0;\r\n            seconds = args[2] || 0;\r\n        } else {\r\n            days = args[0] || 0;\r\n            hours = args[1] || 0;\r\n            minutes = args[2] || 0;\r\n            seconds = args[3] || 0;\r\n            milliseconds = args[4] || 0;\r\n        }\r\n        \r\n        this._Ticks = (days * TimeSpan._TicksPerDay) + (hours * TimeSpan._TicksPerHour) + (minutes * TimeSpan._TicksPerMinute)\r\n            + (seconds * TimeSpan._TicksPerSecond) + (milliseconds * TimeSpan._TicksPerMillisecond);\r\n    }\r\n\r\n    get Days(): number {\r\n        return this._Ticks > 0 ? Math.floor(this._Ticks / TimeSpan._TicksPerDay) : Math.ceil(this._Ticks / TimeSpan._TicksPerDay);\r\n    }\r\n    get Hours(): number {\r\n        var remTicks = this._Ticks % TimeSpan._TicksPerDay;\r\n        return remTicks > 0 ? Math.floor(remTicks / TimeSpan._TicksPerHour) : Math.ceil(remTicks / TimeSpan._TicksPerHour);\r\n    }\r\n    get Minutes(): number {\r\n        var remTicks = this._Ticks % TimeSpan._TicksPerDay;\r\n        remTicks = remTicks % TimeSpan._TicksPerHour;\r\n        return remTicks > 0 ? Math.floor(remTicks / TimeSpan._TicksPerMinute) : Math.ceil(remTicks / TimeSpan._TicksPerMinute);\r\n    }\r\n    get Seconds(): number {\r\n        var remTicks = this._Ticks % TimeSpan._TicksPerDay;\r\n        remTicks = remTicks % TimeSpan._TicksPerHour;\r\n        remTicks = remTicks % TimeSpan._TicksPerMinute;\r\n        return remTicks > 0 ? Math.floor(remTicks / TimeSpan._TicksPerSecond) : Math.ceil(remTicks / TimeSpan._TicksPerSecond);\r\n    }\r\n    get Milliseconds(): number {\r\n        var remTicks = this._Ticks % TimeSpan._TicksPerDay;\r\n        remTicks = remTicks % TimeSpan._TicksPerHour;\r\n        remTicks = remTicks % TimeSpan._TicksPerMinute;\r\n        remTicks = remTicks % TimeSpan._TicksPerSecond;\r\n        return remTicks > 0 ? Math.floor(remTicks / TimeSpan._TicksPerMillisecond) : Math.ceil(remTicks / TimeSpan._TicksPerMillisecond);\r\n    }\r\n    get Ticks(): number { return this._Ticks; }\r\n\r\n    get TotalDays(): number { return this._Ticks / TimeSpan._TicksPerDay; }\r\n    get TotalHours(): number { return this._Ticks / TimeSpan._TicksPerHour; }\r\n    get TotalMinutes(): number { return this._Ticks / TimeSpan._TicksPerMinute; }\r\n    get TotalSeconds(): number { return this._Ticks / TimeSpan._TicksPerSecond; }\r\n    get TotalMilliseconds(): number { return this._Ticks / TimeSpan._TicksPerMillisecond; }\r\n\r\n    AddTicks(ticks: number) {\r\n        if (ticks == null)\r\n            return;\r\n        if (isNaN(ticks))\r\n            return;\r\n        this._Ticks += ticks;\r\n    }\r\n    AddMilliseconds(milliseconds: number) {\r\n        this.AddTicks(milliseconds * TimeSpan._TicksPerMillisecond);\r\n    }\r\n\r\n    Add(ts2: TimeSpan): TimeSpan {\r\n        var ts = new TimeSpan();\r\n        ts._Ticks = this._Ticks + ts2._Ticks;\r\n        return ts;\r\n    }\r\n    Subtract(ts2: TimeSpan): TimeSpan {\r\n        var ts = new TimeSpan();\r\n        ts._Ticks = this._Ticks - ts2._Ticks;\r\n        return ts;\r\n    }\r\n    Multiply(v: number): TimeSpan {\r\n        var ts = new TimeSpan();\r\n        ts._Ticks = Math.round(this._Ticks * v);\r\n        return ts;\r\n    }\r\n    Divide(ts2: TimeSpan): TimeSpan {\r\n        var ts = new TimeSpan();\r\n        ts._Ticks = this._Ticks / ts2._Ticks;\r\n        return ts;\r\n    }\r\n    CompareTo(ts2: TimeSpan): number {\r\n        if (this._Ticks === ts2._Ticks)\r\n            return 0;\r\n        return (this._Ticks > ts2._Ticks) ? 1 : -1;\r\n    }\r\n    IsZero(): boolean {\r\n        return this._Ticks === 0;\r\n    }\r\n\r\n    GetJsDelay(): number {\r\n        return this._Ticks * TimeSpan._TicksPerMillisecond;\r\n    }\r\n\r\n    toString(format?: string): string {\r\n        if (!format)\r\n            return Fayde.Localization.FormatSingle(this, \"c\");\r\n        return Fayde.Localization.FormatSingle(this, format);\r\n    }\r\n    valueOf(): Object {\r\n        return this.Ticks;\r\n    }\r\n}\r\nFayde.CoreLibrary.addPrimitive(TimeSpan);\r\n\r\nnullstone.registerTypeConverter(TimeSpan, (val: any): TimeSpan => {\r\n    if (val instanceof TimeSpan)\r\n        return <TimeSpan>val;\r\n    if (val instanceof Duration)\r\n    {\r\n\tvar duration = <Duration>val;\r\n\tif (duration.HasTimeSpan)\r\n            return new TimeSpan(duration.TimeSpan.Ticks);\r\n\telse\r\n            throw new Exception(\"Cannot convert \" + duration.IsForever ? \"Forever\" : \"Automatic\" +\r\n\t\t\t\t+ \" duration to TimeSpan\");\r\n    }\r\n    if (typeof val === \"number\")\r\n        return new TimeSpan(<number>val);\r\n    val = val.toString();\r\n\r\n    var tokens = val.split(\":\");\r\n    if (tokens.length === 1) {\r\n        var ticks = parseFloat(val);\r\n        if (!isNaN(ticks))\r\n            return new TimeSpan(<number>ticks);\r\n        throw new Exception(\"Invalid TimeSpan format '\" + val + \"'.\");\r\n    }\r\n\r\n    if (tokens.length !== 3)\r\n        throw new Exception(\"Invalid TimeSpan format '\" + val + \"'.\");\r\n\r\n    /// [days.]hours:minutes:seconds[.fractionalSeconds]\r\n    var days = 0;\r\n    var hours: number;\r\n    var minutes: number;\r\n    var seconds: number;\r\n    var milliseconds = 0;\r\n\r\n    var daysplit = tokens[0].split(\".\");\r\n    if (daysplit.length === 2) {\r\n        days = parseInt(daysplit[0]);\r\n        hours = parseInt(daysplit[1]);\r\n    } else if (daysplit.length === 1) {\r\n        hours = parseInt(daysplit[0]);\r\n    }\r\n\r\n    minutes = parseInt(tokens[1]);\r\n\r\n    seconds = parseFloat(tokens[2]);\r\n    milliseconds = seconds % 1;\r\n    seconds = seconds - milliseconds;\r\n    milliseconds *= 1000.0;\r\n\r\n    return new TimeSpan(days, hours, minutes, seconds, milliseconds);\r\n});\r\n","/// <reference path=\"TimeSpan.ts\" />\r\n\r\nenum DayOfWeek {\r\n    Sunday,\r\n    Monday,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday\r\n}\r\nFayde.CoreLibrary.addEnum(DayOfWeek, \"DayOfWeek\");\r\n\r\nenum DateTimeKind {\r\n    Unspecified = 0,\r\n    Local = 1,\r\n    Utc = 2\r\n}\r\nFayde.CoreLibrary.addEnum(DateTimeKind, \"DateTimeKind\");\r\n\r\nclass DateTime {\r\n    private static MAX_TICKS = 8640000000000000;\r\n    private static MIN_TICKS = -8640000000000000;\r\n\r\n    static get MinValue() { return new DateTime(DateTime.MIN_TICKS); }\r\n    static get MaxValue() { return new DateTime(DateTime.MAX_TICKS); }\r\n    static get Now(): DateTime { return new DateTime(new Date().getTime(), DateTimeKind.Local); }\r\n    static get Today(): DateTime { return DateTime.Now.Date; }\r\n    static Compare(dt1: DateTime, dt2: DateTime): number {\r\n        var t1 = dt1._InternalDate.getTime();\r\n        var t2 = dt2._InternalDate.getTime();\r\n        if (t1 < t2)\r\n            return -1;\r\n        if (t1 > t2)\r\n            return 1;\r\n        return 0;\r\n    }\r\n\r\n    static DaysInMonth(year: number, month: number): number {\r\n        var ticks = new Date(year, (month - 1) + 1, 1).getTime() - TimeSpan._TicksPerDay;\r\n        var dt = new DateTime(ticks);\r\n        return dt.Day;\r\n    }\r\n\r\n    private _InternalDate: Date = null;\r\n    private _Kind: DateTimeKind;\r\n\r\n    constructor();\r\n    constructor(dt: Date);\r\n    constructor(dt: Date, kind: DateTimeKind);\r\n    constructor(ticks: number);\r\n    constructor(ticks: number, kind: DateTimeKind);\r\n    constructor(year: number, month: number, day: number);\r\n    constructor(year: number, month: number, day: number, hour: number, minute: number, second: number);\r\n    constructor(year: number, month: number, day: number, hour: number, minute: number, second: number, millisecond: number);\r\n    constructor(year: number, month: number, day: number, hour: number, minute: number, second: number, millisecond: number, kind: DateTimeKind);\r\n    constructor(...args: any[]) {\r\n        var ticks: number = null;\r\n        var kind = DateTimeKind.Unspecified;\r\n        var year = 0;\r\n        var month = 0;\r\n        var day = 0;\r\n        var hour = 0;\r\n        var minute = 0;\r\n        var second = 0;\r\n        var millisecond = 0;\r\n\r\n        if (args.length === 1) { //Ticks\r\n            var arg0 = args[0];\r\n            if (arg0 instanceof Date) {\r\n                ticks = arg0.getTime();\r\n            } else {\r\n                ticks = args[0];\r\n            }\r\n        } else if (args.length === 2) { //Ticks,Kind\r\n            var arg0 = args[0];\r\n            if (arg0 instanceof Date) {\r\n                ticks = arg0.getTime();\r\n            } else {\r\n                ticks = args[0];\r\n            }\r\n            kind = args[1];\r\n        } else if (args.length === 3) { //Year,Month,Day\r\n            year = args[0];\r\n            month = args[1];\r\n            day = args[2];\r\n        } else if (args.length === 6) { //Year,Month,Day,Hour,Minute,Second\r\n            year = args[0];\r\n            month = args[1];\r\n            day = args[2];\r\n            hour = args[3];\r\n            minute = args[4];\r\n            second = args[5];\r\n        } else if (args.length === 7) { //Year,Month,Day,Hour,Minute,Second,Millisecond\r\n            year = args[0];\r\n            month = args[1];\r\n            day = args[2];\r\n            hour = args[3];\r\n            minute = args[4];\r\n            second = args[5];\r\n            millisecond = args[6];\r\n        } else if (args.length === 8) { //Year,Month,Day,Hour,Minute,Second,Millisecond,DateTimeKind\r\n            year = args[0];\r\n            month = args[1];\r\n            day = args[2];\r\n            hour = args[3];\r\n            minute = args[4];\r\n            second = args[5];\r\n            millisecond = args[6];\r\n            kind = args[7];\r\n        } else {\r\n            ticks = 0;\r\n        }\r\n\r\n        this._Kind = kind || DateTimeKind.Unspecified;\r\n        if (isNaN(ticks) || ticks < DateTime.MIN_TICKS || ticks > DateTime.MAX_TICKS) {\r\n            throw new Error(\"DateTime is out of range.\");\r\n        }\r\n        if (ticks != null) {\r\n            this._InternalDate = new Date(ticks);\r\n            return;\r\n        }\r\n        var id = this._InternalDate = new Date();\r\n        if (this._Kind === DateTimeKind.Utc) {\r\n            id.setUTCFullYear(year, month - 1, day);\r\n            id.setUTCHours(hour);\r\n            id.setUTCMinutes(minute);\r\n            id.setUTCSeconds(second);\r\n            id.setMilliseconds(millisecond);\r\n        } else {\r\n            id.setFullYear(year, month - 1, day);\r\n            id.setHours(hour);\r\n            id.setMinutes(minute);\r\n            id.setSeconds(second);\r\n            id.setMilliseconds(millisecond);\r\n        }\r\n    }\r\n\r\n    get Ticks(): number { return this._InternalDate.getTime(); }\r\n    get Kind(): DateTimeKind { return this._Kind; }\r\n    get Date(): DateTime {\r\n        var t = this._InternalDate.getTime();\r\n        var newid = new Date(t);\r\n        if (this._Kind === DateTimeKind.Utc) {\r\n            newid.setUTCHours(0);\r\n            newid.setUTCMinutes(0);\r\n            newid.setUTCSeconds(0);\r\n            newid.setUTCMilliseconds(0);\r\n        } else {\r\n            newid.setHours(0);\r\n            newid.setMinutes(0);\r\n            newid.setSeconds(0);\r\n            newid.setMilliseconds(0);\r\n        }\r\n        return new DateTime(newid.getTime(), this._Kind);\r\n    }\r\n    get Day(): number {\r\n        if (this._Kind === DateTimeKind.Utc)\r\n            return this._InternalDate.getUTCDate();\r\n        return this._InternalDate.getDate();\r\n    }\r\n    get DayOfWeek(): DayOfWeek {\r\n        if (this._Kind === DateTimeKind.Utc)\r\n            return <DayOfWeek>this._InternalDate.getUTCDay();\r\n        return <DayOfWeek>this._InternalDate.getDay();\r\n    }\r\n    get DayOfYear(): number {\r\n        var dt = this.Date;\r\n        var base = new DateTime(dt.Year, 1, 1, 0, 0, 0, 0, this.Kind);\r\n        var diff = new TimeSpan(dt.Ticks - base.Ticks);\r\n        return Math.floor(diff.TotalDays);\r\n    }\r\n    get Hour(): number {\r\n        if (this._Kind === DateTimeKind.Utc)\r\n            return this._InternalDate.getUTCHours();\r\n        return this._InternalDate.getHours();\r\n    }\r\n    get Millisecond(): number {\r\n        if (this._Kind === DateTimeKind.Utc)\r\n            return this._InternalDate.getUTCMilliseconds();\r\n        return this._InternalDate.getMilliseconds();\r\n    }\r\n    get Minute(): number {\r\n        if (this._Kind === DateTimeKind.Utc)\r\n            return this._InternalDate.getUTCMinutes();\r\n        return this._InternalDate.getMinutes();\r\n    }\r\n    get Month(): number {\r\n        if (this._Kind === DateTimeKind.Utc)\r\n            return this._InternalDate.getUTCMonth() + 1;\r\n        return this._InternalDate.getMonth() + 1;\r\n    }\r\n    get Second(): number {\r\n        if (this._Kind === DateTimeKind.Utc)\r\n            return this._InternalDate.getUTCSeconds();\r\n        return this._InternalDate.getSeconds();\r\n    }\r\n    get TimeOfDay(): TimeSpan {\r\n        var id = this._InternalDate;\r\n        if (this._Kind === DateTimeKind.Utc)\r\n            return new TimeSpan(0, id.getUTCHours(), id.getUTCMinutes(), id.getUTCSeconds(), id.getUTCMilliseconds());\r\n        return new TimeSpan(0, id.getHours(), id.getMinutes(), id.getSeconds(), id.getMilliseconds());\r\n    }\r\n    get Year(): number {\r\n        if (this._Kind === DateTimeKind.Utc)\r\n            return this._InternalDate.getUTCFullYear();\r\n        return this._InternalDate.getFullYear();\r\n    }\r\n\r\n    AddYears(years: number): DateTime {\r\n        var newid = new Date(this._InternalDate.getTime());\r\n        var wyears = Math.floor(years);\r\n        if (isNaN(wyears)) {\r\n            throw new ArgumentOutOfRangeException(\"years\");\r\n        }\r\n        if (this.Kind === DateTimeKind.Utc) {\r\n            newid.setUTCFullYear(newid.getUTCFullYear() + wyears);\r\n        } else {\r\n            newid.setFullYear(newid.getFullYear() + wyears);\r\n        }\r\n        return new DateTime(newid, this.Kind);\r\n    }\r\n    AddMonths(months: number): DateTime {\r\n        var newid = new Date(this._InternalDate.getTime());\r\n        var wmonths = Math.floor(months);\r\n        if (isNaN(wmonths)) {\r\n            throw new ArgumentOutOfRangeException(\"months\");\r\n        }\r\n        if (this.Kind === DateTimeKind.Utc) {\r\n            newid.setUTCMonth(newid.getUTCMonth() + wmonths);\r\n        } else {\r\n            newid.setMonth(newid.getMonth() + wmonths);\r\n        }\r\n        return new DateTime(newid, this.Kind);\r\n    }\r\n    AddDays(value: number): DateTime {\r\n        return this.Add(TimeSpan.FromDays(value));\r\n    }\r\n    AddHours(value: number): DateTime {\r\n        return this.Add(TimeSpan.FromHours(value));\r\n    }\r\n    AddMinutes(value: number): DateTime {\r\n        return this.Add(TimeSpan.FromMinutes(value));\r\n    }\r\n    AddSeconds(value: number): DateTime {\r\n        return this.Add(TimeSpan.FromSeconds(value));\r\n    }\r\n    AddMilliseconds(value: number): DateTime {\r\n        return this.Add(TimeSpan.FromMilliseconds(value));\r\n    }\r\n    Add(value: TimeSpan): DateTime {\r\n        var newid = new Date(this._InternalDate.getTime());\r\n        if (this.Kind === DateTimeKind.Utc) {\r\n            newid.setUTCDate(newid.getUTCDate() + value.Days);\r\n            newid.setUTCHours(newid.getUTCHours() + value.Hours);\r\n            newid.setUTCMinutes(newid.getUTCMinutes() + value.Minutes);\r\n            newid.setUTCSeconds(newid.getUTCSeconds() + value.Seconds);\r\n            newid.setUTCMilliseconds(newid.getUTCMilliseconds() + value.Milliseconds);\r\n        } else {\r\n            newid.setDate(newid.getDate() + value.Days);\r\n            newid.setHours(newid.getHours() + value.Hours);\r\n            newid.setMinutes(newid.getMinutes() + value.Minutes);\r\n            newid.setSeconds(newid.getSeconds() + value.Seconds);\r\n            newid.setMilliseconds(newid.getMilliseconds() + value.Milliseconds);\r\n        }\r\n        return new DateTime(newid, this.Kind);\r\n    }\r\n    AddTicks(value: number): DateTime {\r\n        return new DateTime(this.Ticks + value, this.Kind);\r\n    }\r\n\r\n    Subtract(value: DateTime): TimeSpan;\r\n    Subtract(value: TimeSpan): DateTime;\r\n    Subtract(value: any): any {\r\n        if (value instanceof DateTime) {\r\n            return new TimeSpan(this.Ticks - value.Ticks);\r\n        } else if (value instanceof TimeSpan) {\r\n            return new DateTime(this.Ticks - value.Ticks, this.Kind);\r\n        }\r\n        return new DateTime(this.Ticks, this.Kind);\r\n    }\r\n\r\n    ToUniversalTime(): DateTime {\r\n        if (this.Kind === DateTimeKind.Utc)\r\n            return new DateTime(this.Ticks, DateTimeKind.Utc);\r\n        var id = this._InternalDate;\r\n        return new DateTime(id.getUTCFullYear(), id.getUTCMonth() + 1, id.getUTCDate(), id.getUTCHours(), id.getUTCMinutes(), id.getUTCSeconds(), id.getUTCMilliseconds(), DateTimeKind.Utc);\r\n    }\r\n\r\n    toString(format?: string): string {\r\n        if (!format)\r\n            return Fayde.Localization.FormatSingle(this, \"s\");\r\n        return Fayde.Localization.FormatSingle(this, format);\r\n    }\r\n    valueOf(): Object {\r\n        return this.Ticks;\r\n    }\r\n}\r\nFayde.CoreLibrary.addPrimitive(DateTime);\r\nnullstone.registerTypeConverter(DateTime, (value: any): any => {\r\n    if (value instanceof DateTime)\r\n        return value;\r\n    if (value instanceof Date)\r\n        return new DateTime(value);\r\n    if (typeof value === \"string\")\r\n        return new DateTime(Date.parse(value));\r\n    if (typeof value === \"number\")\r\n        return new DateTime(value);\r\n    throw new Exception(\"Cannot parse DateTime value '\" + value + \"'\");\r\n});","/// <reference path=\"../Primitives/DateTime.ts\" />\r\n\r\nmodule Fayde.Localization {\r\n    export class Calendar {\r\n        ID: number = 1;\r\n        Eras: number[] = [1];\r\n        EraNames: string[] = [\"A.D.\"];\r\n        CurrentEraValue:number=1;\r\n        TwoDigitYearMax: number = 2029;\r\n        MaxSupportedDateTime = new DateTime(9999, 12, 31, 23, 59, 59, 999);\r\n        MinSupportedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0);\r\n    }\r\n}","/// <reference path=\"Calendar.ts\" />\r\n\r\nmodule Fayde.Localization {\r\n    export enum CalendarWeekRule {\r\n        FirstDay,\r\n        FirstFullWeek,\r\n        FirstFourDayWeek,\r\n    }\r\n    export class DateTimeFormatInfo {\r\n        AbbreviatedDayNames: string[] = [\r\n            \"Sun\",\r\n            \"Mon\",\r\n            \"Tue\",\r\n            \"Wed\",\r\n            \"Thu\",\r\n            \"Fri\",\r\n            \"Sat\"\r\n        ];\r\n        AbbreviatedMonthGenitiveNames: string[] = [\r\n            \"Jan\",\r\n            \"Feb\",\r\n            \"Mar\",\r\n            \"Apr\",\r\n            \"May\",\r\n            \"Jun\",\r\n            \"Jul\",\r\n            \"Aug\",\r\n            \"Sep\",\r\n            \"Oct\",\r\n            \"Nov\",\r\n            \"Dec\",\r\n            \"\"\r\n        ];\r\n        AbbreviatedMonthNames: string[] = [\r\n            \"Jan\",\r\n            \"Feb\",\r\n            \"Mar\",\r\n            \"Apr\",\r\n            \"May\",\r\n            \"Jun\",\r\n            \"Jul\",\r\n            \"Aug\",\r\n            \"Sep\",\r\n            \"Oct\",\r\n            \"Nov\",\r\n            \"Dec\"\r\n        ];\r\n        AMDesignator: string = \"AM\";\r\n        Calendar = new Calendar();\r\n        CalendarWeekRule: CalendarWeekRule = CalendarWeekRule.FirstDay;\r\n        DateSeparator: string = \"/\";\r\n        DayNames: string[] = [\r\n            \"Sunday\",\r\n            \"Monday\",\r\n            \"Tuesday\",\r\n            \"Wednesday\",\r\n            \"Thursday\",\r\n            \"Friday\",\r\n            \"Saturday\"\r\n        ];\r\n        FirstDayOfWeek: DayOfWeek = DayOfWeek.Sunday;\r\n        FullDateTimePattern: string = \"dddd, MMMM dd, yyyy h:mm:ss tt\";\r\n        LongDatePattern: string = \"dddd, MMMM dd, yyyy\";\r\n        LongTimePattern: string = \"h:mm:ss tt\";\r\n        MonthDayPattern: string = \"MMMM dd\";\r\n        MonthGenitiveNames: string[] = [\r\n            \"January\",\r\n            \"February\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\",\r\n            \"\"\r\n        ];\r\n        MonthNames: string[] = [\r\n            \"January\",\r\n            \"February\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\"\r\n        ];\r\n        PMDesignator: string = \"PM\";\r\n        RFC1123Pattern: string = \"ddd, dd MMM yyyy HH':'mm':'ss 'GMT'\";\r\n        ShortDatePattern: string = \"M/d/yyyy\";\r\n        ShortestDayNames: string[] = [\r\n            \"Su\",\r\n            \"Mo\",\r\n            \"Tu\",\r\n            \"We\",\r\n            \"Th\",\r\n            \"Fr\",\r\n            \"Sa\"\r\n        ];\r\n        ShortTimePattern: string = \"h:mm tt\";\r\n        SortableDateTimePattern: string = \"yyyy'-'MM'-'dd'T'HH':'mm':'ss\";\r\n        TimeSeparator: string = \":\";\r\n        UniversalSortableDateTimePattern: string = \"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\";\r\n        YearMonthPattern: string = \"MMMM, yyyy\";\r\n\r\n        HasForceTwoDigitYears: boolean = false;\r\n\r\n        GetEraName(era: number): string {\r\n            if (era === 0)\r\n                era = this.Calendar.CurrentEraValue;\r\n            if (era < 0)\r\n                throw new ArgumentException(\"era\");\r\n            var eras = this.Calendar.EraNames;\r\n            if (era >= eras.length)\r\n                throw new ArgumentException(\"era\");\r\n            return eras[era];\r\n        }\r\n\r\n        static Instance = new DateTimeFormatInfo();\r\n\r\n        static ParseRepeatPattern(format: string, pos: number, patternChar: string): number {\r\n            var length = format.length;\r\n            var index = pos + 1;\r\n            var code = patternChar.charCodeAt(0);\r\n            while (index < length && format.charCodeAt(index) === code)\r\n                ++index;\r\n            return index - pos;\r\n        }\r\n        static ParseNextChar(format: string, pos: number): number {\r\n            if (pos >= format.length - 1)\r\n                return -1;\r\n            return format.charCodeAt(pos + 1);\r\n        }\r\n        static ParseQuoteString(format: string, pos: number, result: string[]): number {\r\n            var length = format.length;\r\n            var num = pos;\r\n            var ch1 = format[pos++];\r\n            var flag = false;\r\n            var special = String.fromCharCode(92);\r\n            while (pos < length) {\r\n                var ch2 = format[pos++];\r\n                if (ch2 === ch1) {\r\n                    flag = true;\r\n                    break;\r\n                } else if (ch2 === special) {\r\n                    if (pos >= length)\r\n                        throw new FormatException(\"Invalid format string.\");\r\n                    result.push(format[pos++]);\r\n                } else\r\n                    result.push(ch2);\r\n            }\r\n            if (flag)\r\n                return pos - num;\r\n            throw new FormatException(\"Bad quote: \" + ch1);\r\n        }\r\n        static FormatDigits(sb: string[], value: number, len: number, overrideLenLimit?: boolean) {\r\n            if (!overrideLenLimit && len > 2)\r\n                len = 2;\r\n\r\n            var s = Math.floor(value).toString();\r\n            while (s.length < len)\r\n                s = \"0\" + s;\r\n            sb.push(s);\r\n        }\r\n        static FormatMonth(month: number, repeat: number, info: DateTimeFormatInfo): string {\r\n            if (repeat === 3)\r\n                return info.AbbreviatedMonthNames[month - 1];\r\n            return info.MonthNames[month - 1];\r\n        }\r\n        static FormatDayOfWeek(dayOfWeek: DayOfWeek, repeat: number, info: DateTimeFormatInfo): string {\r\n            if (repeat === 3)\r\n                return info.AbbreviatedDayNames[dayOfWeek];\r\n            return info.DayNames[dayOfWeek];\r\n        }\r\n\r\n        static HebrewFormatDigits(sb: string[], digits: number) {\r\n            //TODO:\r\n            console.warn(\"Hebrew not implemented\");\r\n            return digits.toString();\r\n        }\r\n        static FormatHebrewMonthName(obj: DateTime, month: number, repeat: number, info: DateTimeFormatInfo): string {\r\n            console.warn(\"Hebrew not implemented\");\r\n            return DateTimeFormatInfo.FormatMonth(month, repeat, info);\r\n        /*\r\n            if (info.Calendar.IsLeapYear(info.Calendar.GetYear(obj)))\r\n                return info.internalGetMonthName(month, MonthNameStyles.LeapYear, repeat === 3);\r\n                */\r\n            if (month >= 7)\r\n                ++month;\r\n            if (repeat === 3)\r\n                return info.AbbreviatedMonthNames[month-1];\r\n            return info.MonthNames[month-1];\r\n        }\r\n    }\r\n}","module Fayde.Localization {\r\n    export function Format(format: string, ...items: any[]): string {\r\n        var sb: string[] = [];\r\n        appendFormat(sb, format, items);\r\n        return sb.join(\"\");\r\n    }\r\n    export function FormatSingle(obj: any, format: string): string {\r\n        return doFormattable(obj, format);\r\n    }\r\n\r\n    function appendFormat(_this: string[], format: string, args: any[], provider?: any) {\r\n        if (format == null || args == null)\r\n            throw new ArgumentNullException(format == null ? \"format\" : \"args\");\r\n        var index1 = 0;\r\n        var length = format.length;\r\n        var ch = 0;\r\n        while (true) {\r\n            var flag = false;\r\n            var repeatCount = 0;\r\n            var breakout = false;\r\n            do {\r\n                if (index1 < length) {\r\n                    ch = format.charCodeAt(index1);\r\n                    ++index1;\r\n                    if (ch === 125) {\r\n                        if (index1 < length && format.charCodeAt(index1) === 125)\r\n                            ++index1;\r\n                        else\r\n                            throw formatError();\r\n                    }\r\n                    if (ch === 123) {\r\n                        if (index1 >= length || format.charCodeAt(index1) !== 123)\r\n                            --index1;\r\n                        else {\r\n                            breakout = true;\r\n                            ++index1;\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        _this.push(String.fromCharCode(ch));\r\n                        breakout = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (index1 != length) {\r\n                    var index2 = index1 + 1;\r\n                    if (index2 === length || (ch = format.charCodeAt(index2)) < 48 || ch > 57)\r\n                        throw formatError();\r\n                    var index3 = 0;\r\n                    do {\r\n                        index3 = index3 * 10 + ch - 48;\r\n                        ++index2;\r\n                        if (index2 == length)\r\n                            throw formatError();\r\n                        ch = format.charCodeAt(index2);\r\n                    }\r\n                    while (ch >= 48 && ch <= 57 && index3 < 1000000);\r\n                    if (index3 >= args.length)\r\n                        throw new FormatException(\"Index out of range.\");\r\n                    while (index2 < length && (ch = format.charCodeAt(index2)) === 32)\r\n                        ++index2;\r\n                    flag = false;\r\n                    var num = 0;\r\n                    if (ch === 44) {\r\n                        ++index2;\r\n                        while (index2 < length && format.charCodeAt(index2) === 32)\r\n                            ++index2;\r\n                        if (index2 == length)\r\n                            throw formatError();\r\n                        ch = format.charCodeAt(index2);\r\n                        if (ch === 45) {\r\n                            flag = true;\r\n                            ++index2;\r\n                            if (index2 == length)\r\n                                throw formatError();\r\n                            ch = format.charCodeAt(index2);\r\n                        }\r\n                        if (ch < 48 || ch > 57)\r\n                            throw formatError();\r\n                        do {\r\n                            num = num * 10 + ch - 48;\r\n                            ++index2;\r\n                            if (index2 == length)\r\n                                throw formatError();\r\n                            ch = format.charCodeAt(index2);\r\n                        } while (ch >= 48 && ch <= 57 && num < 1000000);\r\n                    }\r\n                    while (index2 < length && (ch = format.charCodeAt(index2)) === 32)\r\n                        ++index2;\r\n                    var obj = args[index3];\r\n                    var stringBuilder: string[] = null;\r\n                    if (ch === 58) {\r\n                        var index4 = index2 + 1;\r\n                        while (true) {\r\n                            if (index4 === length)\r\n                                throw formatError();\r\n                            ch = format.charCodeAt(index4);\r\n                            ++index4;\r\n                            if (ch === 123) {\r\n                                if (index4 < length && format.charCodeAt(index4) === 123)\r\n                                    ++index4;\r\n                                else\r\n                                    throw formatError();\r\n                            } else if (ch === 125) {\r\n                                if (index4 < length && format.charCodeAt(index4) === 125)\r\n                                    ++index4;\r\n                                else\r\n                                    break;\r\n                            }\r\n                            stringBuilder = stringBuilder || [];\r\n                            stringBuilder.push(String.fromCharCode(ch));\r\n                        }\r\n                        index2 = index4 - 1;\r\n                    }\r\n                    if (ch !== 125)\r\n                        throw formatError();\r\n                    index1 = index2 + 1;\r\n                    var str = formatItem(obj, stringBuilder, provider) || \"\";\r\n                    repeatCount = num - str.length;\r\n                    if (!flag && repeatCount > 0)\r\n                        pushMany(_this, ' ', repeatCount);\r\n                    _this.push(str);\r\n                }\r\n                else\r\n                    return;\r\n            } while (!flag || repeatCount <= 0);\r\n            if (!breakout)\r\n                pushMany(_this, ' ', repeatCount);\r\n        }\r\n    }\r\n    function formatItem(obj: any, stringBuilder: string[], provider: any): string {\r\n        var format1: string = null;\r\n        var str: string = null;\r\n        /*\r\n        if (customFormatter != null) {\r\n            if (stringBuilder != null)\r\n                format1 = stringBuilderToString(stringBuilder);\r\n            str = customFormatter.Format(format1, obj, provider);\r\n        }\r\n        */\r\n        if (str == null) {\r\n            if (format1 == null && stringBuilder != null)\r\n                format1 = stringBuilderToString(stringBuilder);\r\n            var formatted = format1 == null ? (obj == null ? \"\" : obj.toString()) : doFormattable(obj, format1, provider);\r\n            if (formatted !== undefined)\r\n                str = formatted;\r\n        }\r\n        return str;\r\n    }\r\n    function pushMany(arr: string[], s: string, count: number) {\r\n        for (var i = count - 1; i >= 0; i--) {\r\n            arr.push(s);\r\n        }\r\n    }\r\n    function formatError(): FormatException {\r\n        return new FormatException(\"Invalid format string.\");\r\n    }\r\n    function stringBuilderToString(arr: string[]): string {\r\n        return arr.join(\"\");\r\n    }\r\n\r\n    export interface IFormattable {\r\n        (obj: any, format: string, provider?: any): string;\r\n    }\r\n    var formatters: IFormattable[] = [];\r\n    export function RegisterFormattable(type: Function, formatter: IFormattable) {\r\n        formatters[(<any>type)] = formatter;\r\n    }\r\n    function doFormattable(obj: any, format: string, provider?: any): string {\r\n        if (obj == null)\r\n            return undefined;\r\n        var type = obj.constructor;\r\n        var formatter = formatters[(<number>type)];\r\n        if (!formatter)\r\n            return undefined;\r\n        return formatter(obj, format, provider);\r\n    }\r\n} ","/// <reference path=\"../Primitives/DateTime.ts\" />\r\n/// <reference path=\"Format.ts\" />\r\n\r\nmodule Fayde.Localization {\r\n    RegisterFormattable(DateTime, (obj: any, format: string, provider?: any): string => {\r\n        if (!format)\r\n            return undefined;\r\n        if (obj == null)\r\n            return null;\r\n        if (obj.constructor !== DateTime)\r\n            return null;\r\n        var res = tryStandardFormat(<DateTime>obj, format);\r\n        if (res != undefined)\r\n            return res;\r\n        return tryCustomFormat(<DateTime>obj, format, TimeSpan.MinValue);\r\n    });\r\n\r\n    // Standard Formats\r\n    // d        Short date\r\n    // D        Long date\r\n    // f        Full date/time (short time)\r\n    // F        Full date/time (long time)\r\n    // g        General date/time (short time)\r\n    // G        General date/time (long time)\r\n    // M, m     Month/day\r\n    // R, r     RFC1123\r\n    // s        Sortable date/time\r\n    // t        Short time\r\n    // T        Long time\r\n    // u        Universal sortable date/time\r\n    // U        Universal full date/time\r\n    // Y, y     Year month\r\n\r\n    function tryStandardFormat(obj: DateTime, format: string): string {\r\n        if (format.length !== 1)\r\n            return undefined;\r\n        var ch = format[0];\r\n        if (!ch)\r\n            return undefined;\r\n        var f = standardFormatters[ch];\r\n        if (!f)\r\n            return undefined;\r\n        return f(obj);\r\n    }\r\n    interface IStandardFormatter {\r\n        (obj: DateTime): string;\r\n    }\r\n    var standardFormatters: IStandardFormatter[] = [];\r\n    standardFormatters[\"d\"] = function (obj: DateTime): string {\r\n        return [\r\n            obj.Month.toString(),\r\n            obj.Day.toString(),\r\n            obj.Year.toString()\r\n        ].join(\"/\");\r\n    };\r\n    standardFormatters[\"D\"] = function (obj: DateTime): string {\r\n        var info = DateTimeFormatInfo.Instance;\r\n        return [\r\n            info.DayNames[obj.DayOfWeek],\r\n            \", \",\r\n            info.MonthNames[obj.Month - 1],\r\n            \" \",\r\n            obj.Day.toString(),\r\n            \", \",\r\n            obj.Year.toString()\r\n        ].join(\"\");\r\n    };\r\n    standardFormatters[\"f\"] = function (obj: DateTime): string {\r\n        return [\r\n            standardFormatters[\"D\"](obj),\r\n            standardFormatters[\"t\"](obj)\r\n        ].join(\" \");\r\n    };\r\n    standardFormatters[\"F\"] = function (obj: DateTime): string {\r\n        return [\r\n            standardFormatters[\"D\"](obj),\r\n            standardFormatters[\"T\"](obj)\r\n        ].join(\" \");\r\n    };\r\n    standardFormatters[\"g\"] = function (obj: DateTime): string {\r\n        return [\r\n            standardFormatters[\"d\"](obj),\r\n            standardFormatters[\"t\"](obj)\r\n        ].join(\" \");\r\n    };\r\n    standardFormatters[\"G\"] = function (obj: DateTime): string {\r\n        return [\r\n            standardFormatters[\"d\"](obj),\r\n            standardFormatters[\"T\"](obj)\r\n        ].join(\" \");\r\n    };\r\n    standardFormatters[\"m\"] = standardFormatters[\"M\"] = function (obj: DateTime): string {\r\n        var info = DateTimeFormatInfo.Instance;\r\n        return [\r\n            info.MonthNames[obj.Month - 1],\r\n            obj.Day\r\n        ].join(\" \");\r\n    };\r\n    standardFormatters[\"r\"] = standardFormatters[\"R\"] = function (obj: DateTime): string {\r\n        var utc = obj.ToUniversalTime();\r\n        var info = DateTimeFormatInfo.Instance;\r\n        return [\r\n            info.AbbreviatedDayNames[utc.DayOfWeek],\r\n            \", \",\r\n            utc.Day,\r\n            \" \",\r\n            info.AbbreviatedMonthNames[utc.Month-1],\r\n            \" \",\r\n            utc.Year,\r\n            \" \",\r\n            utc.Hour,\r\n            \":\",\r\n            utc.Minute,\r\n            \":\",\r\n            utc.Second,\r\n            \" GMT\"\r\n        ].join(\"\");\r\n    };\r\n    standardFormatters[\"s\"] = function (obj: DateTime): string {\r\n        return [\r\n            obj.Year,\r\n            \"-\",\r\n            padded(obj.Month),\r\n            \"-\",\r\n            padded(obj.Day),\r\n            \"T\",\r\n            padded(obj.Hour),\r\n            \":\",\r\n            padded(obj.Minute),\r\n            \":\",\r\n            padded(obj.Second)\r\n\r\n        ].join(\"\");\r\n    };\r\n    standardFormatters[\"t\"] = function (obj: DateTime): string {\r\n        var info = DateTimeFormatInfo.Instance;\r\n        var hour = obj.Hour;\r\n        var desig = info.AMDesignator;\r\n        if (hour > 12) {\r\n            hour -= 12;\r\n            desig = info.PMDesignator;\r\n        }\r\n        return [\r\n            hour.toString(),\r\n            \":\",\r\n            obj.Minute.toString(),\r\n            \" \",\r\n            desig\r\n        ].join(\"\");\r\n    };\r\n    standardFormatters[\"T\"] = function (obj: DateTime): string {\r\n        var info = DateTimeFormatInfo.Instance;\r\n        var hour = obj.Hour;\r\n        var desig = info.AMDesignator;\r\n        if (hour > 12) {\r\n            hour -= 12;\r\n            desig = info.PMDesignator;\r\n        }\r\n        return [\r\n            hour.toString(),\r\n            \":\",\r\n            obj.Minute.toString(),\r\n            \":\",\r\n            obj.Second.toString(),\r\n            \" \",\r\n            desig\r\n        ].join(\"\");\r\n    };\r\n    standardFormatters[\"u\"] = function (obj: DateTime): string {\r\n        return [\r\n            obj.Year.toString(),\r\n            \"-\",\r\n            padded(obj.Month),\r\n            \"-\",\r\n            padded(obj.Day),\r\n            \" \",\r\n            padded(obj.Hour),\r\n            \":\",\r\n            padded(obj.Minute),\r\n            \":\",\r\n            padded(obj.Second),\r\n            \"Z\"\r\n        ].join(\"\");\r\n    };\r\n    standardFormatters[\"U\"] = function (obj: DateTime): string {\r\n        var info = DateTimeFormatInfo.Instance;\r\n        var hour = obj.Hour;\r\n        var desig = info.AMDesignator;\r\n        if (hour > 12) {\r\n            hour -= 12;\r\n            desig = info.PMDesignator;\r\n        }\r\n        return [\r\n            info.DayNames[obj.DayOfWeek],\r\n            \", \",\r\n            info.MonthNames[obj.Month-1],\r\n            \" \",\r\n            obj.Day.toString(),\r\n            \", \",\r\n            obj.Year.toString(),\r\n            \" \",\r\n            hour.toString(),\r\n            \":\",\r\n            obj.Minute.toString(),\r\n            \":\",\r\n            obj.Second.toString(),\r\n            \" \",\r\n            desig\r\n        ].join(\"\");\r\n    };\r\n    standardFormatters[\"y\"] = standardFormatters[\"Y\"] = function (obj: DateTime): string {\r\n        var info = DateTimeFormatInfo.Instance;\r\n        return [\r\n            info.MonthNames[obj.Month - 1],\r\n            obj.Year\r\n        ].join(\", \");\r\n    };\r\n\r\n    function padded(num: number): string {\r\n        return num < 10 ? \"0\" + num.toString() : num.toString();\r\n    }\r\n\r\n    function tryCustomFormat(obj: DateTime, format: string, offset: TimeSpan): string {\r\n        var info = DateTimeFormatInfo.Instance;\r\n        var calendar = info.Calendar;\r\n        var stringBuilder: string[] = [];\r\n        var flag = calendar.ID === 8;\r\n        var timeOnly = true;\r\n        var index = 0;\r\n        var len: number;\r\n        while (index < format.length) {\r\n            var patternChar = format[index];\r\n            switch (patternChar) {\r\n                case 'm':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, index, patternChar);\r\n                    DateTimeFormatInfo.FormatDigits(stringBuilder, obj.Minute, len);\r\n                    break;\r\n                case 's':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, index, patternChar);\r\n                    DateTimeFormatInfo.FormatDigits(stringBuilder, obj.Second, len);\r\n                    break;\r\n                case 't':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, index, patternChar);\r\n                    if (len === 1) {\r\n                        if (obj.Hour < 12) {\r\n                            if (info.AMDesignator.length >= 1) {\r\n                                stringBuilder.push(info.AMDesignator[0]);\r\n                                break;\r\n                            } else\r\n                                break;\r\n                        } else if (info.PMDesignator.length >= 1) {\r\n                            stringBuilder.push(info.PMDesignator[0]);\r\n                            break;\r\n                        } else\r\n                            break;\r\n                    } else {\r\n                        stringBuilder.push(obj.Hour < 12 ? info.AMDesignator : info.PMDesignator);\r\n                        break;\r\n                    }\r\n                case 'y':\r\n                    var year = obj.Year;\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, index, patternChar);\r\n                    if (info.HasForceTwoDigitYears)\r\n                        DateTimeFormatInfo.FormatDigits(stringBuilder, year, len <= 2 ? len : 2);\r\n                    else if (calendar.ID === 8)\r\n                        DateTimeFormatInfo.HebrewFormatDigits(stringBuilder, year);\r\n                    else if (len <= 2) {\r\n                        DateTimeFormatInfo.FormatDigits(stringBuilder, year % 100, len);\r\n                    } else {\r\n                        stringBuilder.push(FormatSingle(year, \"D\" + len.toString()));\r\n                    }\r\n                    timeOnly = false;\r\n                    break;\r\n                case 'z':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, index, patternChar);\r\n                    //DateTimeFormatInfo.FormatCustomizedTimeZone(obj, offset, format, len, timeOnly, stringBuilder);\r\n                    console.warn(\"DateTime 'z' not implemented\");\r\n                    break;\r\n                case 'K':\r\n                    len = 1;\r\n                    //DateTimeFormatInfo.FormatCustomizedRoundripTimeZone(obj, offset, stringBuilder);\r\n                    console.warn(\"DateTime 'K' not implemented\");\r\n                    break;\r\n                case 'M':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, index, patternChar);\r\n                    var month = obj.Month;\r\n                    if (len <= 2) {\r\n                        if (flag)\r\n                            DateTimeFormatInfo.HebrewFormatDigits(stringBuilder, month);\r\n                        else\r\n                            DateTimeFormatInfo.FormatDigits(stringBuilder, month, len);\r\n                    }\r\n                    else if (flag)\r\n                        stringBuilder.push(DateTimeFormatInfo.FormatHebrewMonthName(obj, month, len, info));\r\n                    /*else if ((info.FormatFlags & DateTimeFormatFlags.UseGenitiveMonth) !== DateTimeFormatFlags.None && len >= 4)\r\n                        stringBuilder.push(info.internalGetMonthName(month, DateTimeFormat.IsUseGenitiveForm(format, index, len, 'd') ? MonthNameStyles.Genitive : MonthNameStyles.Regular, false));*/\r\n                    else\r\n                        stringBuilder.push(DateTimeFormatInfo.FormatMonth(month, len, info));\r\n                    timeOnly = false;\r\n                    break;\r\n                case '\\\\':\r\n                    var num2 = DateTimeFormatInfo.ParseNextChar(format, index);\r\n                    if (num2 < 0)\r\n                        throw formatError();\r\n                    stringBuilder.push(String.fromCharCode(num2));\r\n                    len = 2;\r\n                    break;\r\n                case 'd':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, index, patternChar);\r\n                    if (len <= 2) {\r\n                        var dayOfMonth = obj.Day;\r\n                        if (flag)\r\n                            DateTimeFormatInfo.HebrewFormatDigits(stringBuilder, dayOfMonth);\r\n                        else\r\n                            DateTimeFormatInfo.FormatDigits(stringBuilder, dayOfMonth, len);\r\n                    } else {\r\n                        var dayOfWeek = obj.DayOfWeek;\r\n                        stringBuilder.push(DateTimeFormatInfo.FormatDayOfWeek(dayOfWeek, len, info));\r\n                    }\r\n                    timeOnly = false;\r\n                    break;\r\n                case 'f':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, index, patternChar);\r\n                    if (len > 7)\r\n                        throw formatError();\r\n                    stringBuilder.push(msf(obj.Millisecond, len));\r\n                    break;\r\n                case 'F':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, index, patternChar);\r\n                    if (len > 7)\r\n                        throw formatError();\r\n                    stringBuilder.push(msF(obj.Millisecond, len));\r\n                    break;\r\n                case 'g':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, index, patternChar);\r\n                    stringBuilder.push(info.GetEraName(1));\r\n                    break;\r\n                case 'h':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, index, patternChar);\r\n                    var num5 = obj.Hour % 12;\r\n                    if (num5 === 0)\r\n                        num5 = 12;\r\n                    DateTimeFormatInfo.FormatDigits(stringBuilder, num5, len);\r\n                    break;\r\n                case '/':\r\n                    stringBuilder.push(info.DateSeparator);\r\n                    len = 1;\r\n                    break;\r\n                case ':':\r\n                    stringBuilder.push(info.TimeSeparator);\r\n                    len = 1;\r\n                    break;\r\n                case 'H':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, index, patternChar);\r\n                    DateTimeFormatInfo.FormatDigits(stringBuilder, obj.Hour, len);\r\n                    break;\r\n                case '\"':\r\n                case '\\'':\r\n                    len = DateTimeFormatInfo.ParseQuoteString(format, index, stringBuilder);\r\n                    break;\r\n                case '%':\r\n                    var num6 = DateTimeFormatInfo.ParseNextChar(format, index);\r\n                    if (num6 < 0 || num6 === 37)\r\n                        throw formatError();\r\n                    stringBuilder.push(tryCustomFormat(obj, String.fromCharCode(num6), offset));\r\n                    len = 2;\r\n                    break;\r\n                default:\r\n                    stringBuilder.push(patternChar);\r\n                    len = 1;\r\n                    break;\r\n            }\r\n            index += len;\r\n        }\r\n        return stringBuilder.join(\"\");\r\n    }\r\n\r\n    function msf(ms: number, len: number): string {\r\n        var s = Math.abs(ms).toString();\r\n        while (s.length < 3)\r\n            s = \"0\" + s;\r\n        s += \"0000\";\r\n        return s.substr(0, len);\r\n    }\r\n    function msF(ms: number, len: number): string {\r\n        var f = msf(ms, len);\r\n        var end = f.length - 1;\r\n        for (; end >= 0; end--) {\r\n            if (f[end] !== \"0\")\r\n                break;\r\n        }\r\n        return f.slice(0, end + 1);\r\n    }\r\n    \r\n    function formatError(): FormatException {\r\n        return new FormatException(\"Invalid format string.\");\r\n    }\r\n}","module Fayde.Localization {\r\n    export class NumberFormatInfo {\r\n        CurrencyDecimalDigits: number = 2;\r\n        CurrencyDecimalSeparator: string = \".\";\r\n        CurrencyGroupSeparator: string = \",\";\r\n        CurrencyGroupSizes: number[] = [3];\r\n        CurrencyNegativePattern: number = 0;\r\n        CurrencyPositivePattern: number = 0;\r\n        CurrencySymbol: string = \"$\";\r\n\r\n        NaNSymbol: string = \"NaN\";\r\n        NegativeInfinitySymbol: string = \"-Infinity\";\r\n        PositiveInfinitySymbol: string = \"Infinity\";\r\n        NegativeSign: string = \"-\";\r\n        PositiveSign: string = \"+\";\r\n\r\n        NumberDecimalDigits: number = 2;\r\n        NumberDecimalSeparator: string = \".\";\r\n        NumberGroupSeparator: string = \",\";\r\n        NumberGroupSizes: number[] = [3];\r\n        NumberNegativePattern: number = 1;\r\n\r\n        PercentDecimalDigits: number = 2;\r\n        PercentDecimalSeparator: string = \".\";\r\n        PercentGroupSeparator: string = \",\";\r\n        PercentGroupSizes: number[] = [3];\r\n        PercentNegativePattern: number = 0;\r\n        PercentPositivePattern: number = 0;\r\n        PercentSymbol: string = \"%\";\r\n\r\n        PerMilleSymbol: string = \"‰\";\r\n\r\n        static Instance = new NumberFormatInfo();\r\n\r\n        FormatCurrency(num: number, precision: number): string {\r\n            if (precision == null) precision = this.CurrencyDecimalDigits;\r\n            var rawnum = this.FormatRawNumber(Math.abs(num), precision, this.CurrencyDecimalSeparator, this.CurrencyGroupSeparator, this.CurrencyGroupSizes);\r\n            if (num < 0) {\r\n                switch (this.CurrencyNegativePattern) {\r\n                    case 0:\r\n                    default:\r\n                        return \"(\" + this.CurrencySymbol + rawnum + \")\";\r\n                    case 1:\r\n                        return [this.NegativeSign, this.CurrencySymbol, rawnum].join(\"\");\r\n                    case 2:\r\n                        return [this.CurrencySymbol, this.NegativeSign, rawnum].join(\"\");\r\n                    case 3:\r\n                        return [this.CurrencySymbol, rawnum, this.NegativeSign].join(\"\");\r\n                    case 4:\r\n                        return \"(\" + rawnum + this.CurrencySymbol + \")\";\r\n                    case 5:\r\n                        return [this.NegativeSign, rawnum, this.CurrencySymbol].join(\"\");\r\n                    case 6:\r\n                        return [rawnum, this.NegativeSign, this.CurrencySymbol].join(\"\");\r\n                    case 7:\r\n                        return [rawnum, this.CurrencySymbol, this.NegativeSign].join(\"\");\r\n                    case 8:\r\n                        return [this.NegativeSign, rawnum, \" \", this.CurrencySymbol].join(\"\");\r\n                    case 9:\r\n                        return [this.NegativeSign, this.CurrencySymbol, \" \", rawnum].join(\"\");\r\n                    case 10:\r\n                        return [rawnum, \" \", this.CurrencySymbol, this.NegativeSign].join(\"\");\r\n                    case 11:\r\n                        return [this.CurrencySymbol, \" \", rawnum, this.NegativeSign].join(\"\");\r\n                    case 12:\r\n                        return [this.CurrencySymbol, \" \", this.NegativeSign, rawnum].join(\"\");\r\n                    case 13:\r\n                        return [rawnum, this.NegativeSign, \" \", this.CurrencySymbol].join(\"\");\r\n                    case 14:\r\n                        return \"(\" + this.CurrencySymbol + \" \" + rawnum + \")\";\r\n                    case 15:\r\n                        return \"(\" + rawnum + \" \" + this.CurrencySymbol + \")\";\r\n                }\r\n            } else {\r\n                switch (this.CurrencyPositivePattern) {\r\n                    case 0:\r\n                    default:\r\n                        return [this.CurrencySymbol, rawnum].join(\"\");\r\n                    case 1:\r\n                        return [rawnum, this.CurrencySymbol].join(\"\");\r\n                    case 2:\r\n                        return [this.CurrencySymbol, rawnum].join(\" \");\r\n                    case 3:\r\n                        return [rawnum, this.CurrencySymbol].join(\" \");\r\n                }\r\n            }\r\n        }\r\n        FormatNumber(num: number, precision: number, ignoreGroupSep?: boolean): string {\r\n            if (precision == null) precision = this.NumberDecimalDigits;\r\n            var rawnum = this.FormatRawNumber(Math.abs(num), precision, this.NumberDecimalSeparator, ignoreGroupSep ? \"\" : this.NumberGroupSeparator, this.NumberGroupSizes);\r\n            if (num >= 0)\r\n                return rawnum;\r\n            switch (this.NumberNegativePattern) {\r\n                case 0:\r\n                    return \"(\" + rawnum + \")\";\r\n                case 1:\r\n                default:\r\n                    return [this.NegativeSign, rawnum].join(\"\");\r\n                case 2:\r\n                    return [this.NegativeSign, rawnum].join(\" \");\r\n                case 3:\r\n                    return [rawnum, this.NegativeSign].join(\"\");\r\n                case 4:\r\n                    return [rawnum, this.NegativeSign].join(\" \");\r\n            }\r\n        }\r\n        FormatPercent(num: number, precision: number): string {\r\n            if (precision == null) precision = this.PercentDecimalDigits;\r\n            var rawnum = this.FormatRawNumber(Math.abs(num * 100), precision, this.PercentDecimalSeparator, this.PercentGroupSeparator, this.PercentGroupSizes);\r\n            var sym = this.PercentSymbol;\r\n            if (num < 0) {\r\n                var sign = this.NegativeSign;\r\n                switch (this.PercentNegativePattern) {\r\n                    case 0:\r\n                    default:\r\n                        return [sign, rawnum, \" \", sym].join(\"\");\r\n                    case 1:\r\n                        return [sign, rawnum, sym].join(\"\");\r\n                    case 2:\r\n                        return [sign, sym, rawnum].join(\"\");\r\n                    case 3:\r\n                        return [sym, sign, rawnum].join(\"\");\r\n                    case 4:\r\n                        return [sym, rawnum, sign].join(\"\");\r\n                    case 5:\r\n                        return [rawnum, sign, sym].join(\"\");\r\n                    case 6:\r\n                        return [rawnum, sym, sign].join(\"\");\r\n                    case 7:\r\n                        return [sign, sym, \" \", rawnum].join(\"\");\r\n                    case 8:\r\n                        return [sign, sym, \" \", rawnum].join(\"\");\r\n                    case 9:\r\n                        return [sym, \" \", rawnum, sign].join(\"\");\r\n                    case 10:\r\n                        return [sym, \" \", sign, rawnum].join(\"\");\r\n                    case 11:\r\n                        return [rawnum, sign, \" \", sym].join(\"\");\r\n                }\r\n            } else {\r\n                switch (this.PercentPositivePattern) {\r\n                    case 0:\r\n                    default:\r\n                        return [rawnum, this.PercentSymbol].join(\" \");\r\n                    case 1:\r\n                        return [rawnum, this.PercentSymbol].join(\"\");\r\n                    case 2:\r\n                        return [this.PercentSymbol, rawnum].join(\"\");\r\n                    case 3:\r\n                        return [this.PercentSymbol, rawnum].join(\" \");\r\n                }\r\n            }\r\n        }\r\n        FormatGeneral(num: number, precision: number): string {\r\n            if (precision == null) precision = 6;\r\n            var sig = sigDigits(Math.abs(num), precision);\r\n            var rawnum = sig.toString();\r\n            if (num >= 0)\r\n                return rawnum;\r\n            return this.NegativeSign + rawnum;\r\n        }\r\n        FormatDecimal(num: number, precision: number): string {\r\n            var rawnum = this.FormatRawNumber(Math.abs(num), 0, \"\", \"\", null);\r\n            var d = padded(rawnum, precision || 0, true);\r\n            if (num < 0)\r\n                d = this.NegativeSign + d;\r\n            return d;\r\n        }\r\n        FormatExponential(num: number, precision: number): string {\r\n            if (precision == null) precision = 6;\r\n            var e = num.toExponential(precision);\r\n            var tokens = e.split(\"e+\");\r\n            return tokens[0] + \"e\" + this.PositiveSign + padded(tokens[1], 3, true);\r\n        }\r\n        FormatHexadecimal(num: number, precision: number): string {\r\n            if (precision == null) precision = 2;\r\n            num = parseInt(<any>num);\r\n            if (num >= 0)\r\n                return padded(num.toString(16), precision, true);\r\n            var us = (Math.pow(2, 32) + num).toString(16);\r\n            if (precision >= us.length)\r\n                return padded(us, precision, true);\r\n            var start = 0;\r\n            while (us.length - start > precision && us[start] === \"f\") {\r\n                start++;\r\n            }\r\n            return us.substr(start);\r\n        }\r\n        FormatRawNumber(num: number, precision: number, decSep: string, groupSep: string, groupSizes: number[]): string {\r\n            //Ignoring group sizes for now: using [3]\r\n            var rounded = round(num, precision);\r\n            var ip = Math.floor(rounded).toString();\r\n            var fp = rounded.toString().split('.')[1];\r\n            var pfp = padded(fp, precision);\r\n            if (!pfp)\r\n                return grouped(ip, groupSep);\r\n            return [\r\n                grouped(ip, groupSep),\r\n                pfp\r\n            ].join(decSep);\r\n        }\r\n    }\r\n\r\n    function grouped(s: string, sep: string): string {\r\n        if (s.length < 4)\r\n            return s;\r\n        var offset = s.length % 3;\r\n        if (offset !== 0) {\r\n            offset = 3 - offset;\r\n            s = new Array(offset + 1).join(\"0\") + s;\r\n        }\r\n        return s.match(/\\d\\d\\d/g).join(sep).substr(offset);\r\n    }\r\n    function padded(s: string, precision: number, front?: boolean): string {\r\n        if (!s)\r\n            return new Array(precision + 1).join(\"0\");\r\n        if (s.length > precision)\r\n            return front ? s : s.substr(0, precision);\r\n        if (front)\r\n            return new Array(precision - s.length + 1).join(\"0\") + s;\r\n        return s + new Array(precision - s.length + 1).join(\"0\");\r\n    }\r\n    function round(num: number, places: number): number {\r\n        var factor = Math.pow(10, places);\r\n        return Math.round(num * factor) / factor;\r\n    }\r\n    function sigDigits(num: number, digits: number): number {\r\n        var n = num.toString();\r\n        var index = n.indexOf(\".\");\r\n        if (index > -1)\r\n            return round(num, digits - index);\r\n        return round(num, digits - n.length);\r\n    }\r\n\r\n    // Currency Negative Patterns\r\n    // 0      ($n)\r\n    // 1      -$n\r\n    // 2      $-n\r\n    // 3      $n-\r\n    // 4      (n$)\r\n    // 5      -n$\r\n    // 6      n-$\r\n    // 7      n$-\r\n    // 8      -n $\r\n    // 9      -$ n\r\n    // 10      n $-\r\n    // 11      $ n-\r\n    // 12      $ -n\r\n    // 13      n- $\r\n    // 14      ($ n)\r\n    // 15      (n $)\r\n    \r\n    // Currency Positive Patterns\r\n    // 0       $n\r\n    // 1       n$\r\n    // 2       $ n\r\n    // 3       n $\r\n\r\n    // Number Negative Patterns\r\n    // 0      (n)\r\n    // 1      -n\r\n    // 2      - n\r\n    // 3      n-\r\n    // 4      n -\r\n\r\n    // Percent Negative Patterns\r\n    // 0      -n %\r\n    // 1      -n%\r\n    // 2      -%n\r\n    // 3      %-n\r\n    // 4      %n-\r\n    // 5      n-%\r\n    // 6      n%-\r\n    // 7      -% n\r\n    // 8      n %-\r\n    // 9      % n-\r\n    // 10     % -n\r\n    // 11     n- %\r\n\r\n    // Percent Positive Patterns\r\n    // 0       n %\r\n    // 1       n%\r\n    // 2       %n\r\n    // 3       % n\r\n}","/// <reference path=\"Format.ts\" />\r\n\r\nmodule Fayde.Localization {\r\n    RegisterFormattable(Number, (obj: any, format: string, provider?: any): string => {\r\n        if (obj == null)\r\n            return null;\r\n        if (obj.constructor !== Number)\r\n            return null;\r\n        var res = tryStandardFormat(<number>obj, format);\r\n        if (res != undefined)\r\n            return res;\r\n        return format;\r\n    });\r\n\r\n    // Standard Formats\r\n    // C or c       Currency\r\n    // D or d       Decimal\r\n    // E or e       Exponential\r\n    // F or f       Fixed-point\r\n    // G or g       General\r\n    // N or n       Number\r\n    // P or p       Percent\r\n    // X or x       Hexadecimal\r\n\r\n    function tryStandardFormat(obj: number, format: string): string {\r\n        var ch = format[0];\r\n        if (!ch)\r\n            return undefined;\r\n        var lowerch = ch.toLowerCase();\r\n        if (lowerch < \"a\" || lowerch > \"z\")\r\n            return undefined;\r\n        var prec: number = null;\r\n        if (format.length > 1) {\r\n            var prec = parseInt(format.substr(1));\r\n            if (isNaN(prec))\r\n                return undefined;\r\n        }\r\n        \r\n        var f = standardFormatters[ch] || standardFormatters[lowerch];\r\n        if (!f)\r\n            return undefined;\r\n        return f(obj, prec);\r\n    }\r\n    interface IStandardFormatter {\r\n        (obj: number, precision: number): string;\r\n    }\r\n    var standardFormatters: IStandardFormatter[] = [];\r\n    standardFormatters[\"c\"] = function (obj: number, precision: number): string {\r\n        return NumberFormatInfo.Instance.FormatCurrency(obj, precision);\r\n    };\r\n    standardFormatters[\"d\"] = function (obj: number, precision: number): string {\r\n        return NumberFormatInfo.Instance.FormatDecimal(obj, precision);\r\n    };\r\n    standardFormatters[\"E\"] = function (obj: number, precision: number): string {\r\n        return NumberFormatInfo.Instance.FormatExponential(obj, precision).toUpperCase();\r\n    };\r\n    standardFormatters[\"e\"] = function (obj: number, precision: number): string {\r\n        return NumberFormatInfo.Instance.FormatExponential(obj, precision);\r\n    };\r\n    standardFormatters[\"f\"] = function (obj: number, precision: number): string {\r\n        return NumberFormatInfo.Instance.FormatNumber(obj, precision, true);\r\n    };\r\n    standardFormatters[\"g\"] = function (obj: number, precision: number): string {\r\n        return NumberFormatInfo.Instance.FormatGeneral(obj, precision);\r\n    };\r\n    standardFormatters[\"n\"] = function (obj: number, precision: number): string {\r\n        return NumberFormatInfo.Instance.FormatNumber(obj, precision);\r\n    };\r\n    standardFormatters[\"p\"] = function (obj: number, precision: number): string {\r\n        return NumberFormatInfo.Instance.FormatPercent(obj, precision);\r\n    };\r\n    standardFormatters[\"X\"] = function (obj: number, precision: number): string {\r\n        return NumberFormatInfo.Instance.FormatHexadecimal(obj, precision).toUpperCase();\r\n    };\r\n    standardFormatters[\"x\"] = function (obj: number, precision: number): string {\r\n        return NumberFormatInfo.Instance.FormatHexadecimal(obj, precision);\r\n    };\r\n}","/// <reference path=\"../Primitives/TimeSpan.ts\" />\r\n/// <reference path=\"Format.ts\" />\r\n\r\nmodule Fayde.Localization {\r\n    RegisterFormattable(TimeSpan, (obj: any, format: string, provider?: any): string => {\r\n        if (!format)\r\n            return undefined;\r\n        if (obj == null)\r\n            return null;\r\n        if (obj.constructor !== TimeSpan)\r\n            return null;\r\n        var res = tryStandardFormat(<TimeSpan>obj, format);\r\n        if (res != undefined)\r\n            return res;\r\n        return tryCustomFormat(<TimeSpan>obj, format);\r\n    });\r\n\r\n    // Standard Formats\r\n    // c        Constant (invariant)\r\n    // g        General short\r\n    // G        General long\r\n    function tryStandardFormat(obj: TimeSpan, format: string): string {\r\n        if (format.length !== 1)\r\n            return undefined;\r\n        var ch = format[0];\r\n        if (!ch)\r\n            return undefined;\r\n        var f = standardFormatters[ch];\r\n        if (!f)\r\n            return undefined;\r\n        return f(obj);\r\n    }\r\n    interface IStandardFormatter {\r\n        (obj: TimeSpan): string;\r\n    }\r\n    var standardFormatters: IStandardFormatter[] = [];\r\n    standardFormatters[\"c\"] = standardFormatters[\"t\"] = standardFormatters[\"T\"] = function (obj: TimeSpan): string {\r\n        // [-][d’.’]hh’:’mm’:’ss[‘.’fffffff]\r\n        var info = DateTimeFormatInfo.Instance;\r\n        var s = [\r\n            padded(obj.Hours),\r\n            padded(obj.Minutes),\r\n            padded(obj.Seconds)\r\n        ].join(info.TimeSeparator);\r\n        var days = obj.Days;\r\n        if (days)\r\n            s = Math.abs(days) + \".\" + s;\r\n        var ms = obj.Milliseconds;\r\n        if (ms)\r\n            s += \".\" + msf(ms, 7);\r\n        if (obj.Ticks < 0)\r\n            s = \"-\" + s;\r\n        return s;\r\n    };\r\n    standardFormatters[\"g\"] = function (obj: TimeSpan): string {\r\n        // [-][d’:’]h’:’mm’:’ss[.FFFFFFF]\r\n        var info = DateTimeFormatInfo.Instance;\r\n        var s = [\r\n            Math.abs(obj.Hours),\r\n            padded(obj.Minutes),\r\n            padded(obj.Seconds)\r\n        ].join(info.TimeSeparator);\r\n        var days = obj.Days;\r\n        if (days)\r\n            s = Math.abs(days) + \":\" + s;\r\n        var ms = obj.Milliseconds;\r\n        if (ms)\r\n            s += \".\" + msF(ms, 7);\r\n        if (obj.Ticks < 0)\r\n            s = \"-\" + s;\r\n        return s;\r\n    };\r\n    standardFormatters[\"G\"] = function (obj: TimeSpan): string {\r\n        // [-]d’:’hh’:’mm’:’ss.fffffff\r\n        var info = DateTimeFormatInfo.Instance;\r\n        var s = [\r\n            Math.abs(obj.Days),\r\n            padded(obj.Hours),\r\n            padded(obj.Minutes),\r\n            padded(obj.Seconds)\r\n        ].join(info.TimeSeparator);\r\n        var ms = obj.Milliseconds;\r\n        s += \".\" + msf(ms, 7);\r\n        if (obj.Ticks < 0)\r\n            s = \"-\" + s;\r\n        return s;\r\n    };\r\n\r\n    function tryCustomFormat(obj: TimeSpan, format: string): string {\r\n        var days = Math.abs(obj.Days);\r\n        var hours = Math.abs(obj.Hours);\r\n        var minutes = Math.abs(obj.Minutes);\r\n        var seconds = Math.abs(obj.Seconds);\r\n        var ms = Math.abs(obj.Milliseconds);\r\n\r\n        var len: number;\r\n        var pos = 0;\r\n        var stringBuilder: string[] = [];\r\n        while (pos < format.length) {\r\n            var patternChar = format[pos];\r\n            switch (patternChar) {\r\n                case 'm':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, pos, patternChar);\r\n                    if (len > 2)\r\n                        throw formatError();\r\n                    DateTimeFormatInfo.FormatDigits(stringBuilder, minutes, len);\r\n                    break;\r\n                case 's':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, pos, patternChar);\r\n                    if (len > 2)\r\n                        throw formatError();\r\n                    DateTimeFormatInfo.FormatDigits(stringBuilder, seconds, len);\r\n                    break;\r\n                case '\\\\':\r\n                    var num7 = DateTimeFormatInfo.ParseNextChar(format, pos);\r\n                    if (num7 < 0)\r\n                        throw formatError();\r\n                    stringBuilder.push(String.fromCharCode(num7));\r\n                    len = 2;\r\n                    break;\r\n                case 'd':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, pos, patternChar);\r\n                    if (len > 8)\r\n                        throw formatError();\r\n                    DateTimeFormatInfo.FormatDigits(stringBuilder, days, len, true);\r\n                    break;\r\n                case 'f':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, pos, patternChar);\r\n                    if (len > 7)\r\n                        throw formatError();\r\n                    stringBuilder.push(msf(ms, len));\r\n                    break;\r\n                case 'F':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, pos, patternChar);\r\n                    if (len > 7)\r\n                        throw formatError();\r\n                    stringBuilder.push(msF(ms, len));\r\n                    break;\r\n                case 'h':\r\n                    len = DateTimeFormatInfo.ParseRepeatPattern(format, pos, patternChar);\r\n                    if (len > 2)\r\n                        throw formatError();\r\n                    DateTimeFormatInfo.FormatDigits(stringBuilder, hours, len);\r\n                    break;\r\n                case '\"':\r\n                case '\\'':\r\n                    len = DateTimeFormatInfo.ParseQuoteString(format, pos, stringBuilder);\r\n                    break;\r\n                case '%':\r\n                    var num9 = DateTimeFormatInfo.ParseNextChar(format, pos);\r\n                    if (num9 < 0 || num9 === 37)\r\n                        throw formatError();\r\n                    stringBuilder.push(tryCustomFormat(obj, String.fromCharCode(num9)));\r\n                    len = 2;\r\n                    break;\r\n                default:\r\n                    throw formatError();\r\n            }\r\n            pos += len;\r\n        }\r\n        return stringBuilder.join(\"\");\r\n    }\r\n\r\n    function padded(num: number): string {\r\n        var s = Math.abs(num).toString();\r\n        return (s.length === 1) ? \"0\" + s : s;\r\n    }\r\n    function msf(ms: number, len: number): string {\r\n        var s = Math.abs(ms).toString();\r\n        while (s.length < 3)\r\n            s = \"0\" + s;\r\n        s += \"0000\";\r\n        return s.substr(0, len);\r\n    }\r\n    function msF(ms: number, len: number): string {\r\n        var f = msf(ms, len);\r\n        var end = f.length - 1;\r\n        for (; end >= 0; end--) {\r\n            if (f[end] !== \"0\")\r\n                break;\r\n        }\r\n        return f.slice(0, end + 1);\r\n    }\r\n\r\n    function formatError(): FormatException {\r\n        return new FormatException(\"Invalid format string.\");\r\n    }\r\n}","module Fayde.MVVM {\r\n    export interface IValidationFunc {\r\n        (value: any, propertyName: string, entity: any): any[];\r\n    }\r\n    export interface IAutoApplier<T> {\r\n        Notify(...properties: string[]): IAutoApplier<T>;\r\n        Notify(properties: string[]): IAutoApplier<T>;\r\n        Validate(propertyName: string, ...validators: IValidationFunc[]): IAutoApplier<T>;\r\n        Finish(): T;\r\n    }\r\n    export function AutoModel<T> (typeOrModel: any): IAutoApplier<T> {\r\n        var obj = getApplier(typeOrModel);\r\n\r\n        var props: string[] = [];\r\n        var validators: IValidationFunc[][] = [];\r\n\r\n        var applier = <IAutoApplier<T>>{\r\n            Notify (...properties: string[]): IAutoApplier<T> {\r\n                for (var i = 0; i < properties.length; i++) {\r\n                    var prop = properties[i];\r\n                    if (typeof prop === \"string\")\r\n                        props.push(prop);\r\n                    else if (Array.isArray(prop))\r\n                        props = props.concat(prop);\r\n                }\r\n                return applier;\r\n            },\r\n            Validate (propertyName: string, ...validations: IValidationFunc[]): IAutoApplier<T> {\r\n                var cur = validators[propertyName];\r\n                if (!cur)\r\n                    validators[propertyName] = validations;\r\n                else\r\n                    validators[propertyName] = cur.concat(validations);\r\n                return applier;\r\n            },\r\n            Finish (): T {\r\n                for (var i = 0, uprops = unique(props), len = uprops.length; i < len; i++) {\r\n                    var prop = uprops[i];\r\n                    applyProperty(obj, prop, validators[prop]);\r\n                }\r\n                return obj;\r\n            }\r\n        };\r\n        return applier;\r\n    }\r\n\r\n    function getApplier (typeOrModel: any): any {\r\n        if (typeof typeOrModel === \"function\")\r\n            return typeOrModel.prototype;\r\n        return typeOrModel;\r\n    }\r\n\r\n    function unique (arr: string[]): string[] {\r\n        var re: string[] = [];\r\n        for (var i = 0; i < arr.length; i++) {\r\n            var cur = arr[i];\r\n            if (re.indexOf(cur) > -1)\r\n                continue;\r\n            re.push(cur);\r\n        }\r\n        return re;\r\n    }\r\n\r\n    function applyProperty (obj: any, propertyName: string, validations: IValidationFunc[]) {\r\n        var initial = obj[propertyName];\r\n        var backingName = \"_$\" + propertyName + \"$_\";\r\n        obj[backingName] = initial;\r\n        if (validations && validations.length > 0) {\r\n            Object.defineProperty(obj, propertyName, {\r\n                get: function () {\r\n                    return this[backingName];\r\n                },\r\n                set: function (value: any) {\r\n                    this[backingName] = value;\r\n                    doValidate(this, value, propertyName, validations);\r\n                    this.OnPropertyChanged(propertyName);\r\n                }\r\n            });\r\n        } else {\r\n            Object.defineProperty(obj, propertyName, {\r\n                get: function () {\r\n                    return this[backingName];\r\n                },\r\n                set: function (value: any) {\r\n                    this[backingName] = value;\r\n                    this.OnPropertyChanged(propertyName);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function doValidate (entity: any, value: any, propertyName: string, validations: IValidationFunc[]) {\r\n        var errs = validate(entity, value, propertyName, validations);\r\n        entity.ClearErrors && entity.ClearErrors(propertyName);\r\n        if (!entity.AddError)\r\n            return;\r\n        for (var i = 0; i < errs.length; i++) {\r\n            entity.AddError(propertyName, errs[i]);\r\n        }\r\n    }\r\n\r\n    function validate (entity: any, value: any, propertyName: string, validations: IValidationFunc[]): string[] {\r\n        var all: string[] = [];\r\n        for (var i = 0; i < validations.length; i++) {\r\n            var func = validations[i];\r\n            var errors = func(value, propertyName, entity);\r\n            if (errors)\r\n                all = all.concat(errors);\r\n        }\r\n        return all;\r\n    }\r\n}","/// <reference path=\"../Core/INotifyPropertyChanged.ts\" />\r\n\r\nmodule Fayde.MVVM {\r\n    export function NotifyProperties(type: any, propNames: string[]) {\r\n        var len = propNames.length;\r\n        for (var i = 0; i < len; i++) {\r\n            (function () {\r\n                var propName = propNames[i];\r\n                var backingName = \"$\" + propName + \"$\";\r\n                Object.defineProperty(type.prototype, propName, {\r\n                    get: function () { return this[backingName]; },\r\n                    set: function (value: any) {\r\n                        this[backingName] = value;\r\n                        this.OnPropertyChanged(propName);\r\n                    }\r\n                });\r\n            })();\r\n        }\r\n    }\r\n\r\n    export class ObservableObject implements INotifyPropertyChanged {\r\n        PropertyChanged = new nullstone.Event<PropertyChangedEventArgs>();\r\n        OnPropertyChanged(propertyName: string) {\r\n            this.PropertyChanged.raise(this, new PropertyChangedEventArgs(propertyName));\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ObservableObject);\r\n}","/// <reference path=\"ObservableObject.ts\"/>\r\n\r\nmodule Fayde.MVVM {\r\n    export class ViewModelBase extends ObservableObject {\r\n    }\r\n    Fayde.CoreLibrary.add(ViewModelBase);\r\n}","/// <reference path=\"ViewModelBase\" />\r\n\r\nmodule Fayde.MVVM {\r\n    export interface IDialogViewModelSettings<TAccept, TBuilder> {\r\n        AcceptAction?: (data: TAccept) => any;\r\n        CompleteAction?: (pars: IOverlayCompleteParameters) => any;\r\n        ViewModelBuilder?: (builder: TBuilder) => any;\r\n        CanOpen?: (builder: TBuilder) => boolean;\r\n    }\r\n\r\n    export class DialogViewModel<TBuilder, TAccept> extends ViewModelBase {\r\n        IsOpen = false;\r\n        OverlayDataContext: any = null;\r\n        RequestOpenCommand: RelayCommand;\r\n        ClosedCommand: RelayCommand;\r\n\r\n        AcceptAction: (data: TAccept) => any;\r\n        CompleteAction: (pars: IOverlayCompleteParameters) => any;\r\n        ViewModelBuilder: (builder: TBuilder) => any;\r\n        CanOpen: (builder: TBuilder) => boolean;\r\n\r\n        constructor (settings?: IDialogViewModelSettings<TAccept, TBuilder>) {\r\n            super();\r\n            this.RequestOpenCommand = new RelayCommand(par => this.RequestOpen_Execute(par), par => this.RequestOpen_CanExecute(par));\r\n            this.ClosedCommand = new RelayCommand(par => this.Closed_Execute(par));\r\n            if (settings) {\r\n                this.AcceptAction = settings.AcceptAction;\r\n                this.CompleteAction = settings.CompleteAction;\r\n                this.ViewModelBuilder = settings.ViewModelBuilder;\r\n                this.CanOpen = settings.CanOpen;\r\n            }\r\n        }\r\n\r\n        private Closed_Execute (parameter: IOverlayCompleteParameters) {\r\n            if (parameter.Result === true) {\r\n                this.AcceptAction && this.AcceptAction(<TAccept>parameter.Data || undefined);\r\n            }\r\n            this.CompleteAction && this.CompleteAction(parameter);\r\n        }\r\n\r\n        private RequestOpen_Execute (parameter: TBuilder) {\r\n            if (this.ViewModelBuilder != null) {\r\n                var vm = this.ViewModelBuilder(parameter);\r\n                if (vm == null)\r\n                    return;\r\n                this.OverlayDataContext = vm;\r\n            }\r\n            this.IsOpen = true;\r\n        }\r\n\r\n        private RequestOpen_CanExecute (parameter: TBuilder): boolean {\r\n            return !this.CanOpen || this.CanOpen(parameter);\r\n        }\r\n    }\r\n    NotifyProperties(DialogViewModel, [\"IsOpen\", \"OverlayDataContext\", \"RequestOpenCommand\", \"ClosedCommand\"]);\r\n}","module Fayde.MVVM {\r\n    export interface IEntity extends INotifyPropertyChanged, Data.INotifyDataErrorInfo {\r\n        OnPropertyChanged (propertyName: string);\r\n        AddError (propertyName: string, errorMessage: string);\r\n        RemoveError (propertyName: string, errorMessage: string);\r\n        ClearErrors (propertyName: string);\r\n    }\r\n\r\n    export class Entity implements IEntity {\r\n        PropertyChanged = new nullstone.Event<PropertyChangedEventArgs>();\r\n\r\n        OnPropertyChanged (propertyName: string) {\r\n            this.PropertyChanged.raise(this, new PropertyChangedEventArgs(propertyName));\r\n        }\r\n\r\n        private _Errors: any = {};\r\n\r\n        ErrorsChanged = new nullstone.Event<Data.DataErrorsChangedEventArgs>();\r\n\r\n        get HasErrors (): boolean {\r\n            return Object.keys(this._Errors).length > 0;\r\n        }\r\n\r\n        AddError (propertyName: string, errorMessage: string) {\r\n            var errs = this._Errors[propertyName];\r\n            if (!errs) {\r\n                this._Errors[propertyName] = [errorMessage];\r\n            } else {\r\n                errs.push(errorMessage);\r\n            }\r\n            this.ErrorsChanged.raise(this, new Data.DataErrorsChangedEventArgs(propertyName));\r\n        }\r\n\r\n        RemoveError (propertyName: string, errorMessage: string) {\r\n            var errs = this._Errors[propertyName];\r\n            if (!errs)\r\n                return;\r\n            var index = errs.indexOf(errorMessage);\r\n            if (index >= 0)\r\n                errs.splice(index, 1);\r\n            if (errs.length < 1)\r\n                delete this._Errors[propertyName];\r\n            this.ErrorsChanged.raise(this, new Data.DataErrorsChangedEventArgs(propertyName));\r\n        }\r\n\r\n        ClearErrors (propertyName: string) {\r\n            var errs = this._Errors[propertyName];\r\n            if (!errs)\r\n                return;\r\n            delete this._Errors[propertyName];\r\n            this.ErrorsChanged.raise(this, new Data.DataErrorsChangedEventArgs(propertyName));\r\n        }\r\n\r\n        GetErrors (propertyName: string): nullstone.IEnumerable<string> {\r\n            var errs = this._Errors[propertyName];\r\n            if (!errs)\r\n                return null;\r\n            return nullstone.IEnumerable_.fromArray(errs);\r\n        }\r\n\r\n        static ApplyTo<TIn, TOut extends IEntity>(model: TIn): TOut {\r\n            var out = <TOut><any>model;\r\n            var proto = Entity.prototype;\r\n            Object.defineProperties(out, {\r\n                \"_Errors\": {value: {}},\r\n                \"HasErrors\": {\r\n                    get: function () {\r\n                        return Object.keys(this._Errors).length > 0;\r\n                    }\r\n                }\r\n            });\r\n\r\n            out.PropertyChanged = new nullstone.Event<PropertyChangedEventArgs>();\r\n            out.OnPropertyChanged = proto.OnPropertyChanged.bind(out);\r\n            out.ErrorsChanged = new nullstone.Event<Data.DataErrorsChangedEventArgs>();\r\n            out.AddError = proto.AddError.bind(out);\r\n            out.RemoveError = proto.RemoveError.bind(out);\r\n            out.ClearErrors = proto.ClearErrors.bind(out);\r\n            out.GetErrors = proto.GetErrors.bind(out);\r\n\r\n            Data.INotifyDataErrorInfo_.mark(out);\r\n\r\n            return out;\r\n        }\r\n    }\r\n    Data.INotifyDataErrorInfo_.mark(Entity);\r\n}","module Fayde.Navigation {\r\n    export class Route {\r\n        View: Uri;\r\n        HashParams: { [key: string]: string };\r\n        DataContext: any;\r\n\r\n        constructor (view: Uri, hashParams: { [key: string]: string }, dataContext: any) {\r\n            this.View = view;\r\n            this.HashParams = hashParams;\r\n            this.DataContext = dataContext;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Route);\r\n}","/// <reference path=\"../Navigation/Route.ts\" />\r\n\r\nmodule Fayde.MVVM {\r\n    export interface IViewModelProvider {\r\n        ResolveViewModel(route: Fayde.Navigation.Route);\r\n    }\r\n    export var IViewModelProvider_ = new nullstone.Interface<IViewModelProvider>(\"IViewModelProvider\");\r\n    IViewModelProvider_.is = function (o: any): boolean {\r\n        return o && typeof o.ResolveViewModel === \"function\";\r\n    };\r\n}","/// <reference path=\"../Input/ICommand.ts\" />\r\n\r\nmodule Fayde.MVVM {\r\n    export class RelayCommand implements Input.ICommand {\r\n        constructor(execute?: (parameter: any) => void , canExecute?: (parameter: any) => boolean) {\r\n            if (execute)\r\n                this.Execute = execute;\r\n            if (canExecute)\r\n                this.CanExecute = canExecute;\r\n        }\r\n\r\n        Execute(parameter: any) { }\r\n        CanExecute(parameter: any): boolean { return true; }\r\n        CanExecuteChanged = new nullstone.Event();\r\n        ForceCanExecuteChanged() {\r\n            this.CanExecuteChanged.raise(this, null);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(RelayCommand);\r\n    nullstone.addTypeInterfaces(RelayCommand, Input.ICommand_);\r\n}","module Fayde.Markup {\r\n    export interface IEventFilter {\r\n        Filter(sender: any, e: nullstone.IEventArgs, parameter: any): boolean;\r\n    }\r\n    export var IEventFilter_ = new nullstone.Interface<IEventFilter>(\"IEventFilter\");\r\n\r\n    export class EventBinding implements nullstone.markup.IMarkupExtension {\r\n        CommandPath: string = null;\r\n        Command: Data.BindingExpressionBase = null;\r\n        CommandParameter: Data.BindingExpressionBase = null;\r\n        CommandBinding: Data.Binding = null;\r\n        CommandParameterBinding: Data.Binding = null;\r\n        Filter: IEventFilter = null;\r\n\r\n        init (val: string) {\r\n            this.CommandPath = val;\r\n        }\r\n\r\n        transmute (os: any[]): any {\r\n            this.$$coerce();\r\n            Object.freeze(this);\r\n            return new EventBindingExpression(this);\r\n        }\r\n\r\n        private $$coerce () {\r\n            if (this.Command) {\r\n                this.CommandBinding = this.Command.ParentBinding.Clone();\r\n                this.Command = null;\r\n            }\r\n            if (this.CommandPath) {\r\n                this.CommandBinding = new Data.Binding(this.CommandPath);\r\n            }\r\n            if (this.CommandParameter) {\r\n                this.CommandParameterBinding = this.CommandParameter.ParentBinding.Clone();\r\n                this.CommandParameter = null;\r\n            }\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(EventBinding);\r\n}","module Fayde.Markup {\r\n    import XamlMarkup = nullstone.markup.xaml.XamlMarkup;\r\n\r\n    export function Resolve (uri: string);\r\n    export function Resolve (uri: Uri);\r\n    export function Resolve (uri: any): nullstone.async.IAsyncRequest<XamlMarkup> {\r\n        return nullstone.async.create((resolve, reject) => {\r\n            XamlMarkup.create(uri)\r\n                .loadAsync()\r\n                .then(xm => {\r\n                    var co = collector.create();\r\n                    return nullstone.async.many([\r\n                        xm.resolve(Fayde.TypeManager, co.collect),\r\n                        co.resolve()\r\n                    ]).then(() => resolve(xm), reject);\r\n                }, reject);\r\n        });\r\n    }\r\n\r\n    module collector {\r\n        export interface ICollector {\r\n            collect(ownerUri: string, ownerName: string, propName: string, val: any);\r\n            resolve(): nullstone.async.IAsyncRequest<any>;\r\n        }\r\n\r\n        export function create (): ICollector {\r\n            var rduris: string[] = [];\r\n            return {\r\n                collect (ownerUri: string, ownerName: string, propName: string, val: any) {\r\n                    if (ownerUri === Fayde.XMLNS && ownerName === \"ResourceDictionary\" && propName === \"Source\")\r\n                        rduris.push(val);\r\n                },\r\n                resolve (): nullstone.async.IAsyncRequest<any> {\r\n                    return nullstone.async.many(rduris.map(Resolve));\r\n                }\r\n            };\r\n        }\r\n    }\r\n}","module Fayde.Markup {\r\n    export class StaticResource implements nullstone.markup.IMarkupExtension {\r\n        ResourceKey: string;\r\n\r\n        private $$app: Application;\r\n        private $$resources: ResourceDictionary[];\r\n\r\n        init (val: string) {\r\n            this.ResourceKey = val;\r\n        }\r\n\r\n        transmute (os: any[]): any {\r\n            var res = this.$$resources;\r\n            this.$$resources = undefined;\r\n\r\n            var key = this.ResourceKey;\r\n            var rd: ResourceDictionary;\r\n            for (var i = os.length - 1; i >= 0; i--) {\r\n                var cur = os[i];\r\n                if (cur instanceof FrameworkElement) {\r\n                    rd = (<FrameworkElement>cur).ReadLocalValue(FrameworkElement.ResourcesProperty);\r\n                    if (rd === DependencyProperty.UnsetValue)\r\n                        rd = undefined;\r\n                } else if (cur instanceof Application) {\r\n                    rd = (<Application>cur).Resources;\r\n                } else if (cur instanceof ResourceDictionary) {\r\n                    rd = cur;\r\n                }\r\n                var o = rd ? rd.Get(key) : undefined;\r\n                if (o !== undefined)\r\n                    return o;\r\n            }\r\n\r\n            for (var i = res ? (res.length - 1) : -1; i >= 0; i--) {\r\n                var o = res[i].Get(key);\r\n                if (o !== undefined)\r\n                    return o;\r\n            }\r\n\r\n            if (this.$$app) {\r\n                var rd = this.$$app.Resources;\r\n                if (rd) {\r\n                    var o = rd.Get(key);\r\n                    if (o !== undefined)\r\n                        return o;\r\n                }\r\n            }\r\n            //TODO: Search in Application.Resources\r\n\r\n            throw new Error(\"Could not resolve StaticResource: '\" + key + \"'.\")\r\n        }\r\n\r\n        setContext (app: Application, resources: ResourceDictionary[]) {\r\n            this.$$app = app;\r\n            this.$$resources = resources;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(StaticResource);\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class Brush extends DependencyObject implements minerva.IBrush {\r\n        static TransformProperty = DependencyProperty.RegisterCore(\"Transform\", () => Media.Transform, Brush);\r\n        Transform: Media.Transform;\r\n\r\n        private _CachedBounds: minerva.Rect = null;\r\n        private _CachedBrush: any = null;\r\n\r\n        constructor () {\r\n            super();\r\n            XamlNode.SetShareable(this.XamlNode);\r\n        }\r\n\r\n        isTransparent (): boolean {\r\n            //TODO: Can we be clever with implementations?\r\n            return false;\r\n        }\r\n\r\n        setupBrush (ctx: CanvasRenderingContext2D, bounds: minerva.Rect) {\r\n            if (this._CachedBrush && this._CachedBounds && minerva.Rect.isEqual(this._CachedBounds, bounds))\r\n                return;\r\n            this._CachedBounds = new minerva.Rect(bounds.x, bounds.y, bounds.width, bounds.height);\r\n\r\n            var transform = this.Transform;\r\n            if (transform) {\r\n                var transformedBounds = transform.TransformBounds(bounds);\r\n                var raw = transform.Value._Raw;\r\n\r\n                var tmpBrush = this.CreateBrush(ctx, bounds);\r\n                var fillExtents = new minerva.Rect();\r\n                minerva.Rect.copyTo(bounds, fillExtents);\r\n                minerva.Rect.grow(fillExtents, raw[4], raw[5], 0, 0);\r\n\r\n                var tmpCanvas = <HTMLCanvasElement>document.createElement(\"canvas\");\r\n                tmpCanvas.width = Math.max(transformedBounds.width, bounds.width);\r\n                tmpCanvas.height = Math.max(transformedBounds.height, bounds.height);\r\n                var tmpCtx = <CanvasRenderingContext2D>tmpCanvas.getContext(\"2d\");\r\n                tmpCtx.setTransform(raw[0], raw[1], raw[2], raw[3], raw[4], raw[5]);\r\n                tmpCtx.fillStyle = tmpBrush;\r\n                tmpCtx.fillRect(fillExtents.x, fillExtents.y, fillExtents.width, fillExtents.height);\r\n\r\n                this._CachedBrush = ctx.createPattern(tmpCanvas, \"no-repeat\");\r\n            } else {\r\n                this._CachedBrush = this.CreateBrush(ctx, bounds);\r\n            }\r\n        }\r\n\r\n        toHtml5Object (): any {\r\n            return this._CachedBrush;\r\n        }\r\n\r\n        CreateBrush (ctx: CanvasRenderingContext2D, bounds: minerva.Rect): any {\r\n            return undefined;\r\n        }\r\n\r\n        InvalidateBrush () {\r\n            this._CachedBrush = null;\r\n            this._CachedBounds = null;\r\n            Incite(this);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Brush);\r\n\r\n    module reactions {\r\n        DPReaction<Media.Transform>(Brush.TransformProperty, (brush: Brush, ov, nv) => brush.InvalidateBrush());\r\n    }\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n/// <reference path=\"../Core/XamlObjectCollection.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class Geometry extends DependencyObject implements minerva.IGeometry {\r\n        private _Path: minerva.path.Path = null;\r\n        private _LocalBounds = new minerva.Rect();\r\n\r\n        static TransformProperty = DependencyProperty.Register(\"Transform\", () => Transform, Geometry);\r\n        Transform: Transform;\r\n\r\n        constructor () {\r\n            super();\r\n            this._LocalBounds.width = Number.NEGATIVE_INFINITY;\r\n            this._LocalBounds.height = Number.NEGATIVE_INFINITY;\r\n        }\r\n\r\n        GetBounds (pars?: minerva.path.IStrokeParameters): minerva.Rect {\r\n            var compute = minerva.Rect.isEmpty(this._LocalBounds);\r\n\r\n            if (!this._Path) {\r\n                this._Path = this._Build();\r\n                compute = true;\r\n            }\r\n\r\n            if (compute)\r\n                minerva.Rect.copyTo(this.ComputePathBounds(pars), this._LocalBounds);\r\n\r\n            var bounds = new minerva.Rect();\r\n            minerva.Rect.copyTo(this._LocalBounds, bounds);\r\n            var transform = this.Transform;\r\n            if (transform != null)\r\n                bounds = transform.TransformBounds(bounds);\r\n\r\n            return bounds;\r\n        }\r\n\r\n        Draw (ctx: minerva.core.render.RenderContext) {\r\n            if (!this._Path)\r\n                return;\r\n\r\n            var raw = ctx.raw;\r\n            var transform = this.Transform;\r\n            if (transform != null) {\r\n                raw.save();\r\n                ctx.apply(transform.Value._Raw);\r\n            }\r\n            this._Path.draw(raw);\r\n            if (transform != null)\r\n                raw.restore();\r\n        }\r\n\r\n        ComputePathBounds (pars: minerva.path.IStrokeParameters): minerva.Rect {\r\n            if (!this._Path)\r\n                this._Path = this._Build();\r\n            if (!this._Path)\r\n                return new minerva.Rect();\r\n            return this._Path.calcBounds(pars);\r\n        }\r\n\r\n        InvalidateGeometry () {\r\n            this._Path = null;\r\n            var lb = this._LocalBounds;\r\n            lb.x = lb.y = 0;\r\n            lb.width = lb.height = Number.NEGATIVE_INFINITY;\r\n            Incite(this);\r\n        }\r\n\r\n        _Build (): minerva.path.Path {\r\n            return undefined;\r\n        }\r\n\r\n        Serialize (): string {\r\n            var path = this._Path;\r\n            if (!path)\r\n                return;\r\n            return path.Serialize();\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Geometry);\r\n\r\n    module reactions {\r\n        DPReaction<Transform>(Geometry.TransformProperty, (geom: Geometry, ov, nv) => geom.InvalidateGeometry());\r\n    }\r\n\r\n    export class GeometryCollection extends XamlObjectCollection<Geometry> {\r\n        AddingToCollection (value: Geometry, error: BError): boolean {\r\n            if (!super.AddingToCollection(value, error))\r\n                return false;\r\n            ReactTo(value, this, () => Incite(this));\r\n            Incite(this);\r\n            return true;\r\n        }\r\n\r\n        RemovedFromCollection (value: Geometry, isValueSafe: boolean) {\r\n            super.RemovedFromCollection(value, isValueSafe);\r\n            UnreactTo(value, this);\r\n            Incite(this);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(GeometryCollection);\r\n}","/// <reference path=\"Geometry.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class EllipseGeometry extends Geometry {\r\n        static CenterProperty = DependencyProperty.Register(\"Center\", () => Point, EllipseGeometry, undefined, (d: Geometry, args) => d.InvalidateGeometry());\r\n        static RadiusXProperty = DependencyProperty.Register(\"RadiusX\", () => Number, EllipseGeometry, 0.0, (d: Geometry, args) => d.InvalidateGeometry());\r\n        static RadiusYProperty = DependencyProperty.Register(\"RadiusY\", () => Number, EllipseGeometry, 0.0, (d: Geometry, args) => d.InvalidateGeometry());\r\n        Center: Point;\r\n        RadiusX: number;\r\n        RadiusY: number;\r\n\r\n        _Build(): minerva.path.Path {\r\n            var rx = this.RadiusX;\r\n            var ry = this.RadiusY;\r\n            var center = this.Center;\r\n            var x = center ? center.x : 0.0;\r\n            var y = center ? center.y : 0.0;\r\n\r\n            var p = new minerva.path.Path();\r\n            p.ellipse(x - rx, y - ry, rx * 2.0, ry * 2.0);\r\n            return p;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(EllipseGeometry);\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class GeneralTransform extends DependencyObject {\r\n        Inverse: GeneralTransform;\r\n\r\n        Transform (p: minerva.IPoint): Point {\r\n            return new Point(p.x, p.y);\r\n        }\r\n\r\n        TransformBounds (r: minerva.Rect): minerva.Rect {\r\n            return r;\r\n        }\r\n\r\n        TryTransform (inPoint: minerva.IPoint, outPoint: minerva.IPoint): boolean {\r\n            return false;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(GeneralTransform);\r\n\r\n    export class InternalTransform extends GeneralTransform implements minerva.ITransform {\r\n        private _Raw: number[];\r\n\r\n        constructor (raw: number[]) {\r\n            super();\r\n            this._Raw = raw;\r\n        }\r\n\r\n        get Inverse (): InternalTransform {\r\n            return new InternalTransform(mat4.inverse(this._Raw, mat4.create()));\r\n        }\r\n\r\n        get Value (): Matrix3D {\r\n            return Matrix3D.FromRaw(this._Raw);\r\n        }\r\n\r\n        getRaw (): number[] {\r\n            return this._Raw;\r\n        }\r\n\r\n        Transform (p: minerva.IPoint): Point {\r\n            var pi = vec4.create(p.x, p.y, 0.0, 1.0);\r\n            var po = vec4.create(0, 0, 0, 0);\r\n            mat4.transformVec4(this._Raw, pi, po);\r\n            if (po[3] !== 0.0) {\r\n                var w = 1.0 / po[3];\r\n                return new Point(po[0] * w, po[1] * w);\r\n            }\r\n            return new Point(NaN, NaN);\r\n        }\r\n\r\n        TransformBounds (r: minerva.Rect): minerva.Rect {\r\n            if (!r)\r\n                return undefined;\r\n\r\n            var copy = new minerva.Rect();\r\n            minerva.Rect.copyTo(r, copy);\r\n            minerva.Rect.transform4(copy, this._Raw);\r\n            return copy;\r\n        }\r\n\r\n        CreateMatrix3DProjection (): Matrix3DProjection {\r\n            var projection = new Matrix3DProjection();\r\n            projection.ProjectionMatrix = this.Inverse.Value;\r\n            return projection\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(InternalTransform);\r\n}","module Fayde.Shapes {\r\n    export enum ShapeFlags {\r\n        None = 0,\r\n        Empty = 1,\r\n        Normal = 2,\r\n        Degenerate = 4,\r\n        Radii = 8,\r\n    }\r\n\r\n    export enum PenLineCap {\r\n        Flat = 0,\r\n        Square = 1,\r\n        Round = 2,\r\n        Triangle = 3,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(PenLineCap, \"PenLineCap\");\r\n\r\n    export enum PenLineJoin {\r\n        Miter = 0,\r\n        Bevel = 1,\r\n        Round = 2,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(PenLineJoin, \"PenLineJoin\");\r\n\r\n    export enum FillRule {\r\n        EvenOdd = 0,\r\n        NonZero = 1,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(FillRule, \"FillRule\");\r\n\r\n    export enum SweepDirection {\r\n        Counterclockwise = 0,\r\n        Clockwise = 1,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(SweepDirection, \"SweepDirection\");\r\n}","/// <reference path=\"Geometry.ts\" />\r\n/// <reference path=\"../Shapes/Enums.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class GeometryGroup extends Geometry {\r\n        static FillRulleProperty = DependencyProperty.Register(\"FillRule\", () => new Enum(Shapes.FillRule), GeometryGroup, Shapes.FillRule.EvenOdd);\r\n        static ChildrenProperty = DependencyProperty.RegisterImmutable<GeometryCollection>(\"Children\", () => GeometryCollection, GeometryGroup);\r\n        FillRule: Shapes.FillRule;\r\n        Children: GeometryCollection;\r\n\r\n        constructor () {\r\n            super();\r\n            var coll = GeometryGroup.ChildrenProperty.Initialize(this);\r\n            coll.AttachTo(this);\r\n            ReactTo(coll, this, () => this.InvalidateGeometry());\r\n        }\r\n\r\n        ComputePathBounds (pars: minerva.path.IStrokeParameters): minerva.Rect {\r\n            var bounds = new minerva.Rect();\r\n            var cbounds: minerva.Rect;\r\n            for (var enumerator = this.Children.getEnumerator(); enumerator.moveNext();) {\r\n                cbounds = enumerator.current.GetBounds(pars);\r\n                if (cbounds.width <= 0 && cbounds.height <= 0)\r\n                    continue;\r\n                if (bounds.width <= 0 && bounds.height <= 0)\r\n                    minerva.Rect.copyTo(cbounds, bounds);\r\n                else\r\n                    minerva.Rect.union(bounds, cbounds);\r\n            }\r\n            return bounds;\r\n        }\r\n\r\n        Draw (ctx: minerva.core.render.RenderContext) {\r\n            var transform = this.Transform;\r\n            if (transform != null) {\r\n                ctx.save();\r\n                ctx.apply(transform.Value._Raw);\r\n            }\r\n            var enumerator = this.Children.getEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                (<Geometry>enumerator.current).Draw(ctx);\r\n            }\r\n            if (transform != null)\r\n                ctx.restore();\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(GeometryGroup);\r\n}","/// <reference path=\"Brush.ts\" />\r\n/// <reference path=\"Enums.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class GradientBrush extends Brush {\r\n        static GradientStopsProperty = DependencyProperty.RegisterImmutable<GradientStopCollection>(\"GradientStops\", () => GradientStopCollection, GradientBrush);\r\n        static MappingModeProperty = DependencyProperty.Register(\"MappingMode\", () => new Enum(BrushMappingMode), GradientBrush, BrushMappingMode.RelativeToBoundingBox, (d: GradientBrush, args) => d.InvalidateBrush());\r\n        static SpreadMethodProperty = DependencyProperty.Register(\"SpreadMethod\", () => new Enum(GradientSpreadMethod), GradientBrush, GradientSpreadMethod.Pad, (d: GradientBrush, args) => d.InvalidateBrush());\r\n        GradientStops: GradientStopCollection;\r\n        MappingMode: BrushMappingMode;\r\n        SpreadMethod: GradientSpreadMethod;\r\n\r\n        constructor() {\r\n            super();\r\n            var coll = GradientBrush.GradientStopsProperty.Initialize(this);\r\n            coll.AttachTo(this);\r\n            ReactTo(coll, this, () => this.InvalidateBrush());\r\n        }\r\n\r\n        CreateBrush(ctx: CanvasRenderingContext2D, bounds: minerva.Rect): any {\r\n            var spread = this.SpreadMethod;\r\n            switch (spread) {\r\n                case GradientSpreadMethod.Pad:\r\n                default:\r\n                    return this.CreatePad(ctx, bounds);\r\n                case GradientSpreadMethod.Repeat:\r\n                    return this.CreateRepeat(ctx, bounds);\r\n                case GradientSpreadMethod.Reflect:\r\n                    return this.CreateReflect(ctx, bounds);\r\n            }\r\n        }\r\n        CreatePad(ctx: CanvasRenderingContext2D, bounds: minerva.Rect) { }\r\n        CreateRepeat(ctx: CanvasRenderingContext2D, bounds: minerva.Rect) { }\r\n        CreateReflect(ctx: CanvasRenderingContext2D, bounds: minerva.Rect) { }\r\n    }\r\n    Fayde.CoreLibrary.add(GradientBrush);\r\n    Markup.Content(GradientBrush, GradientBrush.GradientStopsProperty);\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n/// <reference path=\"../Core/XamlObjectCollection.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export interface IGradientStop {\r\n        Color: Color;\r\n        Offset: number;\r\n    }\r\n\r\n    export class GradientStop extends DependencyObject implements IGradientStop {\r\n        static ColorProperty = DependencyProperty.Register(\"Color\", () => Color, GradientStop, undefined, Incite);\r\n        static OffsetProperty = DependencyProperty.Register(\"Offset\", () => Number, GradientStop, 0.0, Incite);\r\n        Color: Color;\r\n        Offset: number;\r\n\r\n        toString (): string {\r\n            return this.Color.toString() + \" @ \" + this.Offset.toString();\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(GradientStop);\r\n\r\n    export class GradientStopCollection extends XamlObjectCollection<GradientStop> {\r\n        AddingToCollection (value: GradientStop, error: BError): boolean {\r\n            if (!super.AddingToCollection(value, error))\r\n                return false;\r\n            ReactTo(value, this, () => Incite(this));\r\n            Incite(this);\r\n            return true;\r\n        }\r\n\r\n        RemovedFromCollection (value: GradientStop, isValueSafe: boolean) {\r\n            if (!super.RemovedFromCollection(value, isValueSafe))\r\n                return false;\r\n            UnreactTo(value, this);\r\n            Incite(this);\r\n        }\r\n\r\n        getPaddedEnumerable (): nullstone.IEnumerable<IGradientStop> {\r\n            var minOffset = Number.MAX_VALUE;\r\n            var min: GradientStop = null;\r\n            var maxOffset = Number.MIN_VALUE;\r\n            var max: GradientStop = null;\r\n            for (var en = this.getEnumerator(); en.moveNext();) {\r\n                if (en.current.Offset < minOffset) {\r\n                    min = en.current;\r\n                    minOffset = en.current.Offset;\r\n                }\r\n                if (en.current.Offset > maxOffset) {\r\n                    max = en.current;\r\n                    maxOffset = en.current.Offset;\r\n                }\r\n            }\r\n\r\n            var arr: IGradientStop[] = this._ht.slice(0);\r\n            if (!!min)\r\n                arr.unshift({Offset: 0, Color: min.Color});\r\n            if (!!max)\r\n                arr.push({Offset: 1, Color: max.Color});\r\n\r\n            return nullstone.IEnumerable_.fromArray(arr);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(GradientStopCollection);\r\n}","/// <reference path=\"Geometry.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class LineGeometry extends Geometry {\r\n        static StartPointProperty = DependencyProperty.Register(\"StartPoint\", () => Point, LineGeometry, undefined, (d: Geometry, args) => d.InvalidateGeometry());\r\n        static EndPointProperty = DependencyProperty.Register(\"EndPoint\", () => Point, LineGeometry, undefined, (d: Geometry, args) => d.InvalidateGeometry());\r\n        StartPoint: Point;\r\n        EndPoint: Point;\r\n\r\n        _Build (): minerva.path.Path {\r\n            var p1 = this.StartPoint;\r\n            var p2 = this.EndPoint;\r\n\r\n            var p = new minerva.path.Path();\r\n            p.move(p1.x, p1.y);\r\n            p.line(p2.x, p2.y);\r\n            return p;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(LineGeometry);\r\n}","/// <reference path=\"GradientBrush.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class LinearGradientBrush extends GradientBrush {\r\n        static StartPointProperty = DependencyProperty.RegisterCore(\"StartPoint\", () => Point, LinearGradientBrush, undefined, (d: LinearGradientBrush, args) => d.InvalidateBrush());\r\n        static EndPointProperty = DependencyProperty.RegisterCore(\"EndPoint\", () => Point, LinearGradientBrush, undefined, (d: LinearGradientBrush, args) => d.InvalidateBrush());\r\n        StartPoint: Point;\r\n        EndPoint: Point;\r\n\r\n        CreatePad (ctx: CanvasRenderingContext2D, bounds: minerva.Rect) {\r\n            var data = this._GetPointData(bounds);\r\n            var grd = ctx.createLinearGradient(data.start.x, data.start.y, data.end.x, data.end.y);\r\n            for (var en = this.GradientStops.getEnumerator(); en.moveNext();) {\r\n                var stop: GradientStop = en.current;\r\n                grd.addColorStop(stop.Offset, stop.Color.toString());\r\n            }\r\n            return grd;\r\n        }\r\n\r\n        CreateRepeat (ctx: CanvasRenderingContext2D, bounds: minerva.Rect) {\r\n            var data = this._GetPointData(bounds);\r\n            return this.CreateInterpolated(ctx, LinearGradient.createRepeatInterpolator(data.start, data.end, bounds));\r\n        }\r\n\r\n        CreateReflect (ctx: CanvasRenderingContext2D, bounds: minerva.Rect) {\r\n            var data = this._GetPointData(bounds);\r\n            return this.CreateInterpolated(ctx, LinearGradient.createReflectInterpolator(data.start, data.end, bounds));\r\n        }\r\n\r\n        private CreateInterpolated (ctx: CanvasRenderingContext2D, interpolator: LinearGradient.IInterpolator) {\r\n            var grd = ctx.createLinearGradient(interpolator.x0, interpolator.y0, interpolator.x1, interpolator.y1);\r\n            var allStops = this.GradientStops.getPaddedEnumerable();\r\n            for (; interpolator.step();) {\r\n                for (var en = allStops.getEnumerator(); en.moveNext();) {\r\n                    var stop = en.current;\r\n                    var offset = interpolator.interpolate(stop.Offset);\r\n                    if (offset >= 0 && offset <= 1)\r\n                        grd.addColorStop(offset, stop.Color.toString());\r\n                }\r\n            }\r\n            return grd;\r\n        }\r\n\r\n        private _GetPointData (bounds: minerva.Rect) {\r\n            var start = this.StartPoint;\r\n            start = !start ? new Point(0.0, 0.0) : start.Clone();\r\n            var end = this.EndPoint;\r\n            end = !end ? new Point(1.0, 1.0) : end.Clone();\r\n\r\n            if (this.MappingMode !== BrushMappingMode.Absolute) {\r\n                start.x *= bounds.width;\r\n                start.y *= bounds.height;\r\n                end.x *= bounds.width;\r\n                end.y *= bounds.height;\r\n            }\r\n            start.x += bounds.x;\r\n            start.y += bounds.y;\r\n            end.x += bounds.x;\r\n            end.y += bounds.y;\r\n            return {\r\n                start: start,\r\n                end: end\r\n            };\r\n        }\r\n\r\n        toString (): string {\r\n            var ser = [];\r\n            for (var en = this.GradientStops.getEnumerator(); en.moveNext();) {\r\n                ser.push(en.current.toString());\r\n            }\r\n            return \"LinearGradientBrush(\" + this.StartPoint.toString() + \" --> \" + this.EndPoint.toString() + \" [\" + ser.toString() + \"])\";\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(LinearGradientBrush);\r\n}","module Fayde.Media {\r\n    export class Matrix {\r\n        _Raw: number[];\r\n        private _Inverse: Matrix = null;\r\n\r\n        constructor(raw?: number[]) {\r\n            this._Raw = raw || mat3.identity();\r\n        }\r\n\r\n        static get Identity(): Matrix {\r\n            return new Matrix(mat3.identity());\r\n        }\r\n\r\n        get M11() { return this._Raw[0]; }\r\n        set M11(val: number) { this._Raw[0] = val; this._OnChanged(); }\r\n\r\n        get M12() { return this._Raw[1]; }\r\n        set M12(val: number) { this._Raw[1] = val; this._OnChanged(); }\r\n\r\n        get M21() { return this._Raw[2]; }\r\n        set M21(val: number) { this._Raw[2] = val; this._OnChanged(); }\r\n\r\n        get M22() { return this._Raw[3]; }\r\n        set M22(val: number) { this._Raw[3] = val; this._OnChanged(); }\r\n\r\n        get OffsetX() { return this._Raw[4]; }\r\n        set OffsetX(val: number) { this._Raw[4] = val; this._OnChanged(); }\r\n\r\n        get OffsetY() { return this._Raw[5]; }\r\n        set OffsetY(val: number) { this._Raw[5] = val; this._OnChanged(); }\r\n\r\n        get Inverse(): Matrix {\r\n            var inverse = this._Inverse;\r\n            if (!inverse) {\r\n                inverse = new Matrix();\r\n                inverse._Raw = mat3.inverse(this._Raw, mat3.identity());\r\n                if (!inverse._Raw)\r\n                    return undefined;\r\n                this._Inverse = inverse;\r\n            }\r\n            return inverse;\r\n        }\r\n\r\n        private _OnChanged() {\r\n            this._Inverse = null;\r\n            Incite(this);\r\n        }\r\n\r\n        Clone(): Matrix {\r\n            if (!this._Raw)\r\n                return new Matrix();\r\n            return new Matrix(mat3.create(this._Raw));\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Matrix);\r\n}\r\n","module Fayde.Media {\r\n    export interface IMatrix3DChangedListener {\r\n        Callback: (newMatrix3D: Matrix3D) => void;\r\n        Detach();\r\n    }\r\n\r\n    export class Matrix3D {\r\n        _Raw: number[];\r\n        private _Inverse: Matrix3D = null;\r\n\r\n        static FromRaw(raw: number[]): Matrix3D {\r\n            var r = new Matrix3D();\r\n            r._Raw = raw;\r\n            return r;\r\n        }\r\n\r\n        get M11() { return this._Raw[0]; }\r\n        set M11(val: number) { this._Raw[0] = val; this._OnChanged(); }\r\n\r\n        get M12() { return this._Raw[1]; }\r\n        set M12(val: number) { this._Raw[1] = val; this._OnChanged(); }\r\n\r\n        get M13() { return this._Raw[2]; }\r\n        set M13(val: number) { this._Raw[2] = val; this._OnChanged(); }\r\n\r\n        get M14() { return this._Raw[3]; }\r\n        set M14(val: number) { this._Raw[3] = val; this._OnChanged(); }\r\n\r\n        get M21() { return this._Raw[4]; }\r\n        set M21(val: number) { this._Raw[4] = val; this._OnChanged(); }\r\n\r\n        get M22() { return this._Raw[5]; }\r\n        set M22(val: number) { this._Raw[5] = val; this._OnChanged(); }\r\n\r\n        get M23() { return this._Raw[6]; }\r\n        set M23(val: number) { this._Raw[6] = val; this._OnChanged(); }\r\n\r\n        get M24() { return this._Raw[7]; }\r\n        set M24(val: number) { this._Raw[7] = val; this._OnChanged(); }\r\n\r\n        get M31() { return this._Raw[8]; }\r\n        set M31(val: number) { this._Raw[8] = val; this._OnChanged(); }\r\n\r\n        get M32() { return this._Raw[9]; }\r\n        set M32(val: number) { this._Raw[9] = val; this._OnChanged(); }\r\n\r\n        get M33() { return this._Raw[10]; }\r\n        set M33(val: number) { this._Raw[10] = val; this._OnChanged(); }\r\n\r\n        get M34() { return this._Raw[11]; }\r\n        set M34(val: number) { this._Raw[11] = val; this._OnChanged(); }\r\n\r\n        get OffsetX() { return this._Raw[12]; }\r\n        set OffsetX(val: number) { this._Raw[12] = val; this._OnChanged(); }\r\n\r\n        get OffsetY() { return this._Raw[13]; }\r\n        set OffsetY(val: number) { this._Raw[13] = val; this._OnChanged(); }\r\n\r\n        get OffsetZ() { return this._Raw[14]; }\r\n        set OffsetZ(val: number) { this._Raw[14] = val; this._OnChanged(); }\r\n\r\n        get M44() { return this._Raw[15]; }\r\n        set M44(val: number) { this._Raw[15] = val; this._OnChanged(); }\r\n\r\n        get Inverse(): Matrix3D {\r\n            var inverse = this._Inverse;\r\n            if (!inverse) {\r\n                inverse = new Matrix3D();\r\n                inverse._Raw = mat4.inverse(this._Raw, mat4.identity());\r\n                if (!inverse._Raw)\r\n                    return undefined;\r\n                this._Inverse = inverse;\r\n            }\r\n            return inverse;\r\n        }\r\n\r\n        private _Listeners: IMatrix3DChangedListener[] = [];\r\n        Listen(func: (newMatrix: Matrix3D) => void ): IMatrix3DChangedListener {\r\n            var listeners = this._Listeners;\r\n            var listener = {\r\n                Callback: func,\r\n                Detach: () => {\r\n                    var index = listeners.indexOf(listener);\r\n                    if (index > -1)\r\n                        listeners.splice(index, 1);\r\n                }\r\n            };\r\n            listeners.push(listener);\r\n            return listener;\r\n        }\r\n        private _OnChanged() {\r\n            this._Inverse = null;\r\n            var listeners = this._Listeners;\r\n            var len = listeners.length;\r\n            for (var i = 0; i < len; i++) {\r\n                listeners[i].Callback(this);\r\n            }\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Matrix3D);\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class Projection extends DependencyObject implements minerva.IProjection {\r\n        private _ProjectionMatrix: Matrix3D = null;\r\n        private _ObjectWidth: number = 0;\r\n        get ObjectWidth (): number {\r\n            return this._ObjectWidth;\r\n        }\r\n\r\n        private _ObjectHeight: number = 0;\r\n        get ObjectHeight (): number {\r\n            return this._ObjectHeight;\r\n        }\r\n\r\n        setObjectSize (objectWidth: number, objectHeight: number) {\r\n            var w = Math.max(objectWidth, 1.0);\r\n            var h = Math.max(objectHeight, 1.0);\r\n            if (w !== this._ObjectWidth && h !== this._ObjectHeight) {\r\n                this._ObjectWidth = w;\r\n                this._ObjectHeight = h;\r\n                this._ProjectionMatrix = null;\r\n            }\r\n        }\r\n\r\n        getDistanceFromXYPlane (): number {\r\n            return NaN;\r\n        }\r\n\r\n        getTransform (): number[] {\r\n            var m3 = this._ProjectionMatrix;\r\n            if (!m3)\r\n                m3 = this._ProjectionMatrix = this.CreateProjectionMatrix();\r\n            if (m3)\r\n                return mat4.create(m3._Raw);\r\n            return mat4.identity();\r\n        }\r\n\r\n        CreateProjectionMatrix (): Matrix3D {\r\n            return null;\r\n        }\r\n\r\n        InvalidateProjection () {\r\n            this._ProjectionMatrix = null;\r\n            Incite(this);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Projection);\r\n}","/// <reference path=\"Projection.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class Matrix3DProjection extends Projection {\r\n        static ProjectionMatrixProperty = DependencyProperty.Register(\"ProjectionMatrix\", () => Matrix3D, Matrix3DProjection, undefined, (d: Projection, args) => d.InvalidateProjection());\r\n        ProjectionMatrix: Matrix3D;\r\n\r\n        CreateProjectionMatrix(): Matrix3D { return this.ProjectionMatrix; }\r\n    }\r\n    Fayde.CoreLibrary.add(Matrix3DProjection);\r\n}","/// <reference path=\"Geometry.ts\" />\r\n\r\n\r\n// Path Markup Syntax: http://msdn.microsoft.com/en-us/library/cc189041(v=vs.95).aspx\r\n\r\n//FigureDescription Syntax\r\n// MoveCommand DrawCommands [CloseCommand]\r\n\r\n//Double Syntax\r\n// digits\r\n// digits.digits\r\n// 'Infinity'\r\n// '-Infinity'\r\n// 'NaN'\r\n\r\n//Point Syntax\r\n// x,y\r\n// x y\r\n\r\n//Loop until exhausted\r\n//  Parse FigureDescription\r\n//      Find \"M\" or \"m\"? - Parse MoveCommand (start point)\r\n//          <point>\r\n//\r\n//      Find \"L\" or \"l\"? - Parse LineCommand (end point)\r\n//          <point>\r\n//      Find \"H\" or \"h\"? - Parse HorizontalLineCommand (x)\r\n//          <double>\r\n//      Find \"V\" or \"v\"? - Parse VerticalLineCommand (y)\r\n//          <double>\r\n//      Find \"C\" or \"c\"? - Parse CubicBezierCurveCommand (control point 1, control point 2, end point)\r\n//          <point> <point> <point>\r\n//      Find \"Q\" or \"q\"? - Parse QuadraticBezierCurveCommand (control point, end point)\r\n//          <point> <point>\r\n//      Find \"S\" or \"s\"? - Parse SmoothCubicBezierCurveCommand (control point 2, end point)\r\n//          <point> <point>\r\n//      Find \"T\" or \"t\"? - Parse SmoothQuadraticBezierCurveCommand (control point, end point)\r\n//          <point> <point>\r\n//      Find \"A\" or \"a\"? - Parse EllipticalArcCommand (size, rotationAngle, isLargeArcFlag, sweepDirectionFlag, endPoint)\r\n//          <point> <double> <1,0> <1,0> <point>\r\n//\r\n//      Find \"Z\" or \"z\"? - CloseCommand\r\n\r\nmodule Fayde.Media {\r\n    export function ParseGeometry (val: string): Geometry {\r\n        return (new MediaParser(val)).ParseGeometryImpl();\r\n    }\r\n\r\n    export function ParseShapePoints (val: string): Point[] {\r\n        return (new MediaParser(val)).ParseShapePoints();\r\n    }\r\n\r\n    class MediaParser {\r\n        private str: string;\r\n        private len: number;\r\n        private index: number = 0;\r\n\r\n        constructor (str: string) {\r\n            this.str = str;\r\n            this.len = str.length;\r\n        }\r\n\r\n        ParseGeometryImpl (): Geometry {\r\n            var cp = new Point();\r\n            var cp1: Point, cp2: Point, cp3: Point;\r\n            var start = new Point();\r\n            var fillRule = Shapes.FillRule.EvenOdd;\r\n            var cbz = false; // last figure is a cubic bezier curve\r\n            var qbz = false; // last figure is a quadratic bezier curve\r\n            var cbzp = new Point(); // points needed to create \"smooth\" beziers\r\n            var qbzp = new Point(); // points needed to create \"smooth\" beziers\r\n\r\n            var path = new minerva.path.Path();\r\n            while (this.index < this.len) {\r\n                var c;\r\n                while (this.index < this.len && (c = this.str.charAt(this.index)) === ' ') {\r\n                    this.index++;\r\n                }\r\n                this.index++;\r\n                var relative = false;\r\n                switch (c) {\r\n                    case 'f':\r\n                    case 'F':\r\n                        c = this.str.charAt(this.index);\r\n                        if (c === '0')\r\n                            fillRule = Shapes.FillRule.EvenOdd;\r\n                        else if (c === '1')\r\n                            fillRule = Shapes.FillRule.NonZero;\r\n                        else\r\n                            return null;\r\n                        this.index++;\r\n                        c = this.str.charAt(this.index);\r\n                        break;\r\n                    case 'm':\r\n                        relative = true;\r\n                    case 'M':\r\n                        cp1 = this.ParsePoint();\r\n                        if (cp1 == null)\r\n                            break;\r\n                        if (relative) {\r\n                            cp1.x += cp.x;\r\n                            cp1.y += cp.y;\r\n                        }\r\n                        path.move(cp1.x, cp1.y);\r\n                        start.x = cp.x = cp1.x;\r\n                        start.y = cp.y = cp1.y;\r\n                        this.Advance();\r\n                        while (this.MorePointsAvailable()) {\r\n                            if ((cp1 = this.ParsePoint()) == null)\r\n                                break;\r\n                            if (relative) {\r\n                                cp1.x += cp.x;\r\n                                cp1.y += cp.y;\r\n                            }\r\n                            path.line(cp1.x, cp1.y);\r\n                        }\r\n                        cp.x = cp1.x;\r\n                        cp.y = cp1.y;\r\n                        cbz = qbz = false;\r\n                        break;\r\n                    case 'l':\r\n                        relative = true;\r\n                    case 'L':\r\n                        while (this.MorePointsAvailable()) {\r\n                            if ((cp1 = this.ParsePoint()) == null)\r\n                                break;\r\n\r\n                            if (relative) {\r\n                                cp1.x += cp.x;\r\n                                cp1.y += cp.y;\r\n                            }\r\n\r\n                            path.line(cp1.x, cp1.y);\r\n\r\n                            cp.x = cp1.x;\r\n                            cp.y = cp1.y;\r\n                            this.Advance();\r\n                        }\r\n                        cbz = qbz = false;\r\n                        break;\r\n                    case 'h':\r\n                        relative = true;\r\n                    case 'H':\r\n                        var x = this.ParseDouble();\r\n                        if (x == null)\r\n                            break;\r\n\r\n                        if (relative)\r\n                            x += cp.x;\r\n                        cp = new Point(x, cp.y);\r\n\r\n                        path.line(cp.x, cp.y);\r\n                        cbz = qbz = false;\r\n                        break;\r\n                    case 'v':\r\n                        relative = true;\r\n                    case 'V':\r\n                        var y = this.ParseDouble();\r\n                        if (y == null)\r\n                            break;\r\n\r\n                        if (relative)\r\n                            y += cp.y;\r\n                        cp = new Point(cp.x, y);\r\n\r\n                        path.line(cp.x, cp.y);\r\n                        cbz = qbz = false;\r\n                        break;\r\n                    case 'c':\r\n                        relative = true;\r\n                    case 'C':\r\n                        while (this.MorePointsAvailable()) {\r\n                            if ((cp1 = this.ParsePoint()) == null)\r\n                                break;\r\n                            if (relative) {\r\n                                cp1.x += cp.x;\r\n                                cp1.y += cp.y;\r\n                            }\r\n                            this.Advance();\r\n                            if ((cp2 = this.ParsePoint()) == null)\r\n                                break;\r\n                            if (relative) {\r\n                                cp2.x += cp.x;\r\n                                cp2.y += cp.y;\r\n                            }\r\n                            this.Advance();\r\n                            if ((cp3 = this.ParsePoint()) == null)\r\n                                break;\r\n                            if (relative) {\r\n                                cp3.x += cp.x;\r\n                                cp3.y += cp.y;\r\n                            }\r\n                            this.Advance();\r\n\r\n                            path.cubicBezier(cp1.x, cp1.y, cp2.x, cp2.y, cp3.x, cp3.y);\r\n\r\n                            cp1.x = cp3.x;\r\n                            cp1.y = cp3.y;\r\n                        }\r\n                        cp.x = cp3.x;\r\n                        cp.y = cp3.y;\r\n                        cbz = true;\r\n                        cbzp.x = cp2.x;\r\n                        cbzp.y = cp2.y;\r\n                        qbz = false;\r\n                        break;\r\n                    case 's':\r\n                        relative = true;\r\n                    case 'S':\r\n                        while (this.MorePointsAvailable()) {\r\n                            if ((cp2 = this.ParsePoint()) == null)\r\n                                break;\r\n                            if (relative) {\r\n                                cp2.x += cp.x;\r\n                                cp2.y += cp.y;\r\n                            }\r\n                            this.Advance();\r\n                            if ((cp3 = this.ParsePoint()) == null)\r\n                                break;\r\n                            if (relative) {\r\n                                cp3.x += cp.x;\r\n                                cp3.y += cp.y;\r\n                            }\r\n\r\n                            if (cbz) {\r\n                                cp1.x = 2 * cp.x - cbzp.x;\r\n                                cp1.y = 2 * cp.y - cbzp.y;\r\n                            } else\r\n                                cp1 = cp;\r\n\r\n                            path.cubicBezier(cp1.x, cp1.y, cp2.x, cp2.y, cp3.x, cp3.y);\r\n\r\n                            cbz = true;\r\n                            cbzp.x = cp2.x;\r\n                            cbzp.y = cp2.y;\r\n\r\n                            cp.x = cp3.x;\r\n                            cp.y = cp3.y;\r\n\r\n                            this.Advance();\r\n                        }\r\n                        qbz = false;\r\n                        break;\r\n                    case 'q':\r\n                        relative = true;\r\n                    case 'Q':\r\n                        while (this.MorePointsAvailable()) {\r\n                            if ((cp1 = this.ParsePoint()) == null)\r\n                                break;\r\n                            if (relative) {\r\n                                cp1.x += cp.x;\r\n                                cp1.y += cp.y;\r\n                            }\r\n                            this.Advance();\r\n                            if ((cp2 = this.ParsePoint()) == null)\r\n                                break;\r\n                            if (relative) {\r\n                                cp2.x += cp.x;\r\n                                cp2.y += cp.y;\r\n                            }\r\n                            this.Advance();\r\n\r\n                            path.quadraticBezier(cp1.x, cp1.y, cp2.x, cp2.y);\r\n\r\n                            cp.x = cp2.x;\r\n                            cp.y = cp2.y;\r\n                        }\r\n                        qbz = true;\r\n                        qbzp.x = cp1.x;\r\n                        qbzp.y = cp1.y;\r\n                        cbz = false;\r\n                        break;\r\n                    case 't':\r\n                        relative = true;\r\n                    case 'T':\r\n                        while (this.MorePointsAvailable()) {\r\n                            if ((cp2 = this.ParsePoint()) == null)\r\n                                break;\r\n                            if (relative) {\r\n                                cp2.x += cp.x;\r\n                                cp2.y += cp.y;\r\n                            }\r\n\r\n                            if (qbz) {\r\n                                cp1.x = 2 * cp.x - qbzp.x;\r\n                                cp1.y = 2 * cp.y - qbzp.y;\r\n                            } else\r\n                                cp1 = cp;\r\n\r\n                            path.quadraticBezier(cp1.x, cp1.y, cp2.x, cp2.y);\r\n\r\n                            qbz = true;\r\n                            qbzp.x = cp1.x;\r\n                            qbzp.y = cp1.y;\r\n\r\n                            cp.x = cp2.x;\r\n                            cp.y = cp2.y;\r\n\r\n                            this.Advance();\r\n                        }\r\n                        cbz = false;\r\n                        break;\r\n                    case 'a':\r\n                        relative = true;\r\n                    case 'A':\r\n                        while (this.MorePointsAvailable()) {\r\n                            if ((cp1 = this.ParsePoint()) == null)\r\n                                break;\r\n\r\n                            var angle = this.ParseDouble();\r\n                            var is_large = this.ParseDouble() !== 0;\r\n                            var sweep = minerva.SweepDirection.Counterclockwise;\r\n                            if (this.ParseDouble() !== 0) sweep = minerva.SweepDirection.Clockwise;\r\n\r\n                            if ((cp2 = this.ParsePoint()) == null)\r\n                                break;\r\n                            if (relative) {\r\n                                cp2.x += cp.x;\r\n                                cp2.y += cp.y;\r\n                            }\r\n\r\n                            path.ellipticalArc(cp1.x, cp1.y, angle, is_large, sweep, cp2.x, cp2.y);\r\n\r\n                            cp.x = cp2.x;\r\n                            cp.y = cp2.y;\r\n\r\n                            this.Advance();\r\n                        }\r\n                        cbz = qbz = false;\r\n                        break;\r\n                    case 'z':\r\n                    case 'Z':\r\n                        //path.Line(start.x, start.y);\r\n                        path.close();\r\n                        //path.Move(start.x, start.y);\r\n\r\n                        cp.x = start.x;\r\n                        cp.y = start.y;\r\n                        cbz = qbz = false;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            var pg = new PathGeometry();\r\n            pg.OverridePath(path);\r\n            pg.FillRule = <Shapes.FillRule>fillRule;\r\n            return pg;\r\n        }\r\n\r\n        ParseShapePoints (): Point[] {\r\n            var points: Point[] = [];\r\n            var p: Point;\r\n            while (this.MorePointsAvailable() && (p = this.ParsePoint()) != null) {\r\n                points.push(p);\r\n            }\r\n            return points;\r\n        }\r\n\r\n        private ParsePoint (): Point {\r\n            var x = this.ParseDouble();\r\n            if (x == null)\r\n                return null;\r\n\r\n            var c;\r\n            while (this.index < this.len && ((c = this.str.charAt(this.index)) === ' ' || c === ',')) {\r\n                this.index++;\r\n            }\r\n            if (this.index >= this.len)\r\n                return null;\r\n\r\n            var y = this.ParseDouble();\r\n            if (y == null)\r\n                return null;\r\n\r\n            return new Point(x, y);\r\n        }\r\n\r\n        private ParseDouble (): number {\r\n            this.Advance();\r\n            var isNegative = false;\r\n            if (this.Match('-')) {\r\n                isNegative = true;\r\n                this.index++;\r\n            } else if (this.Match('+')) {\r\n                this.index++;\r\n            }\r\n            if (this.Match('Infinity')) {\r\n                this.index += 8;\r\n                return isNegative ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\r\n            }\r\n            if (this.Match('NaN'))\r\n                return NaN;\r\n\r\n            var temp = '';\r\n            while (this.index < this.len) {\r\n                var code = this.str.charCodeAt(this.index);\r\n                var c = this.str[this.index];\r\n                //0-9, ., E, e, E-, e-\r\n                if (code >= 48 && code <= 57)\r\n                    temp += c;\r\n                else if (code === 46)\r\n                    temp += c;\r\n                else if (c === 'E' || c === 'e') {\r\n                    temp += c;\r\n                    if (this.str[this.index + 1] === '-') {\r\n                        temp += '-';\r\n                        this.index++;\r\n                    }\r\n                }\r\n                else\r\n                    break;\r\n                this.index++;\r\n            }\r\n            if (temp.length === 0)\r\n                return null;\r\n            var f = parseFloat(temp);\r\n            return isNegative ? -f : f;\r\n        }\r\n\r\n        private Match (matchStr: string): boolean {\r\n            var c1: string;\r\n            var c2: string;\r\n            for (var i = 0; i < matchStr.length && (this.index + i) < this.len; i++) {\r\n                c1 = matchStr.charAt(i);\r\n                c2 = this.str.charAt(this.index + i);\r\n                if (c1 !== c2)\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        private Advance () {\r\n            var code: number;\r\n            var c: string;\r\n            while (this.index < this.len) {\r\n                code = this.str.charCodeAt(this.index);\r\n                //alphanum\r\n                if ((code >= 65 && code <= 90) || (code >= 97 && code <= 122) || (code >= 48 && code <= 57))\r\n                    break;\r\n                c = String.fromCharCode(code);\r\n                if (c === '.')\r\n                    break;\r\n                if (c === '-')\r\n                    break;\r\n                if (c === '+')\r\n                    break;\r\n                this.index++;\r\n            }\r\n        }\r\n\r\n        private MorePointsAvailable (): boolean {\r\n            var c;\r\n            while (this.index < this.len && ((c = this.str.charAt(this.index)) === ',' || c === ' ')) {\r\n                this.index++;\r\n            }\r\n            if (this.index >= this.len)\r\n                return false;\r\n            if (c === '.' || c === '-' || c === '+')\r\n                return true;\r\n            var code = this.str.charCodeAt(this.index);\r\n            return code >= 48 && code <= 57;\r\n        }\r\n    }\r\n\r\n    nullstone.registerTypeConverter(Geometry, (val: any): any => {\r\n        if (val instanceof Geometry)\r\n            return val;\r\n        if (typeof val === \"string\")\r\n            return ParseGeometry(val);\r\n        return val;\r\n    });\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n/// <reference path=\"../Core/XamlObjectCollection.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class PathFigure extends DependencyObject {\r\n        static IsClosedProperty = DependencyProperty.RegisterCore(\"IsClosed\", () => Boolean, PathFigure, false, (d: PathFigure, args) => d.InvalidatePathFigure());\r\n        static StartPointProperty = DependencyProperty.RegisterCore(\"StartPoint\", () => Point, PathFigure, undefined, (d: PathFigure, args) => d.InvalidatePathFigure());\r\n        static IsFilledProperty = DependencyProperty.RegisterCore(\"IsFilled\", () => Boolean, PathFigure, true, (d: PathFigure, args) => d.InvalidatePathFigure());\r\n        static SegmentsProperty = DependencyProperty.RegisterImmutable<PathSegmentCollection>(\"Segments\", () => PathSegmentCollection, PathFigure);\r\n        static SegmentsSourceProperty = DependencyProperty.Register(\"SegmentsSource\", () => nullstone.IEnumerable_, PathFigure, undefined, (d: PathFigure, args) => d._OnSegmentsSourceChanged(args));\r\n        IsClosed: boolean;\r\n        Segments: PathSegmentCollection;\r\n        SegmentsSource: nullstone.IEnumerable<PathSegment>;\r\n        StartPoint: Point;\r\n        IsFilled: boolean;\r\n\r\n        private _OnSegmentsSourceChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            this.Segments.SetSource(args.NewValue);\r\n        }\r\n\r\n        private _Path: minerva.path.Path = null;\r\n\r\n        constructor() {\r\n            super();\r\n            var coll = PathFigure.SegmentsProperty.Initialize(this);\r\n            coll.AttachTo(this);\r\n            ReactTo(coll, this, () => this.InvalidatePathFigure());\r\n        }\r\n\r\n        private _Build(): minerva.path.Path {\r\n            var p = new minerva.path.Path();\r\n\r\n            var start = this.StartPoint;\r\n            p.move(start.x, start.y);\r\n\r\n            var enumerator = this.Segments.getEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                (<PathSegment>enumerator.current)._Append(p);\r\n            }\r\n            if (this.IsClosed)\r\n                p.close();\r\n\r\n            return p;\r\n        }\r\n\r\n        private InvalidatePathFigure() {\r\n            this._Path = null;\r\n            Incite(this);\r\n        }\r\n\r\n        MergeInto(rp: minerva.path.Path) {\r\n            if (!this._Path)\r\n                this._Path = this._Build();\r\n            minerva.path.Path.Merge(rp, this._Path);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(PathFigure);\r\n    Markup.Content(PathFigure, PathFigure.SegmentsProperty);\r\n\r\n    export class PathFigureCollection extends XamlObjectCollection<PathFigure> {\r\n        AddingToCollection(value: PathFigure, error: BError): boolean {\r\n            if (!super.AddingToCollection(value, error))\r\n                return false;\r\n            ReactTo(value, this, () => Incite(this));\r\n            Incite(this);\r\n            return true;\r\n        }\r\n        RemovedFromCollection(value: PathFigure, isValueSafe: boolean) {\r\n            super.RemovedFromCollection(value, isValueSafe);\r\n            UnreactTo(value, this);\r\n            Incite(this);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(PathFigureCollection);\r\n}","/// <reference path=\"Geometry.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class PathGeometry extends Geometry implements minerva.shapes.path.IPathGeometry {\r\n        private _OverridePath: minerva.path.Path = null;\r\n        static FillRuleProperty = DependencyProperty.Register(\"FillRule\", () => new Enum(Shapes.FillRule), PathGeometry, Shapes.FillRule.EvenOdd, (d: Geometry, args) => d.InvalidateGeometry());\r\n        static FiguresProperty = DependencyProperty.RegisterImmutable<PathFigureCollection>(\"Figures\", () => PathFigureCollection, PathGeometry);\r\n        FillRule: Shapes.FillRule;\r\n        Figures: PathFigureCollection;\r\n\r\n        get fillRule (): minerva.FillRule {\r\n            return <any>this.FillRule;\r\n        }\r\n\r\n        constructor () {\r\n            super();\r\n            var coll = PathGeometry.FiguresProperty.Initialize(this);\r\n            coll.AttachTo(this);\r\n            ReactTo(coll, this, () => this.InvalidateFigures());\r\n        }\r\n\r\n        OverridePath (path: minerva.path.Path) {\r\n            this._OverridePath = path;\r\n        }\r\n\r\n        _Build (): minerva.path.Path {\r\n            if (this._OverridePath)\r\n                return this._OverridePath;\r\n\r\n            var p = new minerva.path.Path();\r\n            var figures = this.Figures;\r\n            if (!figures)\r\n                return;\r\n\r\n            var enumerator = figures.getEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                (<PathFigure>enumerator.current).MergeInto(p);\r\n            }\r\n            return p;\r\n        }\r\n\r\n        InvalidateFigures () {\r\n            this._OverridePath = null; //Any change in PathFigures invalidates a path override\r\n            this.InvalidateGeometry();\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(PathGeometry);\r\n    Markup.Content(PathGeometry, PathGeometry.FiguresProperty);\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n/// <reference path=\"../Core/XamlObjectCollection.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class PathSegment extends DependencyObject {\r\n        _Append(path:minerva.path.Path) {\r\n            //Abstract method\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(PathSegment);\r\n\r\n    export class PathSegmentCollection extends XamlObjectCollection<PathSegment> {\r\n        private _Modifying = false;\r\n\r\n        AddingToCollection(value:PathSegment, error:BError):boolean {\r\n            if (!this._Modifying && this._Source != null) {\r\n                console.warn(\"Cannot modify Path Segments Collection when bound to SegmentsSource.\");\r\n                return false;\r\n            }\r\n            if (!super.AddingToCollection(value, error))\r\n                return false;\r\n            ReactTo(value, this, () => Incite(this));\r\n            Incite(this);\r\n            return true;\r\n        }\r\n\r\n        RemovedFromCollection(value:PathSegment, isValueSafe:boolean) {\r\n            super.RemovedFromCollection(value, isValueSafe);\r\n            UnreactTo(value, this);\r\n            Incite(this);\r\n        }\r\n\r\n        private _Source:nullstone.IEnumerable<PathSegment> = null;\r\n\r\n        SetSource(source:nullstone.IEnumerable<PathSegment>) {\r\n            var onc = Collections.INotifyCollectionChanged_.as(this._Source);\r\n            if (onc)\r\n                onc.CollectionChanged.off(this._OnSegmentsCollectionChanged, this);\r\n            var oen = nullstone.IEnumerable_.as(this._Source);\r\n            if (oen) {\r\n                this.Clear();\r\n            }\r\n\r\n            this._Source = source;\r\n            var nen = nullstone.IEnumerable_.as(this._Source);\r\n            if (nen) {\r\n                this._Modifying = true;\r\n                try {\r\n                    for (var en = nen.getEnumerator(); en.moveNext();) {\r\n                        this.Add(en.current);\r\n                    }\r\n                } finally {\r\n                    this._Modifying = false;\r\n                }\r\n            }\r\n            var nnc = Collections.INotifyCollectionChanged_.as(this._Source);\r\n            if (nnc)\r\n                nnc.CollectionChanged.on(this._OnSegmentsCollectionChanged, this);\r\n        }\r\n\r\n        private _OnSegmentsCollectionChanged(sender, args:Collections.CollectionChangedEventArgs) {\r\n            this._Modifying = true;\r\n            try {\r\n                for (var i = 0, items = args.OldItems, len = items ? items.length : 0; i < len; i++) {\r\n                    this.RemoveAt(i);\r\n                }\r\n                for (var i = 0, items = args.NewItems, len = items ? items.length : 0; i < len; i++) {\r\n                    this.Insert(args.NewStartingIndex + i, items[i]);\r\n                }\r\n            } finally {\r\n                this._Modifying = false;\r\n            }\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(PathSegmentCollection);\r\n}","/// <reference path=\"PathSegment.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    //TODO: Should we be doing `Incite(this)` when properties change?\r\n    export class ArcSegment extends PathSegment {\r\n        static IsLargeArcProperty = DependencyProperty.RegisterCore(\"IsLargeArc\", () => Boolean, ArcSegment, false, (d: ArcSegment, args) => Incite(d));\r\n        static PointProperty = DependencyProperty.Register(\"Point\", () => Point, ArcSegment, undefined, (d: ArcSegment, args) => Incite(d));\r\n        static RotationAngleProperty = DependencyProperty.Register(\"RotationAngle\", () => Number, ArcSegment, 0.0, (d: ArcSegment, args) => Incite(d));\r\n        static SizeProperty = DependencyProperty.Register(\"Size\", () => minerva.Size, ArcSegment, undefined, (d: ArcSegment, args) => Incite(d));\r\n        static SweepDirectionProperty = DependencyProperty.Register(\"SweepDirection\", () => new Enum(Shapes.SweepDirection), ArcSegment, Shapes.SweepDirection.Counterclockwise, (d: ArcSegment, args) => Incite(d));\r\n        IsLargeArc: boolean;\r\n        Point: Point;\r\n        RotationAngle: number;\r\n        Size: minerva.Size;\r\n        SweepDirection: Shapes.SweepDirection;\r\n\r\n        _Append(path: minerva.path.Path) {\r\n            var size = this.Size;\r\n            var width = size ? size.width : 0.0;\r\n            var height = size ? size.height : 0.0;\r\n\r\n            var endpt = this.Point;\r\n            var ex = endpt ? endpt.x : 0.0;\r\n            var ey = endpt ? endpt.y : 0.0;\r\n\r\n            path.ellipticalArc(width, height, this.RotationAngle, this.IsLargeArc, <minerva.SweepDirection><number>this.SweepDirection, ex, ey);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ArcSegment);\r\n\r\n    export class BezierSegment extends PathSegment {\r\n        static Point1Property = DependencyProperty.Register(\"Point1\", () => Point, BezierSegment);\r\n        static Point2Property = DependencyProperty.Register(\"Point2\", () => Point, BezierSegment);\r\n        static Point3Property = DependencyProperty.Register(\"Point3\", () => Point, BezierSegment);\r\n        Point1: Point;\r\n        Point2: Point;\r\n        Point3: Point;\r\n\r\n        _Append(path: minerva.path.Path) {\r\n\t        var p1 = this.Point1;\r\n\t        var p2 = this.Point2;\r\n\t        var p3 = this.Point3;\r\n\r\n\t        var x1 = p1 ? p1.x : 0.0;\r\n\t        var y1 = p1 ? p1.y : 0.0;\r\n\t        var x2 = p2 ? p2.x : 0.0;\r\n\t        var y2 = p2 ? p2.y : 0.0;\r\n\t        var x3 = p3 ? p3.x : 0.0;\r\n\t        var y3 = p3 ? p3.y : 0.0;\r\n\r\n\t        path.cubicBezier(x1, y1, x2, y2, x3, y3);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(BezierSegment);\r\n\r\n    export class LineSegment extends PathSegment {\r\n        static PointProperty = DependencyProperty.Register(\"Point\", () => Point, LineSegment);\r\n        Point: Point;\r\n\r\n        _Append(path: minerva.path.Path) {\r\n            var p = this.Point;\r\n            var x = p ? p.x : 0.0;\r\n            var y = p ? p.y : 0.0;\r\n            path.line(x, y);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(LineSegment);\r\n\r\n    export class PolyBezierSegment extends PathSegment {\r\n        static PointsProperty = DependencyProperty.RegisterImmutable<Shapes.PointCollection>(\"Points\", () => Shapes.PointCollection, PolyBezierSegment);\r\n        Points: Shapes.PointCollection;\r\n\r\n        constructor() {\r\n            super();\r\n            PolyBezierSegment.PointsProperty.Initialize(this);\r\n        }\r\n\r\n        _Append(path: minerva.path.Path) {\r\n            var points = this.Points;\r\n            if (!points || (points.Count % 3) !== 0)\r\n                return;\r\n\r\n            var p1: Point;\r\n            var p2: Point;\r\n            var p3: Point;\r\n            var enumerator = points.getEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                p1 = enumerator.current;\r\n                enumerator.moveNext();\r\n                p2 = enumerator.current;\r\n                enumerator.moveNext();\r\n                p3 = enumerator.current;\r\n                path.cubicBezier(p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);\r\n            }\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(PolyBezierSegment);\r\n    Markup.Content(PolyBezierSegment, PolyBezierSegment.PointsProperty);\r\n\r\n    export class PolyLineSegment extends PathSegment {\r\n        static PointsProperty = DependencyProperty.RegisterImmutable<Shapes.PointCollection>(\"Points\", () => Shapes.PointCollection, PolyLineSegment);\r\n        Points: Shapes.PointCollection;\r\n\r\n        constructor() {\r\n            super();\r\n            PolyLineSegment.PointsProperty.Initialize(this);\r\n        }\r\n\r\n        _Append(path: minerva.path.Path) {\r\n            var p: Point;\r\n            var enumerator = this.Points.getEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                p = enumerator.current;\r\n                path.line(p.x, p.y);\r\n            }\r\n            console.warn(\"PolyLineSegment._Append\");\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(PolyLineSegment);\r\n    Markup.Content(PolyLineSegment, PolyLineSegment.PointsProperty);\r\n\r\n    export class PolyQuadraticBezierSegment extends PathSegment {\r\n        static PointsProperty = DependencyProperty.RegisterImmutable<Shapes.PointCollection>(\"Points\", () => Shapes.PointCollection, PolyQuadraticBezierSegment);\r\n        Points: Shapes.PointCollection;\r\n\r\n        constructor() {\r\n            super();\r\n            PolyQuadraticBezierSegment.PointsProperty.Initialize(this);\r\n        }\r\n\r\n        _Append(path: minerva.path.Path) {\r\n            var points = this.Points;\r\n            if (!points || (points.Count % 2) !== 0)\r\n                return;\r\n\r\n            var x0 = path.endX;\r\n            var y0 = path.endY;\r\n            var x1: number;\r\n            var y1: number;\r\n            var x2: number;\r\n            var y2: number;\r\n            var x3: number;\r\n            var y3: number;\r\n            var enumerator = points.getEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                x1 = enumerator.current.x;\r\n                y1 = enumerator.current.y;\r\n                enumerator.moveNext();\r\n                x2 = enumerator.current.x;\r\n                y2 = enumerator.current.y;\r\n                x3 = x2;\r\n                y3 = y2;\r\n                \r\n\t\t        x2 = x1 + (x2 - x1) / 3;\r\n\t\t        y2 = y1 + (y2 - y1) / 3;\r\n\t\t        x1 = x0 + 2 * (x1 - x0) / 3;\r\n\t\t        y1 = y0 + 2 * (y1 - y0) / 3;\r\n\r\n                path.cubicBezier(x1, y1, x2, y2, x3, y3);\r\n                x0 = x3;\r\n                y0 = y3;\r\n            }\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(PolyQuadraticBezierSegment);\r\n    Markup.Content(PolyQuadraticBezierSegment, PolyQuadraticBezierSegment.PointsProperty);\r\n\r\n    export class QuadraticBezierSegment extends PathSegment {\r\n        static Point1Property = DependencyProperty.Register(\"Point1\", () => Point, QuadraticBezierSegment);\r\n        static Point2Property = DependencyProperty.Register(\"Point2\", () => Point, QuadraticBezierSegment);\r\n        Point1: Point;\r\n        Point2: Point;\r\n\r\n        _Append(path: minerva.path.Path) {\r\n            var p1 = this.Point1;\r\n            var p2 = this.Point2;\r\n\r\n            var x1 = p1 ? p1.x : 0.0;\r\n            var y1 = p1 ? p1.y : 0.0;\r\n            var x2 = p2 ? p2.x : 0.0;\r\n            var y2 = p2 ? p2.y : 0.0;\r\n\r\n            path.quadraticBezier(x1, y1, x2, y2);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(QuadraticBezierSegment);\r\n}","/// <reference path=\"Projection.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    var FIELD_OF_VIEW = 57.0 / 180 * Math.PI;\r\n    var CAMERA_DIST = 999.0;\r\n    var NEAR_VAL = 1.0;\r\n    var FAR_VAL = 65536.0;\r\n    var XY_PLANE_Z = (NEAR_VAL * FAR_VAL / (NEAR_VAL - FAR_VAL) * (1.0 - CAMERA_DIST)) / CAMERA_DIST;\r\n    var PI_OVER_180 = Math.PI / 180.0;\r\n\r\n    export class PlaneProjection extends Projection {\r\n        static CenterOfRotationXProperty = DependencyProperty.Register(\"CenterOfRotationX\", () => Number, PlaneProjection, 0.5, (d: Projection, args) => d.InvalidateProjection());\r\n        static CenterOfRotationYProperty = DependencyProperty.Register(\"CenterOfRotationY\", () => Number, PlaneProjection, 0.5, (d: Projection, args) => d.InvalidateProjection());\r\n        static CenterOfRotationZProperty = DependencyProperty.Register(\"CenterOfRotationZ\", () => Number, PlaneProjection, 0.5, (d: Projection, args) => d.InvalidateProjection());\r\n\r\n        static GlobalOffsetXProperty = DependencyProperty.Register(\"GlobalOffsetX\", () => Number, PlaneProjection, 0.0, (d: Projection, args) => d.InvalidateProjection());\r\n        static GlobalOffsetYProperty = DependencyProperty.Register(\"GlobalOffsetY\", () => Number, PlaneProjection, 0.0, (d: Projection, args) => d.InvalidateProjection());\r\n        static GlobalOffsetZProperty = DependencyProperty.Register(\"GlobalOffsetZ\", () => Number, PlaneProjection, 0.0, (d: Projection, args) => d.InvalidateProjection());\r\n\r\n        static LocalOffsetXProperty = DependencyProperty.Register(\"LocalOffsetX\", () => Number, PlaneProjection, 0.0, (d: Projection, args) => d.InvalidateProjection());\r\n        static LocalOffsetYProperty = DependencyProperty.Register(\"LocalOffsetY\", () => Number, PlaneProjection, 0.0, (d: Projection, args) => d.InvalidateProjection());\r\n        static LocalOffsetZProperty = DependencyProperty.Register(\"LocalOffsetZ\", () => Number, PlaneProjection, 0.0, (d: Projection, args) => d.InvalidateProjection());\r\n\r\n        static RotationXProperty = DependencyProperty.Register(\"RotationX\", () => Number, PlaneProjection, 0.0, (d: Projection, args) => d.InvalidateProjection());\r\n        static RotationYProperty = DependencyProperty.Register(\"RotationY\", () => Number, PlaneProjection, 0.0, (d: Projection, args) => d.InvalidateProjection());\r\n        static RotationZProperty = DependencyProperty.Register(\"RotationZ\", () => Number, PlaneProjection, 0.0, (d: Projection, args) => d.InvalidateProjection());\r\n\r\n        CenterOfRotationX: number;\r\n        CenterOfRotationY: number;\r\n        CenterOfRotationZ: number;\r\n\r\n        GlobalOffsetX: number;\r\n        GlobalOffsetY: number;\r\n        GlobalOffsetZ: number;\r\n\r\n        LocalOffsetX: number;\r\n        LocalOffsetY: number;\r\n        LocalOffsetZ: number;\r\n\r\n        RotationX: number;\r\n        RotationY: number;\r\n        RotationZ: number;\r\n\r\n        getDistanceFromXYPlane (): number {\r\n            var w = Math.max(this.ObjectWidth, 1.0);\r\n            var h = Math.max(this.ObjectHeight, 1.0);\r\n            var p = [w / 2.0, h / 2.0, 0.0, 1.0];\r\n\r\n            var m = this.getTransform();\r\n            mat4.transformVec4(m, p, p);\r\n\r\n            if (p[3] === 0.0)\r\n                return NaN;\r\n            return XY_PLANE_Z - (p[2] / p[3]);\r\n        }\r\n\r\n        CreateProjectionMatrix3D (): Matrix3D {\r\n            var rotationX = this.RotationX;\r\n            var rotationY = this.RotationY;\r\n            var rotationZ = this.RotationZ;\r\n            var radiansX = (rotationX || 0.0) * PI_OVER_180;\r\n            var radiansY = (rotationY || 0.0) * PI_OVER_180;\r\n            var radiansZ = (rotationZ || 0.0) * PI_OVER_180;\r\n            var globalOffsetX = this.GlobalOffsetX;\r\n            var globalOffsetY = this.GlobalOffsetY;\r\n            var globalOffsetZ = this.GlobalOffsetZ;\r\n            var globalX = globalOffsetX || 0.0;\r\n            var globalY = globalOffsetY || 0.0;\r\n            var globalZ = globalOffsetZ || 0.0;\r\n            var localOffsetX = this.LocalOffsetX;\r\n            var localOffsetY = this.LocalOffsetY;\r\n            var localOffsetZ = this.LocalOffsetZ;\r\n            var localX = localOffsetX || 0.0;\r\n            var localY = localOffsetY || 0.0;\r\n            var localZ = localOffsetZ || 0.0;\r\n\r\n            var ow = this.ObjectWidth;\r\n            var oh = this.ObjectHeight;\r\n\r\n            var height = 2.0 * CAMERA_DIST * Math.tan(FIELD_OF_VIEW / 2.0);\r\n            var scale = height / oh;\r\n\r\n            var toCenter = mat4.createTranslate(\r\n                -ow * this.CenterOfRotationX,\r\n                -oh * this.CenterOfRotationY,\r\n                -this.CenterOfRotationZ);\r\n            var invertY = mat4.createScale(1.0, -1.0, 1.0);\r\n            var localOffset = mat4.createTranslate(localX, -localY, localZ);\r\n            var rotateX = mat4.createRotateX(radiansX);\r\n            var rotateY = mat4.createRotateX(radiansY);\r\n            var rotateZ = mat4.createRotateX(radiansZ);\r\n            var toCamera = mat4.createTranslate(\r\n                ow * (this.CenterOfRotationX - 0.5) + globalX,\r\n                -oh * (this.CenterOfRotationY - 0.5) - globalY,\r\n                this.CenterOfRotationZ - CAMERA_DIST + globalZ);\r\n            var perspective = mat4.createPerspective(FIELD_OF_VIEW, ow / oh, NEAR_VAL, FAR_VAL);\r\n            var zoom = mat4.createScale(scale, scale, 1.0);\r\n            var viewport = mat4.createViewport(ow, oh);\r\n\r\n            var m = mat4.multiply(toCenter, invertY);\r\n            mat4.multiply(m, localOffset, m);\r\n            mat4.multiply(m, rotateX, m);\r\n            mat4.multiply(m, rotateY, m);\r\n            mat4.multiply(m, rotateZ, m);\r\n            mat4.multiply(m, toCamera, m);\r\n            mat4.multiply(m, perspective, m);\r\n            mat4.multiply(m, zoom, m);\r\n            mat4.multiply(m, viewport, m);\r\n\r\n            var r = new Matrix3D();\r\n            r._Raw = m;\r\n            return r;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(PlaneProjection);\r\n}","/// <reference path=\"GradientBrush.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    var tmpCanvas: HTMLCanvasElement = document.createElement('canvas');\r\n    var tmpCtx: CanvasRenderingContext2D = <CanvasRenderingContext2D>tmpCanvas.getContext('2d');\r\n    var epsilon = 1E-10;\r\n\r\n    export class RadialGradientBrush extends GradientBrush {\r\n        static CenterProperty = DependencyProperty.RegisterCore(\"Center\", () => Point, RadialGradientBrush, undefined, (d: RadialGradientBrush, args) => d.InvalidateBrush());\r\n        static GradientOriginProperty = DependencyProperty.RegisterCore(\"GradientOrigin\", () => Point, RadialGradientBrush, undefined, (d: RadialGradientBrush, args) => d.InvalidateBrush());\r\n        static RadiusXProperty = DependencyProperty.RegisterCore(\"RadiusX\", () => Number, RadialGradientBrush, 0.5, (d: RadialGradientBrush, args) => d.InvalidateBrush());\r\n        static RadiusYProperty = DependencyProperty.RegisterCore(\"RadiusY\", () => Number, RadialGradientBrush, 0.5, (d: RadialGradientBrush, args) => d.InvalidateBrush());\r\n        Center: Point; //undefined should be treated as 0.5,0.5\r\n        GradientOrigin: Point; //undefined should be treated as 0.5,0.5\r\n        RadiusX: number;\r\n        RadiusY: number;\r\n\r\n        CreatePad (ctx: CanvasRenderingContext2D, bounds: minerva.Rect): any {\r\n            var data = this._GetPointData(bounds);\r\n            var grd = (!data.balanced ? tmpCtx : ctx).createRadialGradient(data.x0, data.y0, 0, data.x1, data.y1, data.r1);\r\n            for (var en = this.GradientStops.getEnumerator(); en.moveNext();) {\r\n                var stop: GradientStop = en.current;\r\n                grd.addColorStop(stop.Offset, stop.Color.toString());\r\n            }\r\n            return this.FitPattern(ctx, grd, data, bounds);\r\n        }\r\n\r\n        CreateRepeat (ctx: CanvasRenderingContext2D, bounds: minerva.Rect) {\r\n            var data = this._GetPointData(bounds);\r\n            return this.CreateInterpolated(data, bounds, false);\r\n        }\r\n\r\n        CreateReflect (ctx: CanvasRenderingContext2D, bounds: minerva.Rect) {\r\n            var data = this._GetPointData(bounds);\r\n            return this.CreateInterpolated(data, bounds, true);\r\n        }\r\n\r\n        private CreateInterpolated (data: RadialGradient.IRadialPointData, bounds: minerva.Rect, reflect: boolean): CanvasPattern {\r\n            tmpCanvas.width = bounds.width;\r\n            tmpCanvas.height = bounds.height;\r\n            tmpCtx.save();\r\n            if (!data.balanced)\r\n                tmpCtx.scale(data.sx, data.sy);\r\n            tmpCtx.globalCompositeOperation = \"destination-over\";\r\n\r\n            var inverted = false;\r\n            var allStops = this.GradientStops.getPaddedEnumerable();\r\n            for (var extender = RadialGradient.createExtender(data, bounds); extender.step(); inverted = !inverted) {\r\n                var grd = extender.createGradient(tmpCtx);\r\n                for (var en = allStops.getEnumerator(); en.moveNext();) {\r\n                    var offset = en.current.Offset;\r\n                    if (reflect && inverted)\r\n                        offset = 1 - offset;\r\n                    grd.addColorStop(offset, en.current.Color.toString());\r\n                }\r\n                tmpCtx.fillStyle = grd;\r\n                tmpCtx.beginPath();\r\n                tmpCtx.arc(extender.x1, extender.y1, extender.r1, 0, 2 * Math.PI, false);\r\n                tmpCtx.closePath();\r\n                tmpCtx.fill();\r\n            }\r\n\r\n            var pattern = tmpCtx.createPattern(tmpCanvas, \"no-repeat\");\r\n            tmpCtx.restore();\r\n            return pattern;\r\n        }\r\n\r\n        private FitPattern (ctx: CanvasRenderingContext2D, fill: CanvasGradient | CanvasPattern, data: RadialGradient.IRadialPointData, bounds: minerva.Rect): CanvasPattern {\r\n            //NOTE:\r\n            //  This will return the CanvasGradient if bounds are square\r\n            //  Otherwise, it will create a CanvasPattern by scaling square coordinate space into bounds\r\n            if (data.balanced)\r\n                return fill;\r\n\r\n            tmpCanvas.width = bounds.width;\r\n            tmpCanvas.height = bounds.height;\r\n\r\n            tmpCtx.save();\r\n            tmpCtx.scale(data.sx, data.sy);\r\n            tmpCtx.fillStyle = fill;\r\n            tmpCtx.fillRect(0, 0, data.side, data.side);\r\n            var pattern = ctx.createPattern(tmpCanvas, \"no-repeat\");\r\n            tmpCtx.restore();\r\n            return pattern;\r\n        }\r\n\r\n        private _GetPointData (bounds: minerva.Rect): RadialGradient.IRadialPointData {\r\n            //NOTE:\r\n            //  This function will translate relative coordinates to absolute coordinates\r\n            //  It will then map non-square metrics into square coordinate space\r\n            var center = this.Center;\r\n            center = !center ? new Point(0.5, 0.5) : center.Clone();\r\n            var origin = this.GradientOrigin;\r\n            origin = !origin ? new Point(0.5, 0.5) : origin.Clone();\r\n            var rx = this.RadiusX;\r\n            if (rx == null)\r\n                rx = 0.5;\r\n            var ry = this.RadiusY;\r\n            if (ry == null)\r\n                ry = 0.5;\r\n\r\n            if (this.MappingMode !== BrushMappingMode.Absolute) {\r\n                center.x *= bounds.width;\r\n                center.y *= bounds.height;\r\n                origin.x *= bounds.width;\r\n                origin.y *= bounds.height;\r\n                rx *= bounds.width;\r\n                ry *= bounds.height;\r\n            }\r\n\r\n            center.x += bounds.x;\r\n            center.y += bounds.y;\r\n            origin.x += bounds.x;\r\n            origin.y += bounds.y;\r\n\r\n            var rad = Math.max(rx, ry);\r\n            var side = Math.max(bounds.width, bounds.height),\r\n                sx = bounds.width / side,\r\n                sy = bounds.height / side;\r\n            return {\r\n                x0: origin.x / sx,\r\n                y0: origin.y / sy,\r\n                x1: center.x / sx,\r\n                y1: center.y / sy,\r\n                r1: rad,\r\n                side: side,\r\n                sx: bounds.width / side,\r\n                sy: bounds.height / side,\r\n                balanced: Math.abs(rx - ry) < epsilon\r\n            };\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(RadialGradientBrush);\r\n}","/// <reference path=\"Geometry.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class RectangleGeometry extends Geometry {\r\n        static RectProperty = DependencyProperty.RegisterCore(\"Rect\", () => Rect, RectangleGeometry, undefined, (d: RectangleGeometry, args) => d.InvalidateGeometry());\r\n        static RadiusXProperty = DependencyProperty.RegisterCore(\"RadiusX\", () => Number, RectangleGeometry, 0, (d: RectangleGeometry, args) => d.InvalidateGeometry());\r\n        static RadiusYProperty = DependencyProperty.RegisterCore(\"RadiusY\", () => Number, RectangleGeometry, 0, (d: RectangleGeometry, args) => d.InvalidateGeometry());\r\n        Rect: minerva.Rect;\r\n        RadiusX: number;\r\n        RadiusY: number;\r\n\r\n        _Build (): minerva.path.Path {\r\n            var irect = this.Rect;\r\n            if (!irect)\r\n                return null;\r\n\r\n            var radiusX = this.RadiusX;\r\n            var radiusY = this.RadiusY;\r\n\r\n            var p = new minerva.path.Path();\r\n            p.roundedRect(irect.x, irect.y, irect.width, irect.height, radiusX, radiusY);\r\n            return p;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(RectangleGeometry);\r\n}","/// <reference path=\"Brush.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class SolidColorBrush extends Brush {\r\n        static ColorProperty = DependencyProperty.Register(\"Color\", () => Color, SolidColorBrush, undefined, (d, args) => (<Brush>d).InvalidateBrush());\r\n        Color: Color;\r\n\r\n        constructor(...args: any[]) {\r\n            super();\r\n            if (args && args.length === 1 && args[0] instanceof Color)\r\n                this.Color = args[0];\r\n        }\r\n\r\n        isTransparent(): boolean {\r\n            var color = this.Color;\r\n            return !color || (color.A <= 0);\r\n        }\r\n\r\n        static FromColor(color: Color): SolidColorBrush {\r\n            var scb = new SolidColorBrush();\r\n            scb.Color = color;\r\n            return scb;\r\n        }\r\n\r\n        setupBrush (ctx: CanvasRenderingContext2D, bounds: minerva.Rect) {\r\n            if ((<any>this)._CachedBrush)\r\n                return;\r\n            (<any>this)._CachedBrush = this.CreateBrush(ctx, bounds);\r\n        }\r\n\r\n        CreateBrush(ctx: CanvasRenderingContext2D, bounds: minerva.Rect): any {\r\n            var color = this.Color;\r\n            if (!color)\r\n                return \"#000000\";\r\n            return color.toString();\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(SolidColorBrush);\r\n\r\n    function brushConverter(val: any): Brush {\r\n        if (!val)\r\n            return undefined;\r\n        if (val instanceof Brush)\r\n            return val;\r\n        var scb = new SolidColorBrush();\r\n        scb.Color = nullstone.convertAnyToType(val, Color);\r\n        return scb;\r\n    }\r\n\r\n    nullstone.registerTypeConverter(Brush, brushConverter);\r\n    nullstone.registerTypeConverter(SolidColorBrush, brushConverter);\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class TextOptions {\r\n        static TextHintingModeProperty: DependencyProperty = DependencyProperty.RegisterAttached(\"TextHintingMode\", () => new Enum(TextHintingMode), TextOptions);\r\n        static GetTextHintingMode(d: DependencyObject): TextHintingMode { return d.GetValue(TextOptions.TextHintingModeProperty); }\r\n        static SetTextHintingMode(d: DependencyObject, value: TextHintingMode) { d.SetValue(TextOptions.TextHintingModeProperty, value); }\r\n    }\r\n    Fayde.CoreLibrary.add(TextOptions);\r\n}","/// <reference path=\"Brush.ts\" />\r\n/// <reference path=\"Enums.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    function computeImageMatrix(width: number, height: number, sw: number, sh: number, stretch: Stretch, alignX: AlignmentX, alignY: AlignmentY): number[] {\r\n        var sx = width / sw;\r\n        var sy = height / sh;\r\n        if (width === 0)\r\n            sx = 1.0;\r\n        if (height === 0)\r\n            sy = 1.0;\r\n\r\n        if (stretch === Stretch.Fill) {\r\n            return mat3.createScale(sx, sy);\r\n        }\r\n\r\n        var scale = 1.0;\r\n        var dx = 0.0;\r\n        var dy = 0.0;\r\n        switch (stretch) {\r\n            case Stretch.Uniform:\r\n                scale = sx < sy ? sx : sy;\r\n                break;\r\n            case Stretch.UniformToFill:\r\n                scale = sx < sy ? sy : sx;\r\n                break;\r\n            case Stretch.None:\r\n                break;\r\n        }\r\n\r\n        switch (alignX) {\r\n            case AlignmentX.Left:\r\n                dx = 0.0;\r\n                break;\r\n            case AlignmentX.Center:\r\n                dx = (width - (scale * sw)) / 2;\r\n                break;\r\n            case AlignmentX.Right:\r\n            default:\r\n                dx = width - (scale * sw);\r\n                break;\r\n        }\r\n\r\n        switch (alignY) {\r\n            case AlignmentY.Top:\r\n                dy = 0.0;\r\n                break;\r\n            case AlignmentY.Center:\r\n                dy = (height - (scale * sh)) / 2;\r\n                break;\r\n            case AlignmentY.Bottom:\r\n            default:\r\n                dy = height - (scale * sh);\r\n                break;\r\n        }\r\n        var m = mat3.createScale(scale, scale);\r\n        mat3.translate(m, dx, dy);\r\n        return m;\r\n    }\r\n\r\n    export class TileBrush extends Brush {\r\n        static AlignmentXProperty = DependencyProperty.RegisterCore(\"AlignmentX\", () => new Enum(AlignmentX), TileBrush, AlignmentX.Center, (d: TileBrush, args) => d.InvalidateBrush());\r\n        static AlignmentYProperty = DependencyProperty.RegisterCore(\"AlignmentY\", () => new Enum(AlignmentY), TileBrush, AlignmentY.Center, (d: TileBrush, args) => d.InvalidateBrush());\r\n        static StretchProperty = DependencyProperty.RegisterCore(\"Stretch\", () => new Enum(Stretch), TileBrush, Stretch.Fill, (d: TileBrush, args) => d.InvalidateBrush());\r\n        AlignmentX: AlignmentX;\r\n        AlignmentY: AlignmentY;\r\n        Stretch: Stretch;\r\n\r\n        CreateBrush(ctx: CanvasRenderingContext2D, bounds: minerva.Rect) {\r\n            var imgExtents = this.GetTileExtents();\r\n\r\n            var tmpCanvas = <HTMLCanvasElement>document.createElement(\"canvas\");\r\n            tmpCanvas.width = bounds.width;\r\n            tmpCanvas.height = bounds.height;\r\n\r\n            var tmpCtx = <CanvasRenderingContext2D>tmpCanvas.getContext(\"2d\");\r\n\r\n            var mat = computeImageMatrix(bounds.width, bounds.height,\r\n                imgExtents.width, imgExtents.height, this.Stretch, this.AlignmentX, this.AlignmentY);\r\n            tmpCtx.setTransform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5]);\r\n\r\n            this.DrawTile(tmpCtx, bounds);\r\n\r\n            return ctx.createPattern(tmpCanvas, \"no-repeat\");\r\n        }\r\n        GetTileExtents(): minerva.Rect { return undefined; }\r\n        DrawTile(canvasCtx: CanvasRenderingContext2D, bounds: minerva.Rect) { }\r\n    }\r\n    Fayde.CoreLibrary.add(TileBrush);\r\n}","/// <reference path=\"GeneralTransform.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class Transform extends GeneralTransform implements minerva.ITransform {\r\n        private _Value: Matrix;\r\n\r\n        constructor () {\r\n            super();\r\n            XamlNode.SetShareable(this.XamlNode);\r\n        }\r\n\r\n        get Value (): Matrix {\r\n            var val = this._Value;\r\n            if (!val) {\r\n                this._Value = val = new Matrix();\r\n                val._Raw = this._BuildValue();\r\n            }\r\n            return val;\r\n        }\r\n\r\n        getRaw (): number[] {\r\n            return this.Value._Raw;\r\n        }\r\n\r\n        get Inverse (): Transform {\r\n            var inverse = this.Value.Inverse;\r\n            if (!inverse)\r\n                return null;\r\n            var mt = new MatrixTransform();\r\n            mt.Matrix = inverse;\r\n            return mt;\r\n        }\r\n\r\n        Transform (p: minerva.IPoint): Point {\r\n            var val = this.Value;\r\n            var v: number[];\r\n            if (!val || !(v = val._Raw))\r\n                return new Point(p.x, p.y);\r\n            v = mat3.transformVec2(v, vec2.create(p.x, p.y));\r\n            return new Point(v[0], v[1]);\r\n        }\r\n\r\n        TransformBounds (r: minerva.Rect): minerva.Rect {\r\n            if (!r)\r\n                return undefined;\r\n            var v = this.Value;\r\n            var copy = new minerva.Rect();\r\n            minerva.Rect.copyTo(r, copy);\r\n            if (!v || !v._Raw)\r\n                return copy;\r\n            return minerva.Rect.transform(copy, v._Raw);\r\n        }\r\n\r\n        TryTransform (inPoint: minerva.IPoint, outPoint: minerva.IPoint): boolean {\r\n            return false;\r\n        }\r\n\r\n        InvalidateValue () {\r\n            if (this._Value !== undefined)\r\n                this._Value = undefined;\r\n            Incite(this);\r\n        }\r\n\r\n        _BuildValue (): number[] {\r\n            //Abstract Method\r\n            return undefined;\r\n        }\r\n\r\n        static copyMatTo (t: Transform, mat: number[]) {\r\n            mat3.copyTo(t.Value._Raw, mat);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Transform);\r\n\r\n    export class MatrixTransform extends Transform {\r\n        static MatrixProperty = DependencyProperty.RegisterFull(\"Matrix\", () => Matrix, MatrixTransform);\r\n        Matrix: Matrix;\r\n\r\n        _BuildValue (): number[] {\r\n            var m = this.Matrix;\r\n            if (m)\r\n                return m._Raw;\r\n            return mat3.identity();\r\n        }\r\n\r\n        Clone (): MatrixTransform {\r\n            var xform = new MatrixTransform();\r\n            xform.Matrix = this.Matrix.Clone();\r\n            return xform;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(MatrixTransform);\r\n\r\n    module reactions {\r\n        DPReaction<Matrix>(MatrixTransform.MatrixProperty, (mt: MatrixTransform, ov, nv) => mt.InvalidateValue());\r\n    }\r\n}","/// <reference path=\"Transform.ts\" />\r\n/// <reference path=\"../Core/XamlObjectCollection.ts\" />\r\n\r\nmodule Fayde.Media {\r\n    export class RotateTransform extends Transform {\r\n        static AngleProperty = DependencyProperty.Register(\"Angle\", () => Number, RotateTransform, 0, (d: RotateTransform, args) => d.InvalidateValue());\r\n        static CenterXProperty = DependencyProperty.Register(\"CenterX\", () => Number, RotateTransform, 0, (d: RotateTransform, args) => d.InvalidateValue());\r\n        static CenterYProperty = DependencyProperty.Register(\"CenterY\", () => Number, RotateTransform, 0, (d: RotateTransform, args) => d.InvalidateValue());\r\n        Angle: number;\r\n        CenterX: number;\r\n        CenterY: number;\r\n\r\n        _BuildValue (): number[] {\r\n            var cx = this.CenterX;\r\n            var cy = this.CenterY;\r\n            var angle = this.Angle; //Silverlight rotates clockwise\r\n            var angleRad = Math.PI / 180 * angle;\r\n            var m = mat3.createRotate(angleRad);\r\n            if (cx === 0 && cy === 0)\r\n                return m;\r\n\r\n            //move center {x,y} to {0,0}, rotate, then slide {0,0} back to {x,y}\r\n            mat3.multiply(mat3.createTranslate(-cx, -cy), m, m); //m = translation * m\r\n            mat3.translate(m, cx, cy);\r\n            return m;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(RotateTransform);\r\n\r\n    export class ScaleTransform extends Transform {\r\n        static CenterXProperty = DependencyProperty.Register(\"CenterX\", () => Number, ScaleTransform, 0, (d: ScaleTransform, args) => d.InvalidateValue());\r\n        static CenterYProperty = DependencyProperty.Register(\"CenterY\", () => Number, ScaleTransform, 0, (d: ScaleTransform, args) => d.InvalidateValue());\r\n        static ScaleXProperty = DependencyProperty.Register(\"ScaleX\", () => Number, ScaleTransform, 1.0, (d: ScaleTransform, args) => d.InvalidateValue());\r\n        static ScaleYProperty = DependencyProperty.Register(\"ScaleY\", () => Number, ScaleTransform, 1.0, (d: ScaleTransform, args) => d.InvalidateValue());\r\n        CenterX: number;\r\n        CenterY: number;\r\n        ScaleX: number;\r\n        ScaleY: number;\r\n\r\n        _BuildValue (): number[] {\r\n            var cx = this.CenterX;\r\n            var cy = this.CenterY;\r\n            var m = mat3.createScale(this.ScaleX, this.ScaleY);\r\n            if (cx === 0 && cy === 0)\r\n                return m;\r\n\r\n            //move center {x,y} to {0,0}, scale, then slide {0,0} back to {x,y}\r\n            mat3.multiply(mat3.createTranslate(-cx, -cy), m, m); //m = translation * m\r\n            mat3.translate(m, cx, cy);\r\n            return m;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ScaleTransform);\r\n\r\n    export class SkewTransform extends Transform {\r\n        static AngleXProperty = DependencyProperty.Register(\"AngleX\", () => Number, SkewTransform, 0, (d: SkewTransform, args) => d.InvalidateValue());\r\n        static AngleYProperty = DependencyProperty.Register(\"AngleY\", () => Number, SkewTransform, 0, (d: SkewTransform, args) => d.InvalidateValue());\r\n        static CenterXProperty = DependencyProperty.Register(\"CenterX\", () => Number, SkewTransform, 0, (d: SkewTransform, args) => d.InvalidateValue());\r\n        static CenterYProperty = DependencyProperty.Register(\"CenterY\", () => Number, SkewTransform, 0, (d: SkewTransform, args) => d.InvalidateValue());\r\n        AngleX: number;\r\n        AngleY: number;\r\n        CenterX: number;\r\n        CenterY: number;\r\n\r\n        _BuildValue (): number[] {\r\n            var cx = this.CenterX;\r\n            var cy = this.CenterY;\r\n            var angleXRad = Math.PI / 180 * this.AngleX;\r\n            var angleYRad = Math.PI / 180 * this.AngleY;\r\n            var m = mat3.createSkew(angleXRad, angleYRad);\r\n            if (cx === 0 && cy === 0)\r\n                return m;\r\n\r\n            //move center {x,y} to {0,0}, skew, then slide {0,0} back to {x,y}\r\n            mat3.multiply(mat3.createTranslate(-cx, -cy), m, m); //m = translation * m\r\n            mat3.translate(m, cx, cy);\r\n            return m;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(SkewTransform);\r\n\r\n    export class TranslateTransform extends Transform {\r\n        static XProperty = DependencyProperty.Register(\"X\", () => Number, TranslateTransform, 0, (d: TranslateTransform, args) => d.InvalidateValue());\r\n        static YProperty = DependencyProperty.Register(\"Y\", () => Number, TranslateTransform, 0, (d: TranslateTransform, args) => d.InvalidateValue());\r\n        X: number;\r\n        Y: number;\r\n\r\n        _BuildValue (): number[] {\r\n            return mat3.createTranslate(this.X, this.Y);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(TranslateTransform);\r\n\r\n    export class TransformCollection extends XamlObjectCollection<Transform> {\r\n        AddingToCollection (value: Transform, error: BError): boolean {\r\n            if (!super.AddingToCollection(value, error))\r\n                return false;\r\n            ReactTo(value, this, () => Incite(this));\r\n            Incite(this);\r\n            return true;\r\n        }\r\n\r\n        RemovedFromCollection (value: Transform, isValueSafe: boolean) {\r\n            if (!super.RemovedFromCollection(value, isValueSafe))\r\n                return false;\r\n            UnreactTo(value, this);\r\n            Incite(this);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(TransformCollection);\r\n\r\n    export class TransformGroup extends Transform {\r\n        static ChildrenProperty = DependencyProperty.RegisterImmutable<TransformCollection>(\"Children\", () => TransformCollection, TransformGroup);\r\n        Children: TransformCollection;\r\n\r\n        constructor () {\r\n            super();\r\n            var coll = TransformGroup.ChildrenProperty.Initialize(this);\r\n            coll.AttachTo(this);\r\n            ReactTo(coll, this, () => this.InvalidateValue());\r\n        }\r\n\r\n        _BuildValue (): number[] {\r\n            var enumerator = this.Children.getEnumerator();\r\n            var cur = mat3.identity();\r\n            while (enumerator.moveNext()) {\r\n                mat3.multiply(cur, (<Transform>enumerator.current).Value._Raw, cur); //cur = cur * child\r\n            }\r\n            return cur;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(TransformGroup);\r\n    Markup.Content(TransformGroup, TransformGroup.ChildrenProperty);\r\n}","module Fayde.Navigation {\r\n    export function Navigate(source: DependencyObject, targetName: string, navigateUri: Uri) {\r\n        if (!isExternalTarget(targetName)) {\r\n            if (tryInternalNavigate(source, navigateUri, targetName))\r\n                return;\r\n            if (!isUriValidForExternalNav(navigateUri))\r\n                throw new NotSupportedException(\"Navigation Failed\");\r\n        }\r\n        var app = source.App;\r\n        if (!app || !app.AllowNavigation)\r\n            throw new InvalidOperationException(\"Navigation is now allowed.\");\r\n        var absoluteUri = getAbsoluteUri(navigateUri, app);\r\n        if (!absoluteUri.isAbsoluteUri)\r\n            throw new InvalidOperationException(\"Navigation Failed [\" + absoluteUri.toString() + \"]\");\r\n        launchDummyLink(targetName || \"_self\", absoluteUri.originalString);\r\n    }\r\n\r\n    function isExternalTarget(targetName: string): boolean {\r\n        if (!targetName)\r\n            return false;\r\n        switch (targetName.toLowerCase()) {\r\n            case \"_blank\":\r\n            case \"_media\":\r\n            case \"_search\":\r\n            case \"_parent\":\r\n            case \"_self\":\r\n            case \"_top\":\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    function tryInternalNavigate(source: DependencyObject, navigateUri: Uri, targetName: string): boolean {\r\n        var lastSubtree = source;\r\n        for (var en = walkUp(source); en.moveNext();) {\r\n            var cur = <DependencyObject>en.current;\r\n            if (cur && (INavigate_.is(cur) || !VisualTreeHelper.GetParent(cur))) {\r\n                var navigator = findNavigator(cur, lastSubtree, targetName);\r\n                if (navigator)\r\n                    return navigator.Navigate(navigateUri);\r\n                lastSubtree = cur;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function findNavigator(root: DependencyObject, lastSubtree: DependencyObject, targetName: string): INavigate {\r\n        if (!root || root === lastSubtree)\r\n            return null;\r\n        var nav = INavigate_.as(root);\r\n        if (nav && (!targetName || targetName === root.Name))\r\n            return nav;\r\n\r\n        if (root instanceof Controls.Primitives.Popup) {\r\n            return findNavigator((<Controls.Primitives.Popup>root).Child, lastSubtree, targetName);\r\n        } else {\r\n            for (var i = 0, len = VisualTreeHelper.GetChildrenCount(root); i < len; i++) {\r\n                var navigator = findNavigator(VisualTreeHelper.GetChild(root, i), lastSubtree, targetName);\r\n                if (navigator)\r\n                    return navigator;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function walkUp(xobj: XamlObject): nullstone.IEnumerator<XamlObject> {\r\n        var e = {\r\n            current: xobj,\r\n            moveNext(): boolean {\r\n                if (!e.current)\r\n                    return false;\r\n                e.current = (<any>e.current).VisualParent || e.current.Parent;\r\n                return !!e.current;\r\n            }\r\n        };\r\n        return e;\r\n    }\r\n\r\n    function isUriValidForExternalNav(navigateUri: Uri): boolean {\r\n        if (!navigateUri.isAbsoluteUri) {\r\n            if (!!navigateUri.originalString && navigateUri.originalString[0] !== \"/\")\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function getAbsoluteUri(navigateUri: Uri, app: Application) {\r\n        var relativeUri = navigateUri;\r\n        if (!relativeUri.isAbsoluteUri) {\r\n            if (!!relativeUri.originalString && relativeUri.originalString[0] !== \"/\")\r\n                throw new NotSupportedException(\"HyperlinkButton_GetAbsoluteUri_PageRelativeUri\");\r\n            if (!app)\r\n                throw new NotSupportedException(\"HyperlinkButton_GetAbsoluteUri_NoApplication\");\r\n            relativeUri = new Uri(app.Address, relativeUri);\r\n        }\r\n        return relativeUri;\r\n    }\r\n\r\n    var dummyLink: HTMLAnchorElement;\r\n    function launchDummyLink(target: string, navigateUri: string) {\r\n        dummyLink = dummyLink || document.createElement('a');\r\n        dummyLink.href = navigateUri;\r\n        dummyLink.target = target;\r\n        dummyLink.click();\r\n    }\r\n}","module Fayde.Navigation {\r\n    export class NavigationService {\r\n        Href: string;\r\n        Hash: string;\r\n        LocationChanged = new nullstone.Event();\r\n\r\n        constructor() {\r\n            this.Href = window.location.href;\r\n            this.Hash = window.location.hash;\r\n            if (this.Href[this.Href.length - 1] === '#')\r\n                this.Hash = \"#\";\r\n            if (this.Hash) {\r\n                this.Hash = this.Hash.substr(1);\r\n                this.Href = this.Href.substring(0, this.Href.indexOf('#'));\r\n            }\r\n            window.onhashchange = () => this._HandleFragmentChange();\r\n        }\r\n\r\n        get CurrentUri(): Uri {\r\n            return new Uri(this.Href + \"#\" + this.Hash);\r\n        }\r\n\r\n        Navigate(uri: Uri): boolean {\r\n            window.location.hash = uri.toString();\r\n            return true;\r\n        }\r\n\r\n        private _HandleFragmentChange() {\r\n            this.Hash = window.location.hash;\r\n            if (this.Hash) {\r\n                this.Hash = this.Hash.substr(1);\r\n            }\r\n            this.LocationChanged.raise(this, null);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(NavigationService);\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n\r\nmodule Fayde.Navigation {\r\n    export class RouteMapper extends DependencyObject {\r\n        static RouteMappingsProperty = DependencyProperty.RegisterImmutable<XamlObjectCollection<RouteMapping>>(\"RouteMappings\", () => XamlObjectCollection, RouteMapper);\r\n        static ViewModelProviderProperty = DependencyProperty.Register(\"ViewModelProvider\", () => Fayde.MVVM.IViewModelProvider_, RouteMapper);\r\n\r\n        RouteMappings: XamlObjectCollection<RouteMapping>;\r\n        ViewModelProvider: Fayde.MVVM.IViewModelProvider;\r\n\r\n        constructor () {\r\n            super();\r\n            RouteMapper.RouteMappingsProperty.Initialize(this);\r\n        }\r\n\r\n        MapUri (uri: Uri): Route {\r\n            var mapped: Route;\r\n            for (var en = this.RouteMappings.getEnumerator(); en.moveNext();) {\r\n                mapped = en.current.MapUri(uri);\r\n                if (mapped) {\r\n                    var vm: any = this.ViewModelProvider ? this.ViewModelProvider.ResolveViewModel(mapped) : null;\r\n                    mapped.DataContext = vm;\r\n                    return mapped;\r\n                }\r\n            }\r\n            return undefined;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(RouteMapper);\r\n    Markup.Content(RouteMapper, RouteMapper.RouteMappingsProperty);\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n\r\nmodule Fayde.Navigation {\r\n    export class RouteMapping extends DependencyObject {\r\n        static ViewProperty = DependencyProperty.Register(\"View\", () => Uri, RouteMapping);\r\n        static UriProperty = DependencyProperty.Register(\"Uri\", () => Uri, RouteMapping);\r\n        View: Uri;\r\n        Uri: Uri;\r\n\r\n        MapUri (uri: Uri): Route {\r\n            var matcher = createUriMatcher(this.Uri.toString(), uri.toString());\r\n            var result: ITokenInfo[] = matcher.Match();\r\n            if (!result)\r\n                return undefined;\r\n\r\n            //construct a route object that contains the view and parameters\r\n            if (!this.View)\r\n                throw new InvalidOperationException(\"RouteMapping must have a view. (\" + this.Uri.toString() + \")\");\r\n            var hashParams: { [key: string]: string } = {};\r\n            for (var i = 0; i < result.length; i++) {\r\n                var key: string = result[i].Identifier;\r\n                var value: string = result[i].Value;\r\n                hashParams[key] = value;\r\n            }\r\n            return new Route(this.View, hashParams, null);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(RouteMapping);\r\n\r\n    interface ITokenInfo {\r\n        Identifier: string;\r\n        Terminator: string;\r\n        Value: string;\r\n    }\r\n    interface IUriMatcher {\r\n        Match(): ITokenInfo[];\r\n    }\r\n\r\n    function createUriMatcher (matchTemplate: string, actual: string): IUriMatcher {\r\n        var i = 0;\r\n        var j = 0;\r\n\r\n        function collectTokenInfo (): ITokenInfo {\r\n            var tokenInfo: ITokenInfo = {\r\n                Identifier: null,\r\n                Terminator: null,\r\n                Value: null\r\n            };\r\n            var index = matchTemplate.indexOf('}', i);\r\n            if (index < 0)\r\n                throw new InvalidOperationException(\"Invalid Uri format. '{' needs a closing '}'.\");\r\n            var len = index - i + 1; //length of '{test}' = 6\r\n            tokenInfo.Identifier = matchTemplate.substr(i + 1, len - 2);\r\n            if (!tokenInfo.Identifier)\r\n                throw new InvalidOperationException(\"Invalid Uri format. '{}' must contain an identifier.\");\r\n            i += len; //advances i just past '}'\r\n            tokenInfo.Terminator = (i + 1) < matchTemplate.length ? matchTemplate[i] : '\\0';\r\n            //console.log(\"identifier: \" + tokenInfo.Identifier + \", terminator: \" + tokenInfo.Terminator);\r\n            return tokenInfo;\r\n        }\r\n\r\n        function findTokenValue (tokenInfo: ITokenInfo): ITokenInfo {\r\n            if (tokenInfo.Terminator === '\\0') {\r\n                tokenInfo.Value = actual.substr(j);\r\n                if (tokenInfo.Value)\r\n                    j += tokenInfo.Value.length;\r\n                return tokenInfo;\r\n            }\r\n            tokenInfo.Value = \"\";\r\n            while (j < actual.length) {\r\n                if (actual[j] == tokenInfo.Terminator)\r\n                    return;\r\n                tokenInfo.Value += actual[j];\r\n                j++;\r\n            }\r\n            //console.log(\"value: \" + tokenInfo.Value);\r\n        }\r\n\r\n        return {\r\n            Match: function (): ITokenInfo[] {\r\n                var tokens: ITokenInfo[] = [];\r\n\r\n                if (matchTemplate.length === 0) {\r\n                    if (actual.length === 0)\r\n                        return tokens;\r\n                    return null;\r\n                }\r\n\r\n                while (i < matchTemplate.length && j < actual.length) {\r\n                    if (matchTemplate[i] === \"{\") {\r\n                        tokens.push(findTokenValue(collectTokenInfo()));\r\n                        continue;\r\n                    }\r\n                    if (matchTemplate[i] !== actual[i])\r\n                        return null;\r\n                    i++;\r\n                    j++;\r\n                }\r\n                return tokens;\r\n            }\r\n        };\r\n    }\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n\r\nmodule Fayde.Navigation {\r\n    export class UriMapper extends DependencyObject {\r\n        static UriMappingsProperty = DependencyProperty.RegisterImmutable<XamlObjectCollection<UriMapping>>(\"UriMappings\", () => XamlObjectCollection, UriMapper);\r\n        UriMappings: XamlObjectCollection<UriMapping>;\r\n\r\n        constructor() {\r\n            super();\r\n            UriMapper.UriMappingsProperty.Initialize(this);\r\n        }\r\n\r\n        MapUri(uri: Uri): Uri {\r\n            var enumerator = this.UriMappings.getEnumerator();\r\n            var mapped: Uri;\r\n            while (enumerator.moveNext()) {\r\n                mapped = enumerator.current.MapUri(uri);\r\n                if (mapped)\r\n                    return mapped;\r\n            }\r\n            return uri;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(UriMapper);\r\n    Markup.Content(UriMapper, UriMapper.UriMappingsProperty);\r\n}","/// <reference path=\"../Core/DependencyObject.ts\" />\r\n\r\nmodule Fayde.Navigation {\r\n    export class UriMapping extends DependencyObject {\r\n        static MappedUriProperty = DependencyProperty.Register(\"MappedUri\", () => Uri, UriMapping);\r\n        static UriProperty = DependencyProperty.Register(\"Uri\", () => Uri, UriMapping);\r\n        MappedUri: Uri;\r\n        Uri: Uri;\r\n\r\n        MapUri(uri: Uri): Uri {\r\n            var matcher = createUriMatcher(this.Uri.toString(), this.MappedUri.toString(), uri.toString());\r\n            var result = matcher.Match();\r\n            if (!result)\r\n                return undefined;\r\n            return new Uri(result);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(UriMapping);\r\n\r\n    interface ITokenInfo {\r\n        Identifier: string;\r\n        Terminator: string;\r\n        Value: string;\r\n    }\r\n    interface IUriMatcher {\r\n        Match(): string;\r\n    }\r\n    function createUriMatcher(matchTemplate: string, outputTemplate: string, actual: string): IUriMatcher {\r\n        var i = 0;\r\n        var j = 0;\r\n\r\n        function collectTokenInfo(): ITokenInfo {\r\n            var tokenInfo: ITokenInfo = {\r\n                Identifier: null,\r\n                Terminator: null,\r\n                Value: null\r\n            };\r\n            var index = matchTemplate.indexOf('}', i);\r\n            if (index < 0)\r\n                throw new InvalidOperationException(\"Invalid Uri format. '{' needs a closing '}'.\");\r\n            var len = index - i + 1; //length of '{test}' = 6\r\n            tokenInfo.Identifier = matchTemplate.substr(i + 1, len - 2);\r\n            if (!tokenInfo.Identifier)\r\n                throw new InvalidOperationException(\"Invalid Uri format. '{}' must contain an identifier.\");\r\n            i += len; //advances i just past '}'\r\n            tokenInfo.Terminator = (i + 1) < matchTemplate.length ? matchTemplate[i] : '\\0';\r\n            return tokenInfo;\r\n        }\r\n        function findTokenValue(tokenInfo: ITokenInfo): ITokenInfo {\r\n            if (tokenInfo.Terminator === '\\0') {\r\n                tokenInfo.Value = actual.substr(j);\r\n                if (tokenInfo.Value)\r\n                    j += tokenInfo.Value.length;\r\n                return tokenInfo;\r\n            }\r\n            tokenInfo.Value = \"\";\r\n            while (j < actual.length) {\r\n                if (actual[j] == tokenInfo.Terminator)\r\n                    return;\r\n                tokenInfo.Value += actual[j];\r\n                j++;\r\n            }\r\n        }\r\n        function buildMappedUri(tokens: ITokenInfo[]): string {\r\n            var cur = outputTemplate;\r\n            var len = tokens.length;\r\n            var token: ITokenInfo;\r\n            for (var a = 0; a < len; a++) {\r\n                token = tokens[a];\r\n                cur = cur.replace(\"{\" + token.Identifier + \"}\", token.Value);\r\n            }\r\n            return cur;\r\n        }\r\n\r\n        return {\r\n            Match: function (): string {\r\n                var tokens: ITokenInfo[] = [];\r\n                if (matchTemplate.length === 0) {\r\n                    if (actual.length === 0)\r\n                        return buildMappedUri(tokens);\r\n                    return null;\r\n                }\r\n\r\n                while (i < matchTemplate.length && j < actual.length) {\r\n                    if (matchTemplate[i] === \"{\") {\r\n                        tokens.push(findTokenValue(collectTokenInfo()));\r\n                        continue;\r\n                    }\r\n                    if (matchTemplate[i] !== actual[i])\r\n                        return null;\r\n                    i++;\r\n                    j++;\r\n                }\r\n                return buildMappedUri(tokens);\r\n            }\r\n        };\r\n    }\r\n}","class Color implements ICloneable {\r\n    private static __NoAlphaRegex = /#([0-9a-fA-F][0-9a-fA-F]){1}([0-9a-fA-F][0-9a-fA-F]){1}([0-9a-fA-F][0-9a-fA-F]){1}/;\r\n    private static __AlphaRegex = /#([0-9a-fA-F][0-9a-fA-F]){1}([0-9a-fA-F][0-9a-fA-F]){1}([0-9a-fA-F][0-9a-fA-F]){1}([0-9a-fA-F][0-9a-fA-F]){1}/;\r\n\r\n    R: number = 0;\r\n    G: number = 0;\r\n    B: number = 0;\r\n    A: number = 1.0;\r\n\r\n    Add(color2: Color) {\r\n        var c = new Color();\r\n        c.R = this.R + color2.R;\r\n        c.G = this.G + color2.G;\r\n        c.B = this.B + color2.B;\r\n        c.A = this.A + color2.A;\r\n        return c;\r\n    }\r\n    Subtract(color2: Color) {\r\n        var c = new Color();\r\n        c.R = this.R - color2.R;\r\n        c.G = this.G - color2.G;\r\n        c.B = this.B - color2.B;\r\n        c.A = this.A - color2.A;\r\n        return c;\r\n    }\r\n    Multiply(factor: number) {\r\n        var c = new Color();\r\n        c.R = this.R * factor;\r\n        c.G = this.G * factor;\r\n        c.B = this.B * factor;\r\n        c.A = this.A * factor;\r\n        return c;\r\n    }\r\n    Equals(other: Color) {\r\n        return this.R === other.R\r\n            && this.G === other.G\r\n            && this.B === other.B\r\n            && this.A === other.A;\r\n    }\r\n    toString() {\r\n        var r = Math.round(this.R) || 0;\r\n        var g = Math.round(this.G) || 0;\r\n        var b = Math.round(this.B) || 0;\r\n        var a = this.A || 0;\r\n        return `rgba(${r}, ${g}, ${b}, ${a})`;\r\n    }\r\n    ToHexStringNoAlpha(): string {\r\n        return \"#\" + this.R.toString(16) + this.G.toString(16) + this.B.toString(16);\r\n    }\r\n\r\n    Clone(): Color {\r\n        return Color.FromRgba(this.R, this.G, this.B, this.A);\r\n    }\r\n\r\n    static LERP(start: Color, end: Color, p: number): Color {\r\n        var c = new Color();\r\n        c.R = start.R + (end.R - start.R) * p;\r\n        c.G = start.G + (end.G - start.G) * p;\r\n        c.B = start.B + (end.B - start.B) * p;\r\n        c.A = start.A + (end.A - start.A) * p;\r\n        return c;\r\n    }\r\n    static FromRgba(r: number, g: number, b: number, a: number): Color {\r\n        var c = new Color();\r\n        c.R = r;\r\n        c.G = g;\r\n        c.B = b;\r\n        c.A = a;\r\n        return c;\r\n    }\r\n    static FromHex(hex: string): Color {\r\n        var match;\r\n        var c = new Color();\r\n        if ((match = Color.__AlphaRegex.exec(hex)) != null) {\r\n            c.A = parseInt(match[1], 16) / 255.0;\r\n            c.R = parseInt(match[2], 16);\r\n            c.G = parseInt(match[3], 16);\r\n            c.B = parseInt(match[4], 16);\r\n        } else if ((match = Color.__NoAlphaRegex.exec(hex)) != null) {\r\n            c.A = 1.0;\r\n            c.R = parseInt(match[1], 16);\r\n            c.G = parseInt(match[2], 16);\r\n            c.B = parseInt(match[3], 16);\r\n        }\r\n        return c;\r\n    }\r\n\r\n    static KnownColors = {\r\n        AliceBlue: Color.FromHex(\"#FFF0F8FF\"),\r\n        AntiqueWhite: Color.FromHex(\"#FFFAEBD7\"),\r\n        Aqua: Color.FromHex(\"#FF00FFFF\"),\r\n        Aquamarine: Color.FromHex(\"#FF7FFFD4\"),\r\n        Azure: Color.FromHex(\"#FFF0FFFF\"),\r\n        Beige: Color.FromHex(\"#FFF5F5DC\"),\r\n        Bisque: Color.FromHex(\"#FFFFE4C4\"),\r\n        Black: Color.FromHex(\"#FF000000\"),\r\n        BlanchedAlmond: Color.FromHex(\"#FFFFEBCD\"),\r\n        Blue: Color.FromHex(\"#FF0000FF\"),\r\n        BlueViolet: Color.FromHex(\"#FF8A2BE2\"),\r\n        Brown: Color.FromHex(\"#FFA52A2A\"),\r\n        BurlyWood: Color.FromHex(\"#FFDEB887\"),\r\n        CadetBlue: Color.FromHex(\"#FF5F9EA0\"),\r\n        Chartreuse: Color.FromHex(\"#FF7FFF00\"),\r\n        Chocolate: Color.FromHex(\"#FFD2691E\"),\r\n        Coral: Color.FromHex(\"#FFFF7F50\"),\r\n        CornflowerBlue: Color.FromHex(\"#FF6495ED\"),\r\n        Cornsilk: Color.FromHex(\"#FFFFF8DC\"),\r\n        Crimson: Color.FromHex(\"#FFDC143C\"),\r\n        Cyan: Color.FromHex(\"#FF00FFFF\"),\r\n        DarkBlue: Color.FromHex(\"#FF00008B\"),\r\n        DarkCyan: Color.FromHex(\"#FF008B8B\"),\r\n        DarkGoldenrod: Color.FromHex(\"#FFB8860B\"),\r\n        DarkGray: Color.FromHex(\"#FFA9A9A9\"),\r\n        DarkGreen: Color.FromHex(\"#FF006400\"),\r\n        DarkKhaki: Color.FromHex(\"#FFBDB76B\"),\r\n        DarkMagenta: Color.FromHex(\"#FF8B008B\"),\r\n        DarkOliveGreen: Color.FromHex(\"#FF556B2F\"),\r\n        DarkOrange: Color.FromHex(\"#FFFF8C00\"),\r\n        DarkOrchid: Color.FromHex(\"#FF9932CC\"),\r\n        DarkRed: Color.FromHex(\"#FF8B0000\"),\r\n        DarkSalmon: Color.FromHex(\"#FFE9967A\"),\r\n        DarkSeaGreen: Color.FromHex(\"#FF8FBC8F\"),\r\n        DarkSlateBlue: Color.FromHex(\"#FF483D8B\"),\r\n        DarkSlateGray: Color.FromHex(\"#FF2F4F4F\"),\r\n        DarkTurquoise: Color.FromHex(\"#FF00CED1\"),\r\n        DarkViolet: Color.FromHex(\"#FF9400D3\"),\r\n        DeepPink: Color.FromHex(\"#FFFF1493\"),\r\n        DeepSkyBlue: Color.FromHex(\"#FF00BFFF\"),\r\n        DimGray: Color.FromHex(\"#FF696969\"),\r\n        DodgerBlue: Color.FromHex(\"#FF1E90FF\"),\r\n        Firebrick: Color.FromHex(\"#FFB22222\"),\r\n        FloralWhite: Color.FromHex(\"#FFFFFAF0\"),\r\n        ForestGreen: Color.FromHex(\"#FF228B22\"),\r\n        Fuchsia: Color.FromHex(\"#FFFF00FF\"),\r\n        Gainsboro: Color.FromHex(\"#FFDCDCDC\"),\r\n        GhostWhite: Color.FromHex(\"#FFF8F8FF\"),\r\n        Gold: Color.FromHex(\"#FFFFD700\"),\r\n        Goldenrod: Color.FromHex(\"#FFDAA520\"),\r\n        Gray: Color.FromHex(\"#FF808080\"),\r\n        Green: Color.FromHex(\"#FF008000\"),\r\n        GreenYellow: Color.FromHex(\"#FFADFF2F\"),\r\n        Honeydew: Color.FromHex(\"#FFF0FFF0\"),\r\n        HotPink: Color.FromHex(\"#FFFF69B4\"),\r\n        IndianRed: Color.FromHex(\"#FFCD5C5C\"),\r\n        Indigo: Color.FromHex(\"#FF4B0082\"),\r\n        Ivory: Color.FromHex(\"#FFFFFFF0\"),\r\n        Khaki: Color.FromHex(\"#FFF0E68C\"),\r\n        Lavender: Color.FromHex(\"#FFE6E6FA\"),\r\n        LavenderBlush: Color.FromHex(\"#FFFFF0F5\"),\r\n        LawnGreen: Color.FromHex(\"#FF7CFC00\"),\r\n        LemonChiffon: Color.FromHex(\"#FFFFFACD\"),\r\n        LightBlue: Color.FromHex(\"#FFADD8E6\"),\r\n        LightCoral: Color.FromHex(\"#FFF08080\"),\r\n        LightCyan: Color.FromHex(\"#FFE0FFFF\"),\r\n        LightGoldenrodYellow: Color.FromHex(\"#FFFAFAD2\"),\r\n        LightGray: Color.FromHex(\"#FFD3D3D3\"),\r\n        LightGreen: Color.FromHex(\"#FF90EE90\"),\r\n        LightPink: Color.FromHex(\"#FFFFB6C1\"),\r\n        LightSalmon: Color.FromHex(\"#FFFFA07A\"),\r\n        LightSeaGreen: Color.FromHex(\"#FF20B2AA\"),\r\n        LightSkyBlue: Color.FromHex(\"#FF87CEFA\"),\r\n        LightSlateGray: Color.FromHex(\"#FF778899\"),\r\n        LightSteelBlue: Color.FromHex(\"#FFB0C4DE\"),\r\n        LightYellow: Color.FromHex(\"#FFFFFFE0\"),\r\n        Lime: Color.FromHex(\"#FF00FF00\"),\r\n        LimeGreen: Color.FromHex(\"#FF32CD32\"),\r\n        Linen: Color.FromHex(\"#FFFAF0E6\"),\r\n        Magenta: Color.FromHex(\"#FFFF00FF\"),\r\n        Maroon: Color.FromHex(\"#FF800000\"),\r\n        MediumAquamarine: Color.FromHex(\"#FF66CDAA\"),\r\n        MediumBlue: Color.FromHex(\"#FF0000CD\"),\r\n        MediumOrchid: Color.FromHex(\"#FFBA55D3\"),\r\n        MediumPurple: Color.FromHex(\"#FF9370DB\"),\r\n        MediumSeaGreen: Color.FromHex(\"#FF3CB371\"),\r\n        MediumSlateBlue: Color.FromHex(\"#FF7B68EE\"),\r\n        MediumSpringGreen: Color.FromHex(\"#FF00FA9A\"),\r\n        MediumTurquoise: Color.FromHex(\"#FF48D1CC\"),\r\n        MediumVioletRed: Color.FromHex(\"#FFC71585\"),\r\n        MidnightBlue: Color.FromHex(\"#FF191970\"),\r\n        MintCream: Color.FromHex(\"#FFF5FFFA\"),\r\n        MistyRose: Color.FromHex(\"#FFFFE4E1\"),\r\n        Moccasin: Color.FromHex(\"#FFFFE4B5\"),\r\n        NavajoWhite: Color.FromHex(\"#FFFFDEAD\"),\r\n        Navy: Color.FromHex(\"#FF000080\"),\r\n        OldLace: Color.FromHex(\"#FFFDF5E6\"),\r\n        Olive: Color.FromHex(\"#FF808000\"),\r\n        OliveDrab: Color.FromHex(\"#FF6B8E23\"),\r\n        Orange: Color.FromHex(\"#FFFFA500\"),\r\n        OrangeRed: Color.FromHex(\"#FFFF4500\"),\r\n        Orchid: Color.FromHex(\"#FFDA70D6\"),\r\n        PaleGoldenrod: Color.FromHex(\"#FFEEE8AA\"),\r\n        PaleGreen: Color.FromHex(\"#FF98FB98\"),\r\n        PaleTurquoise: Color.FromHex(\"#FFAFEEEE\"),\r\n        PaleVioletRed: Color.FromHex(\"#FFDB7093\"),\r\n        PapayaWhip: Color.FromHex(\"#FFFFEFD5\"),\r\n        PeachPuff: Color.FromHex(\"#FFFFDAB9\"),\r\n        Peru: Color.FromHex(\"#FFCD853F\"),\r\n        Pink: Color.FromHex(\"#FFFFC0CB\"),\r\n        Plum: Color.FromHex(\"#FFDDA0DD\"),\r\n        PowderBlue: Color.FromHex(\"#FFB0E0E6\"),\r\n        Purple: Color.FromHex(\"#FF800080\"),\r\n        Red: Color.FromHex(\"#FFFF0000\"),\r\n        RosyBrown: Color.FromHex(\"#FFBC8F8F\"),\r\n        RoyalBlue: Color.FromHex(\"#FF4169E1\"),\r\n        SaddleBrown: Color.FromHex(\"#FF8B4513\"),\r\n        Salmon: Color.FromHex(\"#FFFA8072\"),\r\n        SandyBrown: Color.FromHex(\"#FFF4A460\"),\r\n        SeaGreen: Color.FromHex(\"#FF2E8B57\"),\r\n        SeaShell: Color.FromHex(\"#FFFFF5EE\"),\r\n        Sienna: Color.FromHex(\"#FFA0522D\"),\r\n        Silver: Color.FromHex(\"#FFC0C0C0\"),\r\n        SkyBlue: Color.FromHex(\"#FF87CEEB\"),\r\n        SlateBlue: Color.FromHex(\"#FF6A5ACD\"),\r\n        SlateGray: Color.FromHex(\"#FF708090\"),\r\n        Snow: Color.FromHex(\"#FFFFFAFA\"),\r\n        SpringGreen: Color.FromHex(\"#FF00FF7F\"),\r\n        SteelBlue: Color.FromHex(\"#FF4682B4\"),\r\n        Tan: Color.FromHex(\"#FFD2B48C\"),\r\n        Teal: Color.FromHex(\"#FF008080\"),\r\n        Thistle: Color.FromHex(\"#FFD8BFD8\"),\r\n        Tomato: Color.FromHex(\"#FFFF6347\"),\r\n        Transparent: Color.FromHex(\"#00FFFFFF\"),\r\n        Turquoise: Color.FromHex(\"#FF40E0D0\"),\r\n        Violet: Color.FromHex(\"#FFEE82EE\"),\r\n        Wheat: Color.FromHex(\"#FFF5DEB3\"),\r\n        White: Color.FromHex(\"#FFFFFFFF\"),\r\n        WhiteSmoke: Color.FromHex(\"#FFF5F5F5\"),\r\n        Yellow: Color.FromHex(\"#FFFFFF00\"),\r\n        YellowGreen: Color.FromHex(\"#FF9ACD32\")\r\n    }\r\n}\r\nFayde.CoreLibrary.addPrimitive(Color);\r\n\r\nnullstone.registerTypeConverter(Color, (val: any): Color => {\r\n    if (!val)\r\n        return undefined;\r\n    if (val instanceof Color)\r\n        return <Color>val;\r\n    val = val.toString();\r\n    if (val[0] !== \"#\") {\r\n        var color = Color.KnownColors[val];\r\n        if (!color)\r\n            throw new NotSupportedException(\"Unknown Color: \" + val);\r\n        return color;\r\n    }\r\n    return Color.FromHex(val);\r\n});","class CornerRadius extends minerva.CornerRadius implements ICloneable {\r\n    Clone (): CornerRadius {\r\n        return new CornerRadius(this.topLeft, this.topRight, this.bottomRight, this.bottomLeft);\r\n    }\r\n}\r\nFayde.CoreLibrary.addPrimitive(CornerRadius);\r\n\r\nnullstone.registerTypeConverter(CornerRadius, (val: any): CornerRadius => {\r\n    if (!val)\r\n        return new CornerRadius();\r\n    if (val instanceof CornerRadius)\r\n\treturn <CornerRadius>val;\r\n    if (typeof val === \"number\")\r\n        return new CornerRadius(val, val, val, val);\r\n    var tokens = Fayde.splitCommaList(val.toString());\r\n    var topLeft, topRight, bottomRight, bottomLeft;\r\n    if (tokens.length === 1) {\r\n        topLeft = topRight = bottomRight = bottomLeft = parseFloat(tokens[0]);\r\n    } else if (tokens.length === 4) {\r\n        topLeft = parseFloat(tokens[0]);\r\n        topRight = parseFloat(tokens[1]);\r\n        bottomRight = parseFloat(tokens[2]);\r\n        bottomLeft = parseFloat(tokens[3]);\r\n    } else {\r\n        throw new Exception(\"Cannot parse CornerRadius value '\" + val + \"'\");\r\n    }\r\n    return new CornerRadius(topLeft, topRight, bottomRight, bottomLeft);\r\n});\r\n","enum DurationType {\r\n    Automatic = 0,\r\n    Forever = 1,\r\n    TimeSpan = 2,\r\n}\r\n\r\nclass Duration implements ICloneable {\r\n    private _Type: DurationType = DurationType.TimeSpan;\r\n    private _TimeSpan: TimeSpan;\r\n\r\n    constructor(ts?: TimeSpan) {\r\n        this._TimeSpan = ts;\r\n    }\r\n\r\n    Clone(): Duration {\r\n        var dur = new Duration();\r\n        dur._Type = this._Type;\r\n        dur._TimeSpan = this._TimeSpan;\r\n        return dur;\r\n    }\r\n\r\n    get Type(): DurationType { return this._Type; }\r\n    get TimeSpan(): TimeSpan {\r\n        if (this._Type === DurationType.TimeSpan)\r\n            return this._TimeSpan;\r\n    }\r\n    get HasTimeSpan(): boolean { return this._Type === DurationType.TimeSpan }\r\n    get IsForever(): boolean { return this._Type === DurationType.Forever; }\r\n    get IsAutomatic(): boolean { return this._Type === DurationType.Automatic; }\r\n\r\n    get IsZero(): boolean { return this._Type === DurationType.TimeSpan && this._TimeSpan.Ticks === 0; }\r\n\r\n    static Automatic: Duration = (function () { var d = new Duration(); (<any>d)._Type = DurationType.Automatic; return d; })();\r\n    static Forever: Duration = (function () { var d = new Duration(); (<any>d)._Type = DurationType.Forever; return d; })();\r\n}\r\nFayde.CoreLibrary.addPrimitive(Duration);\r\nnullstone.registerTypeConverter(Duration, (val: any): Duration => {\r\n    if (val instanceof Duration)\r\n\treturn <Duration>val;\r\n    if (!val || val.toString().toLowerCase() === \"automatic\")\r\n        return Duration.Automatic;\r\n    if (val.toString().toLowerCase() === \"forever\")\r\n        return Duration.Forever;\r\n    var ts = nullstone.convertAnyToType(val, TimeSpan);\r\n    return new Duration(ts);\r\n});\r\n","class FontFamily implements ICloneable {\r\n    constructor(public FamilyNames: string) { }\r\n    toString(): string {\r\n        return this.FamilyNames;\r\n    }\r\n    Clone(): FontFamily {\r\n        return new FontFamily(this.FamilyNames);\r\n    }\r\n}\r\nFayde.CoreLibrary.addPrimitive(FontFamily);\r\nnullstone.registerTypeConverter(FontFamily, (val: any): any => {\r\n    if (!val) return new FontFamily(minerva.Font.DEFAULT_FAMILY);\r\n    return new FontFamily(val.toString());\r\n});","class KeyTime implements ICloneable {\r\n    private _IsPaced: boolean = false;\r\n    private _IsUniform: boolean = false;\r\n    private _TimeSpan: TimeSpan = null;\r\n    private _Percent: number = null;\r\n    IsValid: boolean = true;\r\n\r\n    static CreateUniform(): KeyTime {\r\n        var kt = new KeyTime();\r\n        kt._IsUniform = true;\r\n        return kt;\r\n    }\r\n    static CreateTimeSpan(ts: TimeSpan): KeyTime {\r\n        var kt = new KeyTime();\r\n        kt._TimeSpan = ts;\r\n        return kt;\r\n    }\r\n\r\n    Clone(): KeyTime {\r\n        var kt = new KeyTime();\r\n        kt._TimeSpan = this._TimeSpan;\r\n        kt._IsPaced = this._IsPaced;\r\n        kt._IsUniform = this._IsUniform;\r\n        kt._Percent = this._Percent;\r\n        return kt;\r\n    }\r\n\r\n    get IsPaced(): boolean { return this._IsPaced; }\r\n    get IsUniform(): boolean { return this._IsUniform; }\r\n    get HasTimeSpan(): boolean { return this._TimeSpan != null; }\r\n    get TimeSpan(): TimeSpan { return this._TimeSpan; }\r\n    get HasPercent(): boolean { return this._Percent != null; }\r\n    get Percent(): number { return this._Percent; }\r\n}\r\nFayde.CoreLibrary.addPrimitive(KeyTime);\r\nnullstone.registerTypeConverter(KeyTime, (val: any): KeyTime => {\r\n    if (!val || val.toString().toLowerCase() === \"uniform\")\r\n        return KeyTime.CreateUniform();\r\n    var ts = nullstone.convertAnyToType(val, TimeSpan);\r\n    return KeyTime.CreateTimeSpan(ts);\r\n});","class Length {\r\n}\r\nFayde.CoreLibrary.addPrimitive(Length);\r\nnullstone.registerTypeConverter(Length, (val: any): number => {\r\n    if (!val || val.toString().toLowerCase() === \"auto\")\r\n        return Number.NaN;\r\n    if (typeof val === \"number\")\r\n        return val;\r\n    return parseFloat(val.toString());\r\n});","class Rect extends minerva.Rect {\r\n    Clone (): Rect {\r\n        return new Rect(this.x, this.y, this.width, this.height);\r\n    }\r\n}\r\nFayde.CoreLibrary.addPrimitive(Rect);\r\n\r\nnullstone.registerTypeConverter(Rect, (val: any): any => {\r\n    if (!val)\r\n        return new Rect();\r\n    if (val instanceof Rect)\r\n        return val;\r\n\r\n    var tokens = Fayde.splitCommaList(val.toString());\r\n    if (tokens.length === 4) {\r\n        return new Rect(parseFloat(tokens[0]), parseFloat(tokens[1]), parseFloat(tokens[2]), parseFloat(tokens[3]));\r\n    }\r\n    throw new Error(\"Cannot parse Rect value '\" + val + \"'\");\r\n});\r\n","class Size extends minerva.Size {\r\n    Clone (): Size {\r\n        return new Size(this.width, this.height);\r\n    }\r\n}\r\nFayde.CoreLibrary.addPrimitive(Size);\r\n\r\nnullstone.registerTypeConverter(Size, (val: any): Size => {\r\n    if (!val)\r\n        return new Size();\r\n    if (val instanceof Size)\r\n        return <Size>val;\r\n    if (val instanceof minerva.Size)\r\n        return new Size(val.width, val.height);\r\n    var tokens = Fayde.splitCommaList(val.toString());\r\n    if (tokens.length === 2) {\r\n        var w = parseFloat(tokens[0]);\r\n        var h = parseFloat(tokens[1]);\r\n        return new Size(w, h);\r\n    }\r\n    throw new Exception(\"Cannot parse Size value '\" + val + \"'\");\r\n});\r\n","class Thickness extends minerva.Thickness {\r\n    Clone (): Thickness {\r\n        return new Thickness(this.left, this.top, this.right, this.bottom);\r\n    }\r\n\r\n    toString () {\r\n        var l = this.left || 0;\r\n        var t = this.top || 0;\r\n        var r = this.right || 0;\r\n        var b = this.bottom || 0;\r\n        return [l, t, r, b].join(',');\r\n    }\r\n}\r\nFayde.CoreLibrary.addPrimitive(Thickness);\r\n\r\nnullstone.registerTypeConverter(Thickness, (val: any): Thickness => {\r\n    if (!val)\r\n        return new Thickness();\r\n    if (typeof val === \"number\")\r\n        return new Thickness(val, val, val, val);\r\n    if (val instanceof Thickness) {\r\n        var t = <Thickness>val;\r\n        return new Thickness(t.left, t.top, t.right, t.bottom);\r\n    }\r\n    var tokens = Fayde.splitCommaList(val.toString());\r\n    var left, top, right, bottom;\r\n    if (tokens.length === 1) {\r\n        left = top = right = bottom = parseFloat(tokens[0]);\r\n    } else if (tokens.length === 2) {\r\n        left = right = parseFloat(tokens[0]);\r\n        top = bottom = parseFloat(tokens[1]);\r\n    } else if (tokens.length === 4) {\r\n        left = parseFloat(tokens[0]);\r\n        top = parseFloat(tokens[1]);\r\n        right = parseFloat(tokens[2]);\r\n        bottom = parseFloat(tokens[3]);\r\n    } else {\r\n        throw new Exception(\"Cannot parse Thickness value '\" + val + \"'\");\r\n    }\r\n    return new Thickness(left, top, right, bottom);\r\n});\r\n","module Fayde {\r\n    export function splitCommaList (str: string): string[] {\r\n        var tokens: string[] = [];\r\n        for (var i = 0, arr = str.split(' ').join(',').split(','); i < arr.length; i++) {\r\n            var cur = arr[i];\r\n            if (cur)\r\n                tokens.push(cur);\r\n        }\r\n        return tokens;\r\n    }\r\n}","class BError {\r\n    static Argument: number = 2;\r\n    static InvalidOperation: number = 3;\r\n    static XamlParse: number = 5;\r\n    static Attach: number = 6;\r\n    Message: string;\r\n    Number: number;\r\n    Data: any;\r\n    ThrowException() {\r\n        var ex: Exception;\r\n        switch (this.Number) {\r\n            case BError.Attach:\r\n                ex = new AttachException(this.Message, this.Data);\r\n                break;\r\n            case BError.Argument:\r\n                ex = new ArgumentException(this.Message);\r\n                break;\r\n            case BError.InvalidOperation:\r\n                ex = new InvalidOperationException(this.Message);\r\n                break;\r\n            case BError.XamlParse:\r\n                ex = new XamlParseException(this.Message);\r\n                break;\r\n            default:\r\n                ex = new Exception(this.Message);\r\n                break;\r\n        }\r\n        throw ex;\r\n    }\r\n}","module Fayde {\r\n    export function Bootstrap (onLoaded?: (app: Application) => any) {\r\n        var url = document.body.getAttribute(\"fayde-app\");\r\n        if (!url) {\r\n            console.warn(\"No application specified.\");\r\n            return;\r\n        }\r\n\r\n        var canvas: HTMLCanvasElement = document.getElementsByTagName(\"canvas\")[0];\r\n        if (!canvas)\r\n            document.body.appendChild(canvas = document.createElement(\"canvas\"));\r\n\r\n        bootstrap(url, canvas, onLoaded);\r\n    }\r\n\r\n    function bootstrap (url: string, canvas: HTMLCanvasElement, onLoaded: (app: Application) => any) {\r\n        var app: Application;\r\n\r\n        function run () {\r\n            perfex.phases.start('ResolveConfig');\r\n            Fayde.LoadConfigJson((config, err) => {\r\n                if (err)\r\n                    console.warn('Could not load fayde configuration file.', err);\r\n                resolveApp();\r\n            });\r\n        }\r\n\r\n        function resolveApp () {\r\n            perfex.phases.start('ResolveApp');\r\n            Application.GetAsync(url)\r\n                .then(resolveTheme, finishError);\r\n        }\r\n\r\n        function resolveTheme (res) {\r\n            perfex.phases.start('ResolveTheme');\r\n            app = Application.Current = res;\r\n            ThemeManager.LoadAsync(app.ThemeName)\r\n                .then(startApp, finishError);\r\n        }\r\n\r\n        function finishError (err: any) {\r\n            console.error(\"An error occurred retrieving the application.\", err);\r\n        }\r\n\r\n        function startApp () {\r\n            perfex.phases.start('StartApp');\r\n            app.Attach(canvas);\r\n            app.Start();\r\n            loaded();\r\n        }\r\n\r\n        function loaded () {\r\n            onLoaded && onLoaded(app);\r\n            perfex.phases.start('Running');\r\n        }\r\n\r\n        run();\r\n    }\r\n}","module Fayde {\r\n    var jsonFile = 'fayde.json';\r\n\r\n    declare var require;\r\n\r\n    export function LoadConfigJson (onComplete: (config: any, err?: any) => void) {\r\n        require(['text!' + jsonFile],\r\n            (jsontext) => configure(jsontext, onComplete),\r\n            (err) => onComplete(err));\r\n    }\r\n\r\n    function configure (jsontext: string, onComplete: (config: any, err?: any) => void) {\r\n        var json: any;\r\n        try {\r\n            json = JSON.parse(jsontext);\r\n        } catch (err) {\r\n            return onComplete(null, err);\r\n        }\r\n        if (json) {\r\n            libs.configure(json.libs || {});\r\n            themes.configure(json.themes || {});\r\n            debug.configure(json.debug || {});\r\n        }\r\n        onComplete(json);\r\n    }\r\n\r\n    module libs {\r\n        interface ILibraryConfig {\r\n            name: string;\r\n            path: string;\r\n            base: string;\r\n            deps: string[];\r\n            exports: string\r\n            useMin: boolean;\r\n        }\r\n\r\n        export function configure (json) {\r\n            var libs = [];\r\n            for (var libName in json) {\r\n                libs.push(getLibConfig(libName, json[libName]));\r\n            }\r\n\r\n            for (var i = 0; i < libs.length; i++) {\r\n                setupLibraryConfig(libs[i]);\r\n            }\r\n        }\r\n\r\n        function getLibConfig (libName: string, libJson: any): ILibraryConfig {\r\n            return {\r\n                name: libName,\r\n                path: libJson.path,\r\n                base: libJson.base,\r\n                deps: libJson.deps,\r\n                exports: libJson.exports,\r\n                useMin: libJson.useMin\r\n            };\r\n        }\r\n\r\n        function setupLibraryConfig (lib: ILibraryConfig) {\r\n            var uri = new Uri(lib.name);\r\n            if (uri.scheme !== \"http\")\r\n                uri = new Uri(\"lib://\" + lib.name);\r\n            var library = Fayde.TypeManager.resolveLibrary(uri.toString());\r\n            if (!!lib.path)\r\n                library.sourcePath = lib.path;\r\n            if (!!lib.base)\r\n                library.basePath = lib.base;\r\n            if (!!lib.exports)\r\n                library.exports = lib.exports;\r\n            if (!!lib.deps)\r\n                library.deps = lib.deps;\r\n            library.useMin = (lib.useMin === true);\r\n            (<any>library).$configModule();\r\n        }\r\n    }\r\n\r\n    module themes {\r\n        export function configure (json) {\r\n            for (var libName in json) {\r\n                var co = json[libName];\r\n                var path = co === \"none\" ? null : (co.path ? co.path : undefined);\r\n                ThemeConfig.Set(libName, path);\r\n            }\r\n        }\r\n    }\r\n\r\n    module debug {\r\n        export function configure (json) {\r\n            if (toBoolean(json.warnMissingThemes))\r\n                Theme.WarnMissing = true;\r\n            if (toBoolean(json.warnBrokenPath))\r\n                Data.WarnBrokenPath = true;\r\n        }\r\n\r\n        function toBoolean (val: any): boolean {\r\n            return val === \"true\"\r\n                || val === true;\r\n        }\r\n    }\r\n}","\r\nmodule Fayde {\r\n    export module Render {\r\n        export var Debug = false;\r\n        export var DebugIndent = 0;\r\n    }\r\n\r\n    export module Layout {\r\n        export var Debug = false;\r\n        export var DebugIndent = 0;\r\n    }\r\n\r\n    export module Media {\r\n        export module Animation {\r\n            export var Log = false;\r\n            export var LogApply = false;\r\n        }\r\n        export module VSM {\r\n            export var Debug = false;\r\n        }\r\n    }\r\n    export module Data {\r\n        export var Debug = false;\r\n        export var IsCounterEnabled = false;\r\n        export var DataContextCounter = 0;\r\n    }\r\n    export var IsInspectionOn = false;\r\n}","module NumberEx {\r\n    var epsilon: number = 1.192093E-07;\r\n    var adjustment: number = 10;\r\n    export function AreClose(val1: number, val2: number): boolean {\r\n        if (val1 === val2)\r\n            return true;\r\n        var softdiff = (Math.abs(val1) + Math.abs(val2) + adjustment) * epsilon;\r\n        var diff = val1 - val2;\r\n        return -softdiff < diff && diff < softdiff;\r\n    }\r\n    export function IsLessThanClose(val1: number, val2: number): boolean {\r\n        return val1 > val2 || !AreClose(val1, val2);\r\n    }\r\n    export function IsGreaterThanClose(val1: number, val2: number): boolean {\r\n        return val1 > val2 || !AreClose(val1, val2);\r\n    }\r\n}","module StringEx {\r\n    export function Format(format: string, ...items: any[]): string {\r\n        var args = arguments;\r\n        return format.replace(/{(\\d+)}/g, function (match: string, ...matches: any[]): string {\r\n            var i = parseInt(matches[0]);\r\n            return typeof items[i] != 'undefined'\r\n                ? items[i]\r\n                : match;\r\n        });\r\n    }\r\n}","interface ITimelineEvent {\r\n    Type: string;\r\n    Name: string;\r\n    Time: number;\r\n}\r\n\r\ninterface ITimelineGroup {\r\n    Type: string;\r\n    Data: string;\r\n    Start: number;\r\n    Length: number;\r\n}\r\n\r\nclass TimelineProfile {\r\n    private static _Events: ITimelineEvent[] = [];\r\n    static Groups: ITimelineGroup[] = [];\r\n    static TimelineStart: number = 0;\r\n\r\n    static IsNextLayoutPassProfiled: boolean = true;\r\n\r\n    static Parse(isStart: boolean, name: string) {\r\n        if (!isStart)\r\n            return TimelineProfile._FinishEvent(\"Parse\", name);\r\n        TimelineProfile._Events.push({\r\n            Type: \"Parse\",\r\n            Name: name,\r\n            Time: new Date().valueOf()\r\n        });\r\n    }\r\n    static Navigate(isStart: boolean, name?: string) {\r\n        if (!isStart)\r\n            return TimelineProfile._FinishEvent(\"Navigate\", name);\r\n        TimelineProfile._Events.push({\r\n            Type: \"Navigate\",\r\n            Name: name,\r\n            Time: new Date().valueOf(),\r\n        });\r\n    }\r\n    static LayoutPass(isStart: boolean) {\r\n        if (!TimelineProfile.IsNextLayoutPassProfiled)\r\n            return;\r\n        if (!isStart) {\r\n            TimelineProfile.IsNextLayoutPassProfiled = false;\r\n            return TimelineProfile._FinishEvent(\"LayoutPass\");\r\n        }\r\n        TimelineProfile._Events.push({\r\n            Type: \"LayoutPass\",\r\n            Name: \"\",\r\n            Time: new Date().valueOf(),\r\n        });\r\n    }\r\n\r\n    private static _FinishEvent(type: string, name?: string) {\r\n        var evts = TimelineProfile._Events;\r\n        var len = evts.length;\r\n        var evt: ITimelineEvent;\r\n        for (var i = len - 1; i >= 0; i--) {\r\n            evt = evts[i];\r\n            if (evt.Type === type && (!name || evt.Name === name)) {\r\n                evts.splice(i, 1);\r\n                break;\r\n            }\r\n            evt = null;\r\n        }\r\n        if (!evt)\r\n            return;\r\n        TimelineProfile.Groups.push({\r\n            Type: evt.Type,\r\n            Data: evt.Name,\r\n            Start: evt.Time - TimelineProfile.TimelineStart,\r\n            Length: new Date().valueOf() - evt.Time\r\n        });\r\n    }\r\n}\r\nTimelineProfile.TimelineStart = new Date().valueOf();","/// <reference path=\"../Core/XamlObjectCollection.ts\" />\r\n\r\nmodule Fayde.Shapes {\r\n    export class DoubleCollection extends XamlObjectCollection<XamlObject> {\r\n    }\r\n    Fayde.CoreLibrary.add(DoubleCollection);\r\n}","/// <reference path=\"../Core/FrameworkElement.ts\" />\r\n\r\nmodule Fayde.Shapes {\r\n    import ShapeUpdater = minerva.shapes.shape.ShapeUpdater;\r\n\r\n    export class Shape extends FrameworkElement {\r\n        CreateLayoutUpdater () {\r\n            return new ShapeUpdater();\r\n        }\r\n\r\n        static FillProperty = DependencyProperty.Register(\"Fill\", () => Media.Brush, Shape);\r\n        //http://msdn.microsoft.com/en-us/library/system.windows.shapes.shape.stretch(v=vs.95).aspx\r\n        static StretchProperty = DependencyProperty.Register(\"Stretch\", () => new Enum(Media.Stretch), Shape, Media.Stretch.None);\r\n        static StrokeProperty = DependencyProperty.Register(\"Stroke\", () => Media.Brush, Shape);\r\n        static StrokeThicknessProperty = DependencyProperty.RegisterFull(\"StrokeThickness\", () => Number, Shape, 1.0, undefined, strokeThicknessCoercer);\r\n        static StrokeDashArrayProperty = DependencyProperty.Register(\"StrokeDashArray\", () => DoubleCollection, Shape);\r\n        static StrokeDashCapProperty = DependencyProperty.Register(\"StrokeDashCap\", () => new Enum(PenLineCap), Shape, PenLineCap.Flat);\r\n        static StrokeDashOffsetProperty = DependencyProperty.Register(\"StrokeDashOffset\", () => Number, Shape, 0.0);\r\n        static StrokeEndLineCapProperty = DependencyProperty.Register(\"StrokeEndLineCap\", () => new Enum(PenLineCap), Shape, PenLineCap.Flat);\r\n        static StrokeLineJoinProperty = DependencyProperty.Register(\"StrokeLineJoin\", () => new Enum(PenLineJoin), Shape, PenLineJoin.Miter);\r\n        static StrokeMiterLimitProperty = DependencyProperty.Register(\"StrokeMiterLimit\", () => Number, Shape, 10.0);\r\n        static StrokeStartLineCapProperty = DependencyProperty.Register(\"StrokeStartLineCap\", () => new Enum(PenLineCap), Shape, PenLineCap.Flat);\r\n        Fill: Media.Brush;\r\n        Stretch: Media.Stretch;\r\n        Stroke: Media.Brush;\r\n        StrokeThickness: number;\r\n        StrokeDashArray: DoubleCollection;\r\n        StrokeDashCap: PenLineCap;\r\n        StrokeDashOffset: number;\r\n        StrokeEndLineCap: PenLineCap;\r\n        StrokeLineJoin: PenLineJoin;\r\n        StrokeMiterLimit: number;\r\n        StrokeStartLineCap: PenLineCap;\r\n        //NOTE: HTML5 Canvas does not support start and end cap. Will use start if it's not \"Flat\"; otherwise, use end\r\n\r\n        constructor () {\r\n            super();\r\n            FrameworkElement.WidthProperty.Store.ListenToChanged(this, FrameworkElement.WidthProperty, onSizeChanged, this);\r\n            FrameworkElement.HeightProperty.Store.ListenToChanged(this, FrameworkElement.HeightProperty, onSizeChanged, this);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Shape);\r\n\r\n    function onSizeChanged (shape: Shape, args: IDependencyPropertyChangedEventArgs) {\r\n        var updater = <ShapeUpdater>shape.XamlNode.LayoutUpdater;\r\n        updater.invalidateMeasure();\r\n    }\r\n\r\n    function strokeThicknessCoercer (dobj: Fayde.DependencyObject, propd: DependencyProperty, value: any): any {\r\n        if (value instanceof Thickness)\r\n            return (<Thickness>value).left;\r\n        return value;\r\n    }\r\n\r\n    module reactions {\r\n        UIReaction<Media.Stretch>(Shape.StretchProperty, (upd: ShapeUpdater, ov, nv) => upd.invalidateMeasure(), false);\r\n        UIReaction<Media.Brush>(Shape.FillProperty, (upd: ShapeUpdater, ov, nv) => upd.invalidateNaturalBounds());\r\n        UIReaction<Media.Brush>(Shape.StrokeProperty, (upd: ShapeUpdater, ov, nv) => upd.invalidateNaturalBounds());\r\n        UIReaction<number>(Shape.StrokeThicknessProperty, (upd: ShapeUpdater, ov, nv) => upd.invalidateNaturalBounds(), false);\r\n        UIReaction<DoubleCollection>(Shape.StrokeDashArrayProperty, (upd: ShapeUpdater, ov, nv) => upd.invalidateNaturalBounds());\r\n        UIReaction<PenLineCap>(Shape.StrokeDashCapProperty, (upd: ShapeUpdater, ov, nv) => upd.invalidateNaturalBounds(), false);\r\n        UIReaction<number>(Shape.StrokeDashOffsetProperty, (upd: ShapeUpdater, ov, nv) => upd.invalidateNaturalBounds(), false);\r\n        UIReaction<PenLineCap>(Shape.StrokeEndLineCapProperty, (upd: ShapeUpdater, ov, nv) => upd.invalidateNaturalBounds(), false);\r\n        UIReaction<PenLineJoin>(Shape.StrokeLineJoinProperty, (upd: ShapeUpdater, ov, nv) => upd.invalidateNaturalBounds(), false);\r\n        UIReaction<number>(Shape.StrokeMiterLimitProperty, (upd: ShapeUpdater, ov, nv) => upd.invalidateNaturalBounds(), false);\r\n        UIReaction<PenLineCap>(Shape.StrokeStartLineCapProperty, (upd: ShapeUpdater, ov, nv) => upd.invalidateNaturalBounds(), false);\r\n    }\r\n}","/// <reference path=\"Shape.ts\" />\r\n\r\nmodule Fayde.Shapes {\r\n    import EllipseUpdater = minerva.shapes.ellipse.EllipseUpdater;\r\n\r\n    export class Ellipse extends Shape {\r\n        CreateLayoutUpdater () {\r\n            return new EllipseUpdater();\r\n        }\r\n\r\n        constructor () {\r\n            super();\r\n            this.Stretch = Media.Stretch.Fill;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Ellipse);\r\n}","/// <reference path=\"Shape.ts\" />\r\n\r\nmodule Fayde.Shapes {\r\n    import LineUpdater = minerva.shapes.line.LineUpdater;\r\n    export class Line extends Shape {\r\n        CreateLayoutUpdater () {\r\n            return new LineUpdater();\r\n        }\r\n\r\n        static X1Property = DependencyProperty.Register(\"X1\", () => Number, Line, 0.0);\r\n        static Y1Property = DependencyProperty.Register(\"Y1\", () => Number, Line, 0.0);\r\n        static X2Property = DependencyProperty.Register(\"X2\", () => Number, Line, 0.0);\r\n        static Y2Property = DependencyProperty.Register(\"Y2\", () => Number, Line, 0.0);\r\n        X1: number;\r\n        Y1: number;\r\n        X2: number;\r\n        Y2: number;\r\n    }\r\n    Fayde.CoreLibrary.add(Line);\r\n\r\n    module reactions {\r\n        UIReaction<number>(Line.X1Property, (upd: LineUpdater, ov, nv) => upd.invalidatePath(), false);\r\n        UIReaction<number>(Line.Y1Property, (upd: LineUpdater, ov, nv) => upd.invalidatePath(), false);\r\n        UIReaction<number>(Line.X2Property, (upd: LineUpdater, ov, nv) => upd.invalidatePath(), false);\r\n        UIReaction<number>(Line.Y2Property, (upd: LineUpdater, ov, nv) => upd.invalidatePath(), false);\r\n    }\r\n}","/// <reference path=\"Shape.ts\" />\r\n\r\nmodule Fayde.Shapes {\r\n    import PathUpdater = minerva.shapes.path.PathUpdater;\r\n    export class Path extends Shape {\r\n        CreateLayoutUpdater () { return new PathUpdater(); }\r\n\r\n        private static _DataCoercer (dobj: DependencyObject, propd: DependencyProperty, value: any): any {\r\n            if (typeof value === \"string\")\r\n                return Media.ParseGeometry(value);\r\n            return value;\r\n        }\r\n\r\n        // Path.Data Description: http://msdn.microsoft.com/en-us/library/system.windows.shapes.path.data(v=vs.95).aspx\r\n        static DataProperty = DependencyProperty.RegisterFull(\"Data\", () => Media.Geometry, Path, undefined, undefined, Path._DataCoercer, undefined, undefined, false);\r\n        Data: Media.Geometry;\r\n    }\r\n    Fayde.CoreLibrary.add(Path);\r\n\r\n    module reactions {\r\n        UIReaction<Media.Geometry>(Path.DataProperty, (upd: PathUpdater, ov, nv) => upd.invalidateNaturalBounds());\r\n    }\r\n}","/// <reference path=\"../Core/XamlObjectCollection.ts\" />\r\n\r\nmodule Fayde.Shapes {\r\n    export class PointCollection implements nullstone.ICollection<Point> {\r\n        private _ht: Point[] = [];\r\n\r\n        get Count () {\r\n            return this._ht.length;\r\n        }\r\n\r\n        static FromData (data: string): PointCollection {\r\n            var pc = new PointCollection();\r\n            pc._ht = pc._ht.concat(Media.ParseShapePoints(data));\r\n            return pc;\r\n        }\r\n\r\n        static FromArray (data: Point[]): PointCollection {\r\n            var pc = new PointCollection();\r\n            pc._ht = pc._ht.concat(data);\r\n            return pc;\r\n        }\r\n\r\n        GetValueAt (index: number): Point {\r\n            return this._ht[index];\r\n        }\r\n\r\n        SetValueAt (index: number, value: Point): boolean {\r\n            if (index < 0 || index >= this._ht.length)\r\n                return false;\r\n            var removed = this._ht[index];\r\n            var added = value;\r\n            this._ht[index] = added;\r\n\r\n            Incite(this);\r\n        }\r\n\r\n        Add (value: Point) {\r\n            this._ht.push(value);\r\n            Incite(this);\r\n        }\r\n\r\n        AddRange (points: Point[]) {\r\n            this._ht.push.apply(this._ht, points);\r\n            Incite(this);\r\n        }\r\n\r\n        Insert (index: number, value: Point) {\r\n            if (index < 0)\r\n                return;\r\n            var len = this._ht.length;\r\n            if (index > len)\r\n                index = len;\r\n            this._ht.splice(index, 0, value);\r\n            Incite(this);\r\n        }\r\n\r\n        Remove (value: Point): boolean {\r\n            var index = this.IndexOf(value);\r\n            if (index === -1)\r\n                return false;\r\n            this.RemoveAt(index);\r\n            Incite(this);\r\n            return true;\r\n        }\r\n\r\n        RemoveAt (index: number) {\r\n            if (index < 0 || index >= this._ht.length)\r\n                return;\r\n            var value = this._ht.splice(index, 1)[0];\r\n            Incite(this);\r\n        }\r\n\r\n        Clear () {\r\n            this._ht = [];\r\n            Incite(this);\r\n        }\r\n\r\n        IndexOf (value: Point): number {\r\n            var count = this._ht.length;\r\n            for (var i = 0; i < count; i++) {\r\n                if (nullstone.equals(value, this._ht[i]))\r\n                    return i;\r\n            }\r\n            return -1;\r\n        }\r\n\r\n        Contains (value: Point): boolean {\r\n            return this.IndexOf(value) > -1;\r\n        }\r\n\r\n        getEnumerator (reverse?: boolean): nullstone.IEnumerator<Point> {\r\n            return nullstone.IEnumerator_.fromArray(this._ht, reverse);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(PointCollection);\r\n    nullstone.ICollection_.mark(PointCollection);\r\n\r\n    nullstone.registerTypeConverter(PointCollection, (val: string): PointCollection => {\r\n        var pc = new PointCollection();\r\n        pc.AddRange(Fayde.Media.ParseShapePoints(val));\r\n        return pc;\r\n    });\r\n}","/// <reference path=\"Shape.ts\" />\r\n\r\nmodule Fayde.Shapes {\r\n    import PolygonUpdater = minerva.shapes.polygon.PolygonUpdater;\r\n    export class Polygon extends Shape {\r\n        CreateLayoutUpdater () {\r\n            return new PolygonUpdater();\r\n        }\r\n\r\n        private static _PointsCoercer (dobj: DependencyObject, propd: DependencyProperty, value: any): any {\r\n            if (typeof value === \"string\")\r\n                value = PointCollection.FromData(<string>value);\r\n            if (value instanceof Array)\r\n                value = PointCollection.FromArray(<Point[]>value);\r\n            return value;\r\n        }\r\n\r\n        static FillRuleProperty = DependencyProperty.RegisterCore(\"FillRule\", () => new Enum(FillRule), Polygon, FillRule.EvenOdd);\r\n        static PointsProperty = DependencyProperty.RegisterFull(\"Points\", () => PointCollection, Polygon, undefined, undefined, Polygon._PointsCoercer);\r\n        FillRule: FillRule;\r\n        Points: PointCollection;\r\n\r\n        constructor () {\r\n            super();\r\n            this.Points = new PointCollection();\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Polygon);\r\n\r\n    module reactions {\r\n        UIReaction<FillRule>(Polygon.FillRuleProperty, (upd: PolygonUpdater, ov, nv) => upd.invalidateFillRule(), false);\r\n        UIReaction<PointCollection>(Polygon.PointsProperty, (upd: PolygonUpdater, ov, nv) => {\r\n            upd.assets.points = nv._ht;\r\n            upd.invalidatePath();\r\n        }, true, false);\r\n    }\r\n}","/// <reference path=\"Shape.ts\" />\r\n\r\nmodule Fayde.Shapes {\r\n    import PolylineUpdater = minerva.shapes.polyline.PolylineUpdater;\r\n    export class Polyline extends Shape {\r\n        CreateLayoutUpdater () {\r\n            return new PolylineUpdater();\r\n        }\r\n\r\n        private static _PointsCoercer (d: DependencyObject, propd: DependencyProperty, value: any): any {\r\n            if (typeof value === \"string\")\r\n                value = PointCollection.FromData(<string>value);\r\n            if (value instanceof Array)\r\n                value = PointCollection.FromArray(<Point[]>value);\r\n            return value;\r\n        }\r\n\r\n        static FillRuleProperty = DependencyProperty.RegisterCore(\"FillRule\", () => new Enum(FillRule), Polyline, FillRule.EvenOdd);\r\n        static PointsProperty = DependencyProperty.RegisterFull(\"Points\", () => PointCollection, Polyline, undefined, undefined, Polyline._PointsCoercer);\r\n        FillRule: FillRule;\r\n        Points: PointCollection;\r\n\r\n        constructor () {\r\n            super();\r\n            this.Points = new PointCollection();\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Polyline);\r\n\r\n    module reactions {\r\n        UIReaction<FillRule>(Polyline.FillRuleProperty, (upd: PolylineUpdater, ov, nv) => upd.invalidateFillRule(), false);\r\n        UIReaction<PointCollection>(Polyline.PointsProperty, (upd: PolylineUpdater, ov, nv) => {\r\n            upd.assets.points = nv._ht;\r\n            upd.invalidatePath();\r\n        }, true, false);\r\n    }\r\n}","/// <reference path=\"Shape.ts\" />\r\n\r\nmodule Fayde.Shapes {\r\n    import RectangleUpdater = minerva.shapes.rectangle.RectangleUpdater;\r\n\r\n    export class Rectangle extends Shape {\r\n        CreateLayoutUpdater () {\r\n            return new RectangleUpdater();\r\n        }\r\n\r\n        /* RadiusX/RadiusY Notes\r\n         For the rectangle to have rounded corners, both the RadiusX and RadiusY properties must be nonzero.\r\n         A value greater than or equal to zero and less than or equal to half the rectangle's width that describes the x-radius of the ellipse is used to round the corners of the rectangle.\r\n         Values greater than half the rectangle's width are treated as though equal to half the rectangle's width. Negative values are treated as positive values.\r\n         */\r\n        static RadiusXProperty = DependencyProperty.Register(\"RadiusX\", () => Number, Rectangle, 0.0);\r\n        static RadiusYProperty = DependencyProperty.Register(\"RadiusY\", () => Number, Rectangle, 0.0);\r\n        RadiusX: number;\r\n        RadiusY: number;\r\n\r\n        constructor () {\r\n            super();\r\n            this.Stretch = Fayde.Media.Stretch.Fill;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Rectangle);\r\n\r\n    module reactions {\r\n        UIReaction<number>(Rectangle.RadiusXProperty, (upd, ov, nv) => upd.invalidate(), false);\r\n        UIReaction<number>(Rectangle.RadiusYProperty, (upd, ov, nv) => upd.invalidate(), false);\r\n    }\r\n}","module Fayde.Text.Buffer {\r\n    export function cut (text: string, start: number, len: number): string {\r\n        if (!text)\r\n            return \"\";\r\n        return text.slice(0, start) + text.slice(start + len);\r\n    }\r\n\r\n    export function insert (text: string, index: number, str: string): string {\r\n        if (!text)\r\n            return str;\r\n        return [text.slice(0, index), str, text.slice(index)].join('');\r\n    }\r\n\r\n    export function replace (text: string, start: number, len: number, str: string): string {\r\n        if (!text)\r\n            return str;\r\n        return [text.slice(0, start), str, text.slice(start + len)].join('');\r\n    }\r\n}\r\n","module Fayde.Text {\r\n    export enum EmitChangedType {\r\n        NOTHING = 0,\r\n        SELECTION = 1 << 0,\r\n        TEXT = 1 << 1,\r\n    }\r\n\r\n    export class Proxy implements ITextOwner {\r\n        selAnchor: number = 0;\r\n        selCursor: number = 0;\r\n        selText: string = \"\";\r\n        text: string = \"\";\r\n        maxLength: number = 0;\r\n        acceptsReturn: boolean = false;\r\n\r\n        private $$batch: number = 0;\r\n        private $$emit = EmitChangedType.NOTHING;\r\n        private $$syncing: boolean = false;\r\n        private $$eventsMask: EmitChangedType;\r\n\r\n        private $$history: Text.History.Tracker;\r\n\r\n        SyncSelectionStart: (value: number) => void;\r\n        SyncSelectionLength: (value: number) => void;\r\n        SyncText: (value: string) => void;\r\n\r\n        constructor (eventsMask: EmitChangedType, maxUndoCount: number) {\r\n            this.$$eventsMask = eventsMask;\r\n            this.$$history = new Text.History.Tracker(maxUndoCount);\r\n            this.SyncSelectionStart = (value: number) => {\r\n            };\r\n            this.SyncSelectionLength = (value: number) => {\r\n            };\r\n            this.SyncText = (value: string) => {\r\n            };\r\n        }\r\n\r\n        setAnchorCursor (anchor: number, cursor: number): boolean {\r\n            if (this.selAnchor === anchor && this.selCursor === cursor)\r\n                return false;\r\n            this.SyncSelectionStart(Math.min(anchor, cursor));\r\n            this.SyncSelectionLength(Math.abs(cursor - anchor));\r\n            this.selAnchor = anchor;\r\n            this.selCursor = cursor;\r\n            this.$$emit |= EmitChangedType.SELECTION;\r\n            return true;\r\n        }\r\n\r\n        enterText (newText: string): boolean {\r\n            var anchor = this.selAnchor;\r\n            var cursor = this.selCursor;\r\n            var length = Math.abs(cursor - anchor);\r\n            var start = Math.min(anchor, cursor);\r\n\r\n            if ((this.maxLength > 0 && this.text.length >= this.maxLength) || (newText === '\\r') && !this.acceptsReturn)\r\n                return false;\r\n\r\n            if (length > 0) {\r\n                this.$$history.replace(anchor, cursor, this.text, start, length, newText);\r\n                this.text = Text.Buffer.replace(this.text, start, length, newText);\r\n            } else {\r\n                this.$$history.enter(anchor, cursor, start, newText);\r\n                this.text = Text.Buffer.insert(this.text, start, newText);\r\n            }\r\n\r\n            this.$$emit |= EmitChangedType.TEXT;\r\n            cursor = start + 1;\r\n            anchor = cursor;\r\n\r\n            return this.setAnchorCursor(anchor, cursor);\r\n        }\r\n\r\n        removeText (start: number, length: number): boolean {\r\n            if (length <= 0)\r\n                return false;\r\n\r\n            this.$$history.delete(this.selAnchor, this.selCursor, this.text, start, length);\r\n            this.text = Text.Buffer.cut(this.text, start, length);\r\n\r\n            this.$$emit |= EmitChangedType.TEXT;\r\n\r\n            return this.setAnchorCursor(start, start);\r\n        }\r\n\r\n        undo () {\r\n            var action = this.$$history.undo(this);\r\n            if (!action)\r\n                return;\r\n\r\n            var anchor = action.SelectionAnchor;\r\n            var cursor = action.SelectionCursor;\r\n\r\n            this.$$batch++;\r\n            this.SyncSelectionStart(Math.min(anchor, cursor));\r\n            this.SyncSelectionLength(Math.abs(cursor - anchor));\r\n            this.$$emit = EmitChangedType.TEXT | EmitChangedType.SELECTION;\r\n            this.selAnchor = anchor;\r\n            this.selCursor = cursor;\r\n            this.$$batch--;\r\n\r\n            this.$syncEmit();\r\n        }\r\n\r\n        redo () {\r\n            var anchor = this.$$history.redo(this);\r\n            if (anchor == null)\r\n                return;\r\n            var cursor = anchor;\r\n\r\n            this.$$batch++;\r\n            this.SyncSelectionStart(Math.min(anchor, cursor));\r\n            this.SyncSelectionLength(Math.abs(cursor - anchor));\r\n            this.$$emit = EmitChangedType.TEXT | EmitChangedType.SELECTION;\r\n            this.selAnchor = anchor;\r\n            this.selCursor = cursor;\r\n            this.$$batch--;\r\n\r\n            this.$syncEmit();\r\n        }\r\n\r\n        begin () {\r\n            this.$$emit = EmitChangedType.NOTHING;\r\n            this.$$batch++;\r\n        }\r\n\r\n        end () {\r\n            this.$$batch--;\r\n            this.$syncEmit();\r\n        }\r\n\r\n        beginSelect (cursor: number) {\r\n            this.$$batch++;\r\n            this.$$emit = EmitChangedType.NOTHING;\r\n            this.SyncSelectionStart(cursor);\r\n            this.SyncSelectionLength(0);\r\n            this.$$batch--;\r\n\r\n            this.$syncEmit();\r\n        }\r\n\r\n        adjustSelection (cursor: number) {\r\n            var anchor = this.selAnchor;\r\n\r\n            this.$$batch++;\r\n            this.$$emit = EmitChangedType.NOTHING;\r\n            this.SyncSelectionStart(Math.min(anchor, cursor));\r\n            this.SyncSelectionLength(Math.abs(cursor - anchor));\r\n            this.selAnchor = anchor;\r\n            this.selCursor = cursor;\r\n            this.$$batch--;\r\n\r\n            this.$syncEmit();\r\n        }\r\n\r\n        selectAll () {\r\n            this.select(0, this.text.length);\r\n        }\r\n\r\n        clearSelection (start: number) {\r\n            this.$$batch++;\r\n            this.SyncSelectionStart(start);\r\n            this.SyncSelectionLength(0);\r\n            this.$$batch--;\r\n        }\r\n\r\n        select (start: number, length: number): boolean {\r\n            start = Math.min(Math.max(0, start), this.text.length);\r\n            length = Math.min(Math.max(0, length), this.text.length - start);\r\n\r\n            this.$$batch++;\r\n            this.SyncSelectionStart(start);\r\n            this.SyncSelectionLength(length);\r\n            this.$$batch--;\r\n\r\n            this.$syncEmit();\r\n            return true;\r\n        }\r\n\r\n        setSelectionStart (value: number) {\r\n            var length = Math.abs(this.selCursor - this.selAnchor);\r\n            var start = value;\r\n            if (start > this.text.length) {\r\n                this.SyncSelectionStart(this.text.length);\r\n                return;\r\n            }\r\n\r\n            if (start + length > this.text.length) {\r\n                this.$$batch++;\r\n                length = this.text.length - start;\r\n                this.SyncSelectionLength(length);\r\n                this.$$batch--;\r\n            }\r\n\r\n            var changed = (this.selAnchor !== start);\r\n\r\n            this.selCursor = start + length;\r\n            this.selAnchor = start;\r\n\r\n            this.$$emit |= EmitChangedType.SELECTION;\r\n            this.$syncEmit();\r\n        }\r\n\r\n        setSelectionLength (value: number) {\r\n            var start = Math.min(this.selAnchor, this.selCursor);\r\n            var length = value;\r\n            if (start + length > this.text.length) {\r\n                length = this.text.length - start;\r\n                this.SyncSelectionLength(length);\r\n                return;\r\n            }\r\n\r\n            var changed = (this.selCursor !== (start + length));\r\n\r\n            this.selCursor = start + length;\r\n            this.selAnchor = start;\r\n            this.$$emit |= EmitChangedType.SELECTION;\r\n            this.$syncEmit();\r\n        }\r\n\r\n        setText (value: string) {\r\n            var text = value || \"\";\r\n            if (!this.$$syncing) {\r\n                if (this.text.length > 0) {\r\n                    this.$$history.replace(this.selAnchor, this.selCursor, this.text, 0, this.text.length, text);\r\n                    this.text = Text.Buffer.replace(this.text, 0, this.text.length, text);\r\n                } else {\r\n                    this.$$history.insert(this.selAnchor, this.selCursor, 0, text);\r\n                    this.text = text + this.text;\r\n                }\r\n\r\n                this.$$emit |= EmitChangedType.TEXT;\r\n                this.clearSelection(0);\r\n\r\n                this.$syncEmit(false);\r\n            }\r\n        }\r\n\r\n        private $syncEmit (syncText?: boolean) {\r\n            syncText = syncText !== false;\r\n\r\n            if (this.$$batch !== 0 || this.$$emit === EmitChangedType.NOTHING)\r\n                return;\r\n\r\n            if (syncText && (this.$$emit & EmitChangedType.TEXT))\r\n                this.$syncText();\r\n\r\n            /*\r\n             this.$$emit &= this.$$eventsMask;\r\n             if (this.$$emit & TextBoxEmitChangedType.TEXT) {\r\n             Incite(this, { type: 'text' });\r\n             }\r\n             if (this.$$emit & TextBoxEmitChangedType.SELECTION) {\r\n             Incite(this, { type: 'selection' });\r\n             }\r\n             */\r\n\r\n            this.$$emit = EmitChangedType.NOTHING;\r\n        }\r\n\r\n        private $syncText () {\r\n            this.$$syncing = true;\r\n            this.SyncText(this.text);\r\n            this.$$syncing = false;\r\n        }\r\n    }\r\n}","module Fayde.Validation {\r\n    export function Emit (fe: FrameworkElement, binding: Data.Binding, oldError: ValidationError, error: ValidationError) {\r\n        if (oldError && error) {\r\n            AddError(fe, error);\r\n            RemoveError(fe, oldError);\r\n            if (binding.NotifyOnValidationError) {\r\n                raiseBindingValidationError(fe, new ValidationErrorEventArgs(ValidationErrorEventAction.Removed, oldError));\r\n                raiseBindingValidationError(fe, new ValidationErrorEventArgs(ValidationErrorEventAction.Added, error));\r\n            }\r\n        } else if (oldError) {\r\n            RemoveError(fe, oldError);\r\n            if (binding.NotifyOnValidationError)\r\n                raiseBindingValidationError(fe, new ValidationErrorEventArgs(ValidationErrorEventAction.Removed, oldError));\r\n        } else if (error) {\r\n            AddError(fe, error);\r\n            if (binding.NotifyOnValidationError)\r\n                raiseBindingValidationError(fe, new ValidationErrorEventArgs(ValidationErrorEventAction.Added, error));\r\n        }\r\n    }\r\n\r\n    function raiseBindingValidationError (fe: FrameworkElement, args: Validation.ValidationErrorEventArgs) {\r\n        args.OriginalSource = fe;\r\n        for (var cur = <DependencyObject>fe; cur && !args.Handled; cur = VisualTreeHelper.GetParent(cur)) {\r\n            if (cur instanceof FrameworkElement)\r\n                (<FrameworkElement>cur).OnBindingValidationError(args);\r\n        }\r\n    }\r\n}","/// <reference path=\"../Collections/ObservableCollection\" />\r\n/// <reference path=\"../Collections/ReadOnlyObservableCollection\" />\r\n\r\nmodule Fayde.Validation {\r\n    import ObservableCollection = Collections.ObservableCollection;\r\n    import ReadOnlyObservableCollection = Collections.ReadOnlyObservableCollection;\r\n\r\n    class Validation extends DependencyObject {\r\n    }\r\n    Fayde.CoreLibrary.add(Validation, \"Validation\");\r\n\r\n    export var HasErrorProperty = DependencyProperty.RegisterAttached(\"HasError\", () => Boolean, Validation);\r\n    export var ErrorsProperty = DependencyProperty.RegisterAttached(\"Errors\", () => ReadOnlyObservableCollection, Validation);\r\n    var ErrorsCoreProperty = DependencyProperty.RegisterAttached(\"ErrorsCore\", () => ObservableCollection, Validation);\r\n\r\n    function GetErrorsCore (dobj: DependencyObject) {\r\n        if (!dobj)\r\n            throw new ArgumentNullException(\"element\");\r\n\r\n        var result: ObservableCollection<ValidationError> = dobj.GetValue(ErrorsCoreProperty);\r\n        if (result == null) {\r\n            result = new ObservableCollection<ValidationError>();\r\n            dobj.SetValue(ErrorsCoreProperty, result);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    export function GetErrors (dobj: DependencyObject): ReadOnlyObservableCollection<ValidationError> {\r\n        if (!dobj)\r\n            throw new ArgumentNullException(\"element\");\r\n\r\n        var result: ReadOnlyObservableCollection<ValidationError> = dobj.GetValue(ErrorsProperty);\r\n        if (result == null) {\r\n            result = new ReadOnlyObservableCollection<ValidationError>(GetErrorsCore(dobj));\r\n            dobj.SetValue(ErrorsProperty, result);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    export function GetHasError (dobj: DependencyObject): boolean {\r\n        if (dobj == null)\r\n            throw new ArgumentNullException(\"element\");\r\n        return dobj.GetValue(HasErrorProperty) === true;\r\n    }\r\n\r\n    function SetHasError (dobj: DependencyObject, value: boolean) {\r\n        dobj.SetValue(HasErrorProperty, value === true);\r\n    }\r\n\r\n    export function AddError (element: FrameworkElement, error: ValidationError) {\r\n        var errors = GetErrorsCore(element);\r\n        GetErrors(element); //ensure Validation.Errors gets created\r\n        errors.Add(error);\r\n        if (errors.Count === 1)\r\n            SetHasError(element, true);\r\n\r\n        if (element instanceof Controls.Control)\r\n            (<Controls.Control>element).UpdateValidationState(false);\r\n    }\r\n\r\n    export function RemoveError (element: FrameworkElement, error: ValidationError) {\r\n        var errors = GetErrorsCore(element);\r\n        GetErrors(element); //ensure Validation.Errors gets created\r\n        if (errors.Remove(error)) {\r\n            if (errors.Count === 0) {\r\n                SetHasError(element, false);\r\n                if (element instanceof Controls.Control)\r\n                    (<Controls.Control>element).UpdateValidationState(true);\r\n            }\r\n        }\r\n    }\r\n}","module Fayde.Validation {\r\n    export class ValidationError {\r\n        ErrorContent: any;\r\n        Exception: Exception;\r\n        PropertyName: string;\r\n\r\n        constructor (content: any, exception: Exception, propertyName: string);\r\n        constructor (content: any, exception: Error, propertyName: string);\r\n        constructor (content: any, exception: any, propertyName: string) {\r\n            this.ErrorContent = content;\r\n            this.Exception = exception;\r\n            this.PropertyName = propertyName;\r\n            if (this.Exception instanceof Exception)\r\n                this.ErrorContent = this.ErrorContent || (<Exception>exception).Message;\r\n            if (this.Exception instanceof Error)\r\n                this.ErrorContent = this.ErrorContent || (<Error>exception).message;\r\n            Object.freeze(this);\r\n        }\r\n    }\r\n}","module Fayde.Validation {\r\n    export enum ValidationErrorEventAction {\r\n        Added,\r\n        Removed\r\n    }\r\n}","module Fayde.Validation {\r\n    export class ValidationErrorEventArgs extends RoutedEventArgs {\r\n        Action: ValidationErrorEventAction;\r\n        Error: ValidationError;\r\n\r\n        constructor (action: ValidationErrorEventAction, error: ValidationError) {\r\n            super();\r\n            Object.defineProperties(this, {\r\n                \"Action\": {\r\n                    value: action,\r\n                    writable: false\r\n                },\r\n                \"Error\": {\r\n                    value: error,\r\n                    writable: false\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","module Fayde.Controls.Internal {\r\n    export interface ICursorAdvancer {\r\n        CursorDown(cursor: number, isPage: boolean): number;\r\n        CursorUp(cursor: number, isPage: boolean): number;\r\n        CursorNextWord(cursor: number): number;\r\n        CursorPrevWord(cursor: number): number;\r\n        CursorNextChar(cursor: number): number;\r\n        CursorPrevChar(cursor: number): number;\r\n        CursorLineBegin(cursor: number): number;\r\n        CursorLineEnd(cursor: number): number;\r\n        CursorBegin(cursor: number): number;\r\n        CursorEnd(cursor: number): number;\r\n    }\r\n\r\n    export class TextBoxCursorAdvancer implements ICursorAdvancer {\r\n        constructor (private $textOwner: Text.ITextOwner) {\r\n        }\r\n\r\n        CursorDown (cursor: number, isPage: boolean): number {\r\n            //TODO:\r\n            return cursor;\r\n        }\r\n\r\n        CursorUp (cursor: number, isPage: boolean): number {\r\n            //TODO:\r\n            return cursor;\r\n        }\r\n\r\n        CursorNextWord (cursor: number): number {\r\n            //TODO:\r\n            return cursor;\r\n        }\r\n\r\n        CursorPrevWord (cursor: number): number {\r\n            //TODO:\r\n            return cursor;\r\n        }\r\n\r\n        CursorNextChar (cursor: number): number {\r\n            var text = this.$textOwner.text;\r\n            if (text && text.charAt(cursor) === '\\r' && text.charAt(cursor + 1) === '\\n')\r\n                return cursor + 2;\r\n            return Math.min(text.length, cursor + 1);\r\n        }\r\n\r\n        CursorPrevChar (cursor: number): number {\r\n            var text = this.$textOwner.text;\r\n            if (cursor >= 2 && text && text.charAt(cursor - 2) === '\\r' && text.charAt(cursor - 1) === '\\n')\r\n                return cursor - 2;\r\n            return Math.max(0, cursor - 1);\r\n        }\r\n\r\n        CursorLineBegin (cursor: number): number {\r\n            var text = this.$textOwner.text;\r\n            var r = text.lastIndexOf(\"\\r\", cursor);\r\n            var n = text.lastIndexOf(\"\\n\", cursor);\r\n            return Math.max(r, n, 0);\r\n        }\r\n\r\n        CursorLineEnd (cursor: number): number {\r\n            var text = this.$textOwner.text;\r\n            var len = text.length;\r\n            var r = text.indexOf(\"\\r\", cursor);\r\n            if (r < 0) r = len;\r\n            var n = text.indexOf(\"\\n\", cursor);\r\n            if (n < 0) n = len;\r\n            return Math.min(r, n);\r\n        }\r\n\r\n        CursorBegin (cursor: number): number {\r\n            return 0;\r\n        }\r\n\r\n        CursorEnd (cursor: number): number {\r\n            return this.$textOwner.text.length;\r\n        }\r\n    }\r\n\r\n    export class PasswordBoxCursorAdvancer implements ICursorAdvancer {\r\n        constructor (private $textOwner: Text.ITextOwner) {\r\n        }\r\n\r\n        CursorDown (cursor: number, isPage: boolean): number {\r\n            return this.CursorEnd(cursor);\r\n        }\r\n\r\n        CursorUp (cursor: number, isPage: boolean): number {\r\n            return this.CursorBegin(cursor);\r\n        }\r\n\r\n        CursorNextWord (cursor: number): number {\r\n            return this.CursorEnd(cursor);\r\n        }\r\n\r\n        CursorPrevWord (cursor: number): number {\r\n            return this.CursorBegin(cursor);\r\n        }\r\n\r\n        CursorNextChar (cursor: number): number {\r\n            var text = this.$textOwner.text;\r\n            if (text && text.charAt(cursor) === '\\r' && text.charAt(cursor + 1) === '\\n')\r\n                return cursor + 2;\r\n            return Math.min(text.length - 1, cursor + 1);\r\n        }\r\n\r\n        CursorPrevChar (cursor: number): number {\r\n            var text = this.$textOwner.text;\r\n            if (cursor >= 2 && text && text.charAt(cursor - 2) === '\\r' && text.charAt(cursor - 1) === '\\n')\r\n                return cursor - 2;\r\n            return Math.max(0, cursor - 1);\r\n        }\r\n\r\n        CursorLineBegin (cursor: number): number {\r\n            return this.CursorBegin(cursor);\r\n        }\r\n\r\n        CursorLineEnd (cursor: number): number {\r\n            return this.CursorEnd(cursor);\r\n        }\r\n\r\n        CursorBegin (cursor: number): number {\r\n            return this.$textOwner.text.length;\r\n        }\r\n\r\n        CursorEnd (cursor: number): number {\r\n            return 0;\r\n        }\r\n    }\r\n}","module Fayde.Controls.Internal {\r\n    import NotifyCollectionChangedEventArgs = Collections.CollectionChangedEventArgs;\r\n    import NotifyCollectionChangedAction = Collections.CollectionChangedAction;\r\n    import INotifyCollectionChanged_ = Collections.INotifyCollectionChanged_;\r\n\r\n    export interface IItemContainersOwner {\r\n        PrepareContainerForItem(container: UIElement, item: any);\r\n        ClearContainerForItem(container: UIElement, item: any);\r\n        GetContainerForItem(): UIElement;\r\n        IsItemItsOwnContainer(item: any): boolean;\r\n    }\r\n    export interface IItemContainersManager {\r\n        IsRecycling: boolean;\r\n\r\n        IndexFromContainer(container: UIElement): number;\r\n        ContainerFromIndex(index: number): UIElement;\r\n        ItemFromContainer(container: UIElement): any;\r\n        ContainerFromItem(item: any): UIElement;\r\n\r\n        OnItemsAdded(index: number, newItems: any[]);\r\n        OnItemsRemoved(index: number, oldItems: any[]);\r\n        DisposeContainers(index?: number, count?: number): UIElement[];\r\n\r\n        CreateGenerator(index: number, count: number): IContainerGenerator;\r\n        GetEnumerator(index?: number, count?: number): IContainerEnumerator;\r\n    }\r\n    export class ItemContainersManager implements IItemContainersManager {\r\n        private _Items: any[] = [];\r\n        private _Containers: UIElement[] = [];\r\n        private _Cache: UIElement[] = [];\r\n\r\n        get IsRecycling (): boolean {\r\n            var dobj = this.Owner;\r\n            if (dobj instanceof DependencyObject)\r\n                return VirtualizingPanel.GetVirtualizationMode(<DependencyObject><any>dobj) === VirtualizationMode.Recycling;\r\n            return false;\r\n        }\r\n\r\n        constructor(public Owner: IItemContainersOwner) { }\r\n\r\n        IndexFromContainer(container: UIElement): number { return this._Containers.indexOf(container); }\r\n        ContainerFromIndex(index: number): UIElement { return this._Containers[index]; }\r\n        ItemFromContainer(container: UIElement): any {\r\n            var index = this._Containers.indexOf(container);\r\n            if (index < 0)\r\n                return null;\r\n            return this._Items[index];\r\n        }\r\n        ContainerFromItem(item: any): UIElement {\r\n            if (item == null)\r\n                return null;\r\n            var index = this._Items.indexOf(item);\r\n            if (index < 0)\r\n                return null;\r\n            return this._Containers[index];\r\n        }\r\n\r\n        OnItemsAdded(index: number, newItems: any[]) {\r\n            var items = this._Items;\r\n            var containers = this._Containers;\r\n            for (var i = 0, len = newItems.length; i < len; i++) {\r\n                items.splice(index + i, 0, newItems[i]);\r\n                containers.splice(index + i, 0, null);\r\n            }\r\n        }\r\n        OnItemsRemoved(index: number, oldItems: any[]) {\r\n            this.DisposeContainers(index, oldItems.length);\r\n            this._Items.splice(index, oldItems.length);\r\n            this._Containers.splice(index, oldItems.length);\r\n        }\r\n        DisposeContainers(index?: number, count?: number): UIElement[] {\r\n            var containers = this._Containers;\r\n            var items = this._Items;\r\n            if (index == null) index = 0;\r\n            if (count == null) count = containers.length;\r\n\r\n            if (this.IsRecycling) {\r\n                for (var i = 0, cache = this._Cache, recycling = containers.slice(index, index + count), len = recycling.length; i < len; i++) {\r\n                    var container = recycling[i];\r\n                    if (container)\r\n                        cache.push(container);\r\n                }\r\n            }\r\n\r\n            var disposed: UIElement[] = [];\r\n\r\n            var ic = this.Owner;\r\n            for (var i = index; i < index + count; i++) {\r\n                var container = containers[i];\r\n                if (!container)\r\n                    continue;\r\n                disposed.push(container);\r\n                var item = items[i];\r\n                ic.ClearContainerForItem(container, item);\r\n                containers[i] = null;\r\n            }\r\n\r\n            return disposed;\r\n        }\r\n\r\n        CreateGenerator(index: number, count: number): IContainerGenerator {\r\n            var generator: IContainerGenerator = {\r\n                IsCurrentNew: false,\r\n                Current: undefined,\r\n                CurrentItem: undefined,\r\n                CurrentIndex: index - 1,\r\n                GenerateIndex: -1,\r\n                Generate: function (): boolean { return false; }\r\n            };\r\n\r\n            var ic = this.Owner;\r\n            var icm = this;\r\n            var containers = this._Containers;\r\n            var items = this._Items;\r\n            var cache = this._Cache;\r\n            generator.Generate = function (): boolean {\r\n                generator.GenerateIndex++;\r\n                generator.CurrentIndex++;\r\n                generator.IsCurrentNew = false;\r\n                if (generator.CurrentIndex < 0 || generator.GenerateIndex >= count || generator.CurrentIndex >= containers.length) {\r\n                    generator.Current = undefined;\r\n                    generator.CurrentItem = undefined;\r\n                    return false;\r\n                }\r\n                generator.CurrentItem = items[generator.CurrentIndex];\r\n                if ((generator.Current = containers[generator.CurrentIndex]) == null) {\r\n                    if (ic.IsItemItsOwnContainer(generator.CurrentItem)) {\r\n                        if (generator.CurrentItem instanceof UIElement)\r\n                            generator.Current = <UIElement>generator.CurrentItem;\r\n                        generator.IsCurrentNew = true;\r\n                    } else if (cache.length > 0) {\r\n                        generator.Current = cache.pop();\r\n                        generator.IsCurrentNew = true;\r\n                    } else {\r\n                        generator.Current = ic.GetContainerForItem();\r\n                        generator.IsCurrentNew = true;\r\n                    }\r\n                    containers[generator.CurrentIndex] = generator.Current;\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            return generator;\r\n        }\r\n        GetEnumerator(start?: number, count?: number): IContainerEnumerator {\r\n            var carr = this._Containers;\r\n            var iarr = this._Items;\r\n\r\n            var index = (start || 0) - 1;\r\n            var len = count == null ? carr.length : count;\r\n\r\n            var i = 0;\r\n            var e = <IContainerEnumerator>{ moveNext: undefined, current: undefined, CurrentItem: undefined, CurrentIndex: -1 };\r\n            e.moveNext = function () {\r\n                i++;\r\n                index++;\r\n                e.CurrentIndex = index;\r\n                if (i > len || index >= carr.length) {\r\n                    e.current = undefined;\r\n                    e.CurrentItem = undefined;\r\n                    return false;\r\n                }\r\n                e.current = carr[index];\r\n                e.CurrentItem = iarr[index];\r\n                return true;\r\n            };\r\n            return e;\r\n        }\r\n    }\r\n\r\n    export interface IContainerGenerator {\r\n        IsCurrentNew: boolean;\r\n        Current: UIElement;\r\n        CurrentItem: any;\r\n        CurrentIndex: number;\r\n        GenerateIndex: number;\r\n        Generate(): boolean;\r\n    }\r\n    export interface IContainerEnumerator extends nullstone.IEnumerator<UIElement> {\r\n        CurrentItem: any;\r\n        CurrentIndex: number;\r\n    }\r\n}","module Fayde.Controls.Internal {\r\n    export interface IRange {\r\n        Minimum: number;\r\n        Maximum: number;\r\n        Value: number;\r\n        OnMinimumChanged(oldMin: number, newMin: number);\r\n        OnMaximumChanged(oldMax: number, newMax: number);\r\n        OnValueChanged(oldVal: number, newVal: number);\r\n    }\r\n\r\n    export interface IRangeCoercer {\r\n        OnMinimumChanged(oldMinimum: number, newMinimum: number);\r\n        OnMaximumChanged(oldMaximum: number, newMaximum: number);\r\n        OnValueChanged(oldValue: number, newValue: number);\r\n    }\r\n    export class RangeCoercer implements IRangeCoercer {\r\n        InitialMax: number = 1;\r\n        InitialVal: number = 0;\r\n        RequestedMax: number = 1;\r\n        RequestedVal: number = 0;\r\n        PreCoercedMax: number = 1;\r\n        PreCoercedVal: number = 0;\r\n        CoerceDepth = 0;\r\n\r\n        get Minimum(): number { return this.Range.Minimum; }\r\n        get Maximum(): number { return this.Range.Maximum; }\r\n        get Value(): number { return this.Range.Value; }\r\n\r\n        constructor(public Range: IRange, public OnCoerceMaximum: (val: any) => void, public OnCoerceValue: (val: any) => void) {\r\n            this.PreCoercedMax = this.RequestedMax = this.InitialMax = Range.Maximum;\r\n            this.PreCoercedVal = this.RequestedVal = this.InitialVal = Range.Value;\r\n        }\r\n\r\n        OnMinimumChanged(oldMinimum: number, newMinimum: number) {\r\n            if (this.CoerceDepth === 0) {\r\n                this.InitialMax = this.Maximum;\r\n                this.InitialVal = this.Value;\r\n            }\r\n            this.CoerceDepth++;\r\n            this.CoerceMaximum();\r\n            this.CoerceValue();\r\n            this.CoerceDepth--;\r\n            if (this.CoerceDepth > 0)\r\n                return;\r\n\r\n            this.Range.OnMinimumChanged(oldMinimum, newMinimum);\r\n            var max = this.Maximum;\r\n            if (!NumberEx.AreClose(this.InitialMax, max))\r\n                this.Range.OnMaximumChanged(this.InitialMax, max);\r\n            var val = this.Value;\r\n            if (!NumberEx.AreClose(this.InitialVal, val))\r\n                this.Range.OnValueChanged(this.InitialVal, val);\r\n        }\r\n        OnMaximumChanged(oldMaximum: number, newMaximum: number) {\r\n            if (this.CoerceDepth === 0) {\r\n                this.RequestedMax = newMaximum;\r\n                this.InitialMax = oldMaximum;\r\n                this.InitialVal = this.Value;\r\n            }\r\n            this.CoerceDepth++;\r\n            this.CoerceMaximum();\r\n            this.CoerceValue();\r\n            this.CoerceDepth--;\r\n            if (this.CoerceDepth !== 0)\r\n                return;\r\n\r\n            this.PreCoercedMax = newMaximum;\r\n            var max = this.Maximum;\r\n            if (!NumberEx.AreClose(this.InitialMax, max))\r\n                this.Range.OnMaximumChanged(this.InitialMax, max);\r\n            var val = this.Value;\r\n            if (!NumberEx.AreClose(this.InitialVal, val))\r\n                this.Range.OnValueChanged(this.InitialVal, val);\r\n        }\r\n        OnValueChanged(oldValue: number, newValue: number) {\r\n            if (this.CoerceDepth === 0) {\r\n                this.RequestedVal = newValue;\r\n                this.InitialVal = oldValue;\r\n            }\r\n            this.CoerceDepth++;\r\n            this.CoerceValue();\r\n            this.CoerceDepth--;\r\n            if (this.CoerceDepth !== 0)\r\n                return;\r\n\r\n            this.PreCoercedVal = newValue;\r\n            var val = this.Value;\r\n            if (!NumberEx.AreClose(this.InitialVal, val))\r\n                this.Range.OnValueChanged(this.InitialVal, val);\r\n        }\r\n\r\n        CoerceMaximum() {\r\n            var min = this.Minimum;\r\n            var max = this.Maximum;\r\n            if (!NumberEx.AreClose(this.RequestedMax, max) && this.RequestedMax >= min)\r\n                this.OnCoerceMaximum(this.RequestedMax);\r\n            else if (max < min)\r\n                this.OnCoerceMaximum(min);\r\n        }\r\n        CoerceValue() {\r\n            var min = this.Minimum;\r\n            var max = this.Maximum;\r\n            var val = this.Value;\r\n            if (!NumberEx.AreClose(this.RequestedVal, val) && this.RequestedVal >= min && this.RequestedVal <= max)\r\n                this.OnCoerceValue(this.RequestedVal);\r\n            else if (val < min)\r\n                this.OnCoerceValue(min);\r\n            else if (val > max)\r\n                this.OnCoerceValue(max);\r\n        }\r\n    }\r\n}","module Fayde.Controls.Internal {\r\n    export class TextBoxContentProxy {\r\n        private $$element: FrameworkElement = null;\r\n\r\n        setElement(fe: FrameworkElement, view: TextBoxView) {\r\n            this.$$element = fe;\r\n            if (!fe)\r\n                return;\r\n\r\n            if (fe instanceof ContentPresenter) {\r\n                (<ContentPresenter>fe).SetValue(ContentPresenter.ContentProperty, view);\r\n            } else if (fe instanceof ContentControl) {\r\n                (<ContentControl>fe).SetValue(ContentControl.ContentProperty, view);\r\n            } else if (fe instanceof Border) {\r\n                (<Border>fe).SetValue(Border.ChildProperty, view);\r\n            } else if (fe instanceof Panel) {\r\n                (<Panel>fe).Children.Add(view);\r\n            } else {\r\n                console.warn(\"TextBox does not have a valid content element.\");\r\n            }\r\n        }\r\n\r\n        setHorizontalScrollBar(sbvis: ScrollBarVisibility) {\r\n            var ce = this.$$element;\r\n            if (!ce)\r\n                return;\r\n            var ceType = (<any>ce).constructor;\r\n            var propd = DependencyProperty.GetDependencyProperty(ceType, \"HorizontalScrollBarVisibility\", true);\r\n            if (!propd)\r\n                return;\r\n            ce.SetValueInternal(propd, sbvis);\r\n        }\r\n\r\n        setVerticalScrollBar(sbvis: ScrollBarVisibility) {\r\n            var ce = this.$$element;\r\n            if (!ce)\r\n                return;\r\n            var ceType = (<any>ce).constructor;\r\n            var propd = DependencyProperty.GetDependencyProperty(ceType, \"VerticalScrollBarVisibility\", true);\r\n            if (!propd)\r\n                return;\r\n            ce.SetValueInternal(propd, sbvis);\r\n        }\r\n    }\r\n}","/// <reference path=\"../../Core/FrameworkElement.ts\" />\r\n\r\nmodule Fayde.Controls.Internal {\r\n    import TextBoxViewUpdater = minerva.controls.textboxview.TextBoxViewUpdater;\r\n\r\n    export class TextBoxViewNode extends FENode {\r\n        LayoutUpdater: TextBoxViewUpdater;\r\n    }\r\n\r\n    export class TextBoxView extends FrameworkElement {\r\n        XamlNode: TextBoxViewNode;\r\n\r\n        CreateLayoutUpdater () {\r\n            return new TextBoxViewUpdater();\r\n        }\r\n\r\n        private _AutoRun = new Documents.Run();\r\n\r\n        constructor () {\r\n            super();\r\n            this.XamlNode.LayoutUpdater.tree.onTextAttached(this._AutoRun.TextUpdater);\r\n            ReactTo(this._AutoRun, this, this._InlineChanged);\r\n        }\r\n\r\n        private _InlineChanged (obj?: any) {\r\n            var updater = this.XamlNode.LayoutUpdater;\r\n            switch (obj.type) {\r\n                case 'font':\r\n                    updater.invalidateFont(obj.full);\r\n                    break;\r\n                case 'text':\r\n                    updater.invalidateTextMetrics();\r\n                    break;\r\n            }\r\n        }\r\n\r\n        setFontProperty (propd: DependencyProperty, value: any) {\r\n            this._AutoRun.SetValue(propd, value);\r\n        }\r\n\r\n        setFontAttr (attrName: string, value: any) {\r\n            var runUpdater = this._AutoRun;\r\n            var tu = runUpdater.TextUpdater;\r\n            tu.assets[attrName] = value;\r\n        }\r\n\r\n        setCaretBrush (value: Media.Brush) {\r\n            var updater = this.XamlNode.LayoutUpdater;\r\n            updater.assets.caretBrush = value;\r\n            updater.invalidateCaret();\r\n        }\r\n\r\n        setIsFocused (isFocused: boolean) {\r\n            var updater = <TextBoxViewUpdater>this.XamlNode.LayoutUpdater;\r\n            if (updater.assets.isFocused === isFocused)\r\n                return;\r\n            updater.assets.isFocused = isFocused;\r\n            updater.resetCaretBlinker(false);\r\n        }\r\n\r\n        setIsReadOnly (isReadOnly: boolean) {\r\n            var updater = this.XamlNode.LayoutUpdater;\r\n            if (updater.assets.isReadOnly === isReadOnly)\r\n                return;\r\n            updater.assets.isReadOnly = isReadOnly;\r\n            updater.resetCaretBlinker(false);\r\n        }\r\n\r\n        setTextAlignment (textAlignment: TextAlignment) {\r\n            var lu = this.XamlNode.LayoutUpdater;\r\n            if (lu.assets.textAlignment === <number>textAlignment)\r\n                return;\r\n            lu.assets.textAlignment = <number>textAlignment;\r\n            lu.invalidateMeasure();\r\n            lu.updateBounds(true);\r\n            lu.invalidate();\r\n        }\r\n\r\n        setTextWrapping (textWrapping: TextWrapping) {\r\n            var lu = this.XamlNode.LayoutUpdater;\r\n            if (lu.assets.textWrapping === <number>textWrapping)\r\n                return;\r\n            lu.assets.textWrapping = <number>textWrapping;\r\n            lu.invalidateMeasure();\r\n            lu.updateBounds(true);\r\n            lu.invalidate();\r\n        }\r\n\r\n        setSelectionStart (selectionStart: number) {\r\n            var lu = this.XamlNode.LayoutUpdater;\r\n            if (lu.assets.selectionStart === selectionStart)\r\n                return;\r\n            lu.assets.selectionStart = selectionStart;\r\n            lu.invalidateSelectionStart();\r\n        }\r\n\r\n        setSelectionLength (selectionLength: number) {\r\n            var lu = this.XamlNode.LayoutUpdater;\r\n            if (lu.assets.selectionLength === selectionLength)\r\n                return;\r\n            var switching = (lu.assets.selectionLength === 0) !== (selectionLength === 0);\r\n            lu.assets.selectionLength = selectionLength;\r\n            lu.invalidateSelectionLength(switching);\r\n        }\r\n\r\n        setText (text: string) {\r\n            this._AutoRun.Text = text || \"\";\r\n        }\r\n\r\n        /*\r\n         private _UpdateCursor (invalidate: boolean) {\r\n         var cur = this._TextBox.SelectionCursor;\r\n         var current = this._Cursor;\r\n\r\n         if (invalidate && this._CursorVisible)\r\n         this._InvalidateCursor();\r\n\r\n         this._Cursor = this._Layout.GetSelectionCursor(null, cur);\r\n         //TODO: ...\r\n         // var irect = rect.copyTo(this._Cursor);\r\n         // rect.transform(irect, this._Xformer.AbsoluteXform);\r\n         // this._TextBox._ImCtx.SetCursorLocation(irect);\r\n\r\n         if (!minerva.Rect.isEqual(this._Cursor, current))\r\n         this._TextBox._EmitCursorPositionChanged(this._Cursor.height, this._Cursor.x, this._Cursor.y);\r\n\r\n         if (invalidate && this._CursorVisible)\r\n         this._InvalidateCursor();\r\n         }\r\n         */\r\n\r\n        GetCursorFromPoint (point: Point): number {\r\n            return this.XamlNode.LayoutUpdater.getCursorFromPoint(point);\r\n        }\r\n    }\r\n    Fayde.RegisterType(TextBoxView, Fayde.XMLNSINTERNAL);\r\n}","module Fayde.Controls.Internal {\r\n    var NO_GENERATOR: minerva.IVirtualizingGenerator = {\r\n        current: undefined,\r\n        generate: function (): boolean {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    export class VirtualizingPanelContainerOwner implements minerva.IVirtualizingContainerOwner {\r\n        constructor (private $$panel: VirtualizingPanel) {\r\n        }\r\n\r\n        get itemCount (): number {\r\n            var panel = this.$$panel;\r\n            var ic = panel ? panel.ItemsControl : null;\r\n            return ic ? ic.Items.Count : 0;\r\n        }\r\n\r\n        createGenerator (index: number, count: number): minerva.IVirtualizingGenerator {\r\n            var panel = this.$$panel;\r\n            var ic = panel ? panel.ItemsControl : null;\r\n            var icm = ic ? ic.ItemContainersManager : null;\r\n            if (!icm)\r\n                return NO_GENERATOR;\r\n            var icgen = icm.CreateGenerator(index, count);\r\n            var children = panel.Children;\r\n            return {\r\n                current: undefined,\r\n                generate: function (): boolean {\r\n                    this.current = undefined;\r\n                    if (!icgen.Generate())\r\n                        return false;\r\n                    var child = icgen.Current;\r\n                    if (icgen.IsCurrentNew) {\r\n                        children.Insert(icgen.GenerateIndex, child);\r\n                        ic.PrepareContainerForItem(child, icgen.CurrentItem);\r\n                    }\r\n                    this.current = child.XamlNode.LayoutUpdater;\r\n                    return true;\r\n                }\r\n            };\r\n        }\r\n\r\n        remove (index: number, count: number) {\r\n            var panel = this.$$panel;\r\n            var ic = panel ? panel.ItemsControl : null;\r\n            var icm = ic ? ic.ItemContainersManager : null;\r\n            if (!icm)\r\n                return;\r\n            var old = icm.DisposeContainers(index, count);\r\n            var children = panel.Children;\r\n            for (var i = 0, len = old.length; i < len; i++) {\r\n                children.Remove(old[i]);\r\n            }\r\n        }\r\n    }\r\n}","/// <reference path=\"../../Core/RoutedEventArgs.ts\" />\r\n\r\nmodule Fayde.Controls.Primitives {\r\n    export class DragCompletedEventArgs extends RoutedEventArgs {\r\n        HorizontalChange: number;\r\n        VerticalChange: number;\r\n        Canceled: boolean;\r\n        constructor(horizontal: number, vertical: number, canceled: boolean) {\r\n            super();\r\n            Object.defineProperty(this, \"HorizontalChange\", { value: horizontal, writable: false });\r\n            Object.defineProperty(this, \"VerticalChange\", { value: vertical, writable: false });\r\n            Object.defineProperty(this, \"Canceled\", { value: canceled, writable: false });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(DragCompletedEventArgs);\r\n\r\n    export class DragDeltaEventArgs extends RoutedEventArgs {\r\n        HorizontalChange: number;\r\n        VerticalChange: number;\r\n        constructor(horizontal: number, vertical: number) {\r\n            super();\r\n            Object.defineProperty(this, \"HorizontalChange\", { value: horizontal, writable: false });\r\n            Object.defineProperty(this, \"VerticalChange\", { value: vertical, writable: false });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(DragDeltaEventArgs);\r\n\r\n    export class DragStartedEventArgs extends RoutedEventArgs {\r\n        HorizontalOffset: number;\r\n        VerticalOffset: number;\r\n        constructor(horizontal: number, vertical: number) {\r\n            super();\r\n            Object.defineProperty(this, \"HorizontalOffset\", { value: horizontal, writable: false });\r\n            Object.defineProperty(this, \"VerticalOffset\", { value: vertical, writable: false });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(DragStartedEventArgs);\r\n}","/// <reference path=\"../../Core/FrameworkElement\" />\r\n\r\nmodule Fayde.Controls.Primitives {\r\n    import OverlayUpdater = minerva.controls.overlay.OverlayUpdater;\r\n    var DEFAULT_MASK_BRUSH = \"#33000000\";\r\n\r\n    export class OverlayNode extends FENode {\r\n        LayoutUpdater: OverlayUpdater;\r\n        XObject: Overlay;\r\n\r\n        private _Layer: Panel = null;\r\n        private _Mask: Border = null;\r\n\r\n        EnsureLayer () {\r\n            if (!this._Layer) {\r\n                this._Layer = new Panel();\r\n                this.LayoutUpdater.setLayer(this._Layer.XamlNode.LayoutUpdater);\r\n            }\r\n            return this._Layer;\r\n        }\r\n\r\n        EnsureMask () {\r\n            if (!this._Mask) {\r\n                this._Mask = new Border();\r\n                this._Mask.MouseLeftButtonDown.on(this._OnMaskMouseDown, this);\r\n                this.UpdateMask();\r\n            }\r\n            return this._Mask;\r\n        }\r\n\r\n        private _OnMaskMouseDown (sender, args: Input.MouseButtonEventArgs) {\r\n            this.XObject.SetCurrentValue(Overlay.IsOpenProperty, false);\r\n        }\r\n\r\n        UpdateMask () {\r\n            var mask = this._Mask;\r\n            if (mask) {\r\n                var mb = this.XObject.MaskBrush;\r\n                if (mb === undefined)\r\n                    mb = nullstone.convertAnyToType(DEFAULT_MASK_BRUSH, Media.Brush);\r\n                this._Mask.Background = mb;\r\n            }\r\n        }\r\n\r\n        OnIsAttachedChanged (newIsAttached: boolean) {\r\n            super.OnIsAttachedChanged(newIsAttached);\r\n            this.RegisterInitiator(this.VisualParentNode.XObject);\r\n            if (newIsAttached) {\r\n                this.EnsureLayer().Children.Insert(0, this.EnsureMask());\r\n            }\r\n            if (!newIsAttached && this.XObject.IsOpen)\r\n                this.XObject.IsOpen = false;\r\n        }\r\n\r\n        RegisterInitiator (initiator: UIElement) {\r\n            if (!(initiator instanceof UIElement))\r\n                return;\r\n            this.LayoutUpdater.setInitiator(initiator.XamlNode.LayoutUpdater);\r\n        }\r\n    }\r\n\r\n    export class Overlay extends FrameworkElement {\r\n        XamlNode: OverlayNode;\r\n\r\n        CreateNode (): OverlayNode {\r\n            return new OverlayNode(this);\r\n        }\r\n\r\n        CreateLayoutUpdater (): OverlayUpdater {\r\n            return new OverlayUpdater();\r\n        }\r\n\r\n        static VisualProperty = DependencyProperty.Register(\"Visual\", () => UIElement, Overlay, undefined, (d: Overlay, args) => d._OnVisualChanged(args));\r\n        static VisualUriProperty = DependencyProperty.Register(\"VisualUri\", () => Uri, Overlay, undefined, (d: Overlay, args) => d._OnVisualUriChanged(args));\r\n        static VisualViewModelProperty = DependencyProperty.Register(\"VisualViewModel\", () => Object, Overlay, undefined, (d: Overlay, args) => d._OnVisualViewModelChanged(args));\r\n        static IsOpenProperty = DependencyProperty.Register(\"IsOpen\", () => Boolean, Overlay, undefined, (d: Overlay, args) => d._OnIsOpenChanged(args));\r\n        static MaskBrushProperty = DependencyProperty.Register(\"MaskBrush\", () => Media.Brush, Overlay);\r\n        static ClosedCommandProperty = DependencyProperty.Register(\"ClosedCommand\", () => Input.ICommand_, Overlay);\r\n        Visual: UIElement;\r\n        VisualUri: Uri;\r\n        VisualViewModel: any;\r\n        IsOpen: boolean;\r\n        MaskBrush: Media.Brush;\r\n        ClosedCommand: Input.ICommand;\r\n\r\n        Opened = new nullstone.Event<nullstone.IEventArgs>();\r\n        Closed = new nullstone.Event<OverlayClosedEventArgs>();\r\n\r\n        constructor () {\r\n            super();\r\n            this.DefaultStyleKey = Overlay;\r\n            this.InitBindings();\r\n        }\r\n\r\n        InitBindings () {\r\n            this.SetBinding(Overlay.VisualViewModelProperty, new Data.Binding(\"OverlayDataContext\"));\r\n            var binding = new Data.Binding(\"IsOpen\");\r\n            binding.Mode = Data.BindingMode.TwoWay;\r\n            this.SetBinding(Overlay.IsOpenProperty, binding);\r\n            this.SetBinding(Overlay.ClosedCommandProperty, new Data.Binding(\"ClosedCommand\"));\r\n        }\r\n\r\n        private _ContentControlForUri: ContentControl = null;\r\n        private _IgnoreClose = false;\r\n\r\n        private _OnVisualChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            if (this.VisualUri != null)\r\n                throw new Error(\"Cannot set Visual if VisualUri is set.\");\r\n            var layer = this.XamlNode.EnsureLayer();\r\n            if (args.OldValue)\r\n                layer.Children.Remove(args.OldValue);\r\n            if (args.NewValue)\r\n                layer.Children.Add(args.NewValue);\r\n        }\r\n\r\n        private _OnVisualUriChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            if (this.Visual != null)\r\n                throw new Error(\"Cannot set VisualUri if Visual is set.\");\r\n            if (args.NewValue)\r\n                this._SetVisualUri(args.NewValue);\r\n            else\r\n                this._ClearVisualUri();\r\n        }\r\n\r\n        private _OnVisualViewModelChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            var cc: ContentControl;\r\n            var visual: UIElement;\r\n            if (!!(cc = this._ContentControlForUri))\r\n                cc.DataContext = args.NewValue;\r\n            else if (!!(visual = this.Visual))\r\n                visual.DataContext = args.NewValue;\r\n        }\r\n\r\n        private _SetVisualUri (uri: Uri) {\r\n            var cc = this._ContentControlForUri;\r\n            if (!cc) {\r\n                var layer = this.XamlNode.EnsureLayer();\r\n                cc = this._ContentControlForUri = new ContentControl();\r\n                cc.SetValue(OverlayOwnerProperty, this);\r\n                layer.Children.Add(cc);\r\n            }\r\n            cc.ContentUri = uri;\r\n            var vm = this.VisualViewModel;\r\n            if (vm !== undefined)\r\n                cc.DataContext = vm;\r\n        }\r\n\r\n        private _ClearVisualUri () {\r\n            var cc = this._ContentControlForUri;\r\n            if (!cc)\r\n                return;\r\n            var layer = this.XamlNode.EnsureLayer();\r\n            layer.Children.Remove(cc);\r\n            cc.ContentUri = null;\r\n            cc.DataContext = undefined;\r\n        }\r\n\r\n        private _OnIsOpenChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            var ov = args.OldValue || false;\r\n            var nv = args.NewValue || false;\r\n            if (ov === nv)\r\n                return;\r\n            if (nv === true) {\r\n                this._DoOpen();\r\n            } else {\r\n                this._DoClose();\r\n            }\r\n        }\r\n\r\n        private _DoOpen () {\r\n            var upd = this.XamlNode.LayoutUpdater;\r\n            minerva.controls.overlay.reactTo.isOpen(upd, false, true);\r\n            this.Opened.raise(this, null);\r\n        }\r\n\r\n        private _DoClose (result?: boolean) {\r\n            var upd = this.XamlNode.LayoutUpdater;\r\n            minerva.controls.overlay.reactTo.isOpen(upd, true, false);\r\n            if (result === undefined)\r\n                result = this._GetDialogResult();\r\n            var parameter: MVVM.IOverlayCompleteParameters = {\r\n                Result: result,\r\n                Data: this.VisualViewModel\r\n            };\r\n            var cmd = this.ClosedCommand;\r\n            if (cmd && (!cmd.CanExecute || cmd.CanExecute(parameter)))\r\n                cmd.Execute(parameter);\r\n            this.Closed.raise(this, new OverlayClosedEventArgs(parameter.Result, parameter.Data));\r\n        }\r\n\r\n        Open () {\r\n            this.IsOpen = true;\r\n        }\r\n\r\n        Close (result?: boolean) {\r\n            if (this.IsOpen !== true)\r\n                return;\r\n            this._IgnoreClose = true;\r\n            try {\r\n                this.SetCurrentValue(Overlay.IsOpenProperty, false);\r\n            } finally {\r\n                this._IgnoreClose = false;\r\n            }\r\n            this._DoClose(result);\r\n        }\r\n\r\n        private _GetDialogResult (): boolean {\r\n            var visual = this.Visual || this._ContentControlForUri;\r\n            if (!visual)\r\n                return undefined;\r\n            var dialog = VisualTreeHelper.GetChildrenCount(visual) > 0 ? VisualTreeHelper.GetChild(visual, 0) : null;\r\n            return (dialog instanceof Dialog) ? (<Dialog>dialog).DialogResult : null;\r\n        }\r\n\r\n        static FindOverlay (visual: UIElement): Overlay {\r\n            for (var en = VisualTreeEnum.GetAncestors(visual).getEnumerator(); en.moveNext();) {\r\n                var owner = en.current.GetValue(OverlayOwnerProperty);\r\n                if (owner instanceof Overlay)\r\n                    return owner;\r\n            }\r\n            return undefined;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Overlay);\r\n    Markup.Content(Overlay, Overlay.VisualProperty);\r\n\r\n    module reactions {\r\n        DPReaction<Media.Brush>(Overlay.MaskBrushProperty, (overlay: Overlay, ov, nv) => {\r\n            overlay.XamlNode.UpdateMask();\r\n        });\r\n    }\r\n\r\n    var OverlayOwnerProperty = DependencyProperty.RegisterAttached(\"OverlayOwner\", () => Overlay, Overlay);\r\n}","module Fayde.Controls.Primitives {\r\n    export class OverlayClosedEventArgs implements nullstone.IEventArgs {\r\n        Result: boolean;\r\n        Data: any;\r\n\r\n        constructor (result: boolean, data: any) {\r\n            Object.defineProperties(this, {\r\n                \"Result\": {\r\n                    value: result,\r\n                    writable: false\r\n                },\r\n                \"Data\": {\r\n                    value: data,\r\n                    writable: false\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","module Fayde.Controls.Primitives {\r\n    export class ScrollData implements minerva.IScrollData {\r\n        canHorizontallyScroll: boolean = false;\r\n        canVerticallyScroll: boolean = false;\r\n        offsetX: number = 0;\r\n        offsetY: number = 0;\r\n        cachedOffsetX: number = 0;\r\n        cachedOffsetY: number = 0;\r\n        viewportWidth: number = 0;\r\n        viewportHeight: number = 0;\r\n        extentWidth: number = 0;\r\n        extentHeight: number = 0;\r\n        maxDesiredWidth: number = 0;\r\n        maxDesiredHeight: number = 0;\r\n\r\n        scrollOwner: ScrollViewer = null;\r\n\r\n        invalidate () {\r\n            if (this.scrollOwner)\r\n                this.scrollOwner.InvalidateScrollInfo();\r\n        }\r\n    }\r\n}","/// <reference path=\"../../Core/RoutedEventArgs.ts\" />\r\n\r\nmodule Fayde.Controls.Primitives {\r\n    export enum ScrollEventType {\r\n        SmallDecrement = 0,\r\n        SmallIncrement = 1,\r\n        LargeDecrement = 2,\r\n        LargeIncrement = 3,\r\n        ThumbPosition = 4,\r\n        ThumbTrack = 5,\r\n        First = 6,\r\n        Last = 7,\r\n        EndScroll = 8,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(ScrollEventType, \"ScrollEventType\");\r\n\r\n    export class ScrollEventArgs extends RoutedEventArgs {\r\n        ScrollEventType: ScrollEventType;\r\n        Value: number;\r\n        constructor(scrollEventType: ScrollEventType, value: number) {\r\n            super();\r\n            Object.defineProperty(this, \"ScrollEventType\", { value: scrollEventType, writable: false });\r\n            Object.defineProperty(this, \"Value\", { value: value, writable: false });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ScrollEventArgs);\r\n}","/// <reference path=\"../../Core/RoutedEventArgs.ts\" />\r\n\r\nmodule Fayde.Controls.Primitives {\r\n    export class SelectionChangedEventArgs extends RoutedEventArgs {\r\n        OldValues: any[];\r\n        NewValues: any[];\r\n        constructor(oldValues: any[], newValues: any[]) {\r\n            super();\r\n            Object.defineProperty(this, \"OldValues\", { value: oldValues.slice(0), writable: false });\r\n            Object.defineProperty(this, \"NewValues\", { value: newValues.slice(0), writable: false });\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(SelectionChangedEventArgs);\r\n}","module Fayde.Controls.Primitives {\r\n    export class SelectorSelection {\r\n        private _Owner: Selector;\r\n        private _SelectedItems: any[] = [];\r\n        private _SelectedItem: any = null;\r\n        private _IsUpdating: boolean = false;\r\n        private _AnchorIndex = -1;\r\n        Mode: SelectionMode = SelectionMode.Single;\r\n\r\n        get IsUpdating(): boolean { return this._IsUpdating; }\r\n\r\n        constructor(owner: Selector) {\r\n            this._Owner = owner;\r\n            this._Owner.SelectedItems.CollectionChanged.on(this._HandleOwnerSelectionChanged, this);\r\n        }\r\n\r\n        private _HandleOwnerSelectionChanged(sender, e: Collections.CollectionChangedEventArgs) {\r\n            if (this._IsUpdating)\r\n                return;\r\n            if (this.Mode === SelectionMode.Single)\r\n                throw new InvalidOperationException(\"SelectedItems cannot be modified directly when in Single select mode\");\r\n            try {\r\n                var items = this._SelectedItems;\r\n                this._IsUpdating = true;\r\n                switch (e.Action) {\r\n                    case Collections.CollectionChangedAction.Add:\r\n                        if (items.indexOf(e.NewItems[0]) < 0)\r\n                            this.AddToSelected(e.NewItems[0]);\r\n                        break;\r\n                    case Collections.CollectionChangedAction.Remove:\r\n                        if (items.indexOf(e.OldItems[0]) > -1)\r\n                            this.RemoveFromSelected(e.OldItems[0]);\r\n                        break;\r\n                    case Collections.CollectionChangedAction.Replace:\r\n                        if (items.indexOf(e.OldItems[0]) > -1)\r\n                            this.RemoveFromSelected(e.OldItems[0]);\r\n                        if (items.indexOf(e.NewItems[0]) < 0)\r\n                            this.AddToSelected(e.NewItems[0]);\r\n                        break;\r\n                    case Collections.CollectionChangedAction.Reset:\r\n                        var ownerItems = this._Owner.SelectedItems;\r\n\r\n                        var item: any;\r\n                        var enumerator = ownerItems.getEnumerator();\r\n                        while (enumerator.moveNext()) {\r\n                            item = enumerator.current;\r\n                            if (ownerItems.Contains(item))\r\n                                continue;\r\n                            if (items.indexOf(item) > -1)\r\n                                this.RemoveFromSelected(item);\r\n                        }\r\n\r\n                        enumerator = ownerItems.getEnumerator();\r\n                        while (enumerator.moveNext()) {\r\n                            item = enumerator.current;\r\n                            if (items.indexOf(item) < 0)\r\n                                this.AddToSelected(item);\r\n                        }\r\n                        break;\r\n                }\r\n\r\n                this._Owner._SelectedItemsIsInvalid = true;\r\n            } finally {\r\n                this._IsUpdating = false;\r\n            }\r\n        }\r\n        RepopulateSelectedItems() {\r\n            if (!this._IsUpdating) {\r\n                try {\r\n                    this._IsUpdating = true;\r\n                    var si = this._Owner.SelectedItems;\r\n                    si.Clear();\r\n                    si.AddRange(this._SelectedItems);\r\n                } finally {\r\n                    this._IsUpdating = false;\r\n                }\r\n            }\r\n        }\r\n        ClearSelection(ignoreSelectedValue?: boolean) {\r\n            if (ignoreSelectedValue === undefined) ignoreSelectedValue = false;\r\n            if (this._SelectedItems.length === 0) {\r\n                this.UpdateSelectorProperties(null, -1, ignoreSelectedValue ? this._Owner.SelectedValue : null);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                this._IsUpdating = true\r\n                var oldSelection = this._SelectedItems.slice(0);\r\n\r\n                this._SelectedItems = [];\r\n                this._SelectedItem = null;\r\n                this.UpdateSelectorProperties(null, -1, ignoreSelectedValue ? this._Owner.SelectedValue : null);\r\n\r\n                this._Owner._SelectedItemsIsInvalid = true;\r\n                this._Owner._RaiseSelectionChanged(oldSelection, []);\r\n            } finally {\r\n                this._IsUpdating = false;\r\n            }\r\n        }\r\n        Select(item: any) {\r\n            if (!this._Owner.Items.Contains(item))\r\n                return;\r\n\r\n            var selIndex = this._SelectedItems.indexOf(item);\r\n            try {\r\n                this._IsUpdating = true;\r\n\r\n                switch (this.Mode) {\r\n                    case SelectionMode.Single:\r\n                        return this._SelectSingle(item, selIndex);\r\n                    case SelectionMode.Extended:\r\n                        return this._SelectExtended(item, selIndex);\r\n                    case SelectionMode.Multiple:\r\n                        return this._SelectMultiple(item, selIndex);\r\n                    default:\r\n                        throw new NotSupportedException(\"SelectionMode \" + this.Mode + \" is not supported.\");\r\n                }\r\n            } finally {\r\n                this._IsUpdating = false;\r\n            }\r\n        }\r\n        private _SelectSingle(item: any, selIndex: number) {\r\n            if (selIndex === -1)\r\n                return this.ReplaceSelection(item);\r\n        }\r\n        private _SelectExtended(item: any, selIndex: number) {\r\n            var itemsIndex = this._Owner.Items.IndexOf(item);\r\n            if (Fayde.Input.Keyboard.HasShift()) {\r\n                var items = this._Owner.Items;\r\n                var aIndex = this._AnchorIndex;\r\n                if (aIndex === -1)\r\n                    aIndex = items.IndexOf(this._SelectedItem);\r\n                aIndex = Math.max(aIndex, 0);\r\n                var oIndex = items.IndexOf(item);\r\n                return this.SelectRange(Math.min(aIndex, oIndex), Math.max(aIndex, oIndex));\r\n            }\r\n\r\n            this._AnchorIndex = selIndex;\r\n            if (Fayde.Input.Keyboard.HasControl()) {\r\n                if (selIndex > -1)\r\n                    return this.RemoveFromSelected(item);\r\n                return this.AddToSelected(item);\r\n            }\r\n            return this.ReplaceSelection(item);\r\n        }\r\n        private _SelectMultiple(item: any, selIndex: number) {\r\n            return (selIndex > -1) ? this.RemoveFromSelected(item) : this.AddToSelected(item);\r\n        }\r\n        SelectRange(startIndex: number, endIndex: number) {\r\n            var ownerItems = this._Owner.Items;\r\n\r\n            var oldSelectedItems = this._SelectedItems;\r\n            this._SelectedItems = ownerItems.GetRange(startIndex, endIndex)\r\n\r\n            var toUnselect = except(oldSelectedItems, this._SelectedItems);\r\n            var toSelect = except(this._SelectedItems, oldSelectedItems);\r\n\r\n            if (this._SelectedItems.indexOf(this._SelectedItem) === -1) {\r\n                this._SelectedItem = this._SelectedItems[0];\r\n                this.UpdateSelectorProperties(this._SelectedItem, this._SelectedItem == null ? -1 : ownerItems.IndexOf(this._SelectedItem), this._Owner._GetValueFromItem(this._SelectedItem));\r\n            }\r\n\r\n            this._Owner._SelectedItemsIsInvalid = true;\r\n            this._Owner._RaiseSelectionChanged(toUnselect, toSelect);\r\n        }\r\n        SelectAll(items: any[]) {\r\n            try {\r\n                this._IsUpdating = true;\r\n                if (this.Mode === SelectionMode.Single)\r\n                    throw new NotSupportedException(\"Cannot call SelectAll when in Single select mode\");\r\n\r\n                var selectedItems = this._SelectedItems;\r\n                var select = except(items, selectedItems);\r\n                if (select.length === 0)\r\n                    return;\r\n\r\n                var owner = this._Owner;\r\n                selectedItems.push(select);\r\n                if (this._SelectedItem == null) {\r\n                    this._SelectedItem = select[0];\r\n                    this.UpdateSelectorProperties(this._SelectedItem, owner.Items.IndexOf(this._SelectedItem), owner._GetValueFromItem(this._SelectedItem));\r\n                }\r\n\r\n                owner._SelectedItemsIsInvalid = true;\r\n                owner._RaiseSelectionChanged([], select);\r\n            } finally {\r\n                this._IsUpdating = false;\r\n            }\r\n        }\r\n        SelectOnly(item: any) {\r\n            if (this._SelectedItem === item && this._SelectedItems.length === 1)\r\n                return;\r\n\r\n            try {\r\n                this._IsUpdating = true;\r\n                this.ReplaceSelection(item);\r\n            } finally {\r\n                this._IsUpdating = false;\r\n            }\r\n        }\r\n        Unselect(item: any) {\r\n            if (this._SelectedItems.indexOf(item) < 0)\r\n                return;\r\n\r\n            try {\r\n                this._IsUpdating = true;\r\n                this.RemoveFromSelected(item);\r\n            } finally {\r\n                this._IsUpdating = false;\r\n            }\r\n        }\r\n        AddToSelected(item: any) {\r\n            this._SelectedItems.push(item);\r\n            var owner = this._Owner;\r\n            if (this._SelectedItems.length === 1) {\r\n                this._SelectedItem = item;\r\n                this.UpdateSelectorProperties(item, owner.Items.IndexOf(item), owner._GetValueFromItem(item));\r\n            }\r\n            owner._SelectedItemsIsInvalid = true;\r\n            owner._RaiseSelectionChanged([], [item]);\r\n        }\r\n        RemoveFromSelected(item: any) {\r\n            var selectedItems = this._SelectedItems;\r\n            var index = selectedItems.indexOf(item);\r\n            if (index > -1) selectedItems.splice(index, 1);\r\n            var owner = this._Owner;\r\n            if (this._SelectedItem === item) {\r\n                var newItem = selectedItems[0];\r\n                this._SelectedItem = newItem;\r\n                this.UpdateSelectorProperties(newItem, newItem == null ? -1 : owner.Items.IndexOf(newItem), owner._GetValueFromItem(item));\r\n            }\r\n            owner._SelectedItemsIsInvalid = true;\r\n            owner._RaiseSelectionChanged([item], []);\r\n        }\r\n        ReplaceSelection(item: any) {\r\n            var owner = this._Owner;\r\n            if (!this.UpdateCollectionView(item)) {\r\n                this.UpdateSelectorProperties(this._SelectedItem, owner.Items.IndexOf(this._SelectedItem), owner._GetValueFromItem(this._SelectedItem));\r\n                return;\r\n            }\r\n\r\n            var oldItems = this._SelectedItems.slice(0);\r\n            var newItems = [];\r\n            var itemIndex = oldItems.indexOf(item);\r\n            if (itemIndex > -1) {\r\n                oldItems.splice(itemIndex, 1);\r\n            } else {\r\n                newItems.push(item);\r\n            }\r\n            this._SelectedItems = [item];\r\n\r\n            this._SelectedItem = item;\r\n            this.UpdateSelectorProperties(item, owner.Items.IndexOf(item), owner._GetValueFromItem(item));\r\n\r\n            if (newItems.length !== 0 || oldItems.length !== 0) {\r\n                owner._SelectedItemsIsInvalid = true;\r\n                owner._RaiseSelectionChanged(oldItems, newItems);\r\n            }\r\n        }\r\n        UpdateSelectorProperties(item: any, index: number, value: any) {\r\n            var owner = this._Owner;\r\n            if (owner.SelectedItem !== item)\r\n                owner.SelectedItem = item;\r\n\r\n            if (owner.SelectedIndex !== index)\r\n                owner.SelectedIndex = index;\r\n\r\n            if (owner.SelectedValue !== value)\r\n                owner.SelectedValue = value;\r\n\r\n            this.UpdateCollectionView(item);\r\n        }\r\n        UpdateCollectionView(item: any) {\r\n            var icv = Data.ICollectionView_.as(this._Owner.ItemsSource);\r\n            if (icv) {\r\n                icv.MoveCurrentTo(item);\r\n                return item === icv.CurrentItem;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(SelectorSelection);\r\n\r\n    function except<T>(arr1: T[], arr2: T[]): T[] {\r\n        var r = [];\r\n        var c: any;\r\n        for (var i = 0, len = arr1.length; i < len; i++) {\r\n            c = arr1[i];\r\n            if (arr2.indexOf(c) < 0)\r\n                r.push(c);\r\n        }\r\n        return r;\r\n    }\r\n}","module Fayde.Providers {\r\n    export enum StyleIndex {\r\n        VisualTree = 0,\r\n        ApplicationResources = 1,\r\n        Theme = 2,\r\n        Count = 3,\r\n    }\r\n    export enum StyleMask {\r\n        None = 0,\r\n        VisualTree = 1 << StyleIndex.VisualTree,\r\n        ApplicationResources = 1 << StyleIndex.ApplicationResources,\r\n        Theme = 1 << StyleIndex.Theme,\r\n        All = StyleMask.VisualTree | StyleMask.ApplicationResources | StyleMask.Theme,\r\n    }\r\n\r\n    export interface IImplicitStyleHolder {\r\n        _ImplicitStyles: Style[];\r\n        _StyleMask: number;\r\n    }\r\n\r\n    export class ImplicitStyleBroker {\r\n        static Set (fe: FrameworkElement, mask: StyleMask, styles?: Style[]) {\r\n            if (!styles)\r\n                styles = getImplicitStyles(fe, mask);\r\n            if (styles) {\r\n                var error = new BError();\r\n                var len = StyleIndex.Count;\r\n                for (var i = 0; i < len; i++) {\r\n                    var style = styles[i];\r\n                    if (!style)\r\n                        continue;\r\n                    if (!style.Validate(fe, error)) {\r\n                        error.ThrowException();\r\n                        //Warn(\"Style validation failed. [\" + error.Message + \"]\");\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            ImplicitStyleBroker.SetImpl(fe, mask, styles);\r\n        }\r\n\r\n        private static SetImpl (fe: FrameworkElement, mask: StyleMask, styles: Style[]) {\r\n            if (!styles)\r\n                return;\r\n\r\n            var oldStyles = (<IImplicitStyleHolder>fe.XamlNode)._ImplicitStyles;\r\n            var newStyles: Style[] = [null, null, null];\r\n            if (oldStyles) {\r\n                newStyles[StyleIndex.Theme] = oldStyles[StyleIndex.Theme];\r\n                newStyles[StyleIndex.ApplicationResources] = oldStyles[StyleIndex.ApplicationResources];\r\n                newStyles[StyleIndex.VisualTree] = oldStyles[StyleIndex.VisualTree];\r\n            }\r\n            if (mask & StyleMask.Theme)\r\n                newStyles[StyleIndex.Theme] = styles[StyleIndex.Theme];\r\n            if (mask & StyleMask.ApplicationResources)\r\n                newStyles[StyleIndex.ApplicationResources] = styles[StyleIndex.ApplicationResources];\r\n            if (mask & StyleMask.VisualTree)\r\n                newStyles[StyleIndex.VisualTree] = styles[StyleIndex.VisualTree];\r\n\r\n            ImplicitStyleBroker.ApplyStyles(fe, mask, styles);\r\n        }\r\n\r\n        static Clear (fe: FrameworkElement, mask: StyleMask) {\r\n            var holder = <IImplicitStyleHolder>fe.XamlNode;\r\n            var oldStyles = holder._ImplicitStyles;\r\n            if (!oldStyles)\r\n                return;\r\n\r\n            var newStyles = oldStyles.slice(0);\r\n            //TODO: Do we need a deep copy?\r\n            if (mask & StyleMask.Theme)\r\n                newStyles[StyleIndex.Theme] = null;\r\n            if (mask & StyleMask.ApplicationResources)\r\n                newStyles[StyleIndex.ApplicationResources] = null;\r\n            if (mask & StyleMask.VisualTree)\r\n                newStyles[StyleIndex.VisualTree] = null;\r\n\r\n            ImplicitStyleBroker.ApplyStyles(fe, holder._StyleMask & ~mask, newStyles);\r\n        }\r\n\r\n        private static ApplyStyles (fe: FrameworkElement, mask: StyleMask, styles: Style[]) {\r\n            var holder = <IImplicitStyleHolder>fe.XamlNode;\r\n\r\n            var oldStyles = holder._ImplicitStyles;\r\n            var isChanged = !oldStyles || mask !== holder._StyleMask;\r\n            if (!isChanged) {\r\n                for (var i = 0; i < StyleIndex.Count; i++) {\r\n                    if (styles[i] !== oldStyles[i]) {\r\n                        isChanged = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (!isChanged)\r\n                return;\r\n\r\n            SwapStyles(fe, MultipleStylesWalker(oldStyles), MultipleStylesWalker(styles), true);\r\n\r\n            holder._ImplicitStyles = styles;\r\n            holder._StyleMask = mask;\r\n        }\r\n    }\r\n\r\n    function getImplicitStyles (fe: FrameworkElement, mask: StyleMask): Style[] {\r\n        var styles = [];\r\n        if ((mask & StyleMask.Theme) != 0) {\r\n            styles[StyleIndex.Theme] = getThemeStyle(fe);\r\n        }\r\n\r\n        if ((mask & StyleMask.ApplicationResources) != 0) {\r\n            var app = Application.Current;\r\n            if (app)\r\n                styles[StyleIndex.ApplicationResources] = getAppResourcesStyle(app, fe);\r\n        }\r\n\r\n        if ((mask & StyleMask.VisualTree) != 0)\r\n            styles[StyleIndex.VisualTree] = getVisualTreeStyle(fe);\r\n\r\n        return styles;\r\n    }\r\n\r\n    function getThemeStyle (fe: FrameworkElement): Style {\r\n        if (fe instanceof Controls.Control) {\r\n            var style = (<Controls.Control>fe).GetDefaultStyle();\r\n            if (style)\r\n                return style;\r\n        }\r\n        return ThemeManager.FindStyle(fe.DefaultStyleKey);\r\n    }\r\n\r\n    function getAppResourcesStyle (app: Application, fe: FrameworkElement): Style {\r\n        return <Style>app.Resources.Get(fe.DefaultStyleKey);\r\n    }\r\n\r\n    function getVisualTreeStyle (fe: FrameworkElement): Style {\r\n        var key = fe.DefaultStyleKey;\r\n        var cur = fe;\r\n        var isControl = cur instanceof Controls.Control;\r\n        var curNode = fe.XamlNode;\r\n        var rd: ResourceDictionary;\r\n\r\n        while (curNode) {\r\n            cur = curNode.XObject;\r\n            if (cur.TemplateOwner && !fe.TemplateOwner) {\r\n                cur = <FrameworkElement>cur.TemplateOwner;\r\n                curNode = cur.XamlNode;\r\n                continue;\r\n            }\r\n            if (!isControl && cur === fe.TemplateOwner)\r\n                break;\r\n\r\n            rd = cur.Resources;\r\n            if (rd) {\r\n                var style = <Style>rd.Get(key);\r\n                if (style)\r\n                    return style;\r\n            }\r\n\r\n            curNode = <FENode>curNode.VisualParentNode;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n}","\r\nmodule Fayde.Providers {\r\n    export interface IStyleHolder {\r\n        _LocalStyle: Style;\r\n    }\r\n\r\n    export class LocalStyleBroker {\r\n        static Set(fe: FrameworkElement, newStyle: Style) {\r\n            var holder = <IStyleHolder>fe.XamlNode;\r\n            if (newStyle)\r\n                newStyle.Seal();\r\n            SwapStyles(fe, SingleStyleWalker(holder._LocalStyle), SingleStyleWalker(newStyle), false);\r\n            holder._LocalStyle = newStyle;\r\n        }\r\n    }\r\n}","module Fayde.Providers {\r\n    export function SwapStyles(fe: FrameworkElement, oldWalker: IStyleWalker, newWalker: IStyleWalker, isImplicit: boolean) {\r\n        var arr = (<IPropertyStorageOwner>fe)._PropertyStorage;\r\n        var oldSetter = oldWalker.Step();\r\n        var newSetter = newWalker.Step();\r\n\r\n        var storage: IPropertyStorage;\r\n        var value: any;\r\n        var propd: DependencyProperty;\r\n        while (oldSetter || newSetter) {\r\n            if (oldSetter && newSetter) {\r\n                switch (Setter.Compare(oldSetter, newSetter)) {\r\n                    case 0:\r\n                        value = newSetter.ConvertedValue;\r\n                        propd = newSetter.Property;\r\n                        oldSetter = oldWalker.Step();\r\n                        newSetter = newWalker.Step();\r\n                        break;\r\n                    case -1:\r\n                        value = undefined;\r\n                        propd = oldSetter.Property;\r\n                        oldSetter = oldWalker.Step();\r\n                        break;\r\n                    case 1:\r\n                        value = newSetter.ConvertedValue;\r\n                        propd = newSetter.Property;\r\n                        newSetter = newWalker.Step();\r\n                        break;\r\n                }\r\n            } else if (newSetter) {\r\n                value = newSetter.ConvertedValue;\r\n                propd = newSetter.Property;\r\n                newSetter = newWalker.Step();\r\n            } else /*if (oldSetter)*/ {\r\n                value = undefined;\r\n                propd = oldSetter.Property;\r\n                oldSetter = oldWalker.Step();\r\n            }\r\n\r\n            storage = arr[propd._ID];\r\n            if (!storage)\r\n                storage = arr[propd._ID] = propd.Store.CreateStorage(fe, propd);\r\n            if (isImplicit)\r\n                propd.Store.SetImplicitStyle(storage, value);\r\n            else\r\n                propd.Store.SetLocalStyleValue(storage, value);\r\n        }\r\n    }\r\n}","module Fayde.Data {\r\n    interface IParseData {\r\n        index: number;\r\n        i: number;\r\n        end: number;\r\n        path: string;\r\n        parenOpen: boolean;\r\n        tickOpen: boolean;\r\n        prop: string;\r\n        res: DependencyProperty;\r\n        cloned: boolean;\r\n        expressionFound: boolean;\r\n        lu: DependencyObject;\r\n        collection: XamlObjectCollection<any>;\r\n        promotedValues: any[];\r\n        explicitType: boolean;\r\n        type: Function;\r\n    }\r\n\r\n    export interface IOutValue {\r\n        Value: any;\r\n    }\r\n\r\n    var lookupNamespaces: any[];\r\n    function lookupType(name: string) {\r\n        if (!lookupNamespaces) {\r\n            lookupNamespaces = [\r\n                Fayde,\r\n                Fayde.Controls,\r\n                Fayde.Media,\r\n                Fayde.Controls.Primitives, \r\n                Fayde.Shapes, \r\n                window];\r\n        }\r\n\r\n        var len = lookupNamespaces.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var potentialType = lookupNamespaces[i][name];\r\n            if (typeof potentialType === \"function\")\r\n                return potentialType;\r\n        }\r\n        return eval(name);\r\n    }\r\n\r\n    function handlePeriod(data: IParseData): boolean {\r\n        if (data.tickOpen)\r\n            return true;\r\n        if (data.res != null) {\r\n            var value = null;\r\n            if ((value = data.lu.GetValue(data.res)) == null)\r\n                return false;\r\n            if (!(value instanceof DependencyObject))\r\n                return false;\r\n\r\n            var newLu = value;\r\n            if (data.promotedValues && data.promotedValues[value._ID] == null && !(value instanceof UIElement)) {\r\n                var clonedValue = Fayde.Clone(value);\r\n                if (clonedValue instanceof DependencyObject) {\r\n                    newLu = clonedValue;\r\n                    data.lu.SetCurrentValue(data.res, clonedValue);\r\n                    clonedValue = data.lu.GetValue(data.res);\r\n                    data.promotedValues[clonedValue._ID] = clonedValue;\r\n                }\r\n            }\r\n\r\n            data.lu = newLu;\r\n        }\r\n        data.expressionFound = false;\r\n        data.prop = data.path.substr(data.index);\r\n        return true;\r\n    }\r\n    function handleLeftBracket (data: IParseData): boolean {\r\n        if (data.index >= data.end)\r\n            return;\r\n\r\n        var hasLeadingZeroes = false;\r\n        while (data.path.charAt(data.index) === '0') {\r\n            hasLeadingZeroes = true;\r\n            data.index++;\r\n        }\r\n        data.i = parseInt(data.path.substr(data.index), 10);\r\n        if (!isNaN(data.i))\r\n            data.index += data.i.toString().length;\r\n        if (isNaN(data.i) && hasLeadingZeroes)\r\n            data.i = 0;\r\n\r\n        if (data.path.charAt(data.index) !== ']' || data.path.charAt(data.index + 1) !== '.')\r\n            return true;\r\n\r\n        data.prop = data.path = data.path.substr(data.index + 2);\r\n        data.index = 0;\r\n        data.end = data.path.length;\r\n\r\n        var value = null;\r\n        if (data.expressionFound) {\r\n            data.expressionFound = false;\r\n            if ((value = data.lu.GetValue(data.res)) == null)\r\n                return false;\r\n        }\r\n\r\n        if (value instanceof XamlObjectCollection) {\r\n            data.collection = <XamlObjectCollection<any>>value;\r\n        } else {\r\n            data.collection = null;\r\n            return false;\r\n        }\r\n\r\n        if ((value = (<XamlObjectCollection<any>>data.collection).GetValueAt(data.i)) == null)\r\n            return false;\r\n\r\n        if (value instanceof DependencyObject) {\r\n            data.lu = <DependencyObject>value;\r\n        } else {\r\n            data.lu = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n    function handleDefault(data: IParseData): boolean {\r\n        var explicitType = false;\r\n        data.expressionFound = true;\r\n        var start = data.index - 1;\r\n\r\n        var c;\r\n        while (data.index < data.end) {\r\n            c = data.path.charAt(data.index);\r\n            if (!((c !== '.' || data.tickOpen) && (!data.parenOpen || c !== ')') && c !== '['))\r\n                break;\r\n            data.index++;\r\n            if (c === '\\'') {\r\n                data.tickOpen = !data.tickOpen;\r\n                if (!data.tickOpen)\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (data.index === data.end) {\r\n            // This happened because a property at the end of the path ended like this: '.Property'\r\n            // We only fail if we can't find the property\r\n            data.type = (<any>data.lu).constructor;\r\n        } else {\r\n            c = data.path.charAt(data.index);\r\n            if (c === '.') {\r\n                // we found a type name, now find the property name\r\n                if ((data.index - start) === 11 && data.path.substr(start, 11).toLowerCase() === \"textelement\") { //bug workaround from Blend\r\n                    data.type = Controls.TextBlock;\r\n                    data.explicitType = true;\r\n                } else {\r\n                    var s = data.index;\r\n                    if (data.path.charAt(data.index - 1) === '\\'' && !data.tickOpen) {\r\n                        s = data.index - 1;\r\n                    }\r\n                    var name = data.path.slice(start, s);\r\n                    data.type = lookupType(name);\r\n                    data.explicitType = true;\r\n                    if (!data.type)\r\n                        data.type = (<any>data.lu).constructor;\r\n                }\r\n                data.index++;\r\n                start = data.index;\r\n                while (data.index < data.end) {\r\n                    c = data.path.charAt(data.index);\r\n                    if (!((!data.parenOpen || c !== ')') && (c !== '.' || data.tickOpen)))\r\n                        break;\r\n                    data.index++;\r\n                    if (c === '\\'') {\r\n                        data.tickOpen = !data.tickOpen;\r\n                        if (!data.tickOpen)\r\n                            break;\r\n                    }\r\n                }\r\n                if (data.index === start)\r\n                    return false;\r\n            } else {\r\n                data.type = (<any>data.lu).constructor;\r\n                data.explicitType = false;\r\n            }\r\n\r\n            c = data.path.charAt(data.index);\r\n            if ((c !== ')' && data.parenOpen) || data.type == null)\r\n                return false;\r\n        }\r\n        name = data.path.slice(start, data.index);\r\n        if ((data.res = DependencyProperty.GetDependencyProperty(data.type, name)) == null && data.lu)\r\n            data.res = DependencyProperty.GetDependencyProperty((<any>data.lu).constructor, name);\r\n\r\n        if (data.res == null)\r\n            return false;\r\n\r\n        if (!data.res.IsAttached && !(data.lu instanceof data.type)) {\r\n            if ((data.res = DependencyProperty.GetDependencyProperty((<any>data.lu).constructor, name)) == null)\r\n                return false;\r\n        }\r\n\r\n        if (data.res.IsAttached && data.explicitType && !data.parenOpen)\r\n            return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    export class PropertyPath implements ICloneable {\r\n        private _Path: string;\r\n        private _ExpandedPath: string;\r\n        private _Propd: DependencyProperty = null;\r\n        constructor(path?: string, expandedPath?: string) {\r\n            this._Path = path;\r\n            this._ExpandedPath = expandedPath;\r\n        }\r\n\r\n        static CreateFromParameter(parameter) {\r\n            var p = new PropertyPath();\r\n            if (parameter instanceof DependencyProperty)\r\n                p._Propd = <DependencyProperty>parameter;\r\n            p._Path = null;\r\n            if (parameter instanceof String)\r\n                p._Path = parameter;\r\n            return p;\r\n        }\r\n\r\n        TryResolveDependencyProperty(refobj: IOutValue, promotedValues: any[]): DependencyProperty {\r\n            if (this._Propd)\r\n                return this._Propd;\r\n            var ov = refobj.Value;\r\n            var propd = PropertyPath.ResolvePropertyPath(refobj, this, promotedValues);\r\n            if (ov === refobj.Value)\r\n                this._Propd = propd;\r\n            return propd;\r\n        }\r\n\r\n        get Path(): string { return this._Path; }\r\n        get ExpandedPath(): string { return this._ExpandedPath; }\r\n        get ParsePath(): string {\r\n            if (this._Propd)\r\n                return \"(0)\";\r\n            if (this._ExpandedPath)\r\n                return this._ExpandedPath;\r\n            return this._Path;\r\n        }\r\n        get HasDependencyProperty() { return this._Propd != null; }\r\n        get DependencyProperty() { return this._Propd; }\r\n\r\n        static ResolvePropertyPath(refobj: IOutValue, propertyPath: PropertyPath, promotedValues: any[]): DependencyProperty {\r\n            var path = propertyPath.Path;\r\n            var expanded = propertyPath.ExpandedPath;\r\n            if (expanded != null)\r\n                path = expanded;\r\n\r\n            var data: IParseData = {\r\n                index: 0,\r\n                i: 0,\r\n                end: path.length,\r\n                path: path,\r\n                parenOpen: false,\r\n                tickOpen: false,\r\n                prop: path,\r\n                res: null,\r\n                cloned: false,\r\n                expressionFound: false,\r\n                lu: refobj.Value,\r\n                collection: null,\r\n                promotedValues: promotedValues,\r\n                explicitType: false,\r\n                type: null,\r\n            };\r\n\r\n            var success;\r\n            while (data.index < data.end) {\r\n                success = true;\r\n                var c = data.path.charAt(data.index);\r\n                data.index++;\r\n                if (c === '(') {\r\n                    data.parenOpen = true;\r\n                } else if (c === ')') {\r\n                    data.parenOpen = false;\r\n                } else if (c === '\\'') {//Ticks only legal in expanded path\r\n                    if (!propertyPath.ExpandedPath)\r\n                        console.warn(\"The ' character is not legal in property paths.\");\r\n                    else\r\n                        data.tickOpen = !data.tickOpen;\r\n                } else if (c === '.') {\r\n                    success = handlePeriod(data);\r\n                } else if (c === '[') {\r\n                    success = handleLeftBracket(data);\r\n                } else {\r\n                    success = handleDefault(data);\r\n                }\r\n                if (!success) {\r\n                    refobj.Value = null;\r\n                    return null;\r\n                }\r\n            }\r\n            refobj.Value = data.lu;\r\n            return data.res;\r\n        }\r\n\r\n        Clone(): PropertyPath {\r\n            return new PropertyPath(this._Path, this._ExpandedPath);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(PropertyPath);\r\n    nullstone.registerTypeConverter(PropertyPath, (val: any): any => {\r\n        if (!val)\r\n            return new PropertyPath();\r\n        if (val instanceof PropertyPath)\r\n            return val;\r\n        return new PropertyPath(val.toString());\r\n    });\r\n}","\r\nmodule Fayde.Data {\r\n    export interface IPropertyPathParserData {\r\n        typeName: string;\r\n        propertyName: string;\r\n        index: number;\r\n    }\r\n\r\n    export enum PropertyNodeType {\r\n        None = 0,\r\n        AttachedProperty = 1,\r\n        Indexed = 2,\r\n        Property = 3,\r\n    }\r\n\r\n    /// Property Path Syntax\r\n    /// http://msdn.microsoft.com/en-us/library/cc645024(v=vs.95).aspx\r\n    export class PropertyPathParser {\r\n        Path: string;\r\n        constructor(path: string) {\r\n            this.Path = path;\r\n        }\r\n\r\n        Step(data: IPropertyPathParserData): PropertyNodeType {\r\n            var type = PropertyNodeType.None;\r\n            var path = this.Path;\r\n            if (path.length === 0) {\r\n                data.typeName = null;\r\n                data.propertyName = null;\r\n                data.index = null;\r\n                return type;\r\n            }\r\n\r\n            var end: number = 0;\r\n            if (path.charAt(0) === '(') {\r\n                type = PropertyNodeType.AttachedProperty;\r\n                end = path.indexOf(')');\r\n                if (end === -1)\r\n                    throw new ArgumentException(\"Invalid property path. Attached property is missing the closing bracket\");\r\n\r\n                var tickOpen = path.indexOf('\\'');\r\n                var tickClose = 0;\r\n                var typeOpen: number;\r\n                var typeClose: number;\r\n                var propOpen: number;\r\n                var propClose: number;\r\n\r\n                typeOpen = path.indexOf('\\'');\r\n                if (typeOpen > 0) {\r\n                    typeOpen++;\r\n\r\n                    typeClose = path.indexOf('\\'', typeOpen + 1);\r\n                    if (typeClose < 0)\r\n                        throw new Exception(\"Invalid property path, Unclosed type name '\" + path + \"'.\");\r\n\r\n                    propOpen = path.indexOf('.', typeClose);\r\n                    if (propOpen < 0)\r\n                        throw new Exception(\"Invalid properth path, No property indexer found '\" + path + \"'.\");\r\n\r\n                    propOpen++;\r\n                } else {\r\n                    typeOpen = 1;\r\n                    typeClose = path.indexOf('.', typeOpen);\r\n                    if (typeClose < 0)\r\n                        throw new Exception(\"Invalid property path, No property indexer found on '\" + path + \"'.\");\r\n                    propOpen = typeClose + 1;\r\n                }\r\n\r\n                propClose = end;\r\n\r\n                data.typeName = path.slice(typeOpen, typeClose);\r\n                data.propertyName = path.slice(propOpen, propClose);\r\n\r\n                data.index = null;\r\n                if (path.length > (end + 1) && path.charAt(end + 1) === '.')\r\n                    end++;\r\n                path = path.substr(end + 1);\r\n            } else if (path.charAt(0) === '[') {\r\n                type = PropertyNodeType.Indexed;\r\n                end = path.indexOf(']');\r\n\r\n                data.typeName = null;\r\n                data.propertyName = null;\r\n                data.index = parseInt(path.substr(1, end - 1));\r\n                path = path.substr(end + 1);\r\n                if (path.charAt(0) === '.')\r\n                    path = path.substr(1);\r\n            } else {\r\n                type = PropertyNodeType.Property;\r\n                end = indexOfAny(path, ['.', '[']);\r\n\r\n                if (end === -1) {\r\n                    data.propertyName = path;\r\n                    path = \"\";\r\n                } else {\r\n                    data.propertyName = path.substr(0, end);\r\n                    if (path.charAt(end) === '.')\r\n                        path = path.substr(end + 1);\r\n                    else\r\n                        path = path.substr(end);\r\n                }\r\n\r\n                data.typeName = null;\r\n                data.index = null;\r\n            }\r\n            this.Path = path;\r\n\r\n            return type;\r\n        }\r\n    }\r\n\r\n    function indexOfAny(str: string, carr: string[], start?: number): number {\r\n        if (!carr)\r\n            return -1;\r\n        if (!start) start = 0;\r\n        for (var cur = start; cur < str.length; cur++) {\r\n            var c = str.charAt(cur);\r\n            for (var i = 0; i < carr.length; i++) {\r\n                if (c === carr[i])\r\n                    return cur;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n}","module Fayde.Data {\r\n    export interface IPropertyPathWalkerListener {\r\n        IsBrokenChanged();\r\n        ValueChanged();\r\n    }\r\n\r\n    export interface IPropertyPathNode {\r\n        Next: IPropertyPathNode;\r\n        Value: any;\r\n        IsBroken: boolean;\r\n        ValueType: IType;\r\n        GetSource(): any;\r\n        SetSource(source: any);\r\n        SetValue(value: any);\r\n        Listen(listener: IPropertyPathNodeListener);\r\n        Unlisten(listener: IPropertyPathNodeListener);\r\n    }\r\n    export interface ICollectionViewNode extends IPropertyPathNode {\r\n        BindToView: boolean;\r\n    }\r\n    export interface IPropertyPathNodeListener {\r\n        IsBrokenChanged(node: IPropertyPathNode);\r\n        ValueChanged(node: IPropertyPathNode);\r\n    }\r\n\r\n    export class PropertyPathWalker implements IPropertyPathNodeListener {\r\n        Path: string;\r\n        IsDataContextBound: boolean;\r\n        Source: any;\r\n        ValueInternal: any;\r\n        Node: IPropertyPathNode;\r\n        FinalNode: IPropertyPathNode;\r\n        private _Listener: IPropertyPathWalkerListener;\r\n\r\n        get IsPathBroken (): boolean {\r\n            var path = this.Path;\r\n            if (this.IsDataContextBound && (!path || path.length < 1))\r\n                return false;\r\n\r\n            var node = this.Node;\r\n            while (node) {\r\n                if (node.IsBroken)\r\n                    return true;\r\n                node = node.Next;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        get FinalPropertyName (): string {\r\n            var final = <StandardPropertyPathNode>this.FinalNode;\r\n            if (final instanceof StandardPropertyPathNode)\r\n                return final.PropertyInfo ? final.PropertyInfo.name : \"\";\r\n            var lastName = \"\";\r\n            for (var cur = this.Node; cur; cur = cur.Next) {\r\n                if (cur instanceof StandardPropertyPathNode)\r\n                    lastName = (<StandardPropertyPathNode>cur).PropertyInfo ? (<StandardPropertyPathNode>cur).PropertyInfo.name : \"\";\r\n            }\r\n            return lastName;\r\n        }\r\n\r\n        constructor (path: string, bindDirectlyToSource?: boolean, bindsToView?: boolean, isDataContextBound?: boolean) {\r\n            bindDirectlyToSource = bindDirectlyToSource !== false;\r\n            bindsToView = bindsToView === true;\r\n            this.IsDataContextBound = isDataContextBound === true;\r\n\r\n            this.Path = path;\r\n            this.IsDataContextBound = isDataContextBound;\r\n\r\n            var lastCVNode: ICollectionViewNode = null;\r\n\r\n            if (!path || path === \".\") {\r\n                lastCVNode = new CollectionViewNode(bindDirectlyToSource, bindsToView);\r\n                this.Node = lastCVNode;\r\n                this.FinalNode = lastCVNode;\r\n            } else {\r\n                var data: IPropertyPathParserData = {\r\n                    typeName: undefined,\r\n                    propertyName: undefined,\r\n                    index: undefined\r\n                };\r\n                var type: PropertyNodeType;\r\n                var parser = new PropertyPathParser(path);\r\n                while ((type = parser.Step(data)) !== PropertyNodeType.None) {\r\n                    var isViewProperty = false;\r\n                    //boolean isViewProperty = CollectionViewProperties.Any (prop => prop.Name == propertyName);\r\n                    //          static readonly PropertyInfo[] CollectionViewProperties = typeof (ICollectionView).GetProperties ();\r\n                    var node = lastCVNode = new CollectionViewNode(bindDirectlyToSource, isViewProperty);\r\n                    switch (type) {\r\n                        case PropertyNodeType.AttachedProperty:\r\n                        case PropertyNodeType.Property:\r\n                            node.Next = new StandardPropertyPathNode(data.typeName, data.propertyName);\r\n                            break;\r\n                        case PropertyNodeType.Indexed:\r\n                            node.Next = new IndexedPropertyPathNode(data.index);\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    if (this.FinalNode)\r\n                        this.FinalNode.Next = node;\r\n                    else\r\n                        this.Node = node;\r\n                    this.FinalNode = node.Next;\r\n                }\r\n            }\r\n\r\n            lastCVNode.BindToView = lastCVNode.BindToView || bindsToView;\r\n\r\n            this.FinalNode.Listen(this);\r\n        }\r\n\r\n        GetValue (item: any) {\r\n            this.Update(item);\r\n            var o = this.FinalNode.Value;\r\n            return o;\r\n        }\r\n\r\n        Update (source: any) {\r\n            this.Source = source;\r\n            this.Node.SetSource(source);\r\n        }\r\n\r\n        Listen (listener: IPropertyPathWalkerListener) {\r\n            this._Listener = listener;\r\n        }\r\n\r\n        Unlisten (listener: IPropertyPathWalkerListener) {\r\n            if (this._Listener === listener) this._Listener = null;\r\n        }\r\n\r\n        IsBrokenChanged (node: IPropertyPathNode) {\r\n            this.ValueInternal = node.Value;\r\n            var listener = this._Listener;\r\n            if (listener) listener.IsBrokenChanged();\r\n        }\r\n\r\n        ValueChanged (node: IPropertyPathNode) {\r\n            this.ValueInternal = node.Value;\r\n            var listener = this._Listener;\r\n            if (listener) listener.ValueChanged();\r\n        }\r\n\r\n        GetContext (): any {\r\n            var context: IPropertyPathNode = null;\r\n            var cur = this.Node;\r\n            var final = this.FinalNode;\r\n            while (cur && cur !== final) {\r\n                context = cur;\r\n                cur = cur.Next;\r\n            }\r\n            if (!context) return undefined;\r\n            return context.Value;\r\n        }\r\n    }\r\n\r\n    class PropertyPathNode implements IPropertyPathNode {\r\n        Next: IPropertyPathNode;\r\n        _IsBroken: boolean;\r\n        _Source: any;\r\n        private _Value: any;\r\n        DependencyProperty: DependencyProperty;\r\n        PropertyInfo: any;\r\n        private _NodeListener: IPropertyPathNodeListener;\r\n        ValueType: IType;\r\n\r\n        get IsBroken (): boolean {\r\n            return this._IsBroken;\r\n        }\r\n\r\n        get Source (): any {\r\n            return this._Source;\r\n        }\r\n\r\n        get Value (): any {\r\n            return this._Value;\r\n        }\r\n\r\n        Listen (listener: IPropertyPathNodeListener) {\r\n            this._NodeListener = listener;\r\n        }\r\n\r\n        Unlisten (listener: IPropertyPathNodeListener) {\r\n            if (this._NodeListener === listener) this._NodeListener = null;\r\n        }\r\n\r\n        OnSourceChanged (oldSource, newSource) {\r\n        }\r\n\r\n        OnSourcePropertyChanged (o, e) {\r\n        }\r\n\r\n        UpdateValue () {\r\n            throw new Exception(\"No override for abstract method: PropertyPathNode.UpdateValue\");\r\n        }\r\n\r\n        SetValue (value: any) {\r\n            throw new Exception(\"No override for abstract method: PropertyPathNode.SetValue\");\r\n        }\r\n\r\n        GetSource (): any {\r\n            return this._Source;\r\n        }\r\n\r\n        SetSource (value: any) {\r\n            if (value == null || value !== this._Source) {\r\n                var oldSource = this._Source;\r\n                var npc = INotifyPropertyChanged_.as(oldSource);\r\n                if (npc)\r\n                    npc.PropertyChanged.off(this.OnSourcePropertyChanged, this);\r\n                this._Source = value;\r\n                npc = INotifyPropertyChanged_.as(this._Source);\r\n                if (npc)\r\n                    npc.PropertyChanged.on(this.OnSourcePropertyChanged, this);\r\n\r\n                this.OnSourceChanged(oldSource, this._Source);\r\n                this.UpdateValue();\r\n                if (this.Next)\r\n                    this.Next.SetSource(this._Value);\r\n            }\r\n        }\r\n\r\n        UpdateValueAndIsBroken (newValue: any, isBroken: boolean) {\r\n            var emitBrokenChanged = this._IsBroken !== isBroken;\r\n            var emitValueChanged = !nullstone.equals(this.Value, newValue);\r\n\r\n            this._IsBroken = isBroken;\r\n            this._Value = newValue;\r\n\r\n            if (emitValueChanged) {\r\n                var listener = this._NodeListener;\r\n                if (listener) listener.ValueChanged(this);\r\n            } else if (emitBrokenChanged) {\r\n                var listener = this._NodeListener;\r\n                if (listener) listener.IsBrokenChanged(this);\r\n            }\r\n        }\r\n\r\n        _CheckIsBroken (): boolean {\r\n            return !this.Source || (!this.PropertyInfo && !this.DependencyProperty);\r\n        }\r\n    }\r\n\r\n    class StandardPropertyPathNode extends PropertyPathNode {\r\n        private _STypeName: string;\r\n        private _PropertyName: string;\r\n        PropertyInfo: nullstone.IPropertyInfo;\r\n        private _DPListener: Providers.IPropertyChangedListener;\r\n\r\n        constructor (typeName: string, propertyName: string) {\r\n            super();\r\n            this._STypeName = typeName;\r\n            this._PropertyName = propertyName;\r\n        }\r\n\r\n        SetValue (value: any) {\r\n            if (this.DependencyProperty)\r\n                (<DependencyObject>this.Source).SetValue(this.DependencyProperty, value);\r\n            else if (this.PropertyInfo)\r\n                this.PropertyInfo.setValue(this.Source, value);\r\n        }\r\n\r\n        UpdateValue () {\r\n            if (this.DependencyProperty) {\r\n                this.ValueType = this.DependencyProperty.GetTargetType();\r\n                this.UpdateValueAndIsBroken((<DependencyObject>this.Source).GetValue(this.DependencyProperty), this._CheckIsBroken());\r\n            } else if (this.PropertyInfo) {\r\n                //TODO: this.ValueType = PropertyInfo.PropertyType;\r\n                this.ValueType = null;\r\n                try {\r\n                    this.UpdateValueAndIsBroken(this.PropertyInfo.getValue(this.Source), this._CheckIsBroken());\r\n                } catch (err) {\r\n                    this.UpdateValueAndIsBroken(null, this._CheckIsBroken());\r\n                }\r\n            } else {\r\n                this.ValueType = null;\r\n                this.UpdateValueAndIsBroken(null, this._CheckIsBroken());\r\n            }\r\n        }\r\n\r\n        OnSourceChanged (oldSource: any, newSource: any) {\r\n            super.OnSourceChanged(oldSource, newSource);\r\n\r\n            var oldDO: DependencyObject;\r\n            var newDO: DependencyObject;\r\n            if (oldSource instanceof DependencyObject) oldDO = <DependencyObject>oldSource;\r\n            if (newSource instanceof DependencyObject) newDO = <DependencyObject>newSource;\r\n\r\n            var listener = this._DPListener;\r\n            if (listener) {\r\n                listener.Detach();\r\n                this._DPListener = listener = null;\r\n            }\r\n\r\n            this.DependencyProperty = null;\r\n            this.PropertyInfo = null;\r\n            if (!this.Source)\r\n                return;\r\n\r\n            var type = this.Source.constructor;\r\n            var typeName = this._STypeName;\r\n            if (typeName) {\r\n                if (typeName.indexOf(\":\") > -1)\r\n                    console.warn(\"[Not supported] Cannot resolve type name outside of default namespace.\", typeName);\r\n                var oresolve = { type: undefined, isPrimitive: false };\r\n                if (CoreLibrary.resolveType(null, typeName, oresolve))\r\n                    type = oresolve.type;\r\n            }\r\n\r\n            if (newDO) {\r\n                var propd = DependencyProperty.GetDependencyProperty(type, this._PropertyName, true);\r\n                if (propd) {\r\n                    this.DependencyProperty = propd;\r\n                    this._DPListener = listener = propd.Store.ListenToChanged(newDO, propd, this.OnPropertyChanged, this);\r\n                }\r\n            }\r\n\r\n            if (!this.DependencyProperty || !this.DependencyProperty.IsAttached) {\r\n                this.PropertyInfo = nullstone.PropertyInfo.find(this.Source, this._PropertyName);\r\n            }\r\n        }\r\n\r\n        OnPropertyChanged (sender, args: IDependencyPropertyChangedEventArgs) {\r\n            try {\r\n                this.UpdateValue();\r\n                if (this.Next)\r\n                    this.Next.SetSource(this.Value);\r\n            } catch (err) {\r\n                //Ignore\r\n            }\r\n        }\r\n\r\n        OnSourcePropertyChanged (sender, e) {\r\n            if (e.PropertyName === this._PropertyName && this.PropertyInfo) {\r\n                this.UpdateValue();\r\n                var next = this.Next;\r\n                if (next)\r\n                    next.SetSource(this.Value);\r\n            }\r\n        }\r\n    }\r\n    class CollectionViewNode extends PropertyPathNode implements ICollectionViewNode {\r\n        BindsDirectlyToSource: boolean;\r\n        BindToView: boolean;\r\n        private _ViewPropertyListener: Providers.IPropertyChangedListener;\r\n        private _View: ICollectionView;\r\n\r\n        constructor (bindsDirectlyToSource: boolean, bindToView: boolean) {\r\n            super();\r\n            this.BindsDirectlyToSource = bindsDirectlyToSource === true;\r\n            this.BindToView = bindToView === true;\r\n        }\r\n\r\n        OnSourceChanged (oldSource: any, newSource: any) {\r\n            super.OnSourceChanged(oldSource, newSource);\r\n            this.DisconnectViewHandlers();\r\n            this.ConnectViewHandlers(newSource, newSource);\r\n        }\r\n\r\n        ViewChanged (sender: any, e: IDependencyPropertyChangedEventArgs) {\r\n            this.DisconnectViewHandlers(true);\r\n            this.ConnectViewHandlers(null, e.NewValue);\r\n            this.ViewCurrentChanged(this, null);\r\n        }\r\n\r\n        ViewCurrentChanged (sender: any, e: nullstone.IEventArgs) {\r\n            this.UpdateValue();\r\n            if (this.Next)\r\n                this.Next.SetSource(this.Value);\r\n        }\r\n\r\n        SetValue () {\r\n            throw new NotSupportedException(\"SetValue\");\r\n        }\r\n\r\n        UpdateValue () {\r\n            var src = this.Source;\r\n            if (!this.BindsDirectlyToSource) {\r\n                var view: ICollectionView;\r\n                if (src instanceof CollectionViewSource)\r\n                    src = view = src.View;\r\n                else\r\n                    view = ICollectionView_.as(src);\r\n                if (view && !this.BindToView)\r\n                    src = view.CurrentItem;\r\n            }\r\n            this.ValueType = src == null ? null : src.constructor;\r\n            this.UpdateValueAndIsBroken(src, this._CheckIsBroken());\r\n        }\r\n\r\n        _CheckIsBroken (): boolean {\r\n            return this.Source == null;\r\n        }\r\n\r\n        ConnectViewHandlers (source: CollectionViewSource, view: ICollectionView) {\r\n            if (source instanceof CollectionViewSource) {\r\n                this._ViewPropertyListener = CollectionViewSource.ViewProperty.Store.ListenToChanged(source, CollectionViewSource.ViewProperty, this.ViewChanged, this);\r\n                view = source.View;\r\n            }\r\n            this._View = ICollectionView_.as(view);\r\n            if (this._View)\r\n                this._View.CurrentChanged.on(this.ViewCurrentChanged, this);\r\n        }\r\n\r\n        DisconnectViewHandlers (onlyView?: boolean) {\r\n            if (!onlyView)\r\n                onlyView = false;\r\n            if (this._ViewPropertyListener && !onlyView) {\r\n                this._ViewPropertyListener.Detach();\r\n                this._ViewPropertyListener = null;\r\n            }\r\n            if (this._View) {\r\n                this._View.CurrentChanged.off(this.ViewCurrentChanged, this);\r\n            }\r\n        }\r\n    }\r\n    class IndexedPropertyPathNode extends PropertyPathNode {\r\n        Index: number;\r\n        _Source: any;\r\n        _IsBroken: boolean;\r\n        PropertyInfo: nullstone.IndexedPropertyInfo;\r\n\r\n        constructor (index: any) {\r\n            super();\r\n            this._IsBroken = false;\r\n            var val = parseInt(index, 10);\r\n            if (!isNaN(val))\r\n                index = val;\r\n            Object.defineProperty(this, \"Index\", {value: index, writable: false});\r\n        }\r\n\r\n        UpdateValue () {\r\n            if (this.PropertyInfo == null) {\r\n                this._IsBroken = true;\r\n                this.ValueType = null;\r\n                this.UpdateValueAndIsBroken(null, this._IsBroken);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                var newVal = this.PropertyInfo.getValue(this.Source, this.Index);\r\n                this._IsBroken = false;\r\n                this.ValueType = this.PropertyInfo.propertyType;\r\n                this.UpdateValueAndIsBroken(newVal, this._IsBroken);\r\n            } catch (err) {\r\n                this._IsBroken = true;\r\n                this.ValueType = null;\r\n                this.UpdateValueAndIsBroken(null, this._IsBroken);\r\n            }\r\n        }\r\n\r\n        SetValue (value: any) {\r\n            if (this.PropertyInfo)\r\n                this.PropertyInfo.setValue(this.Source, this.Index, value);\r\n        }\r\n\r\n        _CheckIsBroken (): boolean {\r\n            return this._IsBroken || super._CheckIsBroken();\r\n        }\r\n\r\n        OnSourcePropertyChanged (o, e) {\r\n            this.UpdateValue();\r\n            if (this.Next != null)\r\n                this.Next.SetSource(this.Value);\r\n        }\r\n\r\n        OnSourceChanged (oldSource: any, newSource: any) {\r\n            super.OnSourceChanged(oldSource, newSource);\r\n\r\n            var cc = Collections.INotifyCollectionChanged_.as(oldSource);\r\n            if (cc)\r\n                cc.CollectionChanged.off(this.CollectionChanged, this);\r\n\r\n            cc = Collections.INotifyCollectionChanged_.as(newSource);\r\n            if (cc)\r\n                cc.CollectionChanged.on(this.CollectionChanged, this);\r\n\r\n            this._GetIndexer();\r\n        }\r\n\r\n        private _GetIndexer () {\r\n            this.PropertyInfo = null;\r\n            if (this._Source != null) {\r\n                this.PropertyInfo = nullstone.IndexedPropertyInfo.find(this._Source);\r\n            }\r\n        }\r\n\r\n        CollectionChanged (o, e) {\r\n            this.UpdateValue();\r\n            if (this.Next)\r\n                this.Next.SetSource(this.Value);\r\n        }\r\n    }\r\n}","module Fayde.Input.TouchInternal {\r\n    export interface ITouchHandler {\r\n        HandleTouches(type: Input.TouchInputType, touches: ActiveTouchBase[], emitLeave?: boolean, emitEnter?: boolean): boolean;\r\n    }\r\n\r\n    export class ActiveTouchBase {\r\n        Identifier: number;\r\n        Position: Point;\r\n        Device: Input.ITouchDevice;\r\n        InputList: UINode[] = [];\r\n        private _IsEmitting: boolean = false;\r\n        private _PendingCapture: UINode = null;\r\n        private _PendingReleaseCapture = false;\r\n        private _Captured: UINode = null;\r\n        private _CapturedInputList: UINode[] = null;\r\n        \r\n        private _FinishReleaseCaptureFunc: () => void;\r\n\r\n        constructor(touchHandler: ITouchHandler) {\r\n            Object.defineProperty(this, \"Device\", { value: this.CreateTouchDevice(), writable: false });\r\n            this._FinishReleaseCaptureFunc = () => touchHandler.HandleTouches(Input.TouchInputType.NoOp, [this], false, true);\r\n        }\r\n\r\n        Capture(uie: UIElement): boolean {\r\n            var uin = uie.XamlNode;\r\n            if (this._Captured === uin || this._PendingCapture === uin)\r\n                return true;\r\n            if (!this._IsEmitting)\r\n                return false;\r\n            this._PendingCapture = uin;\r\n            return true;\r\n        }\r\n        ReleaseCapture(uie: UIElement) {\r\n            var uin = uie.XamlNode;\r\n            if (this._Captured !== uin && this._PendingCapture !== uin)\r\n                return;\r\n            if (this._IsEmitting)\r\n                this._PendingReleaseCapture = true;\r\n            else\r\n                this._PerformReleaseCapture();\r\n        }\r\n        private _PerformCapture(uin: UINode) {\r\n            this._Captured = uin;\r\n            var newInputList: UINode[] = [];\r\n            while (uin != null) {\r\n                newInputList.push(uin);\r\n                uin = uin.VisualParentNode;\r\n            }\r\n            this._CapturedInputList = newInputList;\r\n            this._PendingCapture = null;\r\n        }\r\n        private _PerformReleaseCapture() {\r\n            var oldCaptured = this._Captured;\r\n            this._Captured = null;\r\n            this._PendingReleaseCapture = false;\r\n            oldCaptured._EmitLostTouchCapture(new Input.TouchEventArgs(this.Device));\r\n            this._FinishReleaseCaptureFunc();\r\n        }\r\n\r\n        Emit(type: Input.TouchInputType, newInputList: UINode[], emitLeave?: boolean, emitEnter?: boolean): boolean {\r\n            if (this._IsEmitting)\r\n                return;\r\n            this._IsEmitting = true;\r\n            var handled = false;\r\n\r\n            var indices = { Index1: -1, Index2: -1 };\r\n            findFirstCommonElement(this.InputList, newInputList, indices);\r\n            if (emitLeave !== false)\r\n                this._EmitList(Input.TouchInputType.TouchLeave, this.InputList, indices.Index1);\r\n            if (emitEnter !== false)\r\n                this._EmitList(Input.TouchInputType.TouchEnter, newInputList, indices.Index2);\r\n\r\n            var handled = false;\r\n            if (type !== Input.TouchInputType.NoOp)\r\n                handled = this._EmitList(type, this._Captured ? this._CapturedInputList : newInputList);\r\n            this.InputList = newInputList;\r\n\r\n            if (this._PendingCapture)\r\n                this._PerformCapture(this._PendingCapture);\r\n            if (this._PendingReleaseCapture)\r\n                this._PerformReleaseCapture();\r\n\r\n            this._IsEmitting = false;\r\n            return handled;\r\n        }\r\n        private _EmitList(type: Input.TouchInputType, list: UINode[], endIndex?: number): boolean {\r\n            var handled = false;\r\n            if (endIndex === 0)\r\n                return handled;\r\n            if (!endIndex || endIndex === -1)\r\n                endIndex = list.length;\r\n            var args = new Input.TouchEventArgs(this.Device);\r\n            var node = list[0];\r\n            if (node && args instanceof Fayde.RoutedEventArgs)\r\n                args.Source = node.XObject;\r\n            for (var i = 0; i < endIndex; i++) {\r\n                node = list[i];\r\n                if (type === Input.TouchInputType.TouchLeave)\r\n                    args.Source = node.XObject;\r\n                if (node._EmitTouchEvent(type, args))\r\n                    handled = true;\r\n                if (type === Input.TouchInputType.TouchLeave) //TouchLeave gets new event args on each emit\r\n                    args = new Input.TouchEventArgs(this.Device);\r\n            }\r\n            return handled;\r\n        }\r\n        \r\n        GetTouchPoint(relativeTo: UIElement): TouchPoint {\r\n            if (!relativeTo)\r\n                return this.CreateTouchPoint(this.Position.Clone());\r\n            if (!(relativeTo instanceof UIElement))\r\n                throw new ArgumentException(\"Specified relative object must be a UIElement.\");\r\n            //TODO: If attached, should we run ProcessDirtyElements\r\n            var p = this.Position.Clone();\r\n            minerva.core.Updater.transformPoint(relativeTo.XamlNode.LayoutUpdater, p);\r\n            return this.CreateTouchPoint(p);\r\n        }\r\n        CreateTouchPoint(p: Point): TouchPoint {\r\n            return new TouchPoint(p, 0);\r\n        }\r\n        \r\n        private CreateTouchDevice(): ITouchDevice {\r\n            var d: ITouchDevice = {\r\n                Identifier: null,\r\n                Captured: null,\r\n                Capture: (uie: UIElement) => this.Capture(uie),\r\n                ReleaseCapture: (uie: UIElement) => this.ReleaseCapture(uie),\r\n                GetTouchPoint: (relativeTo: UIElement) => this.GetTouchPoint(relativeTo)\r\n            };\r\n            Object.defineProperty(d, \"Identifier\", { get: () => this.Identifier });\r\n            Object.defineProperty(d, \"Captured\", { get: () => this._Captured ? this._Captured.XObject : null });\r\n            return d;\r\n        }\r\n    }\r\n\r\n    \r\n    interface ICommonElementIndices {\r\n        Index1: number;\r\n        Index2: number;\r\n    }\r\n    function findFirstCommonElement(list1: UINode[], list2: UINode[], outObj: ICommonElementIndices) {\r\n        var i = list1.length - 1;\r\n        var j = list2.length - 1;\r\n        outObj.Index1 = -1;\r\n        outObj.Index2 = -1;\r\n        while (i >= 0 && j >= 0) {\r\n            if (list1[i] !== list2[j])\r\n                return;\r\n            outObj.Index1 = i--;\r\n            outObj.Index2 = j--;\r\n        }\r\n    }\r\n}","module Fayde.Input.TouchInternal {\r\n    export interface IOffset {\r\n        left: number;\r\n        top: number;\r\n    }\r\n    export class TouchInteropBase implements Fayde.Input.ITouchInterop, ITouchHandler {\r\n        Input: Engine.InputManager;\r\n        CanvasOffset: IOffset = null;\r\n        ActiveTouches: ActiveTouchBase[] = [];\r\n\r\n        get CoordinateOffset(): IOffset {\r\n            return {\r\n                left: window.pageXOffset + this.CanvasOffset.left,\r\n                top: window.pageYOffset + this.CanvasOffset.top\r\n            };\r\n        }\r\n\r\n        Register(input: Engine.InputManager, canvas: HTMLCanvasElement) {\r\n            this.Input = input;\r\n            this.CanvasOffset = this._CalcOffset(canvas);\r\n        }\r\n        private _CalcOffset(canvas: HTMLCanvasElement): IOffset {\r\n            var left = 0;\r\n            var top = 0;\r\n            var cur: HTMLElement = canvas;\r\n            if (cur.offsetParent) {\r\n                do {\r\n                    left += cur.offsetLeft;\r\n                    top += cur.offsetTop;\r\n                } while (cur = <HTMLElement>cur.offsetParent);\r\n            }\r\n            return { left: left, top: top };\r\n        }\r\n        \r\n        HandleTouches(type: Input.TouchInputType, touches: ActiveTouchBase[], emitLeave?: boolean, emitEnter?: boolean): boolean {\r\n            var touch: ActiveTouchBase;\r\n            var handled = false;\r\n            while (touch = touches.shift()) {\r\n                var inputList = this.Input.HitTestPoint(touch.Position);\r\n                if (inputList)\r\n                    handled = handled || touch.Emit(type, inputList, emitLeave, emitEnter);\r\n            }\r\n            return handled;\r\n        }\r\n    }\r\n}","/// <reference path=\"ActiveTouchBase.ts\" />\r\n/// <reference path=\"TouchInteropBase.ts\" />\r\n\r\nmodule Fayde.Input.TouchInternal {\r\n    class NonPointerActiveTouch extends ActiveTouchBase {\r\n        TouchObject: Touch;\r\n        Init(t: Touch, offset: IOffset) {\r\n            this.TouchObject = t;\r\n            this.Identifier = t.identifier;\r\n            this.Position = new Point(t.clientX + offset.left, t.clientY + offset.top);\r\n        }\r\n        CreateTouchPoint(p: Point): TouchPoint {\r\n            var to = this.TouchObject;\r\n            return new TouchPoint(p, to.force);\r\n        }\r\n    }\r\n    \r\n    export class NonPointerTouchInterop extends TouchInteropBase {\r\n        Register(input: Engine.InputManager, canvas: HTMLCanvasElement) {\r\n            super.Register(input, canvas);\r\n\r\n            canvas.addEventListener(\"touchstart\", (e) => this._HandleTouchStart(window.event ? <any>window.event : e));\r\n            canvas.addEventListener(\"touchend\", (e) => this._HandleTouchEnd(window.event ? <any>window.event : e));\r\n            canvas.addEventListener(\"touchmove\", (e) => this._HandleTouchMove(window.event ? <any>window.event : e));\r\n            canvas.addEventListener(\"touchenter\", (e) => this._HandleTouchEnter(window.event ? <any>window.event : e));\r\n            canvas.addEventListener(\"touchleave\", (e) => this._HandleTouchLeave(window.event ? <any>window.event : e));\r\n        }\r\n\r\n        private _HandleTouchStart(e: TouchEvent) {\r\n            e.preventDefault();\r\n            Engine.Inspection.Kill();\r\n\r\n            var newTouches = this.TouchArrayFromList(e.changedTouches);\r\n            this.ActiveTouches = this.ActiveTouches.concat(newTouches);\r\n\r\n            this.Input.SetIsUserInitiatedEvent(true);\r\n            this.HandleTouches(TouchInputType.TouchDown, newTouches);\r\n            this.Input.SetIsUserInitiatedEvent(false);\r\n        }\r\n        private _HandleTouchEnd(e: TouchEvent) {\r\n            var oldTouches = this.TouchArrayFromList(e.changedTouches);\r\n            \r\n            this.Input.SetIsUserInitiatedEvent(true);\r\n            this.HandleTouches(TouchInputType.TouchUp, oldTouches);\r\n            this.Input.SetIsUserInitiatedEvent(false);\r\n\r\n            removeFromArray(this.ActiveTouches, oldTouches);\r\n        }\r\n        private _HandleTouchMove(e: TouchEvent) {\r\n            var touches = this.TouchArrayFromList(e.changedTouches);\r\n            this.HandleTouches(TouchInputType.TouchMove, touches);\r\n        }\r\n        private _HandleTouchEnter(e: TouchEvent) {\r\n            var touches = this.TouchArrayFromList(e.changedTouches);\r\n            this.HandleTouches(TouchInputType.TouchEnter, touches);\r\n        }\r\n        private _HandleTouchLeave(e: TouchEvent) {\r\n            var touches = this.TouchArrayFromList(e.changedTouches);\r\n            this.HandleTouches(TouchInputType.TouchLeave, touches);\r\n        }\r\n\r\n        private TouchArrayFromList(list: TouchList): NonPointerActiveTouch[] {\r\n            var len = list.length;\r\n            var touches: NonPointerActiveTouch[] = [];\r\n            var curto: Touch;\r\n            var cur;\r\n            for (var i = 0; i < len; i++) {\r\n                var curto = list.item(i);\r\n                cur = this.FindTouchInList(curto.identifier) || new NonPointerActiveTouch(this);\r\n                cur.Init(curto, this.CoordinateOffset);\r\n                touches.push(cur);\r\n            }\r\n            return touches;\r\n        }\r\n        private FindTouchInList(identifier: number): NonPointerActiveTouch {\r\n            var at = this.ActiveTouches;\r\n            var len = at.length;\r\n            for (var i = 0; i < len; i++) {\r\n                if (at[i].Identifier === identifier)\r\n                    return <NonPointerActiveTouch>at[i];\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function removeFromArray<T>(arr: T[], toRemove: T[]) {\r\n        var len = toRemove.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var index = arr.indexOf(toRemove[i]);\r\n            if (index > -1)\r\n                arr.splice(index, 1);\r\n        }\r\n    }\r\n}","/// <reference path=\"ActiveTouchBase.ts\" />\r\n/// <reference path=\"TouchInteropBase.ts\" />\r\n\r\nmodule Fayde.Input.TouchInternal {\r\n    class PointerActiveTouch extends ActiveTouchBase {\r\n        TouchObject: MSPointerEvent;\r\n        Init(t: MSPointerEvent, offset: IOffset) {\r\n            this.TouchObject = t;\r\n            this.Identifier = t.pointerId;\r\n            this.Position = new Point(t.clientX + offset.left, t.clientY + offset.top);\r\n        }\r\n        CreateTouchPoint(p: Point): TouchPoint {\r\n            var to = this.TouchObject;\r\n            return new TouchPoint(p, to.pressure);\r\n        }\r\n    }\r\n\r\n    export class PointerTouchInterop extends TouchInteropBase {\r\n        Register(input: Engine.InputManager, canvas: HTMLCanvasElement) {\r\n            super.Register(input, canvas);\r\n            canvas.style.msTouchAction = \"none\";\r\n            (<any>canvas.style).touchAction = \"none\";\r\n\r\n            canvas.addEventListener(\"selectstart\", (e) => { e.preventDefault(); });\r\n            if (navigator.msPointerEnabled) {\r\n                canvas.addEventListener(\"MSPointerDown\", (e) => this._HandlePointerDown(window.event ? <any>window.event : e));\r\n                canvas.addEventListener(\"MSPointerUp\", (e) => this._HandlePointerUp(window.event ? <any>window.event : e));\r\n                canvas.addEventListener(\"MSPointerMove\", (e) => this._HandlePointerMove(window.event ? <any>window.event : e));\r\n                canvas.addEventListener(\"MSPointerEnter\", (e) => this._HandlePointerEnter(window.event ? <any>window.event : e));\r\n                canvas.addEventListener(\"MSPointerLeave\", (e) => this._HandlePointerLeave(window.event ? <any>window.event : e));\r\n            } else {\r\n                canvas.addEventListener(\"pointerdown\", (e) => this._HandlePointerDown(window.event ? <any>window.event : e));\r\n                canvas.addEventListener(\"pointerup\", (e) => this._HandlePointerUp(window.event ? <any>window.event : e));\r\n                canvas.addEventListener(\"pointermove\", (e) => this._HandlePointerMove(window.event ? <any>window.event : e));\r\n                canvas.addEventListener(\"pointerenter\", (e) => this._HandlePointerEnter(window.event ? <any>window.event : e));\r\n                canvas.addEventListener(\"pointerleave\", (e) => this._HandlePointerLeave(window.event ? <any>window.event : e));\r\n            }\r\n        }\r\n\r\n        private _HandlePointerDown(e: MSPointerEvent) {\r\n            if (e.pointerType !== \"touch\")\r\n                return;\r\n            e.preventDefault();\r\n            Engine.Inspection.Kill();\r\n\r\n            var cur = this.GetActiveTouch(e);\r\n            this.Input.SetIsUserInitiatedEvent(true);\r\n            this.HandleTouches(Input.TouchInputType.TouchDown, [cur]);\r\n            this.Input.SetIsUserInitiatedEvent(false);\r\n        }\r\n        private _HandlePointerUp(e: MSPointerEvent) {\r\n            if (e.pointerType !== \"touch\")\r\n                return;\r\n            var cur = this.GetActiveTouch(e);\r\n            this.Input.SetIsUserInitiatedEvent(true);\r\n            this.HandleTouches(Input.TouchInputType.TouchUp, [cur]);\r\n            this.Input.SetIsUserInitiatedEvent(false);\r\n            var index = this.ActiveTouches.indexOf(cur);\r\n            if (index > -1)\r\n                this.ActiveTouches.splice(index, 1);\r\n        }\r\n        private _HandlePointerMove(e: MSPointerEvent) {\r\n            if (e.pointerType !== \"touch\")\r\n                return;\r\n            var cur = this.GetActiveTouch(e);\r\n            this.HandleTouches(Input.TouchInputType.TouchMove, [cur]);\r\n        }\r\n        private _HandlePointerEnter(e: MSPointerEvent) {\r\n            if (e.pointerType !== \"touch\")\r\n                return;\r\n            var cur = this.GetActiveTouch(e);\r\n            this.HandleTouches(Input.TouchInputType.TouchEnter, [cur]);\r\n        }\r\n        private _HandlePointerLeave(e: MSPointerEvent) {\r\n            if (e.pointerType !== \"touch\")\r\n                return;\r\n            var cur = this.GetActiveTouch(e);\r\n            this.HandleTouches(Input.TouchInputType.TouchLeave, [cur]);\r\n        }\r\n\r\n        private GetActiveTouch(e: MSPointerEvent): PointerActiveTouch {\r\n            var existing = this.FindTouchInList(e.pointerId);\r\n            var cur = existing || new PointerActiveTouch(this);\r\n            if (!existing)\r\n                this.ActiveTouches.push(cur);\r\n            cur.Init(e, this.CoordinateOffset);\r\n            return cur;\r\n        }\r\n        private FindTouchInList(identifier: number): PointerActiveTouch {\r\n            var at = this.ActiveTouches;\r\n            var len = at.length;\r\n            for (var i = 0; i < len; i++) {\r\n                if (at[i].Identifier === identifier)\r\n                    return <PointerActiveTouch>at[i];\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n}","module Fayde.Markup.Internal {\r\n    export interface IActiveObject {\r\n        obj: any;\r\n        xo: XamlObject;\r\n        dobj: DependencyObject;\r\n        rd: ResourceDictionary;\r\n        coll: nullstone.ICollection<any>;\r\n        arr: any[];\r\n        type: any;\r\n        set(obj: any);\r\n        setName(name: string);\r\n        getApp(): Application;\r\n    }\r\n\r\n    export function createActiveObject (app: Application, namescope: NameScope, bindingSource: any): IActiveObject {\r\n        return {\r\n            obj: null,\r\n            xo: null,\r\n            dobj: null,\r\n            rd: null,\r\n            coll: null,\r\n            arr: null,\r\n            type: null,\r\n            set (obj: any) {\r\n                this.obj = obj;\r\n                this.type = obj ? obj.constructor : null;\r\n                this.rd = (obj instanceof ResourceDictionary) ? obj : null;\r\n                if (this.rd) {\r\n                    this.rd.App = app;\r\n                }\r\n                this.dobj = (obj instanceof DependencyObject) ? obj : null;\r\n                var xo = this.xo = (obj instanceof XamlObject) ? obj : null;\r\n                if (xo) {\r\n                    xo.XamlNode.DocNameScope = namescope;\r\n                    xo.TemplateOwner = bindingSource;\r\n                    xo.App = app;\r\n                }\r\n                if (obj instanceof Application) {\r\n                    app = obj;\r\n                }\r\n                this.coll = nullstone.ICollection_.as(obj);\r\n                this.arr = (typeof obj === \"array\") ? obj : null;\r\n            },\r\n            setName (name: string) {\r\n                if (this.xo) {\r\n                    var xnode = this.xo.XamlNode;\r\n                    namescope.RegisterName(name, xnode);\r\n                    xnode.Name = name;\r\n                }\r\n            },\r\n            getApp () {\r\n                return app;\r\n            }\r\n        };\r\n    }\r\n}","module Fayde.Markup.Internal {\r\n    export interface IObjectActor {\r\n        start();\r\n        end();\r\n    }\r\n\r\n    export function createObjectActor (pactor: IPropertyActor): IObjectActor {\r\n        var arr = [];\r\n\r\n        return {\r\n            start () {\r\n                var nstate = {};\r\n                pactor.init(nstate);\r\n                arr.push(nstate);\r\n            },\r\n            end () {\r\n                arr.pop();\r\n                pactor.init(arr[arr.length - 1]);\r\n            }\r\n        };\r\n    }\r\n}","module Fayde.Markup.Internal {\r\n    export interface IPropertyActor {\r\n        init(nstate: any);\r\n        start(ownerType: any, name: string);\r\n        startContent();\r\n        end();\r\n        addObject(obj: any, key?: any);\r\n        setContentText(text: string);\r\n        setObject(ownerType: any, name: string, obj: any);\r\n        isNewResources (): boolean;\r\n    }\r\n\r\n    export function createPropertyActor (cur: IActiveObject, extractType: (text: string) => any, extractDP: (text: string) => any): IPropertyActor {\r\n        var state = {\r\n            visited: undefined,\r\n\r\n            coll: undefined,\r\n            arr: undefined,\r\n            propd: undefined,\r\n            prop: undefined,\r\n            eprop: undefined,\r\n            incontent: undefined,\r\n            content: {\r\n                count: 0,\r\n                coll: undefined,\r\n                arr: undefined,\r\n                rd: undefined,\r\n                propd: undefined,\r\n                app: undefined\r\n            }\r\n        };\r\n\r\n        function verify (ownerType: any, name: string) {\r\n            var otype = ownerType || cur.type;\r\n            state.visited = state.visited || [];\r\n            var tvisited = state.visited[otype];\r\n            if (!tvisited) {\r\n                tvisited = state.visited[otype] = [];\r\n            } else {\r\n                if (tvisited.indexOf(name) > -1)\r\n                    throw new XamlParseException(\"Cannot set [\" + otype.name + \"][\" + name + \"] more than once.\");\r\n            }\r\n            tvisited.push(name);\r\n        }\r\n\r\n        function verifyContent () {\r\n            verify(cur.type, state.propd.Name);\r\n        }\r\n\r\n        function prepare (ownerType: any, name: string): boolean {\r\n            if (state.coll || state.arr || state.propd || state.prop || state.eprop)\r\n                return true;\r\n            if (cur.dobj) {\r\n                var otype = ownerType || cur.type;\r\n                state.propd = DependencyProperty.GetDependencyProperty(otype, name, true);\r\n                if (!state.propd) {\r\n                    var ev = cur.dobj[name];\r\n                    if (ev instanceof nullstone.Event)\r\n                        state.eprop = name;\r\n                    else\r\n                        state.prop = name;\r\n                    return true;\r\n                }\r\n                if (state.propd.IsImmutable) {\r\n                    var co = cur.dobj.GetValue(state.propd);\r\n                    state.coll = nullstone.ICollection_.as(co);\r\n                    state.arr = (typeof co === \"array\") ? co : null;\r\n                } else {\r\n                    var tt = state.propd.GetTargetType();\r\n                    if (nullstone.ICollection_.is(tt.prototype))\r\n                        cur.dobj.SetValue(state.propd, state.coll = new tt());\r\n                    else if (tt === Array)\r\n                        cur.dobj.SetValue(state.propd, state.arr = []);\r\n                }\r\n                return true;\r\n            } else if (cur.rd && name === \"MergedDictionaries\") {\r\n                state.coll = cur.rd.MergedDictionaries;\r\n                return true;\r\n            } else if (cur.obj) {\r\n                if (ownerType && cur.type !== ownerType)\r\n                    throw new XamlParseException(\"Cannot set Attached Property on object that is not a DependencyObject.\");\r\n                state.prop = name;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        function prepareContent (): boolean {\r\n            var content = state.content = state.content || <any>{};\r\n            if (content.coll || content.arr || content.rd || content.propd)\r\n                return true;\r\n            var propd = content.propd = Content.Get(cur.type);\r\n            if (!propd) {\r\n                content.coll = nullstone.ICollection_.as(cur.obj);\r\n                content.arr = (typeof cur.obj === \"array\") ? cur.obj : null;\r\n                content.rd = cur.rd;\r\n                content.app = (cur.obj instanceof Application) ? cur.obj : null;\r\n                if (content.coll || content.arr || content.rd || content.app)\r\n                    return true;\r\n                throw new XamlParseException(\"Cannot set content for object of type '\" + cur.type.name + \"'.\");\r\n            }\r\n            if (!propd.IsImmutable)\r\n                return true;\r\n            var co = cur.dobj.GetValue(propd);\r\n            if (!co)\r\n                return false;\r\n            content.coll = nullstone.ICollection_.as(co);\r\n            content.arr = (typeof co === \"array\") ? co : null;\r\n            return true;\r\n        }\r\n\r\n        function addContentObject (obj: any, key: any) {\r\n            if (cur.rd) {\r\n                key = key || getFallbackKey(obj);\r\n                if (!key)\r\n                    throw new XamlParseException(\"Items in a ResourceDictionary must have a x:Key.\");\r\n                cur.rd.Set(key, obj);\r\n            } else if (cur.coll) {\r\n                cur.coll.Add(obj);\r\n            } else if (cur.arr) {\r\n                cur.arr.push(obj);\r\n            } else if (cur.dobj) {\r\n                if (state.content.coll) {\r\n                    state.content.coll.Add(obj);\r\n                } else if (state.content.arr) {\r\n                    state.content.arr.push(obj);\r\n                } else if (state.content.rd) {\r\n                    key = key || getFallbackKey(obj);\r\n                    if (!key)\r\n                        throw new XamlParseException(\"Items in a ResourceDictionary must have a x:Key.\");\r\n                    state.content.rd.Set(obj, key);\r\n                } else if (state.content.app) {\r\n                    state.content.app.$$SetRootVisual(obj);\r\n                } else {\r\n                    if (state.content.count > 0)\r\n                        throw new XamlParseException(\"Cannot set content more than once.\");\r\n                    cur.dobj.SetValue(state.content.propd, obj);\r\n                }\r\n            }\r\n            state.content.count++;\r\n        }\r\n\r\n        function addObject (obj: any, key: any) {\r\n            if (state.coll) {\r\n                state.coll.Add(obj);\r\n            } else if (state.arr) {\r\n                state.arr.push(obj);\r\n            } else if (state.propd) {\r\n                cur.dobj.SetValue(state.propd, convert(state.propd, obj));\r\n            } else if (state.prop) {\r\n                cur.obj[state.prop] = obj;\r\n            } else if (state.eprop) {\r\n                subscribeEvent(state.eprop, obj);\r\n            }\r\n        }\r\n\r\n        function setAttrObject (ownerType: any, name: string, obj: any): boolean {\r\n            if (cur.dobj) {\r\n                var otype = ownerType || cur.type;\r\n                var propd = DependencyProperty.GetDependencyProperty(otype, name, true);\r\n                if (!propd) {\r\n                    var ev = cur.dobj[name];\r\n                    if (ev instanceof nullstone.Event) {\r\n                        subscribeEvent(name, obj);\r\n                    } else {\r\n                        cur.dobj[name] = obj;\r\n                    }\r\n                    return true;\r\n                }\r\n                if (propd.IsImmutable) {\r\n                    return merge(convert(propd, obj), cur.dobj.GetValue(propd));\r\n                } else {\r\n                    cur.dobj.SetValue(propd, convert(propd, obj));\r\n                    return true;\r\n                }\r\n            } else if (cur.obj) {\r\n                var ev = cur.obj[name];\r\n                if (ev instanceof nullstone.Event) {\r\n                    subscribeEvent(name, obj);\r\n                } else {\r\n                    cur.obj[name] = obj;\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        function merge (src: any, target: any): boolean {\r\n            var sarr: any[];\r\n            var scoll = <nullstone.ICollection<any>>nullstone.ICollection_.as(src);\r\n            if (scoll) {\r\n                sarr = nullstone.IEnumerable_.toArray(scoll);\r\n                scoll.Clear();\r\n            } else if (typeof src === \"array\") {\r\n                sarr = src.slice(0);\r\n                src.length = 0;\r\n            } else {\r\n                return false;\r\n            }\r\n\r\n            var sen = nullstone.IEnumerator_.fromArray(sarr);\r\n            var tcoll = nullstone.ICollection_.as(target);\r\n            var tarr = typeof target === \"array\" ? target : null;\r\n            if (tcoll) {\r\n                while (sen.moveNext()) {\r\n                    tcoll.Add(sen.current);\r\n                }\r\n            } else if (tarr) {\r\n                while (sen.moveNext()) {\r\n                    tarr.push(sen.current);\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        function getFallbackKey (obj: any): any {\r\n            if (obj instanceof XamlObject) {\r\n                var name = (<XamlObject>obj).XamlNode.Name;\r\n                if (name)\r\n                    return name;\r\n            }\r\n            return getImplicitKey(obj);\r\n        }\r\n\r\n        function getImplicitKey (obj: any): any {\r\n            if (obj instanceof DataTemplate) {\r\n                var dt = (<DataTemplate>obj).DataType;\r\n                if (!dt)\r\n                    throw new XamlParseException(\"A DataTemplate in a ResourceDictionary must have x:Key or DataType.\");\r\n                return dt;\r\n            } else if (obj instanceof Style) {\r\n                var tt = (<Style>obj).TargetType;\r\n                if (!tt)\r\n                    throw new XamlParseException(\"A Style in a ResourceDictionary must have x:Key or TargetType.\");\r\n                return tt;\r\n            }\r\n        }\r\n\r\n        function convert (propd: DependencyProperty, obj: any): any {\r\n            var tt = <any>propd.GetTargetType();\r\n            var val = obj;\r\n            if (typeof val === \"string\") {\r\n                if (tt === IType_) //NOTE: Handles implicit types that are normally written as {x:Type ...}\r\n                    return extractType(val);\r\n                else if (propd === Setter.PropertyProperty)\r\n                    return extractDP(val);\r\n            } else if (val instanceof Expression) {\r\n                return val;\r\n            }\r\n            return nullstone.convertAnyToType(val, tt);\r\n        }\r\n\r\n        function subscribeEvent (name: string, ebe: EventBindingExpression) {\r\n            if (!(ebe instanceof EventBindingExpression))\r\n                throw new XamlParseException(\"Cannot subscribe to event '\" + name + \"' without {EventBinding}.\");\r\n            ebe.Init(name);\r\n            ebe.OnAttached(cur.dobj);\r\n        }\r\n\r\n        return {\r\n            init (nstate: any) {\r\n                state = nstate;\r\n            },\r\n            start (ownerType: any, name: string) {\r\n                verify(ownerType, name);\r\n                prepare(ownerType, name);\r\n            },\r\n            startContent () {\r\n                if (prepareContent()) {\r\n                    if (state.content.count === 0)\r\n                        verifyContent();\r\n                    state.incontent = true;\r\n                }\r\n            },\r\n            end () {\r\n                state.incontent = false;\r\n                state.coll = state.arr = state.propd = state.prop = state.eprop = undefined;\r\n            },\r\n            addObject (obj: any, key?: any) {\r\n                if (state.incontent) {\r\n                    addContentObject(obj, key);\r\n                    state.content.count++;\r\n                } else {\r\n                    addObject(obj, key);\r\n                }\r\n            },\r\n            setContentText (text: string) {\r\n                if (!cur.dobj)\r\n                    return;\r\n\r\n                var tcprop = TextContent.Get(cur.type);\r\n                if (tcprop) {\r\n                    verify(cur.type, tcprop.Name);\r\n                    cur.dobj.SetValue(tcprop, text);\r\n                    return;\r\n                }\r\n\r\n                var cprop = Content.Get(cur.type);\r\n                if (cprop) {\r\n                    verify(cur.type, cprop.Name);\r\n                    cur.dobj.SetValue(cprop, convert(cprop, text));\r\n                }\r\n            },\r\n            setObject (ownerType: any, name: string, obj: any) {\r\n                verify(ownerType, name);\r\n                setAttrObject(ownerType, name, obj);\r\n            },\r\n            isNewResources (): boolean {\r\n                if (state.coll instanceof ResourceDictionaryCollection)\r\n                    return true;\r\n                return !cur.rd;\r\n            }\r\n        };\r\n    }\r\n}","module Fayde.Markup.Internal {\r\n    export interface IResourcesActor {\r\n        start();\r\n        end();\r\n        get(): ResourceDictionary[];\r\n    }\r\n\r\n    export function createResourcesActor (cur: IActiveObject, resources: ResourceDictionary[]): IResourcesActor {\r\n        var stack: ResourceDictionary[] = [];\r\n        return {\r\n            start () {\r\n                if (cur.rd)\r\n                    stack.push(cur.rd);\r\n            },\r\n            end () {\r\n                if (cur.rd)\r\n                    stack.pop();\r\n            },\r\n            get (): ResourceDictionary[] {\r\n                var res = (resources) ? resources.concat(stack) : stack.slice(0);\r\n                if (cur.dobj instanceof FrameworkElement) {\r\n                    var crd = cur.dobj.ReadLocalValue(FrameworkElement.ResourcesProperty);\r\n                    if (crd !== DependencyProperty.UnsetValue)\r\n                        res.push(crd);\r\n                }\r\n                return res;\r\n            }\r\n        }\r\n    }\r\n}","module Fayde.Media.Animation {\r\n    export enum EasingMode {\r\n        EaseOut = 0,\r\n        EaseIn = 1,\r\n        EaseInOut = 2,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(EasingMode, \"EasingMode\");\r\n\r\n    export enum FillBehavior {\r\n        HoldEnd = 0,\r\n        Stop = 1,\r\n    }\r\n    Fayde.CoreLibrary.addEnum(FillBehavior, \"FillBehavior\");\r\n}","module Fayde.Media.Animation {\r\n    export class RepeatBehavior {\r\n        private _Duration: Duration = null;\r\n        private _Count: number = null;\r\n        IsForever: boolean = false;\r\n\r\n        static FromRepeatDuration(duration: Duration): RepeatBehavior {\r\n            var rb = new RepeatBehavior();\r\n            rb._Duration = duration;\r\n            return rb;\r\n        }\r\n        static FromIterationCount(count: number): RepeatBehavior {\r\n            var rb = new RepeatBehavior();\r\n            rb._Count = count;\r\n            return rb;\r\n        }\r\n\r\n        get HasCount(): boolean { return this._Count != null; }\r\n        get Count(): number { return this._Count; }\r\n\r\n        get HasDuration(): boolean { return this._Duration != null; }\r\n        get Duration(): Duration { return this._Duration; }\r\n\r\n        Clone(): RepeatBehavior {\r\n            var rb = new RepeatBehavior();\r\n            rb._Duration = this._Duration;\r\n            rb._Count = this._Count;\r\n            rb.IsForever = this.IsForever;\r\n            return rb;\r\n        }\r\n\r\n        static Forever: RepeatBehavior = (function () { var rb = new RepeatBehavior(); rb.IsForever = true; return rb; })();\r\n    }\r\n    Fayde.CoreLibrary.add(RepeatBehavior);\r\n\r\n    nullstone.registerTypeConverter(RepeatBehavior, (val: string): RepeatBehavior => {\r\n        if (!val || val.toLowerCase() === \"forever\")\r\n            return RepeatBehavior.Forever;\r\n        if (val[val.length - 1] === \"x\") {\r\n            var d = parseInt(val.substr(0, val.length - 1));\r\n            return RepeatBehavior.FromIterationCount(d);\r\n        }\r\n        var duration = new Duration(nullstone.convertAnyToType(val, TimeSpan));\r\n        return RepeatBehavior.FromRepeatDuration(duration);\r\n    });\r\n}","/// <reference path=\"../../Core/DependencyObject.ts\" />\r\n/// <reference path=\"../../Core/XamlObjectCollection.ts\" />\r\n/// <reference path=\"Enums.ts\" />\r\n/// <reference path=\"RepeatBehavior.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export interface IClockData {\r\n        CurrentTime: TimeSpan;\r\n        Progress: number;\r\n        Completed: boolean;\r\n    }\r\n\r\n    export class Timeline extends DependencyObject implements ITimeline {\r\n        static DEFAULT_REPEAT_BEHAVIOR: RepeatBehavior = RepeatBehavior.FromIterationCount(1);\r\n        static AutoReverseProperty = DependencyProperty.Register(\"AutoReverse\", () => Boolean, Timeline, false);\r\n        static BeginTimeProperty = DependencyProperty.Register(\"BeginTime\", () => TimeSpan, Timeline);\r\n        static DurationProperty = DependencyProperty.Register(\"Duration\", () => Duration, Timeline);\r\n        static RepeatBehaviorProperty = DependencyProperty.Register(\"RepeatBehavior\", () => RepeatBehavior, Timeline);\r\n        static SpeedRatioProperty = DependencyProperty.Register(\"SpeedRatio\", () => Number, Timeline, 1.0);\r\n        static FillBehaviorProperty = DependencyProperty.Register(\"FillBehavior\", () => new Enum(FillBehavior), Timeline, FillBehavior.HoldEnd);\r\n        AutoReverse: boolean;\r\n        BeginTime: TimeSpan;\r\n        Duration: Duration; //Treat undefined as Automatic\r\n        RepeatBehavior: RepeatBehavior; //Treat undefined as IterationCount -> 1\r\n        SpeedRatio: number;\r\n        FillBehavior: FillBehavior;\r\n\r\n        Completed = new nullstone.Event();\r\n\r\n        private _IsPaused: boolean = false;\r\n        private _BeginPauseTime: number = 0;\r\n        private _TicksPaused: number = 0;\r\n        private _IsFirstUpdate: boolean = true;\r\n        private _HasBegun: boolean = false;\r\n        private _BeginTicks: number = undefined;\r\n        private _InitialStep: number = undefined;\r\n        private _HasCompleted: boolean = false;\r\n\r\n        ManualTarget: DependencyObject = undefined;\r\n\r\n        get HasManualTarget (): boolean {\r\n            return this.ManualTarget !== undefined;\r\n        }\r\n\r\n        Reset () {\r\n            this._TicksPaused = 0;\r\n            this._IsFirstUpdate = true;\r\n            this._BeginTicks = undefined;\r\n            this._HasBegun = false;\r\n            this._HasCompleted = false;\r\n        }\r\n\r\n        Pause () {\r\n            if (this._IsPaused)\r\n                return;\r\n            this._BeginPauseTime = new Date().getTime();\r\n            this._IsPaused = true;\r\n        }\r\n\r\n        Resume () {\r\n            if (!this._IsPaused)\r\n                return;\r\n            this._IsPaused = false;\r\n            var nowTime = new Date().getTime();\r\n            this._TicksPaused = nowTime - this._BeginPauseTime;\r\n        }\r\n\r\n        Stop () {\r\n            this.Reset();\r\n        }\r\n\r\n        OnCompleted () {\r\n            this._HasCompleted = true;\r\n            var fill = this.FillBehavior;\r\n            switch (fill) {\r\n                case FillBehavior.HoldEnd:\r\n                    this.HoldEnd();\r\n                    break;\r\n                case FillBehavior.Stop:\r\n                    this.Stop();\r\n                    break;\r\n            }\r\n            this.Completed.raise(this, null);\r\n        }\r\n\r\n        Update (nowTime: number) {\r\n            var clockData = this.CreateClockData(nowTime);\r\n            if (!clockData || this._IsPaused || this._HasCompleted)\r\n                return;\r\n            this.UpdateInternal(clockData);\r\n            if (clockData.Completed)\r\n                this.OnCompleted();\r\n        }\r\n\r\n        UpdateInternal (clockData: IClockData) {\r\n        }\r\n\r\n        HoldEnd () {\r\n        }\r\n\r\n        private CreateClockData (nowTime: number): IClockData {\r\n            if (this._IsFirstUpdate) {\r\n                this._InitialStep = nowTime;\r\n                this._HasBegun = false;\r\n                this._IsFirstUpdate = false;\r\n            }\r\n            if (!this._HasBegun) {\r\n                if (!this.IsAfterBeginTime(nowTime))\r\n                    return null;\r\n                this._BeginTicks = nowTime;\r\n                this._HasBegun = true;\r\n            }\r\n\r\n            var elapsedTicks = nowTime - this._BeginTicks - this._TicksPaused;\r\n            var currentTimeTicks = elapsedTicks;\r\n            var progress = 0.0;\r\n            var completed = false;\r\n\r\n            var duration = this.GetNaturalDuration();\r\n            if (duration.IsAutomatic) {\r\n                progress = 1.0;\r\n                completed = true;\r\n            } else if (duration.HasTimeSpan) {\r\n                var d = duration.TimeSpan.Ticks;\r\n                if (d === 0) {\r\n                    progress = 1.0;\r\n                } else if (this.AutoReverse === true) {\r\n                    d = d / 2;\r\n                    // Progress - Graph that repeats 3 times has shape: /\\/\\/\\/\\/\\/\\\r\n                    progress = 1 - (Math.abs((elapsedTicks % (d + d)) - d) / d);\r\n                } else {\r\n                    // Progress - Graph that repeats 3 times has shape: //////\r\n                    progress = (elapsedTicks / d) - Math.floor(elapsedTicks / d);\r\n                }\r\n\r\n                var repeat = this.RepeatBehavior || Timeline.DEFAULT_REPEAT_BEHAVIOR;\r\n                if (repeat.IsForever) {\r\n                } else if (repeat.HasCount) {\r\n                    if ((d === 0) || (Math.floor(elapsedTicks / d) >= repeat.Count)) {\r\n                        progress = 1.0;\r\n                        completed = true;\r\n                    }\r\n                } else if (repeat.HasDuration) {\r\n                    if (elapsedTicks >= repeat.Duration.TimeSpan.Ticks) {\r\n                        progress = 1.0;\r\n                        completed = true;\r\n                    }\r\n                }\r\n\r\n                if (d !== 0)\r\n                    currentTimeTicks = progress * d; //normalizes CurrentTime within [0,duration] constraints\r\n            }\r\n            // else if (duration.IsForever) { // do nothing }\r\n\r\n            return {\r\n                CurrentTime: new TimeSpan(currentTimeTicks),\r\n                Progress: progress,\r\n                Completed: completed\r\n            };\r\n        }\r\n\r\n        private IsAfterBeginTime (nowTime: number): boolean {\r\n            var beginTime = this.BeginTime;\r\n            if (beginTime == null)\r\n                return true;\r\n            var beginTicks = beginTime.Ticks;\r\n            if (beginTicks <= 0)\r\n                return true;\r\n            var elapsedTicks = nowTime - this._InitialStep;\r\n            if (elapsedTicks < beginTicks)\r\n                return false;\r\n            return true;\r\n        }\r\n\r\n        GetNaturalDuration (): Duration {\r\n            var d = this.Duration;\r\n            if (!d || d.IsAutomatic)\r\n                return this.GetNaturalDurationCore();\r\n            return d;\r\n        }\r\n\r\n        GetNaturalDurationCore (): Duration {\r\n            return Duration.Automatic;\r\n        }\r\n\r\n        GenerateFrom (): AnimationBase {\r\n            return undefined;\r\n        }\r\n\r\n        GenerateTo (isEntering: boolean): AnimationBase {\r\n            return undefined;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Timeline);\r\n\r\n    export class TimelineCollection extends XamlObjectCollection<Timeline> {\r\n    }\r\n    Fayde.CoreLibrary.add(TimelineCollection);\r\n}","/// <reference path=\"Timeline.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class AnimationBase extends Timeline {\r\n        private _AnimStorage: IAnimationStorage;\r\n        private _IsHolding: boolean = false;\r\n\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        Resolve(target: DependencyObject, propd: DependencyProperty) { return true; }\r\n\r\n        HoldEnd() { this._IsHolding = true; }\r\n        Stop() {\r\n            var animStorage = this._AnimStorage;\r\n            if (!animStorage)\r\n                return;\r\n            if (AnimationStore.Detach(animStorage) || animStorage.IsDisabled)\r\n                return;\r\n            AnimationStore.ApplyStop(animStorage);\r\n        }\r\n        UpdateInternal(clockData: IClockData) {\r\n            if (this._IsHolding)\r\n                return;\r\n            var animStorage = this._AnimStorage;\r\n            if (!animStorage || animStorage.IsDisabled)\r\n                return;\r\n\r\n            var oldValue = animStorage.CurrentValue;\r\n            animStorage.CurrentValue = this.GetCurrentValue(animStorage.BaseValue, animStorage.StopValue !== undefined ? animStorage.StopValue : animStorage.BaseValue, clockData);\r\n            if (Animation.Log)\r\n                console.log(getLogMessage(\"AnimationBase.UpdateInternal\", this, oldValue, animStorage.CurrentValue));\r\n            if (oldValue === animStorage.CurrentValue || animStorage.CurrentValue === undefined)\r\n                return;\r\n            AnimationStore.ApplyCurrent(animStorage);\r\n        }\r\n        GetNaturalDurationCore(): Duration { return Duration.Automatic; }\r\n\r\n        GetCurrentValue(defaultOriginalValue: any, defaultDestinationValue: any, clockData: IClockData): any { return undefined; }\r\n\r\n        _Hookup(promotedValues: any[], error: BError): boolean {\r\n            this._IsHolding = false;\r\n            this.Reset();\r\n\r\n            var resolution = Storyboard.ResolveTarget(this);\r\n            if (!resolution.Target) {\r\n                console.warn(\"Could not resolve storyboard target.\", Storyboard.GetTargetName(this));\r\n            }\r\n            var refobj = { Value: resolution.Target };\r\n            var targetProperty = resolution.Property.TryResolveDependencyProperty(refobj, promotedValues);\r\n            resolution.Target = refobj.Value;\r\n            if (!targetProperty) {\r\n                error.Number = BError.XamlParse;\r\n                var name = Storyboard.GetTargetName(this);\r\n                error.Message = \"Could not resolve property for storyboard. (\" + name + \")->[\" + resolution.Property.Path.toString() + \"]\";\r\n                return false;\r\n            }\r\n            if (!this.Resolve(resolution.Target, targetProperty)) {\r\n                error.Number = BError.InvalidOperation;\r\n                error.Message = \"Storyboard value could not be converted to the correct type\";\r\n                return false;\r\n            }\r\n\r\n            this._AnimStorage = AnimationStore.Create(resolution.Target, targetProperty);\r\n            this._AnimStorage.Animation = this;\r\n            AnimationStore.Attach(this._AnimStorage);\r\n            return true;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(AnimationBase);\r\n\r\n    function getLogMessage(action: string, anim: AnimationBase, oldValue: any, newValue: any) {\r\n        var msg = \"ANIMATION:\" + action + \":\" + (<any>anim)._ID + \"[\" + (<any>anim).constructor.name + \"]\";\r\n        msg += \";\" + (oldValue === undefined ? \"(undefined)\" : (oldValue === null ? \"(null)\" : oldValue.toString()));\r\n        msg += \"->\" + (newValue === undefined ? \"(undefined)\" : (newValue === null ? \"(null)\" : newValue.toString()));\r\n        return msg;\r\n    }\r\n}","\r\nmodule Fayde.Media.Animation {\r\n    export interface IAnimationStorage {\r\n        ID: number;\r\n        Animation: AnimationBase;\r\n        PropStorage: Providers.IPropertyStorage;\r\n        IsDisabled: boolean;\r\n        BaseValue: any;\r\n        CurrentValue: any;\r\n        StopValue: any;\r\n    }\r\n\r\n    export class AnimationStore {\r\n        static Create(target: DependencyObject, propd: DependencyProperty): IAnimationStorage {\r\n            var baseValue = target.GetValue(propd);\r\n            if (baseValue === undefined) {\r\n                var targetType = propd.GetTargetType();\r\n                if (targetType === Number)\r\n                    baseValue = 0;\r\n                else if (targetType === String)\r\n                    baseValue = \"\";\r\n                else\r\n                    baseValue = new (<any>targetType)();\r\n            }\r\n            return {\r\n                ID: createId(),\r\n                Animation: undefined,\r\n                PropStorage: Providers.GetStorage(target, propd),\r\n                IsDisabled: false,\r\n                BaseValue: baseValue,\r\n                CurrentValue: undefined,\r\n                StopValue: undefined,\r\n            };\r\n        }\r\n        static Attach(animStorage: IAnimationStorage) {\r\n            var storage = animStorage.PropStorage;\r\n            var list = storage.Animations;\r\n            if (!list)\r\n                storage.Animations = list = [];\r\n            var prevStorage = list[list.length - 1];\r\n            list.push(animStorage);\r\n            if (prevStorage) {\r\n                animStorage.StopValue = prevStorage.StopValue;\r\n                prevStorage.IsDisabled = true;\r\n            } else {\r\n                animStorage.StopValue = storage.Local;\r\n            }\r\n        }\r\n        static Detach(animStorage: IAnimationStorage): boolean {\r\n            var storage = animStorage.PropStorage;\r\n\r\n            var list = storage.Animations;\r\n            if (!list)\r\n                return false;\r\n\r\n            var len = list.length;\r\n            if (len < 1)\r\n                return false;\r\n\r\n            var i = list.lastIndexOf(animStorage);\r\n            if (i === (len - 1)) {\r\n                list.pop();\r\n                if (len > 1) {\r\n                    var last = list[len - 2];\r\n                    if (last.IsDisabled) {\r\n                        last.IsDisabled = false;\r\n                        AnimationStore.ApplyCurrent(last);\r\n                        return true;\r\n                    }\r\n                }\r\n            } else {\r\n                list.splice(i, 1);\r\n                list[i].StopValue = animStorage.StopValue;\r\n            }\r\n            return false;\r\n        }\r\n        static ApplyCurrent(animStorage: IAnimationStorage) {\r\n            var val = animStorage.CurrentValue;\r\n            if (val === undefined)\r\n                return;\r\n            if (Animation.LogApply)\r\n                console.log(getLogMessage(\"ApplyCurrent\", animStorage, val));\r\n            var storage = animStorage.PropStorage;\r\n            storage.Property.Store.SetLocalValue(storage, animStorage.CurrentValue);\r\n        }\r\n        static ApplyStop(animStorage: IAnimationStorage) {\r\n            var val = animStorage.StopValue;\r\n            if (Animation.LogApply)\r\n                console.log(getLogMessage(\"ApplyStop\", animStorage, val));\r\n            var storage = animStorage.PropStorage;\r\n            storage.Property.Store.SetLocalValue(storage, val);\r\n        }\r\n    }\r\n\r\n    function getLogMessage(action: string, animStorage: IAnimationStorage, val: any): string {\r\n        var anim = animStorage.Animation;\r\n        var name = Storyboard.GetTargetName(animStorage.Animation);\r\n        if (anim.HasManualTarget)\r\n            name = anim.ManualTarget.Name;\r\n        var prop = Storyboard.GetTargetProperty(anim);\r\n        var msg = \"ANIMATION:\" + action + \":\" + animStorage.ID + \"[\" + name + \"](\" + prop.Path + \")->\";\r\n        msg += val === undefined ? \"(undefined)\" : (val === null ? \"(null)\" : val.toString());\r\n        return msg;\r\n    }\r\n    var lastId = 0;\r\n    function createId(): number {\r\n        return lastId++;\r\n    }\r\n}","/// <reference path=\"AnimationBase.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class AnimationUsingKeyFrames extends AnimationBase {\r\n        static KeyFramesProperty = DependencyProperty.RegisterImmutable<KeyFrameCollection>(\"KeyFrames\", () => KeyFrameCollection, AnimationUsingKeyFrames);\r\n        KeyFrames: KeyFrameCollection;\r\n\r\n        constructor() {\r\n            super();\r\n            var coll = AnimationUsingKeyFrames.KeyFramesProperty.Initialize(this);\r\n            coll.AttachTo(this);\r\n        }\r\n\r\n        Resolve(target: DependencyObject, propd: DependencyProperty): boolean {\r\n            var keyFrames = this.KeyFrames;\r\n\r\n            var sortedList = KeyFrameCollection.ResolveKeyFrames(this, keyFrames);\r\n\r\n            var count = sortedList.length;\r\n            for (var j = 0; j < count; j++) {\r\n                if (!sortedList[j].KeyTime.IsValid)\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n        GetCurrentValue(defaultOriginValue: any, defaultDestinationValue: any, clockData: IClockData): any {\r\n            var keyFrames = this.KeyFrames;\r\n\r\n            var prevFrameRef = { Value: <IKeyFrame>null };\r\n            var currentKeyFrame: IKeyFrame = keyFrames.GetKeyFrameForTime(clockData.CurrentTime, prevFrameRef);\r\n            var prevFrame: IKeyFrame = prevFrameRef.Value;\r\n            if (!currentKeyFrame)\r\n                return null;\r\n\r\n            var baseValue: any;\r\n            var keyStartTime: TimeSpan;\r\n            var keyEndTime = currentKeyFrame._ResolvedKeyTime;\r\n            if (!prevFrame) {\r\n                // the first keyframe, start at the animation's base value\r\n                baseValue = defaultOriginValue;\r\n                keyStartTime = new TimeSpan();\r\n            } else {\r\n                // start at the previous keyframe's target value\r\n                if (prevFrame instanceof ObjectKeyFrame) {\r\n                    baseValue = (<ObjectKeyFrame>prevFrame).ConvertedValue;\r\n                } else {\r\n                    baseValue = prevFrame.Value;\r\n                }\r\n                keyStartTime = prevFrame._ResolvedKeyTime;\r\n            }\r\n\r\n            var progress: number;\r\n            if (clockData.CurrentTime.CompareTo(keyEndTime) >= 0) {\r\n                progress = 1.0;\r\n            } else {\r\n                var keyDuration = keyEndTime.Ticks - keyStartTime.Ticks;\r\n                if (keyDuration <= 0)\r\n                    progress = 1.0;\r\n                else\r\n                    progress = (clockData.CurrentTime.Ticks - keyStartTime.Ticks) / keyDuration;\r\n            }\r\n\r\n            return currentKeyFrame.InterpolateValue(baseValue, progress);\r\n        }\r\n        GetNaturalDurationCore(): Duration {\r\n            var keyFrames = this.KeyFrames;\r\n            var sortedList: IKeyFrame[] = KeyFrameCollection.ResolveKeyFrames(this, keyFrames);\r\n            var len = sortedList.length;\r\n            var ts: TimeSpan;\r\n            if (len > 0)\r\n                ts = sortedList[len - 1]._ResolvedKeyTime;\r\n            else\r\n                ts = new TimeSpan();\r\n            return new Duration(ts);\r\n        }\r\n\r\n        AddKeyFrame(kf: KeyFrame) { this.KeyFrames.Add(kf); }\r\n        RemoveKeyFrame(kf: KeyFrame) { this.KeyFrames.Remove(kf); }\r\n    }\r\n    Fayde.CoreLibrary.add(AnimationUsingKeyFrames);\r\n    Markup.Content(AnimationUsingKeyFrames, AnimationUsingKeyFrames.KeyFramesProperty);\r\n}","/// <reference path=\"../../Core/Triggers.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class BeginStoryboard extends TriggerAction {\r\n        static StoryboardProperty = DependencyProperty.RegisterCore(\"Storyboard\", () => Animation.Storyboard, BeginStoryboard);\r\n        Storyboard: Animation.Storyboard;\r\n\r\n        Fire() {\r\n            var sb = this.Storyboard;\r\n            if (sb) sb.Begin();\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(BeginStoryboard);\r\n    Markup.Content(BeginStoryboard, BeginStoryboard.StoryboardProperty);\r\n}","/// <reference path=\"AnimationBase.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class ColorAnimation extends AnimationBase {\r\n        static ByProperty: DependencyProperty = DependencyProperty.Register(\"By\", () => Color, ColorAnimation, null, (d, args) => (<ColorAnimation>d)._ByChanged(args));\r\n        static EasingFunctionProperty: DependencyProperty = DependencyProperty.Register(\"EasingFunction\", () => EasingFunctionBase, ColorAnimation, undefined, (d, args) => (<ColorAnimation>d)._EasingChanged(args));\r\n        static FromProperty: DependencyProperty = DependencyProperty.Register(\"From\", () => Color, ColorAnimation, null, (d, args) => (<ColorAnimation>d)._FromChanged(args));\r\n        static ToProperty: DependencyProperty = DependencyProperty.Register(\"To\", () => Color, ColorAnimation, null, (d, args) => (<ColorAnimation>d)._ToChanged(args));\r\n        By: Color;\r\n        EasingFunction: IEasingFunction;\r\n        From: Color;\r\n        To: Color;\r\n\r\n        private _FromCached: Color = null;\r\n        private _ToCached: Color = null;\r\n        private _ByCached: Color = null;\r\n        private _EasingCached: EasingFunctionBase = undefined;\r\n\r\n        constructor(){\r\n            super();\r\n        }\r\n\r\n        GetCurrentValue(defaultOriginalValue: any, defaultDestinationValue: any, clockData: IClockData): Color {\r\n            var start = new Color();\r\n            if (this._FromCached)\r\n                start = this._FromCached;\r\n            else if (defaultOriginalValue instanceof Color)\r\n                start = defaultOriginalValue;\r\n\r\n            var end = start;\r\n            if (this._ToCached)\r\n                end = this._ToCached;\r\n            else if (this._ByCached)\r\n                end = start.Add(this._ByCached);\r\n            else if (defaultDestinationValue instanceof Color)\r\n                end = defaultDestinationValue;\r\n\r\n            var easingFunc = this._EasingCached;\r\n            if (easingFunc)\r\n                clockData.Progress = easingFunc.Ease(clockData.Progress);\r\n\r\n            return Color.LERP(start, end, clockData.Progress);\r\n        }\r\n\r\n        private _FromChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this._FromCached = args.NewValue;\r\n        }\r\n        private _ToChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this._ToCached = args.NewValue;\r\n        }\r\n        private _ByChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this._ByCached = args.NewValue;\r\n        }\r\n        private _EasingChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this._EasingCached = args.NewValue;\r\n        }\r\n\r\n        GenerateFrom(): AnimationBase {\r\n            return new ColorAnimation();\r\n        }\r\n        GenerateTo(isEntering: boolean): AnimationBase {\r\n            var val = this.From != null ? this.From : this.To;\r\n            if (val == null)\r\n                return null;\r\n            var ca = new ColorAnimation();\r\n            ca.To = val;\r\n            return ca;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ColorAnimation);\r\n}","/// <reference path=\"AnimationUsingKeyFrames.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class ColorAnimationUsingKeyFrames extends AnimationUsingKeyFrames {\r\n        GenerateFrom(): AnimationBase {\r\n            return new ColorAnimation();\r\n        }\r\n        GenerateTo(isEntering: boolean): AnimationBase {\r\n            var kfs = this.KeyFrames;\r\n            if (kfs.Count === 0)\r\n                return null;\r\n            var val = (kfs.GetValueAt(isEntering ? 0 : kfs.Count - 1)).Value;\r\n            if (val == null)\r\n                return null;\r\n            var ca = new Animation.ColorAnimation();\r\n            ca.To = val;\r\n            return ca;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ColorAnimationUsingKeyFrames);\r\n}","/// <reference path=\"../../Core/DependencyObject.ts\" />\r\n/// <reference path=\"../../Core/XamlObjectCollection.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export interface IOutValue {\r\n        Value: any;\r\n    }\r\n    export interface IKeyFrameListener {\r\n        KeyFrameChanged(source: KeyFrame);\r\n    }\r\n    export interface IKeyFrame {\r\n        _ResolvedKeyTime: TimeSpan;\r\n        _Resolved: boolean;\r\n        Value: any;\r\n        InterpolateValue(baseValue: any, keyFrameProgress: number): any;\r\n    }\r\n\r\n    export class KeyFrame extends DependencyObject implements IKeyFrame {\r\n        _ResolvedKeyTime: TimeSpan = null;\r\n        _Resolved: boolean = false;\r\n        private _Listener: IKeyFrameListener;\r\n\r\n        static KeyTimeProperty: DependencyProperty = DependencyProperty.Register(\"KeyTime\", () => KeyTime, KeyFrame, undefined, (d, args) => (<KeyFrame>d).InvalidateKeyFrame());\r\n        KeyTime: KeyTime;\r\n        Value: any;\r\n\r\n        CoerceKeyTime(dobj: DependencyObject, propd: DependencyProperty, value: any, coerced: IOutValue, error: BError): boolean {\r\n            if (!value)\r\n                coerced.Value = this.KeyTime;\r\n            else\r\n                coerced.Value = value;\r\n            return true;\r\n        }\r\n\r\n        InterpolateValue(baseValue: any, keyFrameProgress: number): any {\r\n            //Abstract Method\r\n            return undefined;\r\n        }\r\n\r\n        CompareToTimeSpan(otherTs: TimeSpan): number {\r\n            return this._ResolvedKeyTime.CompareTo(otherTs);\r\n        }\r\n\r\n        Listen(listener: IKeyFrameListener) { this._Listener = listener; }\r\n        Unlisten(listener: IKeyFrameListener) { if (this._Listener === listener) this._Listener = null; }\r\n\r\n        InvalidateKeyFrame() {\r\n            var listener = this._Listener;\r\n            if (listener) listener.KeyFrameChanged(this);\r\n        }\r\n\r\n        static Comparer(kf1: KeyFrame, kf2: KeyFrame): number {\r\n            var ts1 = kf1._ResolvedKeyTime;\r\n            var ts2 = kf2._ResolvedKeyTime;\r\n            return ts1.CompareTo(ts2);\r\n        }\r\n\r\n        /// http://msdn2.microsoft.com/en-us/library/ms742524.aspx (Bottom of page)\r\n        static ResolveKeyFrames(animation: AnimationBase, arr: KeyFrame[]): KeyFrame[] {\r\n            var totalInterpolationTime: TimeSpan;\r\n            var hasTimeSpanKeyFrame = false;\r\n            var highestKeyTimeTimeSpan = new TimeSpan();\r\n            var keyFrame: KeyFrame;\r\n\r\n            var len = arr.length;\r\n\r\n            var i: number;\r\n            for (i = 0; i < len; i++) {\r\n                keyFrame = arr[i];\r\n                keyFrame._ResolvedKeyTime = new TimeSpan();\r\n                keyFrame._Resolved = false;\r\n            }\r\n\r\n            var keyTime: KeyTime;\r\n            // resolve TimeSpan keyframes\r\n            for (i = 0; i < len; i++) {\r\n                keyFrame = arr[i];\r\n                keyTime = keyFrame.KeyTime;\r\n                if (keyTime.HasTimeSpan) {\r\n                    hasTimeSpanKeyFrame = true;\r\n                    var ts = keyTime.TimeSpan;\r\n                    if (ts.CompareTo(highestKeyTimeTimeSpan) > 0)\r\n                        highestKeyTimeTimeSpan = ts;\r\n                    keyFrame._ResolvedKeyTime = ts;\r\n                    keyFrame._Resolved = true;\r\n                }\r\n            }\r\n\r\n            // calculate total animation interpolation time\r\n            var dur = animation.Duration;\r\n            if (dur && dur.HasTimeSpan) {\r\n                totalInterpolationTime = dur.TimeSpan;\r\n            } else if (hasTimeSpanKeyFrame) {\r\n                totalInterpolationTime = highestKeyTimeTimeSpan;\r\n            } else {\r\n                totalInterpolationTime = new TimeSpan(TimeSpan._TicksPerSecond);\r\n            }\r\n            //LOOKS USELESS: animation._TotalKeyTime = totalInterpolationTime;\r\n\r\n            // use the total interpolation time to resolve percent keytime keyframes\r\n            for (i = 0; i < len; i++) {\r\n                keyFrame = arr[i];\r\n                keyTime = keyFrame.KeyTime;\r\n                if (keyTime.HasPercent) {\r\n                    keyFrame._ResolvedKeyTime = totalInterpolationTime.Multiply(keyTime.Percent)\r\n                    keyFrame._Resolved = true;\r\n                }\r\n            }\r\n\r\n            // if the last frame is KeyTime Uniform or Paced, resolve it to be equal to the total interpolation time\r\n            if (len > 0) {\r\n                keyFrame = arr[len - 1];\r\n                keyTime = keyFrame.KeyTime;\r\n                if (keyTime.IsPaced || keyTime.IsUniform) {\r\n                    keyFrame._ResolvedKeyTime = totalInterpolationTime;\r\n                    keyFrame._Resolved = true;\r\n                }\r\n            }\r\n\r\n            /* if the first frame is KeyTime Paced:\r\n            **   1. if there is only 1 frame, its KeyTime is the total interpolation time.\r\n            **   2. if there is more than 1 frame, its KeyTime is 0.\r\n            **\r\n            ** note 1 is handled in the above block so we only have to\r\n            ** handle 2 here.\r\n            */\r\n            if (len > 0) {\r\n                keyFrame = arr[len - 1];\r\n                keyTime = keyFrame.KeyTime;\r\n                if (!keyFrame._Resolved && keyTime.IsPaced) {\r\n                    keyFrame._ResolvedKeyTime = new TimeSpan();\r\n                    keyFrame._Resolved = true;\r\n                }\r\n            }\r\n\r\n            // XXX resolve remaining KeyTime::Uniform frames\r\n\r\n            // XXX resolve frames with unspecified keytimes -- is this possible?  is the default keytime NULL?  it seems to be Uniform?\r\n\r\n            // XXX resolve remaining KeyTime::Paced frames */\r\n\r\n            return arr;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(KeyFrame);\r\n\r\n    export class KeyFrameCollection extends XamlObjectCollection<KeyFrame> {\r\n        private _Resolved: boolean = false;\r\n        private _SortedList: KeyFrame[] = [];\r\n\r\n        GetKeyFrameForTime(t: TimeSpan, prevFrameRef: IOutValue): KeyFrame {\r\n            var currentKeyFrame: KeyFrame = null;\r\n            var previousKeyFrame: KeyFrame = null;\r\n            var i;\r\n\r\n            var sortedList = this._SortedList;\r\n\r\n            if (sortedList.length == 0) {\r\n                prevFrameRef.Value = null;\r\n                return null;\r\n            }\r\n\r\n            var keyFrame: KeyFrame;\r\n            var valuePropd;\r\n            // Crawl forward to figure out what segment to use (this assumes the list is sorted)\r\n            for (i = 0; i < sortedList.length; i++) {\r\n                keyFrame = sortedList[i];\r\n                if (keyFrame.CompareToTimeSpan(t) >= 0 || (i + 1) >= sortedList.length)\r\n                    break;\r\n            }\r\n\r\n            // Crawl backward to find first non-null frame\r\n            for (; i >= 0; i--) {\r\n                keyFrame = sortedList[i];\r\n                valuePropd = DependencyProperty.GetDependencyProperty((<any>keyFrame).constructor, \"Value\");\r\n                if (keyFrame.GetValue(valuePropd) !== undefined) {\r\n                    currentKeyFrame = keyFrame;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Crawl backward some more to find first non-null prev frame\r\n            for (i--; i >= 0; i--) {\r\n                keyFrame = sortedList[i];\r\n                valuePropd = DependencyProperty.GetDependencyProperty((<any>keyFrame).constructor, \"Value\");\r\n                if (keyFrame.GetValue(valuePropd) !== undefined) {\r\n                    previousKeyFrame = keyFrame;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            prevFrameRef.Value = previousKeyFrame;\r\n            return currentKeyFrame;\r\n        }\r\n        Clear(): boolean {\r\n            this._Resolved = false;\r\n            this._SortedList = [];\r\n            return super.Clear();\r\n        }\r\n\r\n        AddingToCollection(value: KeyFrame, error: BError): boolean {\r\n            if (!super.AddingToCollection(value, error))\r\n                return false;\r\n            this._Resolved = false;\r\n            value.Listen(this);\r\n            return true;\r\n        }\r\n        RemovedFromCollection(value: KeyFrame, isValueSafe: boolean) {\r\n            super.RemovedFromCollection(value, isValueSafe);\r\n            this._Resolved = false;\r\n            value.Unlisten(this);\r\n        }\r\n        KeyFrameChanged(source: KeyFrame) {\r\n            this._Resolved = false;\r\n        }\r\n\r\n        static ResolveKeyFrames(animation: AnimationBase, coll: KeyFrameCollection): KeyFrame[] {\r\n            if (coll._Resolved)\r\n                return coll._SortedList;\r\n            coll._SortedList = KeyFrame.ResolveKeyFrames(animation, coll._ht).slice(0);\r\n            coll._SortedList.sort(KeyFrame.Comparer);\r\n            coll._Resolved = true;\r\n            return coll._SortedList;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(KeyFrameCollection);\r\n}","/// <reference path=\"KeyFrame.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class ColorKeyFrame extends KeyFrame {\r\n        static ValueProperty: DependencyProperty = DependencyProperty.Register(\"Value\", () => Color, ColorKeyFrame);\r\n        Value: Color;\r\n    }\r\n    Fayde.CoreLibrary.add(ColorKeyFrame);\r\n\r\n    export class DiscreteColorKeyFrame extends ColorKeyFrame {\r\n        InterpolateValue(baseValue: Color, keyFrameProgress: number): Color {\r\n            if (keyFrameProgress >= 1.0)\r\n                return this.Value;\r\n            return baseValue;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(DiscreteColorKeyFrame);\r\n\r\n    export class EasingColorKeyFrame extends ColorKeyFrame {\r\n        static EasingFunctionProperty: DependencyProperty = DependencyProperty.Register(\"EasingFunction\", () => EasingFunctionBase, EasingColorKeyFrame);\r\n        EasingFunction: EasingFunctionBase;\r\n\r\n        InterpolateValue(baseValue: Color, keyFrameProgress: number): Color {\r\n            if (keyFrameProgress >= 1.0)\r\n                return this.Value;\r\n\r\n            var start = baseValue;\r\n            var end = this.Value;\r\n\r\n            var easingFunction = this.EasingFunction;\r\n            if (easingFunction)\r\n                keyFrameProgress = easingFunction.Ease(keyFrameProgress);\r\n\r\n            return Color.LERP(start, end, keyFrameProgress);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(EasingColorKeyFrame);\r\n\r\n    export class LinearColorKeyFrame extends ColorKeyFrame {\r\n        InterpolateValue(baseValue: Color, keyFrameProgress: number): Color {\r\n            return Color.LERP(baseValue, this.Value, keyFrameProgress);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(LinearColorKeyFrame);\r\n\r\n    export class SplineColorKeyFrame extends ColorKeyFrame {\r\n        static KeySplineProperty: DependencyProperty = DependencyProperty.Register(\"KeySpline\", () => KeySpline, SplineColorKeyFrame);\r\n        KeySpline: KeySpline;\r\n\r\n        InterpolateValue(baseValue: Color, keyFrameProgress: number): Color {\r\n            if (keyFrameProgress >= 1.0)\r\n                return this.Value;\r\n\r\n            var start = baseValue;\r\n            var end = this.Value;\r\n            var splineProgress = keyFrameProgress;\r\n            var keySpline = this.KeySpline;\r\n            if (keySpline)\r\n                splineProgress = keySpline.GetSplineProgress(keyFrameProgress);\r\n\r\n            return Color.LERP(start, end, splineProgress);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(SplineColorKeyFrame);\r\n}","\r\nmodule Fayde.Media.Animation {\r\n    export interface ICurvePoint {\r\n        x: number;\r\n        y: number;\r\n    }\r\n    export interface IQuadraticCurve {\r\n        c0: ICurvePoint;\r\n        c1: ICurvePoint;\r\n        c2: ICurvePoint;\r\n    }\r\n    export interface ICubicCurve {\r\n        c0: ICurvePoint;\r\n        c1: ICurvePoint;\r\n        c2: ICurvePoint;\r\n        c3: ICurvePoint;\r\n    }\r\n    export interface ISubdiviedCubicCurve {\r\n        b1: ICubicCurve;\r\n        b2: ICubicCurve;\r\n    }\r\n\r\n    export class Curves {\r\n        static QuadraticArrayYForX(arr: IQuadraticCurve[], x: number, count: number): number {\r\n            for (var i = 0; i < count; i++) {\r\n                if (x < arr[i].c2.x)\r\n                    return Curves.QuadraticYForX(x, arr[i]);\r\n            }\r\n            return 0.0;\r\n        }\r\n        static QuadraticYForX(x: number, src: IQuadraticCurve): number {\r\n            var l = src.c2.x - src.c0.x;\r\n            if (l <= 0)\r\n                return 0.0;\r\n            x = (x - src.c0.x) / l;\r\n            return ((1 - x) * (1 - x)) * src.c0.y + ((2 * x) * (1 - x) * src.c1.y) + ((x * x) * src.c2.y);\r\n        }\r\n\r\n        static SubdivideCubicAtLevel(b: ICubicCurve[], lvl: number, src: ICubicCurve) {\r\n            Curves.RecursiveSubdivide(b, lvl, 1, 0, src);\r\n        }\r\n        static RecursiveSubdivide(b: ICubicCurve[], lvl: number, currentlvl: number, pos: number, src: ICubicCurve) {\r\n            var data: ISubdiviedCubicCurve = { b1: null, b2: null };\r\n            Curves.SubdivideCubic(data, src);\r\n            var b1 = data.b1;\r\n            var b2 = data.b2;\r\n\r\n            if (currentlvl === lvl) {\r\n                b[pos] = b1;\r\n                b[pos + 1] = b2;\r\n                return pos + 2;\r\n            }\r\n            pos = Curves.RecursiveSubdivide(b, lvl, currentlvl + 1, pos, b1);\r\n            pos = Curves.RecursiveSubdivide(b, lvl, currentlvl + 1, pos, b2);\r\n            return pos;\r\n        }\r\n        static SubdivideCubic(data: ISubdiviedCubicCurve, src: ICubicCurve) {\r\n            var p01 = { x: 0, y: 0 }, p012 = { x: 0, y: 0 }, p0123 = { x: 0, y: 0 };\r\n            var p12 = { x: 0, y: 0 }, p123 = { x: 0, y: 0 };\r\n            var p23 = { x: 0, y: 0 };\r\n\r\n            Curves.HalfLerpPoint(p01, src.c0, src.c1);\r\n            Curves.HalfLerpPoint(p12, src.c1, src.c2);\r\n            Curves.HalfLerpPoint(p23, src.c2, src.c3);\r\n\r\n            Curves.HalfLerpPoint(p012, p01, p12);\r\n\r\n            Curves.HalfLerpPoint(p123, p12, p23);\r\n            Curves.HalfLerpPoint(p0123, p012, p123);\r\n\r\n            data.b1 = {\r\n                c0: src.c0,\r\n                c1: p01,\r\n                c2: p012,\r\n                c3: p0123\r\n            };\r\n            data.b2 = {\r\n                c0: p0123,\r\n                c1: p123,\r\n                c2: p23,\r\n                c3: src.c3\r\n            };\r\n        }\r\n        static HalfLerpPoint(p: ICurvePoint, p1: ICurvePoint, p2: ICurvePoint) {\r\n            p.x = p1.x + (p2.x - p1.x) * 0.5;\r\n            p.y = p1.y + (p2.y - p1.y) * 0.5;\r\n        }\r\n\r\n        static ConvertCubicsToQuadratics(srcArray: ICubicCurve[], count: number): IQuadraticCurve[] {\r\n            var destArray: IQuadraticCurve[] = [];\r\n            for (var i = 0; i < count; i++) {\r\n                destArray.push(Curves.QuadraticFromCubic(srcArray[i]));\r\n            }\r\n            return destArray;\r\n        }\r\n        static QuadraticFromCubic(src: ICubicCurve): IQuadraticCurve {\r\n            return {\r\n                c0: {\r\n                    x: src.c0.x,\r\n                    y: src.c0.y\r\n                },\r\n                c1: {\r\n                    x: (src.c1.x + src.c2.x) / 2.0,\r\n                    y: (src.c1.y + src.c2.y) / 2.0\r\n                },\r\n                c2: {\r\n                    x: src.c3.x,\r\n                    y: src.c3.y\r\n                }\r\n            };\r\n        }\r\n    }\r\n}","/// <reference path=\"AnimationBase.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class DoubleAnimation extends AnimationBase {\r\n        static ByProperty: DependencyProperty = DependencyProperty.Register(\"By\", () => Number, DoubleAnimation, null, (d, args) => (<DoubleAnimation>d)._ByChanged(args));\r\n        static EasingFunctionProperty: DependencyProperty = DependencyProperty.Register(\"EasingFunction\", () => EasingFunctionBase, DoubleAnimation, undefined, (d, args) => (<DoubleAnimation>d)._EasingChanged(args));\r\n        static FromProperty: DependencyProperty = DependencyProperty.Register(\"From\", () => Number, DoubleAnimation, null, (d, args) => (<DoubleAnimation>d)._FromChanged(args));\r\n        static ToProperty: DependencyProperty = DependencyProperty.Register(\"To\", () => Number, DoubleAnimation, null, (d, args) => (<DoubleAnimation>d)._ToChanged(args));\r\n        By: number;\r\n        EasingFunction: IEasingFunction;\r\n        From: number;\r\n        To: number;\r\n\r\n        private _FromCached: number = null;\r\n        private _ToCached: number = null;\r\n        private _ByCached: number = null;\r\n        private _EasingCached: EasingFunctionBase = undefined;\r\n\r\n        constructor(){\r\n            super();\r\n        }\r\n\r\n        GetCurrentValue(defaultOriginalValue: any, defaultDestinationValue: any, clockData: IClockData): number {\r\n            var start = 0.0;\r\n            if (this._FromCached != null)\r\n                start = this._FromCached;\r\n            else if (defaultOriginalValue != null && typeof defaultOriginalValue === \"number\")\r\n                start = defaultOriginalValue;\r\n\r\n            var end = start;\r\n            if (this._ToCached != null)\r\n                end = this._ToCached;\r\n            else if (this._ByCached != null)\r\n                end = start + this._ByCached;\r\n            else if (defaultDestinationValue != null && typeof defaultDestinationValue === \"number\")\r\n                end = defaultDestinationValue;\r\n\r\n            var easingFunc = this._EasingCached;\r\n            if (easingFunc != null)\r\n                clockData.Progress = easingFunc.Ease(clockData.Progress);\r\n\r\n            return start + ((end - start) * clockData.Progress);\r\n        }\r\n\r\n        private _FromChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this._FromCached = args.NewValue;\r\n        }\r\n        private _ToChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this._ToCached = args.NewValue;\r\n        }\r\n        private _ByChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this._ByCached = args.NewValue;\r\n        }\r\n        private _EasingChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this._EasingCached = args.NewValue;\r\n        }\r\n\r\n        GenerateFrom(): AnimationBase {\r\n            return new DoubleAnimation();\r\n        }\r\n        GenerateTo(isEntering: boolean): AnimationBase {\r\n            var val = (this.From != null) ? this.From : this.To;\r\n            if (val == null)\r\n                return null;\r\n            var da = new DoubleAnimation();\r\n            da.To = val;\r\n            return da;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(DoubleAnimation);\r\n}","/// <reference path=\"AnimationUsingKeyFrames.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class DoubleAnimationUsingKeyFrames extends AnimationUsingKeyFrames {\r\n        GenerateFrom(): AnimationBase {\r\n            return new DoubleAnimation();\r\n        }\r\n        GenerateTo(isEntering: boolean): AnimationBase {\r\n            var kfs = this.KeyFrames;\r\n            if (kfs.Count === 0)\r\n                return null;\r\n            var val = (kfs.GetValueAt(isEntering ? 0 : kfs.Count - 1)).Value;\r\n            if (val == null)\r\n                return null;\r\n            var da = new DoubleAnimation();\r\n            da.To = val;\r\n            return da;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(DoubleAnimationUsingKeyFrames);\r\n}","/// <reference path=\"KeyFrame.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class DoubleKeyFrame extends KeyFrame {\r\n        static ValueProperty: DependencyProperty = DependencyProperty.Register(\"Value\", () => Number, DoubleKeyFrame);\r\n        Value: number;\r\n    }\r\n    Fayde.CoreLibrary.add(DoubleKeyFrame);\r\n\r\n    export class DiscreteDoubleKeyFrame extends DoubleKeyFrame {\r\n        InterpolateValue(baseValue: number, keyFrameProgress: number): number {\r\n            if (keyFrameProgress >= 1.0)\r\n                return this.Value;\r\n            return baseValue;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(DiscreteDoubleKeyFrame);\r\n\r\n    export class EasingDoubleKeyFrame extends DoubleKeyFrame {\r\n        static EasingFunctionProperty: DependencyProperty = DependencyProperty.Register(\"EasingFunction\", () => EasingFunctionBase, EasingDoubleKeyFrame);\r\n        EasingFunction: EasingFunctionBase;\r\n\r\n        InterpolateValue(baseValue: number, keyFrameProgress: number): number {\r\n            if (keyFrameProgress >= 1.0)\r\n                return this.Value;\r\n\r\n            var start = baseValue;\r\n            var end = this.Value;\r\n\r\n            var easingFunction = this.EasingFunction;\r\n            if (easingFunction)\r\n                keyFrameProgress = easingFunction.Ease(keyFrameProgress);\r\n\r\n            if (isNaN(start))\r\n                start = 0;\r\n            if (isNaN(end))\r\n                end = 0;\r\n\r\n            return start + (end - start) * keyFrameProgress;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(EasingDoubleKeyFrame);\r\n\r\n    export class LinearDoubleKeyFrame extends DoubleKeyFrame {\r\n        InterpolateValue(baseValue: number, keyFrameProgress: number): number {\r\n            var start = baseValue;\r\n            var end = this.Value;\r\n            if (isNaN(start))\r\n                start = 0;\r\n            if (isNaN(end))\r\n                end = 0;\r\n            return start + (end - start) * keyFrameProgress;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(LinearDoubleKeyFrame);\r\n    \r\n    export class SplineDoubleKeyFrame extends DoubleKeyFrame {\r\n        static KeySplineProperty: DependencyProperty = DependencyProperty.Register(\"KeySpline\", () => KeySpline, SplineDoubleKeyFrame);\r\n        KeySpline: KeySpline;\r\n\r\n        InterpolateValue(baseValue: number, keyFrameProgress: number): number {\r\n            if (keyFrameProgress >= 1.0)\r\n                return this.Value;\r\n\r\n            var start = baseValue;\r\n            var end = this.Value;\r\n            var splineProgress = keyFrameProgress;\r\n            var keySpline = this.KeySpline;\r\n            if (keySpline)\r\n                splineProgress = keySpline.GetSplineProgress(keyFrameProgress);\r\n\r\n            if (isNaN(start))\r\n                start = 0;\r\n            if (isNaN(end))\r\n                end = 0;\r\n\r\n            return start + (end - start) * splineProgress;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(SplineDoubleKeyFrame);\r\n}","/// <reference path=\"../../Core/DependencyObject.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export interface IEasingFunction {\r\n        Ease(normalizedTime: number): number;\r\n    }\r\n    export class EasingFunctionBase extends DependencyObject implements IEasingFunction {\r\n        static EasingModeProperty: DependencyProperty = DependencyProperty.Register(\"EasingMode\", () => new Enum(EasingMode), EasingFunctionBase);\r\n        EasingMode: EasingMode;\r\n\r\n        Ease(normalizedTime: number): number {\r\n            var easingMode = this.EasingMode;\r\n            switch (easingMode) {\r\n                case EasingMode.EaseIn:\r\n                    return this.EaseInCore(normalizedTime);\r\n                case EasingMode.EaseOut:\r\n                    return this.EaseInCore(1.0 - normalizedTime);\r\n                case EasingMode.EaseInOut:\r\n                    return normalizedTime <= 0.5 ?\r\n                        this.EaseInCore(normalizedTime * 2) * 0.5 :\r\n                        1.0 - this.EaseInCore(((1.0 - normalizedTime) * 2) * 0.5);\r\n                default:\r\n                    return 0.0;\r\n            }\r\n\r\n        }\r\n        EaseInCore(t: number): number {\r\n            //Abstract method\r\n            return t;\r\n        }\r\n    }\r\n}","/// <reference path=\"EasingFunctionBase.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class BackEase extends EasingFunctionBase {\r\n        static AmplitudeProperty: DependencyProperty = DependencyProperty.Register(\"Amplitude\", () => Number, BackEase);\r\n        Amplitude: number;\r\n        EaseInCore(t: number): number {\r\n            var a = this.Amplitude;\r\n            return (t * t * t) - (t * a * Math.sin(t * Math.PI));\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(BackEase);\r\n\r\n    export class BounceEase extends EasingFunctionBase {\r\n        static BouncesProperty:DependencyProperty = DependencyProperty.Register(\"Bounces\", () => Number, BounceEase, 3);\r\n        static BouncinessProperty:DependencyProperty = DependencyProperty.Register(\"Bounciness\", () => Number, BounceEase, 2);\r\n        Bounces: number;\r\n        Bounciness: number;\r\n        EaseInCore(t: number): number {\r\n            t = 1 - t;\r\n            var bounces = this.Bounces;\r\n            var bounciness = this.Bounciness;\r\n            var r = -1;\r\n            var period = 2;\r\n\r\n            for (var i = 0; i <= bounces; i++) {\r\n                r += (period * Math.pow(1 + (bounciness / 2), -i));\r\n            }\r\n\r\n            var x1 = -1.0;\r\n            var x2 = 0;\r\n            var r_sq = r * r;\r\n            var val = 100;\r\n            var p = 0;\r\n\r\n            while (val > 0.0) {\r\n                x2 = x1 + period * Math.pow(1 + (bounciness / 2), -p++);\r\n                val = r_sq * (t - x1 / r) * (t - x2 / r);\r\n                x1 = x2;\r\n            }\r\n            return -val;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(BounceEase);\r\n\r\n    export class CircleEase extends EasingFunctionBase {\r\n        EaseInCore(t: number): number {\r\n            return 1 - Math.sqrt(1 - (t * t));\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(CircleEase);\r\n\r\n    export class CubicEase extends EasingFunctionBase {\r\n        EaseInCore(t: number): number {\r\n            return t * t * t;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(CubicEase);\r\n\r\n    export class ElasticEase extends EasingFunctionBase {\r\n        static OscillationsProperty: DependencyProperty = DependencyProperty.Register(\"Oscillations\", () => Number, ElasticEase);\r\n        static SpringinessProperty: DependencyProperty = DependencyProperty.Register(\"Springiness\", () => Number, ElasticEase);\r\n        Oscillations: number;\r\n        Springiness: number;\r\n        EaseInCore(t: number): number {\r\n            var period = 1.0 / (this.Oscillations + .25);\r\n            var offset = period / 4;\r\n            t = t - 1;\r\n            return t * -Math.pow(2.0, this.Springiness * t) * Math.sin(((t - offset) * Math.PI * 2) / period);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ElasticEase);\r\n\r\n    export class ExponentialEase extends EasingFunctionBase {\r\n        static ExponentProperty: DependencyProperty = DependencyProperty.Register(\"Exponent\", () => Number, ExponentialEase);\r\n        Exponent: number;\r\n        EaseInCore(t: number): number {\r\n            var e = this.Exponent;\r\n            return (Math.exp(e * t) - 1) / (Math.exp(e) - 1);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ExponentialEase);\r\n\r\n    export class PowerEase extends EasingFunctionBase {\r\n        static PowerProperty: DependencyProperty = DependencyProperty.Register(\"Power\", () => Number, PowerEase);\r\n        Power: number;\r\n        EaseInCore(t: number): number {\r\n            return Math.pow(t, this.Power);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(PowerEase);\r\n\r\n    export class QuadraticEase extends EasingFunctionBase {\r\n        EaseInCore(t: number): number {\r\n            return t * t;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(QuadraticEase);\r\n\r\n    export class QuarticEase extends EasingFunctionBase {\r\n        EaseInCore(t: number): number {\r\n            return t * t * t * t;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(QuarticEase);\r\n\r\n    export class QuinticEase extends EasingFunctionBase {\r\n        EaseInCore(t: number): number {\r\n            return t * t * t * t * t;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(QuinticEase);\r\n\r\n    export class SineEase extends EasingFunctionBase {\r\n        EaseInCore(t: number): number {\r\n            return 1 - (Math.sin(1 - t) * (Math.PI / 2));\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(SineEase);\r\n}","/// <reference path=\"../../Core/DependencyObject.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class KeySpline extends DependencyObject {\r\n        static PRECISION_LEVEL: number = 4;\r\n        static TOTAL_COUNT: number = Math.pow(2, KeySpline.PRECISION_LEVEL);\r\n\r\n        static ControlPoint1Property: DependencyProperty = DependencyProperty.RegisterCore(\"ControlPoint1\", function () { return Point; }, KeySpline, undefined, (d, args) => (<KeySpline>d).InvalidateControlPoints());\r\n        static ControlPoint2Property: DependencyProperty = DependencyProperty.RegisterCore(\"ControlPoint2\", function () { return Point; }, KeySpline, undefined, (d, args) => (<KeySpline>d).InvalidateControlPoints());\r\n        ControlPoint1: Point; //undefined is 0,0\r\n        ControlPoint2: Point; //undefined is 1,1\r\n\r\n        private _QuadraticsArray: IQuadraticCurve[] = null;\r\n        GetSplineProgress(linearProgress: number): number {\r\n            if (linearProgress >= 1.0)\r\n                return 1.0;\r\n            if (linearProgress <= 0.0)\r\n                return 0.0;\r\n            if (!this._QuadraticsArray)\r\n                this._RegenerateQuadratics();\r\n            return Curves.QuadraticArrayYForX(this._QuadraticsArray, linearProgress, KeySpline.TOTAL_COUNT);\r\n        }\r\n        private InvalidateControlPoints() {\r\n            this._QuadraticsArray = null;\r\n        }\r\n        private _RegenerateQuadratics() {\r\n            var c1 = this.ControlPoint1 || new Point(0, 0);\r\n            var c2 = this.ControlPoint2 || new Point(1.0, 1.0);\r\n            var src: ICubicCurve = {\r\n                c0: { x: 0.0, y: 0.0 },\r\n                c1: { x: c1.x, y: c1.y },\r\n                c2: { x: c2.x, y: c2.y },\r\n                c3: { x: 1.0, y: 1.0 }\r\n            };\r\n\r\n            var carr: ICubicCurve[] = [];\r\n            Curves.SubdivideCubicAtLevel(carr, KeySpline.PRECISION_LEVEL, src);\r\n            this._QuadraticsArray = Curves.ConvertCubicsToQuadratics(carr, KeySpline.TOTAL_COUNT);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(KeySpline);\r\n}","/// <reference path=\"AnimationUsingKeyFrames.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class ObjectAnimationUsingKeyFrames extends AnimationUsingKeyFrames {\r\n        Resolve (target: DependencyObject, propd: DependencyProperty): boolean {\r\n            for (var en = this.KeyFrames.getEnumerator(); en.moveNext();) {\r\n                var keyFrame = <ObjectKeyFrame>en.current;\r\n                var value = keyFrame.Value;\r\n                if (value == null) {\r\n                    keyFrame.ConvertedValue = undefined;\r\n                } else {\r\n                    var cv = convertKeyFrame(propd, value);\r\n                    if (cv === BAD_CONVERSION)\r\n                        return false;\r\n                    keyFrame.ConvertedValue = cv;\r\n                }\r\n            }\r\n            return super.Resolve(target, propd);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ObjectAnimationUsingKeyFrames);\r\n\r\n    var BAD_CONVERSION = {};\r\n\r\n    function convertKeyFrame (propd: DependencyProperty, value: any): any {\r\n        try {\r\n            return nullstone.convertAnyToType(value, <Function>propd.GetTargetType());\r\n        } catch (err) {\r\n            console.warn(\"Error resolving ObjectAnimation Value.\");\r\n            return BAD_CONVERSION;\r\n        }\r\n    }\r\n}","/// <reference path=\"KeyFrame.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class ObjectKeyFrame extends KeyFrame {\r\n        static ValueProperty: DependencyProperty = DependencyProperty.Register(\"Value\", () => Object, ObjectKeyFrame);\r\n        Value: any;\r\n        ConvertedValue: any = undefined;\r\n    }\r\n    Fayde.CoreLibrary.add(ObjectKeyFrame);\r\n    \r\n    export class DiscreteObjectKeyFrame extends ObjectKeyFrame {\r\n        InterpolateValue(baseValue: any, keyFrameProgress: number): any {\r\n            if (keyFrameProgress >= 1.0)\r\n                return this.ConvertedValue;\r\n            return baseValue;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(DiscreteObjectKeyFrame);\r\n}","/// <reference path=\"AnimationBase.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class PointAnimation extends AnimationBase {\r\n        static ByProperty: DependencyProperty = DependencyProperty.Register(\"By\", () => Point, PointAnimation, null, (d, args) => (<PointAnimation>d)._ByChanged(args));\r\n        static EasingFunctionProperty: DependencyProperty = DependencyProperty.Register(\"EasingFunction\", () => EasingFunctionBase, PointAnimation, undefined, (d, args) => (<PointAnimation>d)._EasingChanged(args));\r\n        static FromProperty: DependencyProperty = DependencyProperty.Register(\"From\", () => Point, PointAnimation, null, (d, args) => (<PointAnimation>d)._FromChanged(args));\r\n        static ToProperty: DependencyProperty = DependencyProperty.Register(\"To\", () => Point, PointAnimation, null, (d, args) => (<PointAnimation>d)._ToChanged(args));\r\n        By: Point;\r\n        EasingFunction: IEasingFunction;\r\n        From: Point;\r\n        To: Point;\r\n\r\n        private _FromCached: Point = null;\r\n        private _ToCached: Point = null;\r\n        private _ByCached: Point = null;\r\n        private _EasingCached: EasingFunctionBase = undefined;\r\n\r\n        constructor() {\r\n            super();\r\n        }\r\n\r\n        GetCurrentValue(defaultOriginalValue: any, defaultDestinationValue: any, clockData: IClockData): Point {\r\n            var start = new Point();\r\n            if (this._FromCached != null)\r\n                start = this._FromCached;\r\n            else if (defaultOriginalValue instanceof Point)\r\n                start = defaultOriginalValue;\r\n\r\n            var end = start;\r\n            if (this._ToCached != null)\r\n                end = this._ToCached;\r\n            else if (this._ByCached != null)\r\n                end = new Point(start.x + this._ByCached.x, start.y + this._ByCached.y);\r\n            else if (defaultDestinationValue instanceof Point)\r\n                end = defaultDestinationValue;\r\n\r\n            var easingFunc = this._EasingCached;\r\n            if (easingFunc != null)\r\n                clockData.Progress = easingFunc.Ease(clockData.Progress);\r\n\r\n            return Point.LERP(start, end, clockData.Progress);\r\n        }\r\n        \r\n        private _FromChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this._FromCached = args.NewValue;\r\n        }\r\n        private _ToChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this._ToCached = args.NewValue;\r\n        }\r\n        private _ByChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this._ByCached = args.NewValue;\r\n        }\r\n        private _EasingChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            this._EasingCached = args.NewValue;\r\n        }\r\n        \r\n        GenerateFrom(): AnimationBase {\r\n            return new PointAnimation();\r\n        }\r\n        GenerateTo(isEntering: boolean): AnimationBase {\r\n            var val = (this.From != null) ? this.From : this.To;\r\n            if (val == null)\r\n                return null;\r\n            var pa = new PointAnimation();\r\n            pa.To = val;\r\n            return pa;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(PointAnimation);\r\n}","/// <reference path=\"AnimationUsingKeyFrames.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class PointAnimationUsingKeyFrames extends AnimationUsingKeyFrames {\r\n        GenerateFrom(): AnimationBase {\r\n            return new PointAnimation();\r\n        }\r\n        GenerateTo(isEntering: boolean): AnimationBase {\r\n            var kfs = this.KeyFrames;\r\n            if (kfs.Count === 0)\r\n                return null;\r\n            var val = (kfs.GetValueAt(isEntering ? 0 : kfs.Count - 1)).Value;\r\n            if (val == null)\r\n                return null;\r\n            var pa = new PointAnimation();\r\n            pa.To = val;\r\n            return pa;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(PointAnimationUsingKeyFrames);\r\n}","/// <reference path=\"KeyFrame.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export class PointKeyFrame extends KeyFrame {\r\n        static ValueProperty: DependencyProperty = DependencyProperty.Register(\"Value\", () => Point, PointKeyFrame);\r\n        Value: Point;\r\n    }\r\n    Fayde.CoreLibrary.add(PointKeyFrame);\r\n    \r\n    export class DiscretePointKeyFrame extends PointKeyFrame {\r\n        InterpolateValue(baseValue: Point, keyFrameProgress: number): Point {\r\n            if (keyFrameProgress >= 1.0)\r\n                return this.Value;\r\n            return baseValue;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(DiscretePointKeyFrame);\r\n    \r\n    export class EasingPointKeyFrame extends PointKeyFrame {\r\n        static EasingFunctionProperty = DependencyProperty.Register(\"EasingFunction\", () => EasingFunctionBase, EasingPointKeyFrame);\r\n        EasingFunction: EasingFunctionBase;\r\n\r\n        InterpolateValue(baseValue: Point, keyFrameProgress: number): Point {\r\n            if (keyFrameProgress >= 1.0)\r\n                return this.Value;\r\n\r\n            var start = baseValue;\r\n            var end = this.Value;\r\n\r\n            var easingFunction = this.EasingFunction;\r\n            if (easingFunction)\r\n                keyFrameProgress = easingFunction.Ease(keyFrameProgress);\r\n\r\n            return Point.LERP(start, end, keyFrameProgress);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(EasingPointKeyFrame);\r\n    \r\n    export class LinearPointKeyFrame extends PointKeyFrame {\r\n        InterpolateValue(baseValue: Point, keyFrameProgress: number): Point {\r\n            return Point.LERP(baseValue, this.Value, keyFrameProgress);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(LinearPointKeyFrame);\r\n    \r\n    export class SplinePointKeyFrame extends PointKeyFrame {\r\n        static KeySplineProperty: DependencyProperty = DependencyProperty.Register(\"KeySpline\", () => KeySpline, SplinePointKeyFrame);\r\n        KeySpline: KeySpline;\r\n\r\n        InterpolateValue(baseValue: Point, keyFrameProgress: number): Point {\r\n            if (keyFrameProgress >= 1.0)\r\n                return this.Value;\r\n\r\n            var start = baseValue;\r\n            var end = this.Value;\r\n            var splineProgress = keyFrameProgress;\r\n            var keySpline = this.KeySpline;\r\n            if (keySpline)\r\n                splineProgress = keySpline.GetSplineProgress(keyFrameProgress);\r\n\r\n            if (isNaN(start.x))\r\n                start.x = 0;\r\n            if (isNaN(start.y))\r\n                start.y = 0;\r\n            if (isNaN(end.x))\r\n                end.x = 0;\r\n            if (isNaN(end.y))\r\n                end.y = 0;\r\n\r\n            return Point.LERP(start, end, splineProgress);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(SplinePointKeyFrame);\r\n}","/// <reference path=\"Timeline.ts\" />\r\n\r\nmodule Fayde.Media.Animation {\r\n    export interface IStoryboadResolution {\r\n        Target: DependencyObject;\r\n        Property: Data.PropertyPath;\r\n    }\r\n\r\n    /// http://msdn.microsoft.com/en-us/library/cc189019(v=vs.95).aspx\r\n    export class Storyboard extends Timeline {\r\n        static TargetNameProperty: DependencyProperty = DependencyProperty.RegisterAttached(\"TargetName\", () => String, Storyboard);\r\n\r\n        static GetTargetName (d: DependencyObject): string {\r\n            return d.GetValue(Storyboard.TargetNameProperty);\r\n        }\r\n\r\n        static SetTargetName (d: DependencyObject, value: string) {\r\n            return d.SetValue(Storyboard.TargetNameProperty, value);\r\n        }\r\n\r\n        TargetName: string;\r\n\r\n        static TargetPropertyProperty: DependencyProperty = DependencyProperty.RegisterAttached(\"TargetProperty\", () => Data.PropertyPath, Storyboard);\r\n\r\n        static GetTargetProperty (d: DependencyObject): Data.PropertyPath {\r\n            return d.GetValue(Storyboard.TargetPropertyProperty);\r\n        }\r\n\r\n        static SetTargetProperty (d: DependencyObject, value: Data.PropertyPath) {\r\n            return d.SetValue(Storyboard.TargetPropertyProperty, value);\r\n        }\r\n\r\n        TargetProperty: Data.PropertyPath;\r\n\r\n        static ResolveTarget (timeline: Timeline): IStoryboadResolution {\r\n            var res: IStoryboadResolution = {\r\n                Target: undefined,\r\n                Property: undefined\r\n            };\r\n\r\n            if (timeline.HasManualTarget) {\r\n                res.Target = timeline.ManualTarget;\r\n            } else {\r\n                var targetName = Storyboard.GetTargetName(timeline);\r\n                if (targetName)\r\n                    res.Target = <DependencyObject>timeline.FindName(targetName, true);\r\n            }\r\n\r\n            res.Property = Storyboard.GetTargetProperty(timeline);\r\n\r\n            return res;\r\n        }\r\n\r\n        static ChildrenProperty = DependencyProperty.RegisterImmutable<TimelineCollection>(\"Children\", () => TimelineCollection, Storyboard);\r\n        Children: TimelineCollection;\r\n\r\n        constructor () {\r\n            super();\r\n\r\n            var coll = Storyboard.ChildrenProperty.Initialize(this);\r\n            coll.AttachTo(this);\r\n        }\r\n\r\n        static SetTarget (timeline: Timeline, target: DependencyObject) {\r\n            timeline.ManualTarget = target;\r\n        }\r\n\r\n        Begin () {\r\n            if (Animation.Log)\r\n                console.log(getLogMessage(\"Storyboard.Begin\", this, true));\r\n            this.Reset();\r\n            var error = new BError();\r\n            var promotedValues: any[] = [];\r\n            var enumerator = this.Children.getEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                var animation = <AnimationBase>enumerator.current;\r\n                if (!animation._Hookup(promotedValues, error))\r\n                    error.ThrowException();\r\n            }\r\n            Application.Current.RegisterStoryboard(this);\r\n        }\r\n\r\n        Pause () {\r\n            super.Pause();\r\n            for (var en = this.Children.getEnumerator(); en.moveNext();) {\r\n                en.current.Pause();\r\n            }\r\n        }\r\n\r\n        Resume () {\r\n            super.Resume();\r\n            for (var en = this.Children.getEnumerator(); en.moveNext();) {\r\n                en.current.Resume();\r\n            }\r\n        }\r\n\r\n        Stop () {\r\n            if (Animation.Log)\r\n                console.log(getLogMessage(\"Storyboard.Stop\", this, false));\r\n            super.Stop();\r\n            Application.Current.UnregisterStoryboard(this);\r\n            for (var en = this.Children.getEnumerator(); en.moveNext();) {\r\n                en.current.Stop();\r\n            }\r\n        }\r\n\r\n        UpdateInternal (clockData: IClockData) {\r\n            if (Animation.Log)\r\n                console.log(getLogMessage(\"Storyboard.UpdateInternal\", this, false, clockData));\r\n            for (var en = this.Children.getEnumerator(); en.moveNext();) {\r\n                en.current.Update(clockData.CurrentTime.Ticks);\r\n            }\r\n        }\r\n\r\n        GetNaturalDurationCore (): Duration {\r\n            var fullTicks = 0;\r\n            for (var en = this.Children.getEnumerator(); en.moveNext();) {\r\n                var timeline = en.current;\r\n                var dur = timeline.GetNaturalDuration();\r\n                if (dur.IsAutomatic)\r\n                    continue;\r\n                if (dur.IsForever)\r\n                    return Duration.Forever;\r\n                //duration must have a timespan if we got here\r\n                var spanTicks = dur.TimeSpan.Ticks;\r\n                var repeat = timeline.RepeatBehavior || Timeline.DEFAULT_REPEAT_BEHAVIOR;\r\n                if (repeat.IsForever)\r\n                    return Duration.Forever;\r\n                if (repeat.HasCount)\r\n                    spanTicks = spanTicks * repeat.Count;\r\n                if (timeline.AutoReverse)\r\n                    spanTicks *= 2;\r\n                if (repeat.HasDuration)\r\n                    spanTicks = repeat.Duration.TimeSpan.Ticks;\r\n                if (spanTicks !== 0)\r\n                    spanTicks = spanTicks / timeline.SpeedRatio;\r\n                var bt = timeline.BeginTime;\r\n                if (bt) spanTicks += bt.Ticks;\r\n                if (fullTicks === 0 || fullTicks <= spanTicks)\r\n                    fullTicks = spanTicks;\r\n            }\r\n\r\n            if (!fullTicks)\r\n                return Duration.Automatic;\r\n            return new Duration(new TimeSpan(fullTicks));\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Storyboard);\r\n    Markup.Content(Storyboard, Storyboard.ChildrenProperty);\r\n\r\n    function getLogMessage (action: string, storyboard: Storyboard, full: boolean, clockData?: IClockData): string {\r\n        var anims = [];\r\n        var cur = \"\";\r\n\r\n        var enumerator = storyboard.Children.getEnumerator();\r\n        var animation: Timeline;\r\n        while (enumerator.moveNext()) {\r\n            animation = enumerator.current;\r\n            cur = \"\";\r\n            cur += \"(\";\r\n            cur += (<any>animation).constructor.name;\r\n            cur += \":\";\r\n            cur += Storyboard.GetTargetName(animation);\r\n            cur += \":\";\r\n            var path = Storyboard.GetTargetProperty(animation);\r\n            cur += path ? path.Path : \"\";\r\n            cur += \")\";\r\n            anims.push(cur);\r\n        }\r\n        var msg = \"ANIMATION:\" + action + \":\" + (<any>storyboard)._ID;\r\n        if (clockData)\r\n            msg += \"(\" + (clockData.Progress * 100).toFixed(0) + \"%)\";\r\n        if (full)\r\n            msg += \"->[\" + anims.join(\",\") + \"]\";\r\n        return msg;\r\n    }\r\n}","/// <reference path=\"../../Core/DependencyObject.ts\" />\r\n/// <reference path=\"../GeneralTransform.ts\" />\r\n\r\nmodule Fayde.Media.Effects {\r\n    export class Effect extends DependencyObject implements minerva.IEffect {\r\n        static EffectMappingProperty = DependencyProperty.Register(\"EffectMapping\", () => GeneralTransform, Effect);\r\n        EffectMapping: GeneralTransform;\r\n\r\n        PreRender (ctx: minerva.core.render.RenderContext) {\r\n        }\r\n\r\n        PostRender (ctx: minerva.core.render.RenderContext) {\r\n        }\r\n\r\n        GetPadding (thickness: Thickness): boolean {\r\n            return false;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(Effect);\r\n\r\n    module reactions {\r\n        DPReaction<GeneralTransform>(Effect.EffectMappingProperty, (dobj, ov, nv) => Incite(dobj));\r\n    }\r\n}","/// <reference path=\"Effect.ts\" />\r\n\r\nmodule Fayde.Media.Effects {\r\n    export class BlurEffect extends Effect {\r\n        static RadiusProperty = DependencyProperty.Register(\"Radius\", () => Number, BlurEffect, undefined, Incite);\r\n        Radius: number;\r\n    }\r\n    Fayde.CoreLibrary.add(BlurEffect);\r\n}","/// <reference path=\"Effect.ts\" />\r\n/// <reference path=\"../../Primitives/Color.ts\" />\r\n\r\nmodule Fayde.Media.Effects {\r\n    export class DropShadowEffect extends Effect {\r\n        static MAX_BLUR_RADIUS: number = 20;\r\n        static MAX_SHADOW_DEPTH: number = 300;\r\n\r\n        static BlurRadiusProperty = DependencyProperty.Register(\"BlurRadius\", () => Number, DropShadowEffect, 5.0, Incite);\r\n        static ColorProperty = DependencyProperty.Register(\"Color\", () => Color, DropShadowEffect, Color.KnownColors.Black, Incite);\r\n        static DirectionProperty = DependencyProperty.Register(\"Direction\", () => Number, DropShadowEffect, 315.0, Incite);\r\n        static OpacityProperty = DependencyProperty.Register(\"Opacity\", () => Number, DropShadowEffect, 1.0, Incite);\r\n        static ShadowDepthProperty = DependencyProperty.Register(\"ShadowDepth\", () => Number, DropShadowEffect, 5.0, Incite);\r\n        BlurRadius: number;\r\n        Color: Color;\r\n        Direction: number;\r\n        Opacity: number;\r\n        ShadowDepth: number;\r\n\r\n        GetPadding (thickness: Thickness): boolean {\r\n            var radius = Math.min(this.BlurRadius, DropShadowEffect.MAX_BLUR_RADIUS);\r\n            var depth = Math.min(Math.max(0, this.ShadowDepth), DropShadowEffect.MAX_SHADOW_DEPTH);\r\n            var direction = this.Direction * Math.PI / 180.0;\r\n            var width = Math.ceil(radius);\r\n\r\n            var offsetX = Math.cos(direction) * depth;\r\n            var offsetY = Math.sin(direction) * depth;\r\n\r\n            var left = -offsetX + width;\r\n            var top = offsetY + width;\r\n            var right = offsetX + width;\r\n            var bottom = -offsetY + width;\r\n\r\n            var l = left < 1.0 ? 1.0 : Math.ceil(left);\r\n            var t = top < 1.0 ? 1.0 : Math.ceil(top);\r\n            var r = right < 1.0 ? 1.0 : Math.ceil(right);\r\n            var b = bottom < 1.0 ? 1.0 : Math.ceil(bottom);\r\n            var changed = thickness.left !== l\r\n                || thickness.top !== t\r\n                || thickness.right !== r\r\n                || thickness.bottom !== b;\r\n\r\n            thickness.left = l;\r\n            thickness.top = t;\r\n            thickness.right = r;\r\n            thickness.bottom = b;\r\n\r\n            return changed;\r\n        }\r\n\r\n        PreRender (ctx: minerva.core.render.RenderContext) {\r\n            var color = this.Color;\r\n            var opacity = color.A * this.Opacity;\r\n\r\n            var radius = Math.min(this.BlurRadius, DropShadowEffect.MAX_BLUR_RADIUS);\r\n            var depth = Math.min(Math.max(0, this.ShadowDepth), DropShadowEffect.MAX_SHADOW_DEPTH);\r\n            var direction = this.Direction * Math.PI / 180.0;\r\n            var offsetX = Math.cos(direction) * depth;\r\n            var offsetY = -Math.sin(direction) * depth;\r\n\r\n            var raw = ctx.raw;\r\n            raw.shadowColor = \"rgba(\" + color.R + \",\" + color.G + \",\" + color.B + \",\" + opacity + \")\";\r\n            raw.shadowBlur = radius;\r\n            raw.shadowOffsetX = offsetX;\r\n            raw.shadowOffsetY = offsetY;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(DropShadowEffect);\r\n}","/// <reference path=\"../../Core/DependencyObject.ts\"/>\r\n\r\nmodule Fayde.Media.Imaging {\r\n    export class ImageSource extends DependencyObject implements minerva.controls.image.IImageSource {\r\n        get pixelWidth (): number {\r\n            return 0;\r\n        }\r\n\r\n        get pixelHeight (): number {\r\n            return 0;\r\n        }\r\n\r\n        lock () {\r\n        }\r\n\r\n        unlock () {\r\n        }\r\n\r\n        get image (): HTMLImageElement {\r\n            return undefined;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ImageSource);\r\n}","/// <reference path=\"ImageSource.ts\"/>\r\n\r\nmodule Fayde.Media.Imaging {\r\n    declare var Info;\r\n\r\n    export interface IImageChangedListener {\r\n        OnImageErrored(source: BitmapSource, e: Event);\r\n        OnImageLoaded(source: BitmapSource, e: Event);\r\n        ImageChanged(source: BitmapSource);\r\n    }\r\n\r\n    function intGreaterThanZeroValidator (instance: DependencyObject, propd: DependencyProperty, value: any) {\r\n        if (typeof value !== \"number\")\r\n            return false;\r\n        return value > 0;\r\n    }\r\n\r\n    export class BitmapSource extends ImageSource {\r\n        static PixelWidthProperty = DependencyProperty.RegisterFull(\"PixelWidth\", () => Number, BitmapSource, 0, undefined, undefined, undefined, intGreaterThanZeroValidator);\r\n        static PixelHeightProperty = DependencyProperty.RegisterFull(\"PixelHeight\", () => Number, BitmapSource, 0, undefined, undefined, undefined, intGreaterThanZeroValidator);\r\n        PixelWidth: number;\r\n        PixelHeight: number;\r\n\r\n        private _Listener: IImageChangedListener = null;\r\n        private _Image: HTMLImageElement;\r\n\r\n        get pixelWidth (): number {\r\n            return this.GetValue(BitmapSource.PixelWidthProperty);\r\n        }\r\n\r\n        get pixelHeight (): number {\r\n            return this.GetValue(BitmapSource.PixelHeightProperty);\r\n        }\r\n\r\n        get image (): HTMLImageElement {\r\n            return this._Image;\r\n        }\r\n\r\n\r\n        ResetImage () {\r\n            this._Image = new Image();\r\n            this._Image.onerror = (e) => this._OnErrored(e);\r\n            this._Image.onload = (e) => this._OnLoad(e);\r\n            this.PixelWidth = 0;\r\n            this.PixelHeight = 0;\r\n            var listener = this._Listener;\r\n            if (listener) listener.ImageChanged(this);\r\n        }\r\n\r\n        UriSourceChanged (oldValue: Uri, newValue: Uri) {\r\n            if (!this._Image || !newValue)\r\n                this.ResetImage();\r\n            this._Image.src = TypeManager.resolveResource(newValue);\r\n            var listener = this._Listener;\r\n            if (listener) listener.ImageChanged(this);\r\n        }\r\n\r\n        Listen (listener: IImageChangedListener) {\r\n            this._Listener = listener;\r\n        }\r\n\r\n        Unlisten (listener: IImageChangedListener) {\r\n            if (this._Listener === listener) this._Listener = null;\r\n        }\r\n\r\n        _OnErrored (e: Event) {\r\n            console.info(\"Failed to load: \" + this._Image.src.toString());\r\n            var listener = this._Listener;\r\n            if (listener)\r\n                listener.OnImageErrored(this, e);\r\n        }\r\n\r\n        _OnLoad (e: Event) {\r\n            this.PixelWidth = this._Image.naturalWidth;\r\n            this.PixelHeight = this._Image.naturalHeight;\r\n            var listener = this._Listener;\r\n            if (listener) {\r\n                listener.OnImageLoaded(this, e);\r\n                listener.ImageChanged(this);\r\n            }\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(BitmapSource);\r\n}","/// <reference path=\"BitmapSource.ts\"/>\r\n\r\nmodule Fayde.Media.Imaging {\r\n    export class BitmapImage extends BitmapSource {\r\n        static UriSourceProperty = DependencyProperty.RegisterFull(\"UriSource\", () => Uri, BitmapImage, undefined, (bi: BitmapImage, args) => bi._UriSourceChanged(args), undefined, true);\r\n        UriSource: Uri;\r\n        ImageFailed = new nullstone.Event();\r\n        ImageOpened = new nullstone.Event();\r\n\r\n        private _BackingBuffer: ArrayBuffer = null;\r\n\r\n        constructor (uri?: Uri) {\r\n            super();\r\n            if (uri)\r\n                this.UriSource = uri;\r\n        }\r\n\r\n        private _UriSourceChanged (args: IDependencyPropertyChangedEventArgs) {\r\n            var uri: Uri = args.NewValue;\r\n            if (Uri.isNullOrEmpty(uri))\r\n                this.ResetImage();\r\n            else\r\n                this.UriSourceChanged(args.OldValue, uri);\r\n        }\r\n\r\n        _OnErrored (e: Event) {\r\n            super._OnErrored(e);\r\n            this.ImageFailed.raise(this, null);\r\n        }\r\n\r\n        _OnLoad (e: Event) {\r\n            super._OnLoad(e);\r\n            this.ImageOpened.raise(this, null);\r\n        }\r\n\r\n        SetSource (buffer: ArrayBuffer) {\r\n            this._BackingBuffer = buffer;\r\n            this.UriSource = encodeImage(buffer);\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(BitmapImage);\r\n\r\n    nullstone.registerTypeConverter(ImageSource, (val: any): ImageSource => {\r\n        if (!val)\r\n            return null;\r\n        if (val instanceof ImageSource)\r\n            return val;\r\n        if (val instanceof ArrayBuffer) {\r\n            var bi = new BitmapImage();\r\n            bi.SetSource(val);\r\n            return bi;\r\n        }\r\n        var bi = new BitmapImage();\r\n        bi.UriSource = nullstone.convertAnyToType(val, Uri);\r\n        return bi;\r\n    });\r\n}","/// <reference path=\"../TileBrush.ts\"/>\r\n\r\nmodule Fayde.Media.Imaging {\r\n    export class ImageBrush extends TileBrush implements IImageChangedListener {\r\n        private static _SourceCoercer(d: DependencyObject, propd: DependencyProperty, value: any): any {\r\n            if (typeof value === \"string\")\r\n                return new Media.Imaging.BitmapImage(new Uri(value));\r\n            if (value instanceof Uri)\r\n                return new Media.Imaging.BitmapImage(value);\r\n            return value;\r\n        }\r\n        static ImageSourceProperty = DependencyProperty.RegisterFull(\"ImageSource\", () => ImageSource, ImageBrush, undefined, (d: ImageBrush, args) => d._ImageSourceChanged(args), ImageBrush._SourceCoercer);\r\n        ImageSource: ImageSource;\r\n        ImageFailed = new nullstone.Event();\r\n        ImageOpened = new nullstone.Event();\r\n\r\n        setupBrush(ctx: CanvasRenderingContext2D, bounds: minerva.Rect) {\r\n            var source = this.ImageSource;\r\n            if (source && source.image)\r\n                super.setupBrush(ctx, bounds);\r\n        }\r\n        GetTileExtents(): minerva.Rect {\r\n            var source = this.ImageSource;\r\n            return new minerva.Rect(0, 0, source.pixelWidth, source.pixelHeight);\r\n        }\r\n        DrawTile(canvasCtx: CanvasRenderingContext2D, bounds: minerva.Rect) {\r\n            var source = this.ImageSource;\r\n            canvasCtx.rect(0, 0, source.pixelWidth, source.pixelHeight);\r\n            canvasCtx.fillStyle = canvasCtx.createPattern(source.image, \"no-repeat\");\r\n            canvasCtx.fill();\r\n        }\r\n        private _ImageSourceChanged(args: IDependencyPropertyChangedEventArgs) {\r\n            var oldSrc: BitmapSource;\r\n            if ((oldSrc = args.OldValue) && (oldSrc instanceof BitmapSource))\r\n                oldSrc.Unlisten(this);\r\n            var newSrc: BitmapSource;\r\n            if ((newSrc = args.NewValue) && (newSrc instanceof BitmapSource))\r\n                newSrc.Listen(this);\r\n            this.InvalidateBrush();\r\n        }\r\n        OnImageErrored(source: BitmapSource, e: Event) { this.ImageFailed.raise(this, null); }\r\n        OnImageLoaded(source: BitmapSource, e: Event) { this.ImageOpened.raise(this, null); }\r\n        ImageChanged(source: BitmapSource) {\r\n            this.InvalidateBrush();\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(ImageBrush);\r\n}","module Fayde.Media.Imaging {\r\n    export function encodeImage (buffer: ArrayBuffer): Uri {\r\n        var bytes = new Uint8Array(buffer);\r\n        var data = convertToBase64(bytes);\r\n        var type = getImageType(bytes);\r\n        return new Uri(`data:${type};base64,${data}`);\r\n    }\r\n\r\n    function getImageType (bytes: Uint8Array) {\r\n        if (isJpg(bytes))\r\n            return \"image/jpeg\";\r\n        if (isPng(bytes))\r\n            return \"image/png\";\r\n        return \"image/jpeg\";\r\n    }\r\n\r\n    function convertToBase64 (bytes: Uint8Array) {\r\n        var arr = [];\r\n        for (var i = 0; i < bytes.byteLength; i++) {\r\n            arr.push(String.fromCharCode(bytes[i]));\r\n        }\r\n        return window.btoa(arr.join(''));\r\n    }\r\n\r\n    function isJpg (bytes: Uint8Array): boolean {\r\n        return bytes[0] === 0xFF\r\n            && bytes[1] === 0xD8\r\n            && bytes[bytes.length - 2] === 0xFF\r\n            && bytes[bytes.length - 1] === 0xD9;\r\n    }\r\n\r\n    function isPng (bytes: Uint8Array): boolean {\r\n        return bytes[0] === 0x89\r\n            && bytes[1] === 0x50\r\n            && bytes[2] === 0x4E\r\n            && bytes[3] === 0x47\r\n            && bytes[4] === 0x0D\r\n            && bytes[5] === 0x0A\r\n            && bytes[6] === 0x1A\r\n            && bytes[7] === 0x0A;\r\n    }\r\n}","module Fayde.Media.LinearGradient {\r\n    export interface IInterpolator {\r\n        x0: number;\r\n        y0: number;\r\n        x1: number;\r\n        y1: number;\r\n        step(): boolean;\r\n        interpolate(offset: number): number;\r\n    }\r\n\r\n    export function createRepeatInterpolator (start: Point, end: Point, bounds: minerva.Rect): IInterpolator {\r\n        var first = {x: start.x, y: start.y};\r\n        var last = {x: end.x, y: end.y};\r\n        var dir = {x: end.x - start.x, y: end.y - start.y};\r\n\r\n        calcMetrics(dir, first, last, bounds);\r\n        var numSteps = (last.x - first.x) / dir.x;\r\n        var stepSize = 1.0 / numSteps;\r\n        var cur = -stepSize;\r\n\r\n        return {\r\n            x0: first.x,\r\n            y0: first.y,\r\n            x1: last.x,\r\n            y1: last.y,\r\n            step (): boolean {\r\n                cur += stepSize;\r\n                return cur < 1;\r\n            },\r\n            interpolate (offset: number): number {\r\n                return cur + (offset / numSteps);\r\n            }\r\n        };\r\n    }\r\n\r\n    export function createReflectInterpolator (start: Point, end: Point, bounds: minerva.Rect): IInterpolator {\r\n        var first = {x: start.x, y: start.y};\r\n        var last = {x: end.x, y: end.y};\r\n        var dir = {x: end.x - start.x, y: end.y - start.y};\r\n\r\n        calcMetrics(dir, first, last, bounds);\r\n        var numSteps = (last.x - first.x) / dir.x;\r\n        var stepSize = 1.0 / numSteps;\r\n        var cur = -stepSize;\r\n        var inverted = Math.round((start.x - first.x) / dir.x) % 2 === 0;\r\n\r\n        return {\r\n            x0: first.x,\r\n            y0: first.y,\r\n            x1: last.x,\r\n            y1: last.y,\r\n            step (): boolean {\r\n                inverted = !inverted;\r\n                cur += stepSize;\r\n                return cur < 1;\r\n            },\r\n            interpolate (offset: number): number {\r\n                var norm = offset / numSteps;\r\n                return !inverted ? cur + norm : cur + (stepSize - norm);\r\n            }\r\n        };\r\n    }\r\n}","module Fayde.Media.LinearGradient {\r\n    export interface ICoordinates {\r\n        x: number;\r\n        y: number;\r\n    }\r\n\r\n    export function calcMetrics (dir: ICoordinates, first: ICoordinates, last: ICoordinates, bounds: minerva.Rect) {\r\n        if (dir.y === 0) {\r\n            if (dir.x < 0)\r\n                W(dir, first, last, bounds);\r\n            else if (dir.x !== 0)\r\n                E(dir, first, last, bounds);\r\n        } else if (dir.x === 0) {\r\n            if (dir.y < 0)\r\n                N(dir, first, last, bounds);\r\n            else if (dir.y !== 0)\r\n                S(dir, first, last, bounds);\r\n        } else if (dir.x < 0 && dir.y < 0) { // e\\s\r\n            NW(dir, first, last, bounds);\r\n        } else if (dir.x < 0 && dir.y > 0) { // e/s\r\n            SW(dir, first, last, bounds);\r\n        } else if (dir.x > 0 && dir.y < 0) { // s/e\r\n            NE(dir, first, last, bounds);\r\n        } else if (dir.x > 0 && dir.y > 0) { // s\\e\r\n            SE(dir, first, last, bounds);\r\n        }\r\n    }\r\n\r\n    //+x,0y\r\n    function E (dir: ICoordinates, first: ICoordinates, last: ICoordinates, bounds: minerva.Rect) {\r\n        var maxX = bounds.x + bounds.width;\r\n        while (first.x >= bounds.x)\r\n            first.x -= dir.x;\r\n        while (last.x <= maxX)\r\n            last.x += dir.x;\r\n    }\r\n\r\n    //-x,0y\r\n    function W (dir: ICoordinates, first: ICoordinates, last: ICoordinates, bounds: minerva.Rect) {\r\n        var maxX = bounds.x + bounds.width;\r\n        while (first.x <= maxX)\r\n            first.x -= dir.x;\r\n        while (last.x >= bounds.x)\r\n            last.x += dir.x;\r\n    }\r\n\r\n    //0x,+y\r\n    function S (dir: ICoordinates, first: ICoordinates, last: ICoordinates, bounds: minerva.Rect) {\r\n        var maxY = bounds.y + bounds.height;\r\n        while (first.y >= bounds.y)\r\n            first.y -= dir.y;\r\n        while (last.y <= maxY)\r\n            last.y += dir.y;\r\n    }\r\n\r\n    //0x,-y\r\n    function N (dir: ICoordinates, first: ICoordinates, last: ICoordinates, bounds: minerva.Rect) {\r\n        var maxY = bounds.y + bounds.height;\r\n        while (first.y <= maxY)\r\n            first.y -= dir.y;\r\n        while (last.y >= bounds.y)\r\n            last.y += dir.y;\r\n    }\r\n\r\n    //-x,-y\r\n    function NW (dir: ICoordinates, first: ICoordinates, last: ICoordinates, bounds: minerva.Rect) {\r\n        var maxX = bounds.x + bounds.width;\r\n        var maxY = bounds.y + bounds.height;\r\n        while (first.x <= maxX && first.y <= maxY) {\r\n            first.x -= dir.x;\r\n            first.y -= dir.y;\r\n        }\r\n        while (last.x >= bounds.x && last.y >= bounds.y) {\r\n            last.x += dir.x;\r\n            last.y += dir.y;\r\n        }\r\n\r\n    }\r\n\r\n    //-x,+y\r\n    function SW (dir: ICoordinates, first: ICoordinates, last: ICoordinates, bounds: minerva.Rect) {\r\n        var maxX = bounds.x + bounds.width;\r\n        var maxY = bounds.y + bounds.height;\r\n        while (first.x <= maxX && first.y >= bounds.y) {\r\n            first.x -= dir.x;\r\n            first.y -= dir.y;\r\n        }\r\n        while (last.x >= bounds.x && last.y <= maxY) {\r\n            last.x += dir.x;\r\n            last.y += dir.y;\r\n        }\r\n    }\r\n\r\n    //+x,-y\r\n    function NE (dir: ICoordinates, first: ICoordinates, last: ICoordinates, bounds: minerva.Rect) {\r\n        var maxX = bounds.x + bounds.width;\r\n        var maxY = bounds.y + bounds.height;\r\n        while (first.x >= bounds.x && first.y <= maxY) {\r\n            first.x -= dir.x;\r\n            first.y -= dir.y;\r\n        }\r\n        while (last.x <= maxX && last.y >= bounds.y) {\r\n            last.x += dir.x;\r\n            last.y += dir.y;\r\n        }\r\n    }\r\n\r\n    //+x,+y\r\n    function SE (dir: ICoordinates, first: ICoordinates, last: ICoordinates, bounds: minerva.Rect) {\r\n        var maxX = bounds.x + bounds.width;\r\n        var maxY = bounds.y + bounds.height;\r\n        while (first.x >= bounds.x && first.y >= bounds.y) {\r\n            first.x -= dir.x;\r\n            first.y -= dir.y;\r\n        }\r\n        while (last.x <= maxX && last.y <= maxY) {\r\n            last.x += dir.x;\r\n            last.y += dir.y;\r\n        }\r\n    }\r\n}","module Fayde.Media.RadialGradient {\r\n    export interface IExtender {\r\n        x0: number;\r\n        y0: number;\r\n        r0: number;\r\n        x1: number;\r\n        y1: number;\r\n        r1: number;\r\n        step(): boolean;\r\n        createGradient(ctx: CanvasRenderingContext2D): CanvasGradient;\r\n    }\r\n    export interface IRadialPointData {\r\n        x0: number;\r\n        y0: number;\r\n        x1: number;\r\n        y1: number;\r\n        r1: number;\r\n        sx: number;\r\n        sy: number;\r\n        side: number;\r\n        balanced: boolean;\r\n    }\r\n    export function createExtender (data: IRadialPointData, bounds: minerva.Rect): IExtender {\r\n        var started = false;\r\n        var dx = data.x1 - data.x0;\r\n        var dy = data.y1 - data.y0;\r\n        var rstep = data.r1;\r\n        var reached = false;\r\n\r\n        var ext = {\r\n            x0: data.x0,\r\n            y0: data.y0,\r\n            r0: 0,\r\n            x1: data.x1,\r\n            y1: data.y1,\r\n            r1: data.r1,\r\n            step (): boolean {\r\n                if (!started) {\r\n                    started = true;\r\n                    return true;\r\n                }\r\n\r\n                ext.x0 = ext.x1;\r\n                ext.y0 = ext.y1;\r\n                ext.r0 += rstep;\r\n                ext.r1 += rstep;\r\n                ext.x1 += dx;\r\n                ext.y1 += dy;\r\n\r\n                if (reached)\r\n                    return false;\r\n                reached = exceedBounds(ext.x1, ext.y1, ext.r1, bounds);\r\n                return true;\r\n            },\r\n            createGradient (ctx: CanvasRenderingContext2D): CanvasGradient {\r\n                return ctx.createRadialGradient(ext.x0, ext.y0, ext.r0, ext.x1, ext.y1, ext.r1);\r\n            }\r\n        };\r\n        return ext;\r\n    }\r\n\r\n    function exceedBounds(cx: number, cy: number, radius: number, bounds: minerva.Rect) {\r\n        var ne = len(cx, cy, bounds.x, bounds.y);\r\n        var nw = len(cx, cy, bounds.x + bounds.width, bounds.y);\r\n        var sw = len(cx, cy, bounds.x + bounds.width, bounds.y + bounds.height);\r\n        var se = len(cx, cy, bounds.x, bounds.y + bounds.height);\r\n        return Math.max(ne, nw, sw, se) < radius;\r\n    }\r\n\r\n    function len (x1: number, y1: number, x2: number, y2: number): number {\r\n        var dx = x2 - x1;\r\n        var dy = y2 - y1;\r\n        return Math.sqrt((dx * dx) + (dy * dy));\r\n    }\r\n}","/// <reference path=\"../../Core/DependencyObject.ts\" />\r\n/// <reference path=\"../../Core/XamlObjectCollection.ts\" />\r\n\r\nmodule Fayde.Media.VSM {\r\n    export class VisualState extends DependencyObject {\r\n        static StoryboardProperty = DependencyProperty.Register(\"Storyboard\", () => Animation.Storyboard, VisualState);\r\n        Storyboard: Animation.Storyboard;\r\n    }\r\n    Fayde.CoreLibrary.add(VisualState);\r\n    Markup.Content(VisualState, VisualState.StoryboardProperty);\r\n\r\n    export class VisualStateCollection extends XamlObjectCollection<VisualState> {\r\n    }\r\n    Fayde.CoreLibrary.add(VisualStateCollection);\r\n}","/// <reference path=\"../../Core/DependencyObject.ts\" />\r\n/// <reference path=\"../../Core/XamlObjectCollection.ts\" />\r\n\r\nmodule Fayde.Media.VSM {\r\n    export class VisualStateChangedEventArgs implements nullstone.IEventArgs {\r\n        OldState: VisualState;\r\n        NewState: VisualState;\r\n        Control: Controls.Control;\r\n        constructor(oldState: VisualState, newState: VisualState, control: Controls.Control) {\r\n            Object.defineProperty(this, \"OldState\", { value: oldState, writable: false });\r\n            Object.defineProperty(this, \"NewState\", { value: newState, writable: false });\r\n            Object.defineProperty(this, \"Control\", { value: control, writable: false });\r\n        }\r\n    }\r\n\r\n    export class VisualStateGroup extends DependencyObject {\r\n        static StatesProperty = DependencyProperty.RegisterImmutable<VisualStateCollection>(\"States\", () => VisualStateCollection, VisualStateGroup);\r\n        States: VisualStateCollection;\r\n\r\n        static TransitionsProperty = DependencyProperty.RegisterImmutable<XamlObjectCollection<VisualTransition>>(\"Transitions\", () => XamlObjectCollection, VisualStateGroup);\r\n        Transitions: XamlObjectCollection<VisualTransition>;\r\n\r\n        private _CurrentStoryboards: Animation.Storyboard[] = [];\r\n        get CurrentStoryboards(): Animation.Storyboard[] {\r\n            return this._CurrentStoryboards.slice(0);\r\n        }\r\n        CurrentStateChanging = new nullstone.Event<VisualStateChangedEventArgs>();\r\n        CurrentStateChanged = new nullstone.Event<VisualStateChangedEventArgs>();\r\n        CurrentState: VisualState = null;\r\n\r\n        constructor() {\r\n            super();\r\n            VisualStateGroup.StatesProperty.Initialize(this);\r\n            VisualStateGroup.TransitionsProperty.Initialize(this);\r\n        }\r\n\r\n        GetState(stateName: string): VisualState {\r\n            var enumerator = this.States.getEnumerator();\r\n            var state: VisualState;\r\n            while (enumerator.moveNext()) {\r\n                state = enumerator.current;\r\n                if (state.Name === stateName)\r\n                    return state;\r\n            }\r\n            return null;\r\n        }\r\n\r\n        StartNewThenStopOld(element: FrameworkElement, newStoryboards: Animation.Storyboard[]) {\r\n            var i: number;\r\n            var storyboard: Animation.Storyboard;\r\n            var res = element.Resources;\r\n            for (i = 0; i < newStoryboards.length; i++) {\r\n                storyboard = newStoryboards[i];\r\n                if (storyboard == null)\r\n                    continue;\r\n                res.Set((<any>storyboard)._ID, storyboard);\r\n                try {\r\n                    storyboard.Begin();\r\n                } catch (err) {\r\n                    //clear storyboards on error\r\n                    for (var j = 0; j <= i; j++) {\r\n                        if (newStoryboards[j] != null)\r\n                            res.Set((<any>newStoryboards[j])._ID, undefined);\r\n                    }\r\n                    console.warn(err);\r\n                }\r\n            }\r\n\r\n            this.StopCurrentStoryboards(element);\r\n\r\n            var curStoryboards = this._CurrentStoryboards;\r\n            for (i = 0; i < newStoryboards.length; i++) {\r\n                if (newStoryboards[i] == null)\r\n                    continue;\r\n                curStoryboards.push(newStoryboards[i]);\r\n            }\r\n        }\r\n        StopCurrentStoryboards(element: FrameworkElement) {\r\n            var curStoryboards = this._CurrentStoryboards;\r\n            var storyboard: Animation.Storyboard;\r\n            for (var en = nullstone.IEnumerator_.fromArray(curStoryboards); en.moveNext();) {\r\n                storyboard = en.current;\r\n                if (!storyboard)\r\n                    continue;\r\n                element.Resources.Set((<any>storyboard)._ID, undefined);\r\n                storyboard.Stop();\r\n            }\r\n            this._CurrentStoryboards = [];\r\n        }\r\n\r\n        Deactivate () {\r\n            for (var en = nullstone.IEnumerator_.fromArray(this._CurrentStoryboards); en.moveNext();) {\r\n                en.current && en.current.Pause();\r\n            }\r\n        }\r\n\r\n        Activate () {\r\n            for (var en = nullstone.IEnumerator_.fromArray(this._CurrentStoryboards); en.moveNext();) {\r\n                en.current && en.current.Resume();\r\n            }\r\n        }\r\n\r\n        RaiseCurrentStateChanging(element: FrameworkElement, oldState: VisualState, newState: VisualState, control: Controls.Control) {\r\n            this.CurrentStateChanging.raise(this, new VisualStateChangedEventArgs(oldState, newState, control));\r\n        }\r\n        RaiseCurrentStateChanged(element: FrameworkElement, oldState: VisualState, newState: VisualState, control: Controls.Control) {\r\n            this.CurrentStateChanged.raise(this, new VisualStateChangedEventArgs(oldState, newState, control));\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(VisualStateGroup);\r\n    Markup.Content(VisualStateGroup, VisualStateGroup.StatesProperty);\r\n\r\n    export class VisualStateGroupCollection extends XamlObjectCollection<VisualStateGroup> {\r\n    }\r\n    Fayde.CoreLibrary.add(VisualStateGroupCollection);\r\n}","/// <reference path=\"../../Core/DependencyObject.ts\" />\r\n\r\nmodule Fayde.Media.VSM {\r\n    export interface IOutValue {\r\n        Value: any;\r\n    }\r\n    export interface IStateData {\r\n        state: VisualState;\r\n        group: VisualStateGroup;\r\n    }\r\n\r\n    export class VisualStateManager extends DependencyObject {\r\n        static VisualStateGroupsProperty: DependencyProperty = DependencyProperty.RegisterAttachedCore(\"VisualStateGroups\", () => VisualStateGroupCollection, VisualStateManager);\r\n        static GetVisualStateGroups(d: DependencyObject): VisualStateGroupCollection { return d.GetValue(VisualStateManager.VisualStateGroupsProperty); }\r\n        static SetVisualStateGroups(d: DependencyObject, value: VisualStateGroupCollection) { d.SetValue(VisualStateManager.VisualStateGroupsProperty, value); }\r\n\r\n        static CustomVisualStateManagerProperty: DependencyProperty = DependencyProperty.RegisterAttachedCore(\"CustomVisualStateManager\", () => VisualStateManager, VisualStateManager);\r\n        static GetCustomVisualStateManager(d: DependencyObject): VisualStateManager { return d.GetValue(VisualStateManager.CustomVisualStateManagerProperty); }\r\n        static SetCustomVisualStateManager(d: DependencyObject, value: VisualStateManager) { d.SetValue(VisualStateManager.CustomVisualStateManagerProperty, value); }\r\n\r\n        static GoToState(control: Controls.Control, stateName: string, useTransitions: boolean): boolean {\r\n            if (!control)\r\n                throw new ArgumentException(\"control\");\r\n            if (!stateName)\r\n                throw new ArgumentException(\"stateName\");\r\n\r\n            var root = VisualStateManager._GetTemplateRoot(control);\r\n            if (!root)\r\n                return false;\r\n\r\n            var groups = VisualStateManager.GetVisualStateGroups(root);\r\n            if (!groups)\r\n                return false;\r\n\r\n            var data: IStateData = { group: null, state: null };\r\n            if (!VisualStateManager._TryGetState(groups, stateName, data))\r\n                return false;\r\n\r\n            var customVsm = VisualStateManager.GetCustomVisualStateManager(root);\r\n            if (customVsm) {\r\n                return customVsm.GoToStateCore(control, root, stateName, data.group, data.state, useTransitions);\r\n            } else if (data.state != null) {\r\n                return VisualStateManager.GoToStateInternal(control, root, data.group, data.state, useTransitions);\r\n            }\r\n\r\n            return false;\r\n        }\r\n        GoToStateCore(control: Controls.Control, element: FrameworkElement, stateName: string, group: VisualStateGroup, state: VisualState, useTransitions: boolean): boolean {\r\n            return VisualStateManager.GoToStateInternal(control, element, group, state, useTransitions);\r\n        }\r\n        private static GoToStateInternal(control: Controls.Control, element: FrameworkElement, group: VisualStateGroup, state: VisualState, useTransitions: boolean): boolean {\r\n            var lastState = group.CurrentState;\r\n            if (lastState === state)\r\n                return true;\r\n\r\n            if (VSM.Debug && window.console) {\r\n                console.log(\"VSM:GoToState:[\" + (<any>control)._ID + \"]\" + (lastState ? lastState.Name : \"()\") + \"-->\" + state.Name);\r\n            }\r\n\r\n            var transition = useTransitions ? VisualStateManager._GetTransition(element, group, lastState, state) : null;\r\n            var storyboard: Animation.Storyboard;\r\n            if (transition == null || (transition.GeneratedDuration.IsZero && ((storyboard = transition.Storyboard) == null || storyboard.Duration.IsZero))) {\r\n                if (transition != null && storyboard != null) {\r\n                    group.StartNewThenStopOld(element, [storyboard, state.Storyboard]);\r\n                } else {\r\n                    group.StartNewThenStopOld(element, [state.Storyboard]);\r\n                }\r\n                group.RaiseCurrentStateChanging(element, lastState, state, control);\r\n                group.RaiseCurrentStateChanged(element, lastState, state, control);\r\n            } else {\r\n                var dynamicTransition = genDynamicTransAnimations(element, group, state, transition);\r\n\r\n                transition.DynamicStoryboardCompleted = false;\r\n                var dynamicCompleted = function (sender, e) {\r\n                    if (transition.Storyboard == null || transition.ExplicitStoryboardCompleted === true) {\r\n                        group.StartNewThenStopOld(element, [state.Storyboard]);\r\n                        group.RaiseCurrentStateChanged(element, lastState, state, control);\r\n                    }\r\n                    transition.DynamicStoryboardCompleted = true;\r\n                };\r\n                var eventClosure = {};\r\n                dynamicTransition.Completed.on(dynamicCompleted, eventClosure);\r\n\r\n                if (transition.Storyboard != null && transition.ExplicitStoryboardCompleted === true) {\r\n                    var transitionCompleted = function (sender, e) {\r\n                        if (transition.DynamicStoryboardCompleted === true) {\r\n                            group.StartNewThenStopOld(element, [state.Storyboard]);\r\n                            group.RaiseCurrentStateChanged(element, lastState, state, control);\r\n                        }\r\n                        transition.Storyboard.Completed.off(transitionCompleted, eventClosure);\r\n                        transition.ExplicitStoryboardCompleted = true;\r\n                    };\r\n                    transition.ExplicitStoryboardCompleted = false;\r\n                    transition.Storyboard.Completed.on(transitionCompleted, eventClosure);\r\n                }\r\n                group.StartNewThenStopOld(element, [transition.Storyboard, dynamicTransition]);\r\n                group.RaiseCurrentStateChanging(element, lastState, state, control);\r\n            }\r\n\r\n            group.CurrentState = state;\r\n            return true;\r\n        }\r\n\r\n        static DestroyStoryboards(control: Controls.Control, root: FrameworkElement) {\r\n            if (!root)\r\n                return false;\r\n            var groups = VisualStateManager.GetVisualStateGroups(root);\r\n            if (!groups)\r\n                return false;\r\n            var enumerator = groups.getEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                (<VisualStateGroup>enumerator.current).StopCurrentStoryboards(root);\r\n            }\r\n        }\r\n\r\n        static Deactivate (control: Controls.Control, root: FrameworkElement) {\r\n            if (!root)\r\n                return false;\r\n            var groups = VisualStateManager.GetVisualStateGroups(root);\r\n            if (!groups)\r\n                return false;\r\n            for (var en = groups.getEnumerator(); en.moveNext();) {\r\n                en.current.Deactivate();\r\n            }\r\n        }\r\n\r\n        static Activate (control: Controls.Control, root: FrameworkElement) {\r\n            if (!root)\r\n                return false;\r\n            var groups = VisualStateManager.GetVisualStateGroups(root);\r\n            if (!groups)\r\n                return false;\r\n            for (var en = groups.getEnumerator(); en.moveNext();) {\r\n                en.current.Activate();\r\n            }\r\n        }\r\n\r\n        private static _GetTemplateRoot(control: Controls.Control): FrameworkElement {\r\n            if (control instanceof Controls.UserControl)\r\n                return (<Controls.UserControl>control).XamlNode.TemplateRoot;\r\n\r\n            var enumerator = control.XamlNode.GetVisualTreeEnumerator();\r\n            var node: FENode = null;\r\n            if (enumerator.moveNext()) {\r\n                node = enumerator.current;\r\n                if (!(node instanceof FENode))\r\n                    node = null;\r\n            }\r\n            return (node) ? node.XObject : null;\r\n        }\r\n        static GetGroup(control: Controls.Control, name: string): VisualStateGroup {\r\n            var root = VisualStateManager._GetTemplateRoot(control);\r\n            if (!root)\r\n                return null;\r\n            var groups = VisualStateManager.GetVisualStateGroups(root);\r\n            if (!groups)\r\n                return null;\r\n            var enumerator = groups.getEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                if (enumerator.current.Name === name)\r\n                    return enumerator.current;\r\n            }\r\n            return null;\r\n        }\r\n        private static _TryGetState(groups: VisualStateGroupCollection, stateName: string, data: IStateData): boolean {\r\n            var enumerator = groups.getEnumerator();\r\n            while (enumerator.moveNext()) {\r\n                data.group = enumerator.current;\r\n                data.state = data.group.GetState(stateName);\r\n                if (data.state)\r\n                    return true;\r\n            }\r\n            data.group = null;\r\n            data.state = null;\r\n            return false;\r\n        }\r\n\r\n        private static _GetTransition(element: FrameworkElement, group: VisualStateGroup, from: VisualState, to: VisualState): VisualTransition {\r\n            if (!element)\r\n                throw new ArgumentException(\"element\");\r\n            if (!group)\r\n                throw new ArgumentException(\"group\");\r\n            if (!to)\r\n                throw new ArgumentException(\"to\");\r\n\r\n            var best = null;\r\n            var defaultTransition = null;\r\n            var bestScore = -1;\r\n\r\n            var enumerator = group.Transitions.getEnumerator();\r\n            var transition: VisualTransition;\r\n            while (enumerator.moveNext()) {\r\n                transition = enumerator.current;\r\n                if (!defaultTransition && transition.IsDefault) {\r\n                    defaultTransition = transition;\r\n                    continue;\r\n                }\r\n                var score = -1;\r\n                var transFromState = group.GetState(transition.From);\r\n                var transToState = group.GetState(transition.To);\r\n                if (from === transFromState)\r\n                    score += 1;\r\n                else if (transFromState != null)\r\n                    continue;\r\n\r\n                if (to === transToState)\r\n                    score += 2;\r\n                else if (transToState != null)\r\n                    continue;\r\n\r\n                if (score > bestScore) {\r\n                    bestScore = score;\r\n                    best = transition;\r\n                }\r\n            }\r\n            if (best != null)\r\n                return best;\r\n            return defaultTransition;\r\n        }\r\n    }\r\n    Fayde.CoreLibrary.add(VisualStateManager);\r\n\r\n    import Timeline = Animation.Timeline;\r\n    import Storyboard = Animation.Storyboard;\r\n\r\n    function genDynamicTransAnimations(root: FrameworkElement, group: VisualStateGroup, state: VisualState, transition: VisualTransition): Animation.Storyboard {\r\n        var dynamic = new Animation.Storyboard();\r\n        if (transition != null) {\r\n            dynamic.Duration = transition.GeneratedDuration;\r\n        } else {\r\n            dynamic.Duration = new Duration(new TimeSpan());\r\n        }\r\n\r\n        var currentAnimations = flattenTimelines(group.CurrentStoryboards);\r\n        var transitionAnimations = flattenTimelines([transition != null ? transition.Storyboard : null]);\r\n        var newStateAnimations = flattenTimelines([state.Storyboard]);\r\n\r\n        // Remove any animations that the transition already animates.\r\n        // There is no need to create an interstitial animation if one already exists.\r\n        for (var i = 0, len = transitionAnimations.length; i < len; i++){\r\n            removeTuple(transitionAnimations[i], currentAnimations);\r\n            removeTuple(transitionAnimations[i], newStateAnimations);\r\n        }\r\n\r\n        var tuple: ITimelineTuple;\r\n        // Generate the \"to\" animations\r\n        for (var i = 0, len = newStateAnimations.length; i < len;i++){\r\n            // The new \"To\" Animation -- the root is passed as a reference point for name lookup.\r\n            tuple = newStateAnimations[i];\r\n            var toAnimation = genToAnimation(root, tuple.timeline, true);\r\n\r\n            // If the animation is of a type that we can't generate transition animations\r\n            // for, GenerateToAnimation will return null, and we should just keep going.\r\n            if (toAnimation != null) {\r\n                ensureTarget(root, tuple.timeline, toAnimation);\r\n                toAnimation.Duration = dynamic.Duration;\r\n                dynamic.Children.Add(toAnimation);\r\n            }\r\n\r\n            removeTuple(tuple, currentAnimations);\r\n        }\r\n\r\n        // Generate the \"from\" animations\r\n        for (var i = 0, len = currentAnimations.length; i < len;i++){\r\n            tuple = currentAnimations[i];\r\n            var fromAnimation = tuple.timeline.GenerateFrom();\r\n            if (fromAnimation != null) {\r\n                ensureTarget(root, tuple.timeline, fromAnimation);\r\n                fromAnimation.Duration = dynamic.Duration;\r\n\r\n                var propertyName = Animation.Storyboard.GetTargetProperty(tuple.timeline);\r\n                Animation.Storyboard.SetTargetProperty(fromAnimation, propertyName);\r\n                dynamic.Children.Add(fromAnimation);\r\n            }\r\n        }\r\n\r\n        return dynamic;\r\n    }\r\n    function ensureTarget(root: FrameworkElement, source: Timeline, dest: Timeline) {\r\n        if (source.ManualTarget != null) {\r\n            Storyboard.SetTarget(dest, source.ManualTarget);\r\n        } else {\r\n            var targetName = Storyboard.GetTargetName(source);\r\n            if (targetName)\r\n                Storyboard.SetTargetName(dest, targetName);\r\n        }\r\n    }\r\n    function genToAnimation(root: FrameworkElement, timeline: Timeline, isEntering: boolean) {\r\n        var result = timeline.GenerateTo(isEntering);\r\n        if (!result)\r\n            return null;\r\n\r\n        var targetName = Storyboard.GetTargetName(timeline);\r\n        Storyboard.SetTargetName(result, targetName);\r\n        if (targetName) {\r\n            var target = <DependencyObject>root.FindName(targetName);\r\n            if (target instanceof DependencyObject)\r\n                Storyboard.SetTarget(result, target);\r\n        }\r\n\r\n        Storyboard.SetTargetProperty(result, Storyboard.GetTargetProperty(timeline));\r\n        return result;\r\n    }\r\n\r\n    interface ITimelineTuple {\r\n        dobj: DependencyObject;\r\n        propd: DependencyProperty;\r\n        timeline: Timeline;\r\n    }\r\n    function flattenTimelines(storyboards: Storyboard[]): ITimelineTuple[]{\r\n        var tuples: ITimelineTuple[] = [];\r\n        for (var i = 0, len = storyboards.length; i < len; i++) {\r\n            flattenTimeline((tp) => tuples.push(tp), storyboards[i], null, null);\r\n        }\r\n        return tuples;\r\n    }\r\n    function flattenTimeline(callback: (tuple: ITimelineTuple) => void, timeline: Timeline, targetObject: DependencyObject, targetPropertyPath: Data.PropertyPath) {\r\n        if (!timeline)\r\n            return;\r\n        var resolution = Storyboard.ResolveTarget(timeline);\r\n        if (resolution.Target)\r\n            targetObject = resolution.Target;\r\n        if (resolution.Property)\r\n            targetPropertyPath = resolution.Property;\r\n\r\n        if (timeline instanceof Storyboard) {\r\n            for (var i = 0, children = (<Storyboard>timeline).Children, len = children.Count; i < len; i++) {\r\n                flattenTimeline(callback, children.GetValueAt(i), targetObject, targetPropertyPath);\r\n            }\r\n        } else {\r\n            if (targetPropertyPath && targetObject) {\r\n                // When resolving down to a DO and DP, we don't actually want to clone DOs like we do\r\n                // when starting a storyboard normally.\r\n                var oto: IOutValue = { Value: targetObject };\r\n                var propd = Data.PropertyPath.ResolvePropertyPath(oto, targetPropertyPath, []);\r\n\r\n                if (propd && oto.Value)\r\n                    callback({ dobj: oto.Value, propd: propd, timeline: timeline });\r\n            }\r\n        }\r\n    }\r\n    function removeTuple(tuple: ITimelineTuple, list: ITimelineTuple[]) {\r\n        for (var i = 0, len = list.length; i < len; i++) {\r\n            var l = list[i];\r\n            if (l.dobj === tuple.dobj && l.propd === tuple.propd)\r\n                return list.splice(i, 1);\r\n        }\r\n    }\r\n}","/// <reference path=\"../../Core/DependencyObject.ts\" />\r\n\r\nmodule Fayde.Media.VSM {\r\n    export class VisualTransition extends DependencyObject {\r\n        From: string = null;\r\n        To: string = null;\r\n\r\n        static StoryboardProperty = DependencyProperty.Register(\"Storyboard\", () => Animation.Storyboard, VisualTransition);\r\n        Storyboard: Animation.Storyboard;\r\n\r\n        private _GeneratedDuration: Duration = null;\r\n        get GeneratedDuration(): Duration { return this._GeneratedDuration; }\r\n        set GeneratedDuration(value: Duration) { this._GeneratedDuration = nullstone.convertAnyToType(value, Duration); }\r\n\r\n        DynamicStoryboardCompleted: boolean = true;\r\n        ExplicitStoryboardCompleted: boolean = true;\r\n        GeneratedEasingFunction: Animation.EasingFunctionBase;\r\n        get IsDefault(): boolean { return this.From == null && this.To == null; }\r\n    }\r\n    Markup.Content(VisualTransition, VisualTransition.StoryboardProperty);\r\n    Fayde.CoreLibrary.add(VisualTransition);\r\n}","module Fayde.Text.History {\r\n    export class DeleteAction implements IAction {\r\n        SelectionAnchor: number;\r\n        SelectionCursor: number;\r\n        Start: number;\r\n        Text: string;\r\n\r\n        constructor (selectionAnchor: number, selectionCursor: number, buffer: string, start: number, length: number) {\r\n            this.SelectionAnchor = selectionAnchor;\r\n            this.SelectionCursor = selectionCursor;\r\n            this.Start = start;\r\n            this.Text = buffer.substr(start, length);\r\n        }\r\n\r\n        Undo (bo: ITextOwner) {\r\n            bo.text = Buffer.insert(bo.text, this.Start, this.Text);\r\n        }\r\n\r\n        Redo (bo: ITextOwner): number {\r\n            bo.text = Buffer.cut(bo.text, this.Start, this.Text.length);\r\n            return this.Start;\r\n        }\r\n    }\r\n}","module Fayde.Text.History {\r\n    export class InsertAction implements IAction {\r\n        SelectionAnchor: number;\r\n        SelectionCursor: number;\r\n        Start: number;\r\n        Text: string;\r\n        IsGrowable: boolean;\r\n\r\n        constructor (selectionAnchor: number, selectionCursor: number, start: number, inserted: string, isAtomic?: boolean) {\r\n            this.SelectionAnchor = selectionAnchor;\r\n            this.SelectionCursor = selectionCursor;\r\n            this.Start = start;\r\n            this.Text = inserted;\r\n            this.IsGrowable = isAtomic !== true;\r\n        }\r\n\r\n        Undo (bo: ITextOwner) {\r\n            bo.text = Buffer.cut(bo.text, this.Start, this.Text.length);\r\n        }\r\n\r\n        Redo (bo: ITextOwner): number {\r\n            bo.text = Buffer.insert(bo.text, this.Start, this.Text);\r\n            return this.Start + this.Text.length;\r\n        }\r\n\r\n        Insert (start: number, text: string) {\r\n            if (!this.IsGrowable || start !== (this.Start + this.Text.length))\r\n                return false;\r\n            this.Text += text;\r\n            return true;\r\n        }\r\n    }\r\n}","module Fayde.Text.History {\r\n    export class ReplaceAction implements IAction {\r\n        SelectionAnchor: number;\r\n        SelectionCursor: number;\r\n        Start: number;\r\n        Length: number;\r\n        Deleted: string;\r\n        Inserted: string;\r\n\r\n        constructor (selectionAnchor: number, selectionCursor: number, buffer: string, start: number, length: number, inserted: string) {\r\n            this.SelectionAnchor = selectionAnchor;\r\n            this.SelectionCursor = selectionCursor;\r\n            this.Start = start;\r\n            this.Length = length;\r\n            this.Deleted = buffer.substr(start, length);\r\n            this.Inserted = inserted;\r\n        }\r\n\r\n        Undo (bo: ITextOwner) {\r\n            bo.text = Buffer.cut(bo.text, this.Start, this.Inserted.length);\r\n            bo.text = Buffer.insert(bo.text, this.Start, this.Deleted);\r\n        }\r\n\r\n        Redo (bo: ITextOwner): number {\r\n            bo.text = Buffer.cut(bo.text, this.Start, this.Length);\r\n            bo.text = Buffer.insert(bo.text, this.Start, this.Inserted);\r\n            return this.Start + this.Inserted.length;\r\n        }\r\n    }\r\n}","module Fayde.Text.History {\r\n    export class Tracker {\r\n        private $$undo: IAction[] = [];\r\n        private $$redo: IAction[] = [];\r\n        private $$maxUndoCount: number;\r\n\r\n        constructor (maxUndoCount: number) {\r\n            this.$$maxUndoCount = maxUndoCount;\r\n        }\r\n\r\n        get canUndo (): boolean {\r\n            return this.$$undo.length > 0;\r\n        }\r\n\r\n        get canRedo (): boolean {\r\n            return this.$$redo.length > 0;\r\n        }\r\n\r\n        undo (bufferholder: ITextOwner): IAction {\r\n            if (this.$$undo.length < 1)\r\n                return null;\r\n\r\n            var action = this.$$undo.pop();\r\n            if (this.$$redo.push(action) > this.$$maxUndoCount)\r\n                this.$$redo.shift();\r\n\r\n            action.Undo(bufferholder);\r\n            return action\r\n        }\r\n\r\n        redo (bufferholder: ITextOwner): number {\r\n            if (this.$$redo.length < 1)\r\n                return;\r\n\r\n            var action = this.$$redo.pop();\r\n            if (this.$$undo.push(action) > this.$$maxUndoCount)\r\n                this.$$undo.shift();\r\n\r\n            return action.Redo(bufferholder);\r\n        }\r\n\r\n        enter (anchor: number, cursor: number, start: number, newText: string) {\r\n            var action = <InsertAction>this.$$undo[this.$$undo.length - 1];\r\n\r\n            if (!(action instanceof InsertAction) || !action.Insert(start, newText))\r\n                return this.insert(anchor, cursor, start, newText);\r\n            if (this.$$redo.length > 0)\r\n                this.$$redo = [];\r\n        }\r\n\r\n        insert (anchor: number, cursor: number, start: number, newText: string) {\r\n            this.$doAction(new InsertAction(anchor, cursor, start, newText));\r\n        }\r\n\r\n        replace (anchor: number, cursor: number, text: string, start: number, length: number, newText: string) {\r\n            this.$doAction(new ReplaceAction(anchor, cursor, text, start, length, newText));\r\n        }\r\n\r\n        delete (anchor: number, cursor: number, text: string, start: number, length: number) {\r\n            this.$doAction(new Text.History.DeleteAction(anchor, cursor, text, start, length));\r\n        }\r\n\r\n        private $doAction (action: IAction) {\r\n            this.$$undo.push(action);\r\n            if (this.$$undo.length > this.$$maxUndoCount)\r\n                this.$$undo.shift();\r\n            this.$$redo = [];\r\n        }\r\n    }\r\n}","module Fayde {\r\n    export function debugLayers (): any[] {\r\n        var arr = [];\r\n        var app = Fayde.Application.Current;\r\n        for (var walker = app.MainSurface.walkLayers(); walker.step();) {\r\n            arr.push(sexify(walker.current));\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    export function sexify (updater: minerva.core.Updater) {\r\n        var node = updater.getAttachedValue(\"$node\");\r\n        var xobj = node.XObject;\r\n\r\n        var ctor = new Function(\"return function \" + xobj.constructor.name + \"() { }\")();\r\n        var obj = new ctor();\r\n\r\n        obj.assets = updater.assets;\r\n        obj.dirtyFlags = sexyflags(updater.assets.dirtyFlags);\r\n        obj.uiFlags = sexyuiflags(updater.assets.uiFlags);\r\n        obj.children = [];\r\n        obj.id = xobj._ID;\r\n        obj.node = node;\r\n\r\n        for (var walker = updater.tree.walk(); walker.step();) {\r\n            obj.children.push(sexify(walker.current));\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function sexyflags (flags: minerva.DirtyFlags): string {\r\n        var all = Object.keys(minerva.DirtyFlags)\r\n            .map(i => parseInt(i))\r\n            .filter(key => !isNaN(key))\r\n            .filter(isPowerOf2)\r\n            .sort((a, b) => (a === b) ? 0 : (a < b ? -1 : 1))\r\n            .reverse();\r\n\r\n        var remaining = flags;\r\n        return all\r\n            .filter(cur => {\r\n                if ((remaining & cur) === 0)\r\n                    return false;\r\n                remaining &= ~cur;\r\n                return true;\r\n            })\r\n            .map(cur => (<any>minerva.DirtyFlags)[cur])\r\n            .join(\"|\");\r\n    }\r\n\r\n    function sexyuiflags (flags: minerva.UIFlags): string {\r\n        var all = Object.keys(minerva.UIFlags)\r\n            .map(i => parseInt(i))\r\n            .filter(key => !isNaN(key))\r\n            .filter(isPowerOf2)\r\n            .sort((a, b) => (a === b) ? 0 : (a < b ? -1 : 1))\r\n            .reverse();\r\n\r\n        var remaining = flags;\r\n        return all\r\n            .filter(cur => {\r\n                if ((remaining & cur) === 0)\r\n                    return false;\r\n                remaining &= ~cur;\r\n                return true;\r\n            })\r\n            .map(cur => (<any>minerva.UIFlags)[cur])\r\n            .join(\"|\");\r\n    }\r\n\r\n    function isPowerOf2 (num: number): boolean {\r\n        var y = (<Function>(<any>Math).log2)(num);\r\n        return Math.abs(Math.round(y) - y) < 0.000001;\r\n    }\r\n\r\n    export function debugLayersRaw (): string {\r\n        var app = Fayde.Application.Current;\r\n        var output = \"\";\r\n        for (var walker = app.MainSurface.walkLayers(); walker.step();) {\r\n            output += stringify(walker.current);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    function stringify (updater: minerva.core.Updater, level: number = 0): string {\r\n        var node = updater.getAttachedValue(\"$node\");\r\n        var xobj = node.XObject;\r\n\r\n        var output = \"\";\r\n\r\n        for (var i = 0; i < level; i++) {\r\n            output += \"\\t\";\r\n        }\r\n\r\n        output += xobj.constructor.name;\r\n        output += \"[\" + xobj._ID + \"]\";\r\n\r\n        var ns = node.NameScope;\r\n        var nsr = !ns ? \"^\" : (ns.IsRoot ? \"+\" : \"-\");\r\n        output += \" [\" + nsr + node.Name + \"]\";\r\n\r\n        output += \"\\n\";\r\n\r\n        for (var walker = updater.tree.walk(); walker.step();) {\r\n            output += stringify(walker.current, level + 1);\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    export function getById (id: number) {\r\n        var app = Fayde.Application.Current;\r\n        for (var walker = app.MainSurface.walkLayers(); walker.step();) {\r\n            for (var subwalker = walker.current.walkDeep(); subwalker.step();) {\r\n                var upd = subwalker.current;\r\n                var node = upd.getAttachedValue(\"$node\");\r\n                var xobj = node.XObject;\r\n                if (xobj._ID === id) {\r\n                    return {\r\n                        obj: xobj,\r\n                        node: node,\r\n                        updater: upd,\r\n                        flags: sexyflags(upd.assets.dirtyFlags),\r\n                        uiflags: sexyuiflags(upd.assets.uiFlags)\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    export function debugLayersFlatten (): any[] {\r\n        var arr = [];\r\n        var app = Fayde.Application.Current;\r\n        for (var walker = app.MainSurface.walkLayers(); walker.step();) {\r\n            for (var subwalker = walker.current.walkDeep(); subwalker.step();) {\r\n                arr.push(subwalker.current);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n}"],"sourceRoot":"/source/"}